begin_compilation
  name " HotSpotCompilation-10100[java.util.AbstractCollection.addAll(Collection)]"
  method "HotSpotCompilation-10100[java.util.AbstractCollection.addAll(Collection)]"
  date 1527005237463
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1423  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?1103 ?12 ?1102 ?25 v730 ?1101 ?400 ?80 v1510 ?146 ?508 ?167 ?1100 v729 ?172 v1482 v1483 v1486 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/Collection;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1462 a956 v620 v1490 v1529 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 342
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - 
=== Succesors ===
=== Usages ===
v1119 a1209 a1262 v1423 v1426 a1432 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1490 
=== Succesors ===
next: v93 
=== Usages ===
v1384 v1382 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1490 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1423 
y: v1381 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1423 y: v1381  <|@  <|@
f <@~|@floating>@ <|@
tid a1136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@328584330
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@328584330]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1132 a1145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1338 v1414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a293 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1427) [bci: 24]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a351 a351 a345 v1158 a1145 v1166 v1182 v1119 a1132 ?80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1296 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1295 v1368 v1378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1290 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1291 j1365 j1375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1294 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1502 v1512 v1514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1100 i11 v16 v468 a1262 v1348 ?80 i350 ?146 i344 i350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1237 v1413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:345) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i742 i403 i403 i160 i11 i232 v305 i315 i11 i503 i11 a1209 a1262 a1314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1209 a1262 a1314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=iterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.6068215107763131
=== Inputs ===
condition: v1382 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v1423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1382 #trueSuccessor: v86 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603640981804901626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=iterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1197 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1197 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1216 
=== Usages ===
v1491 v1492 
=== Predecessor ===
v86 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1216  <|@  <|@
f <@~|@floating>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1197 
index: - 
=== Succesors ===
=== Usages ===
j1216 v1218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: j1217 
=== Usages ===
j1385 j1222 v1515 
=== Predecessor ===
j1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: j1217  <|@  <|@
f <@~|@floating>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1197 
index: - 
=== Succesors ===
=== Usages ===
j1217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
=== Succesors ===
next: v1205 
=== Usages ===
v1202 
=== Predecessor ===
j1216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1492 #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid j1352 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1385 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1216 
y: j1352 
=== Succesors ===
=== Usages ===
v1202 v1218 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1216 y: j1352  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1217 
y: j1385 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1217 y: j1385  <|@  <|@
f <@*|@fixed>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1202 
=== Succesors ===
trueSuccessor: v1203 
falseSuccessor: v1204 
=== Usages ===
=== Predecessor ===
j1217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1202 #trueSuccessor: v1203 #falseSuccessor: v1204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4573646197846003219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1209 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1209  <|@  <|@
f <@~|@floating>@ <|@
tid i1386 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1209 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1195 i1386 i33 
=== Succesors ===
next: j1210 
=== Usages ===
j1210 
=== Predecessor ===
v1203 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1195 i1386 i33 #next: j1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1210 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1209 
=== Succesors ===
next: v1223 
=== Usages ===
j1222 
=== Predecessor ===
a1209 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1209 #next: v1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
j1210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4603586324182305374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1218 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
value: j1385 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1214 
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1491 value: j1385 stateAfter: - lastLocationAccess: - #next: v1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j1216 
index: - 
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1216 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1515 
=== Succesors ===
next: v1221 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1515 #next: v1221  <|@  <|@
f <@*|@fixed>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
v1214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603640981804901626
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1222 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1220 
values: j1216 j1210 
=== Succesors ===
=== Usages ===
v1495 v1494 a953 v1516 v1517 v1518 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1220 values: j1216 j1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1221 v1223 
=== Succesors ===
next: a953 
=== Usages ===
j1222 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1221 v1223 #next: a953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a953 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1222 
=== Succesors ===
next: j1233 
=== Usages ===
a959 
=== Predecessor ===
v1220 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1222 #next: j1233  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1228 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1037 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1037  <|@  <|@
f <@~|@floating>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1228 
index: - 
=== Succesors ===
=== Usages ===
j1233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1228 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1493 
=== Succesors ===
next: v1234 
=== Usages ===
v1234 
=== Predecessor ===
a953 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1493 #next: v1234  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1222 
index: - 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1494 
value: j1233 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
j1233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1494 value: j1233 stateAfter: - lastLocationAccess: - #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1222 
index: - 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1495 
value: v1389 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1495 value: v1389 stateAfter: - lastLocationAccess: - #next: v1242  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1222 
index: - 
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1222 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1240 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1516 
value: j1240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1424 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1516 value: j1240 stateAfter: - lastLocationAccess: - #next: i1424  <|@  <|@
f <@~|@floating>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:849) [bci: 19]
at java.util.ArrayList.iterator(ArrayList.java:840) [bci: 5]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1462 
=== Succesors ===
next: v1244 
=== Usages ===
v1244 
=== Predecessor ===
v1242 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1462 #next: v1244  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1222 
index: - 
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1517 
value: i1424 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1246 
=== Usages ===
=== Predecessor ===
i1424 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1517 value: i1424 stateAfter: - lastLocationAccess: - #next: v1246  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1222 
index: - 
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1222 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a956 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
value: a956 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a959 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1518 value: a956 stateAfter: - lastLocationAccess: - #next: a959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a959 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a953 
=== Succesors ===
next: v960 
=== Usages ===
a82 
=== Predecessor ===
v1246 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a953 #next: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
a959 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
v960 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4600754493908137484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1423 
y: v1383 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1423 y: v1383  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=iterator target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9423452190881676
=== Inputs ===
condition: v1384 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1384 #trueSuccessor: v98 #falseSuccessor: v101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B34" 
    xhandlers
    flags 
    probability 4600346132360004567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=iterator target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1425 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1425  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.map
nodeSourcePosition: at java.util.HashSet.iterator(HashSet.java:173) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
=== Succesors ===
next: v1426 
=== Usages ===
a568 v1004 v1463 v1464 v1465 v1496 a1110 a1108 
=== Predecessor ===
v98 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1529 #next: v1426  <|@  <|@
f <@~|@floating>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1425 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1496 
=== Succesors ===
next: v822 
=== Usages ===
v1394 
=== Predecessor ===
a1425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1496 #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1426 
y: v1393 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1426 y: v1393  <|@  <|@
f <@*|@fixed>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=keySet target_method_class=Ljava/util/HashMap; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1394 
=== Succesors ===
trueSuccessor: v819 
falseSuccessor: v821 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1394 #trueSuccessor: v819 #falseSuccessor: v821  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4600346132360004567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=keySet target_method_class=Ljava/util/HashMap; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1427 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1427  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1425 
=== Succesors ===
=== Usages ===
a1427 v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1427 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractMap.keySet
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:906) [bci: 1]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1463 
=== Succesors ===
next: v257 
=== Usages ===
a573 v732 v1466 v1503 
=== Predecessor ===
v819 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1463 #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:907) [bci: 6]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
value: a1427 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1427  <|@  <|@
f <@~|@floating>@ <|@
tid a1096 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1105 a1105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i4 - - 
=== Succesors ===
=== Usages ===
?414 ?278 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i4 - -  <|@  <|@
tid ?278 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<HashSet.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashSet.java
sourceLine: 173
stackSize: 0
=== Inputs ===
outerFrameState: ?146 
values: - 
=== Succesors ===
=== Usages ===
?286 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?146 values: -  <|@  <|@
tid a343 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@235ae181
hasIdentity: true
objectId: 2
stamp: a!# Ljava/util/HashMap$KeyIterator;
type: HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?309 ?286 ?346 ?352 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?286 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<HashMap$KeySet.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 917
stackSize: 1
=== Inputs ===
outerFrameState: ?278 
values: - a343 
=== Succesors ===
=== Usages ===
?333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?278 values: - a343  <|@  <|@
tid ?333 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<HashMap$KeyIterator.<init>(HashMap)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1464
stackSize: 0
=== Inputs ===
outerFrameState: ?286 
values: - - 
=== Succesors ===
=== Usages ===
?330 ?309 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?286 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1286 v1399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:907) [bci: 6]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7263120186279778
=== Inputs ===
condition: v732 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
a1427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v732 #trueSuccessor: v255 #falseSuccessor: v256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598519398523084142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:908) [bci: 9]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1251 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1251 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1266 
=== Usages ===
v1497 v1498 
=== Predecessor ===
v255 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1266  <|@  <|@
f <@~|@floating>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1251 
index: - 
=== Succesors ===
=== Usages ===
j1266 v1268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1251 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1266 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
=== Succesors ===
next: j1267 
=== Usages ===
j1395 j1272 v1519 
=== Predecessor ===
j1251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1497 #next: j1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1251 
index: - 
=== Succesors ===
=== Usages ===
j1267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1251 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1267 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1498 
=== Succesors ===
next: v1259 
=== Usages ===
v1256 
=== Predecessor ===
j1266 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1498 #next: v1259  <|@  <|@
f <@~|@floating>@ <|@
tid j615 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1395 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1266 
y: j615 
=== Succesors ===
=== Usages ===
v1256 v1268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1266 y: j615  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1267 
y: j1395 
=== Succesors ===
=== Usages ===
v1259 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1267 y: j1395  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1256 
=== Succesors ===
trueSuccessor: v1257 
falseSuccessor: v1258 
=== Usages ===
=== Predecessor ===
j1267 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1256 #trueSuccessor: v1257 #falseSuccessor: v1258  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4568351579140940578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1262 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1262 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1195 i4 i33 
=== Succesors ===
next: j1263 
=== Usages ===
j1263 
=== Predecessor ===
v1257 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1195 i4 i33 #next: j1263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1263 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1262 
=== Succesors ===
next: v1273 
=== Usages ===
j1272 
=== Predecessor ===
a1262 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1262 #next: v1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
j1263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598470920737032360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1268 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
value: j1395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1265 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1497 value: j1395 stateAfter: - lastLocationAccess: - #next: v1265  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j1266 
index: - 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1266 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1519 
=== Succesors ===
next: v1271 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1519 #next: v1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
v1265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4598519398523084142
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1272 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1270 
values: j1266 j1263 
=== Succesors ===
=== Usages ===
v1501 v1489 a999 v1500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1270 values: j1266 j1263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1271 v1273 
=== Succesors ===
next: a999 
=== Usages ===
j1272 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1271 v1273 #next: a999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a999 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1272 
=== Succesors ===
next: j1282 
=== Usages ===
a1005 
=== Predecessor ===
v1270 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1272 #next: j1282  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1278 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1007 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1007  <|@  <|@
f <@~|@floating>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1278 
index: - 
=== Succesors ===
=== Usages ===
j1282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1499 
=== Succesors ===
next: v1283 
=== Usages ===
v1283 
=== Predecessor ===
a999 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1499 #next: v1283  <|@  <|@
f <@~|@floating>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1272 
index: - 
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1500 
value: j1282 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1286 
=== Usages ===
=== Predecessor ===
j1282 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1500 value: j1282 stateAfter: - lastLocationAccess: - #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1272 
index: - 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1501 
value: v1398 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1501 value: v1398 stateAfter: - lastLocationAccess: - #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1272 
index: - 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1489 
value: a1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1005 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1489 value: a1425 stateAfter: - lastLocationAccess: - #next: a1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1005 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a999 
=== Succesors ===
next: v1006 
=== Usages ===
a574 a428 
=== Predecessor ===
v1004 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a999 #next: v1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
a1005 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid a574 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Compress
stamp: n -
=== Inputs ===
value: a1005 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractMap.keySet
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1463 
value: a574 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1289 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1463 value: a574 stateAfter: - lastLocationAccess: - #next: j1289  <|@  <|@
f <@~|@floating>@ <|@
tid a568 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashSet.iterator(HashSet.java:173) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Uncompress
stamp: a Ljava/util/HashMap;
=== Inputs ===
value: a1425 
=== Succesors ===
=== Usages ===
a416 j1289 a417 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a568 
=== Succesors ===
next: v1295 
=== Usages ===
j1291 
=== Predecessor ===
v575 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a568 #next: v1295  <|@  <|@
f <@~|@floating>@ <|@
tid j1291 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1289 
y: i1290 
=== Succesors ===
=== Usages ===
v1502 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1289 y: i1290  <|@  <|@
f <@~|@floating>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1291 
index: j1294 
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1291 index: j1294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1502 
value: i1296 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1428 
=== Usages ===
=== Predecessor ===
j1289 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1502 value: i1296 stateAfter: - lastLocationAccess: - #next: i1428  <|@  <|@
f <@~|@floating>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1425 
=== Succesors ===
=== Usages ===
i1428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1428 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1425) [bci: 11]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1464 
=== Succesors ===
next: a1429 
=== Usages ===
i422 i424 
=== Predecessor ===
v1295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1464 #next: a1429  <|@  <|@
f <@~|@floating>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1425 
=== Succesors ===
=== Usages ===
a1429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1429 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1465 
=== Succesors ===
next: v438 
=== Usages ===
a1111 v733 
=== Predecessor ===
i1428 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1465 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
value: a1429 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1429  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.011206967720630727
=== Inputs ===
condition: v733 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
a1429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v733 #trueSuccessor: v436 #falseSuccessor: v437  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B26" 
    xhandlers
    flags 
    probability 4569100521514472011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598465069624739146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 41]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4591971356010846628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:911) [bci: 23]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1430 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1427 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1503 
=== Succesors ===
next: v826 
=== Usages ===
v1399 
=== Predecessor ===
v256 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1503 #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1430 
y: v1398 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1430 y: v1398  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeySet; target_method=iterator target_method_class=Ljava/util/HashMap$KeySet; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1399 
=== Succesors ===
trueSuccessor: v823 
falseSuccessor: v825 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1399 #trueSuccessor: v823 #falseSuccessor: v825  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591971356010846628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeySet; target_method=iterator target_method_class=Ljava/util/HashMap$KeySet; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1431 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1431  <|@  <|@
f <@~|@floating>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1427 
=== Succesors ===
=== Usages ===
a1431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1431 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$KeySet.this$0
nodeSourcePosition: at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 5]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1466 
=== Succesors ===
next: a1432 
=== Usages ===
a586 v1468 a1108 a1110 v1467 
=== Predecessor ===
v823 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1466 #next: a1432  <|@  <|@
f <@~|@floating>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1431 
=== Succesors ===
=== Usages ===
a1432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: true
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1468 
=== Succesors ===
next: i1433 
=== Usages ===
a1111 v734 
=== Predecessor ===
a1431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1468 #next: i1433  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1431 
=== Succesors ===
=== Usages ===
i1433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1425) [bci: 11]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1467 
=== Succesors ===
next: v303 
=== Usages ===
i424 i422 
=== Predecessor ===
a1432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1467 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
value: a1432 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1432  <|@  <|@
f <@~|@floating>@ <|@
tid a586 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 5]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Uncompress
stamp: a Ljava/util/HashMap;
=== Inputs ===
value: a1431 
=== Succesors ===
=== Usages ===
a416 a417 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.011206967720630727
=== Inputs ===
condition: v734 
=== Succesors ===
trueSuccessor: v301 
falseSuccessor: v302 
=== Usages ===
=== Predecessor ===
i1433 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v734 #trueSuccessor: v301 #falseSuccessor: v302  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4562883692567947038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591889467422268424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 41]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid a573 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:906) [bci: 1]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1427 
=== Succesors ===
=== Usages ===
a428 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1427  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
v302 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B13" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4600271331314515020
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a416 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap;
valueDescription: a -
=== Inputs ===
merge: v412 
values: a586 a568 
=== Succesors ===
=== Usages ===
v1469 a417 ?346 ?346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v412 values: a586 a568  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v412 
values: i1433 i1428 
=== Succesors ===
=== Usages ===
i422 ?346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v412 values: i1433 i1428  <|@  <|@
f <@~|@floating>@ <|@
tid a1111 <|@
d <@d|@=== Debug Properties ===
stamp: n [Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v412 
values: a1432 a1429 
=== Succesors ===
=== Usages ===
a1112 v1470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v412 values: a1432 a1429  <|@  <|@
f <@~|@floating>@ <|@
tid a428 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v412 
values: a573 a1005 
=== Succesors ===
=== Usages ===
?414 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v412 values: a573 a1005  <|@  <|@
f <@~|@floating>@ <|@
tid a1110 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap;
valueDescription: n -
=== Inputs ===
merge: v412 
values: a1431 a1425 
=== Succesors ===
=== Usages ===
a1108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v412 values: a1431 a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v413 v415 
=== Succesors ===
next: i1434 
=== Usages ===
a416 i424 a1111 a428 a1110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v413 v415 #next: i1434  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a416 
index: - 
=== Succesors ===
=== Usages ===
i1434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a416 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 42]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1469 
=== Succesors ===
next: v838 
=== Usages ===
v305 
=== Predecessor ===
v412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1469 #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1434 
y: i33 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1434 y: i33  <|@  <|@
tid ?414 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<HashSet.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rethrowException: false
sourceFile: HashSet.java
sourceLine: 173
stackSize: 1
=== Inputs ===
outerFrameState: ?146 
values: - a428 
=== Succesors ===
=== Usages ===
v1182 i1435 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?146 values: - a428  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v837 
falseSuccessor: v835 
=== Usages ===
=== Predecessor ===
i1434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v837 #falseSuccessor: v835  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1182 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1182  <|@  <|@
f <@~|@floating>@ <|@
tid i1184 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153875
stableDimension: 0
stamp: i32 [-153875] ⇊00000000fffda6ed ⇈00000000fffda6ed
stampKind: i32
value: int[-153875|0xfffffffffffda6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?414 
actionAndReason: i1184 
speculation: a293 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?414 actionAndReason: i1184 speculation: a293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600271331314515020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1435 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1435  <|@  <|@
f <@~|@floating>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1111 
=== Succesors ===
=== Usages ===
i1435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 53]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?414 
guard: - 
address: v1470 
=== Succesors ===
next: v307 
=== Usages ===
v312 v609 
=== Predecessor ===
v835 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?414 guard: - address: v1470 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid a1112 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a1111 
=== Succesors ===
=== Usages ===
?309 v1471 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1111  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
i1435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B24" 
    successors "B22" "B31" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v308 
values: i4 i315 
=== Succesors ===
=== Usages ===
?346 v312 i315 v1471 v609 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i4 i315  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v308 
values: a293 a619 
=== Succesors ===
=== Usages ===
?346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: a293 a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 6.235463538840422
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v307 
=== Succesors ===
next: v847 
=== Usages ===
v322 v326 i344 a345 v846 v851 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v307 #next: v847  <|@  <|@
tid ?346 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a343 
values: i424 i344 a345 - a416 a416 
=== Succesors ===
=== Usages ===
?309 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a343 values: i424 i344 a345 - a416 a416  <|@  <|@
tid ?309 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1430
stackSize: 0
=== Inputs ===
outerFrameState: ?333 
values: a343 - a1112 
virtualObjectMappings: ?346 
=== Succesors ===
=== Usages ===
v809 v1158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a343 - a1112 virtualObjectMappings: ?346  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i1435 
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i344 y: i1435  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v312 
=== Succesors ===
trueSuccessor: v843 
falseSuccessor: v846 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v312 #trueSuccessor: v843 #falseSuccessor: v846  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i1435 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i344 y: i1435  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v609 
=== Succesors ===
trueSuccessor: v848 
falseSuccessor: v851 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v609 #trueSuccessor: v848 #falseSuccessor: v851  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1436 
=== Usages ===
a1436 
=== Predecessor ===
v852 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1436  <|@  <|@
f <@~|@floating>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1112 
index: i344 
=== Succesors ===
=== Usages ===
a1436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1112 index: i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1436 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v848 
address: v1471 
=== Succesors ===
next: v329 
=== Usages ===
a619 v736 a1105 
=== Predecessor ===
v848 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v848 address: v1471 #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid a619 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a1436 
=== Succesors ===
=== Usages ===
a351 a345 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1436  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
value: a1436 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1436  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 66]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: i32
=== Inputs ===
x: i344 
y: i33 
=== Succesors ===
=== Usages ===
i350 i344 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i344 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.8396269990561175
=== Inputs ===
condition: v736 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v326 
=== Usages ===
=== Predecessor ===
a1436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v736 #trueSuccessor: v328 #falseSuccessor: v326  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611316956268601049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?309 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?309 #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v308 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600271331314515021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v308 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v308 #next: v325  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B12" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4600346132360004569
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i350 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v324 
values: i4 i315 i4 
=== Succesors ===
=== Usages ===
?352 v1344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: i4 i315 i4  <|@  <|@
f <@~|@floating>@ <|@
tid a351 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v324 
values: a293 a619 a293 
=== Succesors ===
=== Usages ===
?352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: a293 a619 a293  <|@  <|@
f <@~|@floating>@ <|@
tid a417 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap;
valueDescription: a -
=== Inputs ===
merge: v324 
values: a586 a416 a568 
=== Succesors ===
=== Usages ===
?352 ?352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: a586 a416 a568  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v324 
values: i1433 i424 i1428 
=== Succesors ===
=== Usages ===
v1342 ?352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: i1433 i424 i1428  <|@  <|@
f <@~|@floating>@ <|@
tid a1105 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v324 
values: a1096 a1436 a1096 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: a1096 a1436 a1096  <|@  <|@
f <@~|@floating>@ <|@
tid a1108 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap;
valueDescription: n -
=== Inputs ===
merge: v324 
values: a1431 a1110 a1425 
=== Succesors ===
=== Usages ===
v1354 v1351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: a1431 a1110 a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v325 v440 
=== Succesors ===
next: j1303 
=== Usages ===
i350 a351 a417 i422 a1105 a1108 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v325 v440 #next: j1303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1303 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1318 
=== Usages ===
v1504 v1505 
=== Predecessor ===
v324 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1318  <|@  <|@
f <@~|@floating>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: - 
=== Succesors ===
=== Usages ===
j1318 v1320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1504 
=== Succesors ===
next: j1319 
=== Usages ===
j1401 j1324 v1520 
=== Predecessor ===
j1303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1504 #next: j1319  <|@  <|@
f <@~|@floating>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: - 
=== Succesors ===
=== Usages ===
j1319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1505 
=== Succesors ===
next: v1311 
=== Usages ===
v1308 
=== Predecessor ===
j1318 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1505 #next: v1311  <|@  <|@
f <@~|@floating>@ <|@
tid j1400 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1401 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1318 
y: j1400 
=== Succesors ===
=== Usages ===
v1308 v1320 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1318 y: j1400  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1319 
y: j1401 
=== Succesors ===
=== Usages ===
v1311 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1319 y: j1401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1308 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1310 
=== Usages ===
=== Predecessor ===
j1319 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1308 #trueSuccessor: v1309 #falseSuccessor: v1310  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570689798452198726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1314 
=== Usages ===
=== Predecessor ===
v1311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1314  <|@  <|@
tid ?352 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a343 
values: i422 i350 a351 - a417 a417 
=== Succesors ===
=== Usages ===
?330 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a343 values: i422 i350 a351 - a417 a417  <|@  <|@
tid ?330 <|@
d <@d|@=== Debug Properties ===
bci: 78
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1432
stackSize: 0
=== Inputs ===
outerFrameState: ?333 
values: - - - 
virtualObjectMappings: ?352 
=== Succesors ===
=== Usages ===
a1314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: - - - virtualObjectMappings: ?352  <|@  <|@
f <@~|@floating>@ <|@
tid i1403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1314 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?330 
arguments: v1195 i1403 i33 
=== Succesors ===
next: j1315 
=== Usages ===
j1315 
=== Predecessor ===
v1309 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?330 arguments: v1195 i1403 i33 #next: j1315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1315 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1314 
=== Succesors ===
next: v1325 
=== Usages ===
j1324 
=== Predecessor ===
a1314 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1314 #next: v1325  <|@  <|@
f <@*|@fixed>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
j1315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600279387235583582
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1320 
=== Usages ===
=== Predecessor ===
v1311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1504 
value: j1401 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1317 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1504 value: j1401 stateAfter: - lastLocationAccess: - #next: v1317  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j1318 
index: - 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1318 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1520 
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1520 #next: v1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600346132360004569
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1324 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1322 
values: j1318 j1315 
=== Succesors ===
=== Usages ===
v1508 v1507 a1027 v1521 v1522 v1523 v1524 v1525 v1526 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1322 values: j1318 j1315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1323 v1325 
=== Succesors ===
next: a1027 
=== Usages ===
j1324 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1323 v1325 #next: a1027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1027 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1324 
=== Succesors ===
next: j1334 
=== Usages ===
a1035 
=== Predecessor ===
v1322 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1324 #next: j1334  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1330 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1330 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1073 
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1330 
index: - 
=== Succesors ===
=== Usages ===
j1334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1330 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1506 
=== Succesors ===
next: v1335 
=== Usages ===
v1335 
=== Predecessor ===
a1027 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1506 #next: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
value: j1334 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1338 
=== Usages ===
=== Predecessor ===
j1334 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1507 value: j1334 stateAfter: - lastLocationAccess: - #next: v1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
value: v1406 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1342 
=== Usages ===
=== Predecessor ===
v1335 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1508 value: v1406 stateAfter: - lastLocationAccess: - #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
value: i422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1521 value: i422 stateAfter: - lastLocationAccess: - #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1522 
value: i350 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1522 value: i350 stateAfter: - lastLocationAccess: - #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1523 
value: a1105 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1348 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1523 value: a1105 stateAfter: - lastLocationAccess: - #next: v1348  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1524 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1524 value: i4 stateAfter: - lastLocationAccess: - #next: v1351  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1525 
value: a1108 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1354 
=== Usages ===
=== Predecessor ===
v1348 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1525 value: a1108 stateAfter: - lastLocationAccess: - #next: v1354  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1526 
value: a1108 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1035 
=== Usages ===
=== Predecessor ===
v1351 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1526 value: a1108 stateAfter: - lastLocationAccess: - #next: a1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1035 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1027 
=== Succesors ===
next: v1036 
=== Usages ===
a82 
=== Predecessor ===
v1354 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1027 #next: v1036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
a1035 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
v1036 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v308 
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v308 #next: v1159  <|@  <|@
f <@~|@floating>@ <|@
tid i1160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -156187
stableDimension: 0
stamp: i32 [-156187] ⇊00000000fffd9de5 ⇈00000000fffd9de5
stampKind: i32
value: int[-156187|0xfffffffffffd9de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v851 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v308 
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v308 #next: v1154  <|@  <|@
f <@~|@floating>@ <|@
tid i1155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -155411
stableDimension: 0
stamp: i32 [-155411] ⇊00000000fffda0ed ⇈00000000fffda0ed
stampKind: i32
value: int[-155411|0xfffffffffffda0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v846 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1156 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-156187 - -155411] ⇊00000000fffd80e5 ⇈00000000fffdbded
valueDescription: i32
=== Inputs ===
merge: v1153 
values: i1155 i1160 
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1153 values: i1155 i1160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1154 v1159 
=== Succesors ===
next: v1158 
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1154 v1159 #next: v1158  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?309 
actionAndReason: i1156 
speculation: a293 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?309 actionAndReason: i1156 speculation: a293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeySet; target_method=iterator target_method_class=Ljava/util/HashMap$KeySet; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid i1127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149299
stableDimension: 0
stamp: i32 [-149299] ⇊00000000fffdb8cd ⇈00000000fffdb8cd
stampKind: i32
value: int[-149299|0xfffffffffffdb8cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=keySet target_method_class=Ljava/util/HashMap; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1122 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1122  <|@  <|@
f <@~|@floating>@ <|@
tid i1123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145971
stableDimension: 0
stamp: i32 [-145971] ⇊00000000fffdc5cd ⇈00000000fffdc5cd
stampKind: i32
value: int[-145971|0xfffffffffffdc5cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
v821 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1117 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-150539 - -143883] ⇊00000000fffd80c5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1114 
values: i1123 i1127 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1114 values: i1123 i1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1122 v1126 
=== Succesors ===
next: v1119 
=== Usages ===
i1117 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1122 v1126 #next: v1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1117 
speculation: a293 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1117 speculation: a293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" 
    xhandlers
    flags 
    probability 4582191006178550608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6  <|@  <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
returnStamp: a - (unchecked=a Ljava/util/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@1e1698fc
stamp: void
targetMethod: HotSpotMethod<Collection.iterator()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
a6 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1100 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i4 - - 
=== Succesors ===
=== Usages ===
a6 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i4 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
bci: 3
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
polymorphic: true
stamp: a -
targetMethod: Direct#Collection.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v620 
stateDuring: ?1100 
=== Succesors ===
next: v81 
=== Usages ===
a82 
=== Predecessor ===
v101 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v620 stateDuring: ?1100 #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
a6 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B4" "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v79 
values: a6 a959 a1035 
=== Succesors ===
=== Usages ===
?164 ?12 v701 ?1103 ?172 ?25 ?1102 ?400 v1473 ?1101 ?167 v635 v1509 v1472 v1475 v1480 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v79 values: a6 a959 a1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v87 v99 
=== Succesors ===
next: v1437 
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v87 v99 #next: v1437  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i4 - - a293 
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i4 - - a293  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?80 
guard: - 
address: v1509 
=== Succesors ===
next: v1438 
=== Usages ===
v1414 v1413 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?80 guard: - address: v1509 #next: v1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v9 
=== Usages ===
v1416 
=== Predecessor ===
v1437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
rawvalue: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1438 
y: v1415 
=== Succesors ===
=== Usages ===
v374 v130 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1438 y: v1415  <|@  <|@
f <@~|@floating>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1437 
y: v1389 
=== Succesors ===
=== Usages ===
v117 v58 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1437 y: v1389  <|@  <|@
f <@~|@floating>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a1442 i1445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
i1441 i1446 v661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a1439 a1443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1455 i1460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:848) [bci: 10]
at java.util.ArrayList.iterator(ArrayList.java:840) [bci: 5]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i505 i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1453 v698 i1458 v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1418 v1419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1451 a1456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v1438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B76" "B77" "B82" "B61" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613268576488536858
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v10 
values: i4 i33 i33 i742 i33 
=== Succesors ===
=== Usages ===
?12 ?1103 v42 ?25 ?1102 i742 ?400 ?1101 ?167 ?172 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: i4 i33 i33 i742 i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.702796958917486
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 4
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 9]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v9 
=== Succesors ===
next: v58 
=== Usages ===
i11 v18 v514 v43 v391 v472 v930 v890 v920 v900 v910 v885 v875 v870 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v9 #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
trueSuccessorProbability: 0.7840774193548387
=== Inputs ===
condition: v1413 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1413 #trueSuccessor: v51 #falseSuccessor: v57  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611954437614218348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1439 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1439 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1473 
=== Succesors ===
next: i1440 
=== Usages ===
v1474 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1473 #next: i1440  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
i1440 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1439 
=== Succesors ===
=== Usages ===
i1440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v1474 
=== Succesors ===
next: i1441 
=== Usages ===
v72 
=== Predecessor ===
a1439 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v1474 #next: i1441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1472 
=== Succesors ===
next: v407 
=== Usages ===
v72 
=== Predecessor ===
i1440 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1472 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1440 
y: i1441 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1440 y: i1441  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stamp: void
trueSuccessorProbability: 0.36998709677419356
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
i1441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v408 #falseSuccessor: v406  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605237561092548558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:346) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608691686027412720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603431775042550455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1437 
y: v1406 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1437 y: v1406  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
trueSuccessorProbability: 0.9078522768017206
=== Inputs ===
condition: v1414 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1414 #trueSuccessor: v63 #falseSuccessor: v66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602947395421611253
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1442 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1442 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1475 
=== Succesors ===
next: v454 
=== Usages ===
v737 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1475 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
=== Inputs ===
value: a1442 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1442  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stamp: void
trueSuccessorProbability: 0.36998709677419356
=== Inputs ===
condition: v737 
=== Succesors ===
trueSuccessor: v455 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
a1442 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v737 #trueSuccessor: v455 #falseSuccessor: v453  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    probability 4596230594281659301
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:346) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599684684675013655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587910894970821661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i14 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i14  <|@  <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4453db4c
stamp: void
targetMethod: HotSpotMethod<Iterator.hasNext()>
=== Inputs ===
arguments: a82 
=== Succesors ===
=== Usages ===
i14 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a82  <|@  <|@
tid ?1101 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
i14 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
bci: 10
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Iterator.hasNext
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v635 
stateDuring: ?1101 
=== Succesors ===
next: v22 
=== Usages ===
i403 v16 
=== Predecessor ===
v66 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v635 stateDuring: ?1101 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i14 
y: i4 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i14 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stamp: void
trueSuccessorProbability: 0.36998709677419356
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
i14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v393 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4581392076118436085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:346) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B40" "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v395 v397 v456 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v395 v397 v456 #next: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:346) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:346) [bci: 41]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585043467615815586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B41" "B45" 
    successors "B52" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610347534922315315
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v398 
values: i14 i33 i33 
=== Succesors ===
=== Usages ===
?400 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v398 values: i14 i33 i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v399 v401 v457 
=== Succesors ===
next: v117 
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v399 v401 v457 #next: v117  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 344
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
?249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ArrayDeque.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 423
stackSize: 0
=== Inputs ===
outerFrameState: ?172 
values: - - 
=== Succesors ===
=== Usages ===
?1104 ?508 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
trueSuccessorProbability: 0.8881743333469871
=== Inputs ===
condition: v1413 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1413 #trueSuccessor: v111 #falseSuccessor: v116  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1443 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1473 
=== Succesors ===
next: i1444 
=== Usages ===
v1478 v1477 v1476 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1473 #next: i1444  <|@  <|@
tid ?400 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - i403 
=== Succesors ===
=== Usages ===
v1166 i1444 i1449 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 - i403  <|@  <|@
f <@~|@floating>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1443 
=== Succesors ===
=== Usages ===
i1444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?400 
guard: - 
address: v1476 
=== Succesors ===
next: i1445 
=== Usages ===
v222 
=== Predecessor ===
a1443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?400 guard: - address: v1476 #next: i1445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1445 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 8]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1475 
=== Succesors ===
next: v871 
=== Usages ===
v222 
=== Predecessor ===
i1444 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1475 #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1444 
y: i1445 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1444 y: i1445  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v867 
falseSuccessor: v870 
=== Usages ===
=== Predecessor ===
i1445 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v867 #falseSuccessor: v870  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1446 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:860) [bci: 5]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1472 
=== Succesors ===
next: i1447 
=== Usages ===
v153 v158 i160 v665 v663 ?164 ?164 v1481 
=== Predecessor ===
v867 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1472 #next: i1447  <|@  <|@
f <@~|@floating>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1443 
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 14]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1477 
=== Succesors ===
next: v876 
=== Usages ===
v153 
=== Predecessor ===
i1446 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1477 #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1446 
y: i1447 
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1446 y: i1447  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v872 
falseSuccessor: v875 
=== Usages ===
=== Predecessor ===
i1447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v872 #falseSuccessor: v875  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1448 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1448  <|@  <|@
f <@~|@floating>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1443 
=== Succesors ===
=== Usages ===
a1448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1478 
=== Succesors ===
next: i1449 
=== Usages ===
a654 v1479 
=== Predecessor ===
v872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1478 #next: i1449  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1448 
=== Succesors ===
=== Usages ===
i1449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?400 
guard: - 
address: v1479 
=== Succesors ===
next: v886 
=== Usages ===
v158 v665 
=== Predecessor ===
a1448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?400 guard: - address: v1479 #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1446 
y: i1449 
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1446 y: i1449  <|@  <|@
f <@*|@fixed>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v882 
falseSuccessor: v885 
=== Usages ===
=== Predecessor ===
i1449 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v882 #falseSuccessor: v885  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1446 
y: i1449 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1446 y: i1449  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v665 
=== Succesors ===
trueSuccessor: v887 
falseSuccessor: v890 
=== Usages ===
=== Predecessor ===
v882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v665 #trueSuccessor: v887 #falseSuccessor: v890  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v661 
=== Usages ===
a1450 
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v661  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 53]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: i32
=== Inputs ===
x: i1446 
y: i33 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1446 y: i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 54]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1472 
value: i160 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1472 value: i160 stateAfter: - lastLocationAccess: - #next: v663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 61]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1480 
value: i1446 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1450 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1480 value: i1446 stateAfter: - lastLocationAccess: - #next: a1450  <|@  <|@
f <@~|@floating>@ <|@
tid a654 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1448 
=== Succesors ===
=== Usages ===
v1481 ?164 ?164 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1448  <|@  <|@
f <@~|@floating>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a654 
index: i1446 
=== Succesors ===
=== Usages ===
a1450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a654 index: i1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v887 
address: v1481 
=== Succesors ===
next: v374 
=== Usages ===
a673 v1528 v692 
=== Predecessor ===
v663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v887 address: v1481 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid a673 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1450 
=== Succesors ===
=== Usages ===
a370 ?508 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1450  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayDeque; target_method=add target_method_class=Ljava/util/ArrayDeque; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 0.8881743333469871
=== Inputs ===
condition: v1416 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
a1450 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1416 #trueSuccessor: v372 #falseSuccessor: v373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayDeque; target_method=add target_method_class=Ljava/util/ArrayDeque; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1451 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1451 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 13]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1482 
=== Succesors ===
next: v1452 
=== Usages ===
a677 v1511 v1484 
=== Predecessor ===
v372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1482 #next: v1452  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
?164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<ArrayList$Itr.next()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 61]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 867
stackSize: 2
=== Inputs ===
outerFrameState: ?167 
values: a82 i1446 a654 a654 i1446 
=== Succesors ===
=== Usages ===
v1146 v1452 v1528 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?167 values: a82 i1446 a654 a654 i1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1451 
=== Succesors ===
=== Usages ===
v1452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?164 
guard: - 
address: v1511 
=== Succesors ===
next: v901 
=== Usages ===
v1418 
=== Predecessor ===
a1451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?164 guard: - address: v1511 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1452 
y: v1417 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1452 y: v1417  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1418 
=== Succesors ===
trueSuccessor: v897 
falseSuccessor: v900 
=== Usages ===
=== Predecessor ===
v1452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1418 #trueSuccessor: v897 #falseSuccessor: v900  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?164 
object: a1450 
=== Succesors ===
next: i1453 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?164 object: a1450 #next: i1453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 17]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1483 
=== Succesors ===
next: i1454 
=== Usages ===
v1485 i503 v684 
=== Predecessor ===
v1528 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1483 #next: i1454  <|@  <|@
f <@~|@floating>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1451 
=== Succesors ===
=== Usages ===
i1454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1484 
=== Succesors ===
next: v911 
=== Usages ===
v684 i505 
=== Predecessor ===
i1453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1484 #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1453 
y: i1454 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1453 y: i1454  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v684 
=== Succesors ===
trueSuccessor: v907 
falseSuccessor: v910 
=== Usages ===
=== Predecessor ===
i1454 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v684 #trueSuccessor: v907 #falseSuccessor: v910  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
v692 
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid a677 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 13]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1451 
=== Succesors ===
=== Usages ===
v1485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1451  <|@  <|@
f <@~|@floating>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a677 
index: i1453 
=== Succesors ===
=== Usages ===
v692 j1364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a677 index: i1453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v907 
address: v1485 
value: a1450 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1364 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v907 address: v1485 value: a1450 stateAfter: - lastLocationAccess: - #next: j1364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1485 
=== Succesors ===
next: v1368 
=== Usages ===
j1365 
=== Predecessor ===
v692 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1485 #next: v1368  <|@  <|@
f <@~|@floating>@ <|@
tid j1365 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1364 
y: i1290 
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1364 y: i1290  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1365 
index: j1294 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1512 
value: i1296 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
j1364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1512 value: i1296 stateAfter: - lastLocationAccess: - #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 28]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32
=== Inputs ===
x: i1453 
y: i33 
=== Succesors ===
=== Usages ===
i506 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1453 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 35]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1454 
y: i175 
=== Succesors ===
=== Usages ===
i506 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1454 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid i506 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 36]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32
=== Inputs ===
x: i503 
y: i505 
=== Succesors ===
=== Usages ===
v698 ?508 v510 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i503 y: i505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 38]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1483 
value: i506 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1455 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1483 value: i506 stateAfter: - lastLocationAccess: - #next: i1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1455 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 42]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1486 
=== Succesors ===
next: v513 
=== Usages ===
v510 
=== Predecessor ===
v698 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1486 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 45]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i506 
y: i1455 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i506 y: i1455  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 45]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 0.005257702249921503
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
i1455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v511 #falseSuccessor: v512  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4574792470851418416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 48]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608696507114877912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:253) [bci: 52]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v808  <|@  <|@
tid ?508 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 38]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 251
stackSize: 1
=== Inputs ===
outerFrameState: ?249 
values: a1 a673 i506 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?249 values: a1 a673 i506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?508 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?508 #next: v514  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1151  <|@  <|@
f <@~|@floating>@ <|@
tid i1152 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -175387
stableDimension: 0
stamp: i32 [-175387] ⇊00000000fffd52e5 ⇈00000000fffd52e5
stampKind: i32
value: int[-175387|0xfffffffffffd52e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
v910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid i1148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -174396
stableDimension: 0
stamp: i32 [-174396] ⇊00000000fffd56c4 ⇈00000000fffd56c4
stampKind: i32
value: int[-174396|0xfffffffffffd56c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1144 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-177675 - -172563] ⇊00000000fffd40c4 ⇈00000000fffd5ffd
valueDescription: i32
=== Inputs ===
merge: v1141 
values: i1148 i1152 
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1141 values: i1148 i1152  <|@  <|@
f <@~|@floating>@ <|@
tid a1145 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1141 
values: a1136 a293 
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1141 values: a1136 a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1147 v1151 
=== Succesors ===
next: v1146 
=== Usages ===
i1144 a1145 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1147 v1151 #next: v1146  <|@  <|@
f <@*|@fixed>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?164 
actionAndReason: i1144 
speculation: a1145 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?164 actionAndReason: i1144 speculation: a1145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597396
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v367  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1175 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1175  <|@  <|@
f <@~|@floating>@ <|@
tid i1176 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -170523
stableDimension: 0
stamp: i32 [-170523] ⇊00000000fffd65e5 ⇈00000000fffd65e5
stampKind: i32
value: int[-170523|0xfffffffffffd65e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1173  <|@  <|@
f <@~|@floating>@ <|@
tid i1174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168979
stableDimension: 0
stamp: i32 [-168979] ⇊00000000fffd6bed ⇈00000000fffd6bed
stampKind: i32
value: int[-168979|0xfffffffffffd6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v885 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1169 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1169  <|@  <|@
f <@~|@floating>@ <|@
tid i1170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166675
stableDimension: 0
stamp: i32 [-166675] ⇊00000000fffd74ed ⇈00000000fffd74ed
stampKind: i32
value: int[-166675|0xfffffffffffd74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v875 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1167  <|@  <|@
f <@~|@floating>@ <|@
tid i1168 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -165395
stableDimension: 0
stamp: i32 [-165395] ⇊00000000fffd79ed ⇈00000000fffd79ed
stampKind: i32
value: int[-165395|0xfffffffffffd79ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v870 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1164 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-170523 - -163851] ⇊00000000fffd60e5 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1161 
values: i1168 i1170 i1174 i1176 
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1161 values: i1168 i1170 i1174 i1176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1167 v1169 v1173 v1175 
=== Succesors ===
next: v1166 
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1167 v1169 v1173 v1175 #next: v1166  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?400 
actionAndReason: i1164 
speculation: a293 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1161 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?400 actionAndReason: i1164 speculation: a293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B72" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596028494299168451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a24 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a24  <|@  <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@3c8a4ea0
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a82 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a82  <|@  <|@
tid ?1102 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
bci: 19
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v701 
stateDuring: ?1102 
=== Succesors ===
next: v130 
=== Usages ===
a370 ?25 v1527 a719 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v701 stateDuring: ?1102 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayDeque; target_method=add target_method_class=Ljava/util/ArrayDeque; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 0.8881743333469871
=== Inputs ===
condition: v1416 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
a24 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1416 #trueSuccessor: v126 #falseSuccessor: v129  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayDeque; target_method=add target_method_class=Ljava/util/ArrayDeque; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1456 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1456 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 13]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1482 
=== Succesors ===
next: v1457 
=== Usages ===
a705 v1513 v1487 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1482 #next: v1457  <|@  <|@
tid ?25 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - a24 
=== Succesors ===
=== Usages ===
v1133 v1457 v1527 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 - a24  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1456 
=== Succesors ===
=== Usages ===
v1457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?25 
guard: - 
address: v1513 
=== Succesors ===
next: v921 
=== Usages ===
v1419 
=== Predecessor ===
a1456 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?25 guard: - address: v1513 #next: v921  <|@  <|@
f <@~|@floating>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1457 
y: v1417 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1457 y: v1417  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1419 
=== Succesors ===
trueSuccessor: v917 
falseSuccessor: v920 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1419 #trueSuccessor: v917 #falseSuccessor: v920  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1527 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?25 
object: a24 
=== Succesors ===
next: i1458 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?25 object: a24 #next: i1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 17]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1483 
=== Succesors ===
next: i1459 
=== Usages ===
v1488 i232 v712 
=== Predecessor ===
v1527 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1483 #next: i1459  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1456 
=== Succesors ===
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1487 
=== Succesors ===
next: v931 
=== Usages ===
v712 i235 
=== Predecessor ===
i1458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1487 #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1458 
y: i1459 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1458 y: i1459  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v712 
=== Succesors ===
trueSuccessor: v927 
falseSuccessor: v930 
=== Usages ===
=== Predecessor ===
i1459 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v712 #trueSuccessor: v927 #falseSuccessor: v930  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B77" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
v720 
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid a705 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 13]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1456 
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1456  <|@  <|@
f <@~|@floating>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a705 
index: i1458 
=== Succesors ===
=== Usages ===
v720 j1374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a705 index: i1458  <|@  <|@
f <@~|@floating>@ <|@
tid a719 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a24 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a24  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v927 
address: v1488 
value: a719 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1374 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v927 address: v1488 value: a719 stateAfter: - lastLocationAccess: - #next: j1374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1488 
=== Succesors ===
next: v1378 
=== Usages ===
j1375 
=== Predecessor ===
v720 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1488 #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid j1375 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1374 
y: i1290 
=== Succesors ===
=== Usages ===
v1514 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1374 y: i1290  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1375 
index: j1294 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1375 index: j1294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1514 
value: i1296 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
j1374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1514 value: i1296 stateAfter: - lastLocationAccess: - #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 28]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32
=== Inputs ===
x: i1458 
y: i33 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1458 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 35]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1459 
y: i175 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1459 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 36]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32
=== Inputs ===
x: i232 
y: i235 
=== Succesors ===
=== Usages ===
v726 v240 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i232 y: i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 38]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1483 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1460 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1483 value: i236 stateAfter: - lastLocationAccess: - #next: i1460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1460 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 42]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1486 
=== Succesors ===
next: v243 
=== Usages ===
v240 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1486 #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 45]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i1460 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i236 y: i1460  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 45]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 0.005257702249921503
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v241 
falseSuccessor: v242 
=== Usages ===
=== Predecessor ===
i1460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v241 #falseSuccessor: v242  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4561340628960753897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 48]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
v241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B60" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575737433985495079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v482 v484 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v482 v484 #next: v245  <|@  <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 49]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@48a8e659
stamp: void
targetMethod: HotSpotMethod<ArrayDeque.doubleCapacity()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1104 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 252
stackSize: 0
=== Inputs ===
outerFrameState: ?249 
values: - - 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?249 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
bci: 49
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 49]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
polymorphic: false
stamp: void
targetMethod: Direct#ArrayDeque.doubleCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v729 
stateDuring: ?1104 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v729 stateDuring: ?1104 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 37]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595229280478624026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:253) [bci: 52]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid i1140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -182555
stableDimension: 0
stamp: i32 [-182555] ⇊00000000fffd36e5 ⇈00000000fffd36e5
stampKind: i32
value: int[-182555|0xfffffffffffd36e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
v930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid i1135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -181564
stableDimension: 0
stamp: i32 [-181564] ⇊00000000fffd3ac4 ⇈00000000fffd3ac4
stampKind: i32
value: int[-181564|0xfffffffffffd3ac4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
v920 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1131 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-184843 - -179731] ⇊00000000fffd00c4 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1128 
values: i1135 i1140 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1128 values: i1135 i1140  <|@  <|@
f <@~|@floating>@ <|@
tid a1132 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1128 
values: a1136 a293 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1128 values: a1136 a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1134 v1139 
=== Succesors ===
next: v1133 
=== Usages ===
i1131 a1132 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1134 v1139 #next: v1133  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?25 
actionAndReason: i1131 
speculation: a1132 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?25 actionAndReason: i1131 speculation: a1132  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581794638044992382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B65" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596028494299168452
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a370 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v364 
values: a24 a673 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: a24 a673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v365 v367 
=== Succesors ===
next: i27 
=== Usages ===
a370 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v365 v367 #next: i27  <|@  <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@62d356c8
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.add(Object)>
=== Inputs ===
arguments: a1 a370 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a370  <|@  <|@
tid ?1103 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 344
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
bci: 29
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#AbstractCollection.add
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v730 
stateDuring: ?1103 
=== Succesors ===
next: v472 
=== Usages ===
v468 
=== Predecessor ===
v364 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v730 stateDuring: ?1103 #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i4 
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i27 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i742 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v468 
trueValue: i11 
falseValue: i33 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v468 trueValue: i11 falseValue: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i27 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1423  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?1103 ?12 ?1102 ?25 v730 ?1101 ?400 ?80 v1510 ?146 ?508 ?167 ?1100 v729 ?172 v1482 v1483 v1486 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/Collection;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1462 a956 v620 v1490 v1529 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 342
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - 
=== Succesors ===
=== Usages ===
v1119 a1209 a1262 v1423 v1426 a1432 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1423 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1490 
=== Succesors ===
next: v93 
=== Usages ===
v1384 v1382 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1490 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v1381 <|@
result meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1423 
y: v1381 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1423 y: v1381  <|@  <|@
f <@~|@floating>@ <|@
tid a1136 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@328584330
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@328584330]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1132 a1145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1406 <|@
result meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1338 v1414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a293 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1427) [bci: 24]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a351 a351 a345 v1158 a1145 v1166 v1182 v1119 a1132 ?80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1296 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1295 v1368 v1378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1290 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1291 j1365 j1375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1294 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1502 v1512 v1514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1100 i11 v16 v468 a1262 v1348 ?80 i350 ?146 i344 i350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1389 <|@
result meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1237 v1413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:345) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i742 i403 i403 i160 i11 i232 v305 i315 i11 i503 i11 a1209 a1262 a1314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1209 a1262 a1314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=iterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.6068215107763131
=== Inputs ===
condition: v1382 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v1423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1382 #trueSuccessor: v86 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38006865 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328584330] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6068215107763131 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603640981804901626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=iterator target_method_class=Ljava/util/ArrayList; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1197 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1197 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1216 
=== Usages ===
v1491 v1492 
=== Predecessor ===
v86 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1216  <|@  <|@
f <@~|@floating>@ <|@
tid v1491 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1197 
index: - 
=== Succesors ===
=== Usages ===
j1216 v1218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1216 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: j1217 
=== Usages ===
j1385 j1222 v1515 
=== Predecessor ===
j1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: j1217  <|@  <|@
f <@~|@floating>@ <|@
tid v1492 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1197 
index: - 
=== Succesors ===
=== Usages ===
j1217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1197 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1217 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
=== Succesors ===
next: v1205 
=== Usages ===
v1202 
=== Predecessor ===
j1216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1492 #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid j1352 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1385 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1216 
y: j1352 
=== Succesors ===
=== Usages ===
v1202 v1218 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1216 y: j1352  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1217 
y: j1385 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1217 y: j1385  <|@  <|@
f <@*|@fixed>@ <|@
tid v1205 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1202 
=== Succesors ===
trueSuccessor: v1203 
falseSuccessor: v1204 
=== Usages ===
=== Predecessor ===
j1217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1202 #trueSuccessor: v1203 #falseSuccessor: v1204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4573646197846003219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1209 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1209  <|@  <|@
f <@~|@floating>@ <|@
tid i1386 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1209 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1195 i1386 i33 
=== Succesors ===
next: j1210 
=== Usages ===
j1210 
=== Predecessor ===
v1203 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1195 i1386 i33 #next: j1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1210 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1209 
=== Succesors ===
next: v1223 
=== Usages ===
j1222 
=== Predecessor ===
a1209 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1209 #next: v1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
j1210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4603586324182305374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1218 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
value: j1385 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1214 
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1491 value: j1385 stateAfter: - lastLocationAccess: - #next: v1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
result [v6|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j1216 
index: - 
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1216 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1515 
=== Succesors ===
next: v1221 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1515 #next: v1221  <|@  <|@
f <@*|@fixed>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
v1214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603640981804901626
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1222 <|@
result v9|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1220 
values: j1216 j1210 
=== Succesors ===
=== Usages ===
v1495 v1494 a953 v1516 v1517 v1518 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1220 values: j1216 j1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1221 v1223 
=== Succesors ===
next: a953 
=== Usages ===
j1222 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1221 v1223 #next: a953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a953 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1222 
=== Succesors ===
next: j1233 
=== Usages ===
a959 
=== Predecessor ===
v1220 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1222 #next: j1233  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1228 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1037 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1037  <|@  <|@
f <@~|@floating>@ <|@
tid v1493 <|@
result [v11|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1228 
index: - 
=== Succesors ===
=== Usages ===
j1233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1228 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1233 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1493 
=== Succesors ===
next: v1234 
=== Usages ===
v1234 
=== Predecessor ===
a953 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1493 #next: v1234  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
result [v9|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1222 
index: - 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1494 
value: j1233 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
j1233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1494 value: j1233 stateAfter: - lastLocationAccess: - #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid v1495 <|@
result [v9|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1222 
index: - 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1495 
value: v1389 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1495 value: v1389 stateAfter: - lastLocationAccess: - #next: v1242  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
result [v9|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1222 
index: - 
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1222 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1240 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1516 
value: j1240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1424 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1516 value: j1240 stateAfter: - lastLocationAccess: - #next: i1424  <|@  <|@
f <@~|@floating>@ <|@
tid v1462 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1424 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:849) [bci: 19]
at java.util.ArrayList.iterator(ArrayList.java:840) [bci: 5]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1462 
=== Succesors ===
next: v1244 
=== Usages ===
v1244 
=== Predecessor ===
v1242 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1462 #next: v1244  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
result [v9|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1222 
index: - 
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1517 
value: i1424 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1246 
=== Usages ===
=== Predecessor ===
i1424 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1517 value: i1424 stateAfter: - lastLocationAccess: - #next: v1246  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
result [v9|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1222 
index: - 
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1222 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a956 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
value: a956 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a959 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1518 value: a956 stateAfter: - lastLocationAccess: - #next: a959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a959 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a953 
=== Succesors ===
next: v960 
=== Usages ===
a82 
=== Predecessor ===
v1246 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a953 #next: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
a959 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
v960 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE v9|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v11|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*]], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 12], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 20], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 24], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4600754493908137484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v1383 <|@
result meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1423 
y: v1383 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1423 y: v1383  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=iterator target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9423452190881676
=== Inputs ===
condition: v1384 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1384 #trueSuccessor: v98 #falseSuccessor: v101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9423452190881676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B34" 
    xhandlers
    flags 
    probability 4600346132360004567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=iterator target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1425 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1425  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1425 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.map
nodeSourcePosition: at java.util.HashSet.iterator(HashSet.java:173) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
=== Succesors ===
next: v1426 
=== Usages ===
a568 v1004 v1463 v1464 v1465 v1496 a1110 a1108 
=== Predecessor ===
v98 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1529 #next: v1426  <|@  <|@
f <@~|@floating>@ <|@
tid v1496 <|@
result [v16|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1425 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1426 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1496 
=== Succesors ===
next: v822 
=== Usages ===
v1394 
=== Predecessor ===
a1425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1496 #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1393 <|@
result meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1394 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1426 
y: v1393 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1426 y: v1393  <|@  <|@
f <@*|@fixed>@ <|@
tid v822 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=keySet target_method_class=Ljava/util/HashMap; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1394 
=== Succesors ===
trueSuccessor: v819 
falseSuccessor: v821 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1394 #trueSuccessor: v819 #falseSuccessor: v821  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction CMP [v16|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4600346132360004567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=keySet target_method_class=Ljava/util/HashMap; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1427 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1427  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
result [v16|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1425 
=== Succesors ===
=== Usages ===
a1427 v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1427 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractMap.keySet
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:906) [bci: 1]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1463 
=== Succesors ===
next: v257 
=== Usages ===
a573 v732 v1466 v1503 
=== Predecessor ===
v819 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1463 #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:907) [bci: 6]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
value: a1427 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1427  <|@  <|@
f <@~|@floating>@ <|@
tid a1096 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1105 a1105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i4 - - 
=== Succesors ===
=== Usages ===
?414 ?278 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i4 - -  <|@  <|@
tid ?278 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<HashSet.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashSet.java
sourceLine: 173
stackSize: 0
=== Inputs ===
outerFrameState: ?146 
values: - 
=== Succesors ===
=== Usages ===
?286 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?146 values: -  <|@  <|@
tid a343 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@235ae181
hasIdentity: true
objectId: 2
stamp: a!# Ljava/util/HashMap$KeyIterator;
type: HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?309 ?286 ?346 ?352 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?286 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<HashMap$KeySet.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 917
stackSize: 1
=== Inputs ===
outerFrameState: ?278 
values: - a343 
=== Succesors ===
=== Usages ===
?333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?278 values: - a343  <|@  <|@
tid ?333 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<HashMap$KeyIterator.<init>(HashMap)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1464
stackSize: 0
=== Inputs ===
outerFrameState: ?286 
values: - - 
=== Succesors ===
=== Usages ===
?330 ?309 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?286 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1398 <|@
result meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1286 v1399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:907) [bci: 6]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7263120186279778
=== Inputs ===
condition: v732 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
a1427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v732 #trueSuccessor: v255 #falseSuccessor: v256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD[.], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7263120186279778 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598519398523084142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:908) [bci: 9]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1251 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1251 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1266 
=== Usages ===
v1497 v1498 
=== Predecessor ===
v255 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1266  <|@  <|@
f <@~|@floating>@ <|@
tid v1497 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1251 
index: - 
=== Succesors ===
=== Usages ===
j1266 v1268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1251 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1266 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
=== Succesors ===
next: j1267 
=== Usages ===
j1395 j1272 v1519 
=== Predecessor ===
j1251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1497 #next: j1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1498 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1251 
index: - 
=== Succesors ===
=== Usages ===
j1267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1251 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1267 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1498 
=== Succesors ===
next: v1259 
=== Usages ===
v1256 
=== Predecessor ===
j1266 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1498 #next: v1259  <|@  <|@
f <@~|@floating>@ <|@
tid j615 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1395 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1266 
y: j615 
=== Succesors ===
=== Usages ===
v1256 v1268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1266 y: j615  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1267 
y: j1395 
=== Succesors ===
=== Usages ===
v1259 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1267 y: j1395  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1256 
=== Succesors ===
trueSuccessor: v1257 
falseSuccessor: v1258 
=== Usages ===
=== Predecessor ===
j1267 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1256 #trueSuccessor: v1257 #falseSuccessor: v1258  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v18|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4568351579140940578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1262 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1262 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1195 i4 i33 
=== Succesors ===
next: j1263 
=== Usages ===
j1263 
=== Predecessor ===
v1257 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1195 i4 i33 #next: j1263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1263 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1262 
=== Succesors ===
next: v1273 
=== Usages ===
j1272 
=== Predecessor ===
a1262 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1262 #next: v1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
j1263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598470920737032360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1268 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
value: j1395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1265 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1497 value: j1395 stateAfter: - lastLocationAccess: - #next: v1265  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
result [v18|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j1266 
index: - 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1266 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1519 
=== Succesors ===
next: v1271 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1519 #next: v1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
v1265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4598519398523084142
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1272 <|@
result v21|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1270 
values: j1266 j1263 
=== Succesors ===
=== Usages ===
v1501 v1489 a999 v1500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1270 values: j1266 j1263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1271 v1273 
=== Succesors ===
next: a999 
=== Usages ===
j1272 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1271 v1273 #next: a999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a999 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1272 
=== Succesors ===
next: j1282 
=== Usages ===
a1005 
=== Predecessor ===
v1270 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1272 #next: j1282  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1278 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1007 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1007  <|@  <|@
f <@~|@floating>@ <|@
tid v1499 <|@
result [v23|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1278 
index: - 
=== Succesors ===
=== Usages ===
j1282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1282 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1499 
=== Succesors ===
next: v1283 
=== Usages ===
v1283 
=== Predecessor ===
a999 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1499 #next: v1283  <|@  <|@
f <@~|@floating>@ <|@
tid v1500 <|@
result [v21|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1272 
index: - 
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1500 
value: j1282 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1286 
=== Usages ===
=== Predecessor ===
j1282 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1500 value: j1282 stateAfter: - lastLocationAccess: - #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid v1501 <|@
result [v21|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1272 
index: - 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1501 
value: v1398 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1501 value: v1398 stateAfter: - lastLocationAccess: - #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
result [v21|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1272 
index: - 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1489 
value: a1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1005 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1489 value: a1425 stateAfter: - lastLocationAccess: - #next: a1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1005 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a999 
=== Succesors ===
next: v1006 
=== Usages ===
a574 a428 
=== Predecessor ===
v1004 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a999 #next: v1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
a1005 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid a574 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Compress
stamp: n -
=== Inputs ===
value: a1005 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractMap.keySet
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1463 
value: a574 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1289 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1463 value: a574 stateAfter: - lastLocationAccess: - #next: j1289  <|@  <|@
f <@~|@floating>@ <|@
tid a568 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashSet.iterator(HashSet.java:173) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Uncompress
stamp: a Ljava/util/HashMap;
=== Inputs ===
value: a1425 
=== Succesors ===
=== Usages ===
a416 j1289 a417 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1289 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a568 
=== Succesors ===
next: v1295 
=== Usages ===
j1291 
=== Predecessor ===
v575 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a568 #next: v1295  <|@  <|@
f <@~|@floating>@ <|@
tid j1291 <|@
result v27|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1289 
y: i1290 
=== Succesors ===
=== Usages ===
v1502 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1289 y: i1290  <|@  <|@
f <@~|@floating>@ <|@
tid v1502 <|@
result [v27|QWORD[*] + v4|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1291 
index: j1294 
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1291 index: j1294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.keySet(HashMap.java:909) [bci: 20]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1502 
value: i1296 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1428 
=== Usages ===
=== Predecessor ===
j1289 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1502 value: i1296 stateAfter: - lastLocationAccess: - #next: i1428  <|@  <|@
f <@~|@floating>@ <|@
tid v1464 <|@
result [v16|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1425 
=== Succesors ===
=== Usages ===
i1428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1428 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1425) [bci: 11]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1464 
=== Succesors ===
next: a1429 
=== Usages ===
i422 i424 
=== Predecessor ===
v1295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1464 #next: a1429  <|@  <|@
f <@~|@floating>@ <|@
tid v1465 <|@
result [v16|DWORD[.] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1425 
=== Succesors ===
=== Usages ===
a1429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1429 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1465 
=== Succesors ===
next: v438 
=== Usages ===
a1111 v733 
=== Predecessor ===
i1428 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1465 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
value: a1429 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1429  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.011206967720630727
=== Inputs ===
condition: v733 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
a1429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v733 #trueSuccessor: v436 #falseSuccessor: v437  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*]], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 12], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = COMPRESSPOINTER (input: v22|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[.] * 8 + 12], y: v25|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v27|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v16|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v16|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD[.], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B26" 
    xhandlers
    flags 
    probability 4569100521514472011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null], v26|QWORD[.], v28|DWORD, Object[null], v16|DWORD[.]] destination: B12 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598465069624739146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 41]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.], v28|DWORD, v29|DWORD[.], v22|QWORD[.], v16|DWORD[.]] destination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4591971356010846628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:911) [bci: 23]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1430 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v1503 <|@
result [v17|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1427 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1430 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1503 
=== Succesors ===
next: v826 
=== Usages ===
v1399 
=== Predecessor ===
v256 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1503 #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid v1399 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1430 
y: v1398 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1430 y: v1398  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeySet; target_method=iterator target_method_class=Ljava/util/HashMap$KeySet; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1399 
=== Succesors ===
trueSuccessor: v823 
falseSuccessor: v825 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1399 #trueSuccessor: v823 #falseSuccessor: v825  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v17|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591971356010846628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeySet; target_method=iterator target_method_class=Ljava/util/HashMap$KeySet; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1431 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1431  <|@  <|@
f <@~|@floating>@ <|@
tid v1466 <|@
result [v17|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1427 
=== Succesors ===
=== Usages ===
a1431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1431 <|@
result v30|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$KeySet.this$0
nodeSourcePosition: at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 5]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1466 
=== Succesors ===
next: a1432 
=== Usages ===
a586 v1468 a1108 a1110 v1467 
=== Predecessor ===
v823 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1466 #next: a1432  <|@  <|@
f <@~|@floating>@ <|@
tid v1468 <|@
result [v30|DWORD[.] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1431 
=== Succesors ===
=== Usages ===
a1432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1432 <|@
result v31|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: true
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1468 
=== Succesors ===
next: i1433 
=== Usages ===
a1111 v734 
=== Predecessor ===
a1431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1468 #next: i1433  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
result [v30|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1431 
=== Succesors ===
=== Usages ===
i1433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1433 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1425) [bci: 11]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1467 
=== Succesors ===
next: v303 
=== Usages ===
i424 i422 
=== Predecessor ===
a1432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1467 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
value: a1432 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1432  <|@  <|@
f <@~|@floating>@ <|@
tid a586 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 5]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Uncompress
stamp: a Ljava/util/HashMap;
=== Inputs ===
value: a1431 
=== Succesors ===
=== Usages ===
a416 a417 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.011206967720630727
=== Inputs ===
condition: v734 
=== Succesors ===
trueSuccessor: v301 
falseSuccessor: v302 
=== Usages ===
=== Predecessor ===
i1433 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v734 #trueSuccessor: v301 #falseSuccessor: v302  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[.] = MOV [v30|DWORD[.] * 8 + 36] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV [v30|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD[.], y: v31|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4562883692567947038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null], v33|QWORD[.], v32|DWORD, Object[null], v30|DWORD[.]] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591889467422268424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 41]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid a573 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.keySet(HashMap.java:906) [bci: 1]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1427 
=== Succesors ===
=== Usages ===
a428 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1427  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
v302 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.], v32|DWORD, v31|DWORD[.], v34|QWORD[.], v30|DWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B13" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4600271331314515020
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a416 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap;
valueDescription: a -
=== Inputs ===
merge: v412 
values: a586 a568 
=== Succesors ===
=== Usages ===
v1469 a417 ?346 ?346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v412 values: a586 a568  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v412 
values: i1433 i1428 
=== Succesors ===
=== Usages ===
i422 ?346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v412 values: i1433 i1428  <|@  <|@
f <@~|@floating>@ <|@
tid a1111 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n [Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v412 
values: a1432 a1429 
=== Succesors ===
=== Usages ===
a1112 v1470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v412 values: a1432 a1429  <|@  <|@
f <@~|@floating>@ <|@
tid a428 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v412 
values: a573 a1005 
=== Succesors ===
=== Usages ===
?414 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v412 values: a573 a1005  <|@  <|@
f <@~|@floating>@ <|@
tid a1110 <|@
result v39|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap;
valueDescription: n -
=== Inputs ===
merge: v412 
values: a1431 a1425 
=== Succesors ===
=== Usages ===
a1108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v412 values: a1431 a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v413 v415 
=== Succesors ===
next: i1434 
=== Usages ===
a416 i424 a1111 a428 a1110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v413 v415 #next: i1434  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
result [v35|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a416 
index: - 
=== Succesors ===
=== Usages ===
i1434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a416 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1434 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 42]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1469 
=== Succesors ===
next: v838 
=== Usages ===
v305 
=== Predecessor ===
v412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1469 #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1434 
y: i33 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1434 y: i33  <|@  <|@
tid ?414 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<HashSet.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rethrowException: false
sourceFile: HashSet.java
sourceLine: 173
stackSize: 1
=== Inputs ===
outerFrameState: ?146 
values: - a428 
=== Succesors ===
=== Usages ===
v1182 i1435 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?146 values: - a428  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v837 
falseSuccessor: v835 
=== Usages ===
=== Predecessor ===
i1434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v837 #falseSuccessor: v835  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|DWORD, v37|DWORD[.], v38|QWORD[.], v39|DWORD[.]] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v35|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v40|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1182 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1182  <|@  <|@
f <@~|@floating>@ <|@
tid i1184 <|@
result int[-153875|0xfffffffffffda6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153875
stableDimension: 0
stamp: i32 [-153875] ⇊00000000fffda6ed ⇈00000000fffda6ed
stampKind: i32
value: int[-153875|0xfffffffffffda6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?414 
actionAndReason: i1184 
speculation: a293 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?414 actionAndReason: i1184 speculation: a293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -153875 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
stack: v38|QWORD[.] 
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction DEOPT info [bci:7, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600271331314515020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1435 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1435  <|@  <|@
f <@~|@floating>@ <|@
tid v1470 <|@
result [v37|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1111 
=== Succesors ===
=== Usages ===
i1435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1435 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 53]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?414 
guard: - 
address: v1470 
=== Succesors ===
next: v307 
=== Usages ===
v312 v609 
=== Predecessor ===
v835 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?414 guard: - address: v1470 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid a1112 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a1111 
=== Succesors ===
=== Usages ===
?309 v1471 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1111  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
i1435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
stack: v38|QWORD[.] 
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction v41|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD state [bci:7, 3] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B24" 
    successors "B22" "B31" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i344 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v308 
values: i4 i315 
=== Succesors ===
=== Usages ===
?346 v312 i315 v1471 v609 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i4 i315  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v308 
values: a293 a619 
=== Succesors ===
=== Usages ===
?346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: a293 a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 6.235463538840422
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v307 
=== Succesors ===
next: v847 
=== Usages ===
v322 v326 i344 a345 v846 v851 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v307 #next: v847  <|@  <|@
tid ?346 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a343 
values: i424 i344 a345 - a416 a416 
=== Succesors ===
=== Usages ===
?309 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a343 values: i424 i344 a345 - a416 a416  <|@  <|@
tid ?309 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1430
stackSize: 0
=== Inputs ===
outerFrameState: ?333 
values: a343 - a1112 
virtualObjectMappings: ?346 
=== Succesors ===
=== Usages ===
v809 v1158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a343 - a1112 virtualObjectMappings: ?346  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i1435 
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i344 y: i1435  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v312 
=== Succesors ===
trueSuccessor: v843 
falseSuccessor: v846 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v312 #trueSuccessor: v843 #falseSuccessor: v846  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD, v44|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i1435 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i344 y: i1435  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v609 
=== Succesors ===
trueSuccessor: v848 
falseSuccessor: v851 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v609 #trueSuccessor: v848 #falseSuccessor: v851  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1436 
=== Usages ===
a1436 
=== Predecessor ===
v852 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1436  <|@  <|@
f <@~|@floating>@ <|@
tid v1471 <|@
result [v42|QWORD[.] + v43|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1112 
index: i344 
=== Succesors ===
=== Usages ===
a1436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1112 index: i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1436 <|@
result v45|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v848 
address: v1471 
=== Succesors ===
next: v329 
=== Usages ===
a619 v736 a1105 
=== Predecessor ===
v848 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v848 address: v1471 #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid a619 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a1436 
=== Succesors ===
=== Usages ===
a351 a345 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1436  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
value: a1436 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1436  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 66]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: i32
=== Inputs ===
x: i344 
y: i33 
=== Succesors ===
=== Usages ===
i350 i344 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i344 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
trueSuccessorProbability: 0.8396269990561175
=== Inputs ===
condition: v736 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v326 
=== Usages ===
=== Predecessor ===
a1436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v736 #trueSuccessor: v328 #falseSuccessor: v326  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = MOV [v42|QWORD[.] + v43|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = INC v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD[.], y: v45|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611316956268601049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?309 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?309 #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v308 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} - v42|QWORD[.] 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} Ljava/util/HashMap$KeyIterator; v36|DWORD v43|DWORD v44|QWORD[.] Object[null] v35|QWORD[.] v35|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8, 7, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|DWORD, v46|QWORD[.]] destination: B24 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600271331314515021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v308 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v308 #next: v325  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|DWORD, v46|QWORD[.], v35|QWORD[.], v36|DWORD, v45|DWORD[.], v39|DWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B12" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4600346132360004569
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i350 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v324 
values: i4 i315 i4 
=== Succesors ===
=== Usages ===
?352 v1344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: i4 i315 i4  <|@  <|@
f <@~|@floating>@ <|@
tid a351 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v324 
values: a293 a619 a293 
=== Succesors ===
=== Usages ===
?352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: a293 a619 a293  <|@  <|@
f <@~|@floating>@ <|@
tid a417 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap;
valueDescription: a -
=== Inputs ===
merge: v324 
values: a586 a416 a568 
=== Succesors ===
=== Usages ===
?352 ?352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: a586 a416 a568  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v324 
values: i1433 i424 i1428 
=== Succesors ===
=== Usages ===
v1342 ?352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: i1433 i424 i1428  <|@  <|@
f <@~|@floating>@ <|@
tid a1105 <|@
result v52|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v324 
values: a1096 a1436 a1096 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: a1096 a1436 a1096  <|@  <|@
f <@~|@floating>@ <|@
tid a1108 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap;
valueDescription: n -
=== Inputs ===
merge: v324 
values: a1431 a1110 a1425 
=== Succesors ===
=== Usages ===
v1354 v1351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v324 values: a1431 a1110 a1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v325 v440 
=== Succesors ===
next: j1303 
=== Usages ===
i350 a351 a417 i422 a1105 a1108 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v325 v440 #next: j1303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1303 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1318 
=== Usages ===
v1504 v1505 
=== Predecessor ===
v324 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1318  <|@  <|@
f <@~|@floating>@ <|@
tid v1504 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: - 
=== Succesors ===
=== Usages ===
j1318 v1320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1318 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1504 
=== Succesors ===
next: j1319 
=== Usages ===
j1401 j1324 v1520 
=== Predecessor ===
j1303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1504 #next: j1319  <|@  <|@
f <@~|@floating>@ <|@
tid v1505 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: - 
=== Succesors ===
=== Usages ===
j1319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1319 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1505 
=== Succesors ===
next: v1311 
=== Usages ===
v1308 
=== Predecessor ===
j1318 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1505 #next: v1311  <|@  <|@
f <@~|@floating>@ <|@
tid j1400 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1401 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1318 
y: j1400 
=== Succesors ===
=== Usages ===
v1308 v1320 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1318 y: j1400  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1319 
y: j1401 
=== Succesors ===
=== Usages ===
v1311 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1319 y: j1401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1311 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1308 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1310 
=== Usages ===
=== Predecessor ===
j1319 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1308 #trueSuccessor: v1309 #falseSuccessor: v1310  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD[.], v50|QWORD[.], v51|DWORD, v52|DWORD[.], v53|DWORD[.]] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v54|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570689798452198726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1314 
=== Usages ===
=== Predecessor ===
v1311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1314  <|@  <|@
tid ?352 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a343 
values: i422 i350 a351 - a417 a417 
=== Succesors ===
=== Usages ===
?330 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a343 values: i422 i350 a351 - a417 a417  <|@  <|@
tid ?330 <|@
d <@d|@=== Debug Properties ===
bci: 78
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1432
stackSize: 0
=== Inputs ===
outerFrameState: ?333 
values: - - - 
virtualObjectMappings: ?352 
=== Succesors ===
=== Usages ===
a1314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: - - - virtualObjectMappings: ?352  <|@  <|@
f <@~|@floating>@ <|@
tid i1403 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1314 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?330 
arguments: v1195 i1403 i33 
=== Succesors ===
next: j1315 
=== Usages ===
j1315 
=== Predecessor ===
v1309 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?330 arguments: v1195 i1403 i33 #next: j1315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1315 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1314 
=== Succesors ===
next: v1325 
=== Usages ===
j1324 
=== Predecessor ===
a1314 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1314 #next: v1325  <|@  <|@
f <@*|@fixed>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
j1315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
locals: - - - 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=v51|DWORD,index=v48|DWORD,next=v49|QWORD[.],current=Object[null],this$0=v50|QWORD[.],this$0=v50|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=v51|DWORD,index=v48|DWORD,next=v49|QWORD[.],current=Object[null],this$0=v50|QWORD[.],this$0=v50|QWORD[.]} Ljava/util/HashMap$KeyIterator; v51|DWORD v48|DWORD v49|QWORD[.] Object[null] v50|QWORD[.] v50|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8, 7, 3] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600279387235583582
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1320 
=== Usages ===
=== Predecessor ===
v1311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1504 
value: j1401 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1317 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1504 value: j1401 stateAfter: - lastLocationAccess: - #next: v1317  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
result [v54|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j1318 
index: - 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1318 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1520 
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1520 #next: v1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600346132360004569
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1324 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1322 
values: j1318 j1315 
=== Succesors ===
=== Usages ===
v1508 v1507 a1027 v1521 v1522 v1523 v1524 v1525 v1526 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1322 values: j1318 j1315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1323 v1325 
=== Succesors ===
next: a1027 
=== Usages ===
j1324 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1323 v1325 #next: a1027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1027 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1324 
=== Succesors ===
next: j1334 
=== Usages ===
a1035 
=== Predecessor ===
v1322 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1324 #next: j1334  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1330 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1330 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1073 
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid v1506 <|@
result [v59|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1330 
index: - 
=== Succesors ===
=== Usages ===
j1334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1330 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1334 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1506 
=== Succesors ===
next: v1335 
=== Usages ===
v1335 
=== Predecessor ===
a1027 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1506 #next: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid v1507 <|@
result [v57|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
value: j1334 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1338 
=== Usages ===
=== Predecessor ===
j1334 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1507 value: j1334 stateAfter: - lastLocationAccess: - #next: v1338  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
result [v57|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
value: v1406 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1342 
=== Usages ===
=== Predecessor ===
v1335 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1508 value: v1406 stateAfter: - lastLocationAccess: - #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
result [v57|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
value: i422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1521 value: i422 stateAfter: - lastLocationAccess: - #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
result [v57|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1522 
value: i350 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1522 value: i350 stateAfter: - lastLocationAccess: - #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
result [v57|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1523 
value: a1105 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1348 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1523 value: a1105 stateAfter: - lastLocationAccess: - #next: v1348  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
result [v57|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1524 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1524 value: i4 stateAfter: - lastLocationAccess: - #next: v1351  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
result [v57|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1525 
value: a1108 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1354 
=== Usages ===
=== Predecessor ===
v1348 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1525 value: a1108 stateAfter: - lastLocationAccess: - #next: v1354  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
result [v57|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j1324 
index: - 
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1324 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1526 
value: a1108 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1035 
=== Usages ===
=== Predecessor ===
v1351 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1526 value: a1108 stateAfter: - lastLocationAccess: - #next: a1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1035 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1027 
=== Succesors ===
next: v1036 
=== Usages ===
a82 
=== Predecessor ===
v1354 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1027 #next: v1036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
a1035 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
v1036 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [v59|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*]], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v57|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 12], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 20], y: v52|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 28], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 32], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD[.]] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v308 
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v308 #next: v1159  <|@  <|@
f <@~|@floating>@ <|@
tid i1160 <|@
result int[-156187|0xfffffffffffd9de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -156187
stableDimension: 0
stamp: i32 [-156187] ⇊00000000fffd9de5 ⇈00000000fffd9de5
stampKind: i32
value: int[-156187|0xfffffffffffd9de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v851 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-156187|0xfffffffffffd9de5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v308 
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v308 #next: v1154  <|@  <|@
f <@~|@floating>@ <|@
tid i1155 <|@
result int[-155411|0xfffffffffffda0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -155411
stableDimension: 0
stamp: i32 [-155411] ⇊00000000fffda0ed ⇈00000000fffda0ed
stampKind: i32
value: int[-155411|0xfffffffffffda0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v846 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-155411|0xfffffffffffda0ed]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1156 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-156187 - -155411] ⇊00000000fffd80e5 ⇈00000000fffdbded
valueDescription: i32
=== Inputs ===
merge: v1153 
values: i1155 i1160 
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1153 values: i1155 i1160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1154 v1159 
=== Succesors ===
next: v1158 
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1154 v1159 #next: v1158  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?309 
actionAndReason: i1156 
speculation: a293 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?309 actionAndReason: i1156 speculation: a293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} - v42|QWORD[.] 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} Ljava/util/HashMap$KeyIterator; v36|DWORD v43|DWORD v44|QWORD[.] Object[null] v35|QWORD[.] v35|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 7, 8, 7, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeySet; target_method=iterator target_method_class=Ljava/util/HashMap$KeySet; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid i1127 <|@
result int[-149299|0xfffffffffffdb8cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149299
stableDimension: 0
stamp: i32 [-149299] ⇊00000000fffdb8cd ⇈00000000fffdb8cd
stampKind: i32
value: int[-149299|0xfffffffffffdb8cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149299|0xfffffffffffdb8cd]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=keySet target_method_class=Ljava/util/HashMap; position=at java.util.HashSet.iterator(HashSet.java:173) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1122 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1122  <|@  <|@
f <@~|@floating>@ <|@
tid i1123 <|@
result int[-145971|0xfffffffffffdc5cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145971
stableDimension: 0
stamp: i32 [-145971] ⇊00000000fffdc5cd ⇈00000000fffdc5cd
stampKind: i32
value: int[-145971|0xfffffffffffdc5cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
v821 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145971|0xfffffffffffdc5cd]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1117 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-150539 - -143883] ⇊00000000fffd80c5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1114 
values: i1123 i1127 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1114 values: i1123 i1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1122 v1126 
=== Succesors ===
next: v1119 
=== Usages ===
i1117 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1122 v1126 #next: v1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1117 
speculation: a293 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1117 speculation: a293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" 
    xhandlers
    flags 
    probability 4582191006178550608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6  <|@  <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
returnStamp: a - (unchecked=a Ljava/util/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@1e1698fc
stamp: void
targetMethod: HotSpotMethod<Collection.iterator()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
a6 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?1100 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i4 - - 
=== Succesors ===
=== Usages ===
a6 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i4 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 3
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
polymorphic: true
stamp: a -
targetMethod: Direct#Collection.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v620 
stateDuring: ?1100 
=== Succesors ===
next: v81 
=== Usages ===
a82 
=== Predecessor ===
v101 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v620 stateDuring: ?1100 #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
a6 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B4" "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a82 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v79 
values: a6 a959 a1035 
=== Succesors ===
=== Usages ===
?164 ?12 v701 ?1103 ?172 ?25 ?1102 ?400 v1473 ?1101 ?167 v635 v1509 v1472 v1475 v1480 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v79 values: a6 a959 a1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v87 v99 
=== Succesors ===
next: v1437 
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v87 v99 #next: v1437  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i4 - - a293 
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i4 - - a293  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
result [v64|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?80 
guard: - 
address: v1509 
=== Succesors ===
next: v1438 
=== Usages ===
v1414 v1413 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?80 guard: - address: v1509 #next: v1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1438 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v9 
=== Usages ===
v1416 
=== Predecessor ===
v1437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid v1415 <|@
result meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
rawvalue: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1438 
y: v1415 
=== Succesors ===
=== Usages ===
v374 v130 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1438 y: v1415  <|@  <|@
f <@~|@floating>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1437 
y: v1389 
=== Succesors ===
=== Usages ===
v117 v58 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1437 y: v1389  <|@  <|@
f <@~|@floating>@ <|@
tid v1480 <|@
result [v64|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1475 <|@
result [v64|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a1442 i1445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1472 <|@
result [v64|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
i1441 i1446 v661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1473 <|@
result [v64|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a82 
index: - 
=== Succesors ===
=== Usages ===
a1439 a1443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a82 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1486 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1455 i1460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:848) [bci: 10]
at java.util.ArrayList.iterator(ArrayList.java:840) [bci: 5]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i505 i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1483 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1453 v698 i1458 v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1417 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1418 v1419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1482 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1451 a1456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v1438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 8]
stack: Object[null] 
locals: v0|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction v65|DWORD = MOV [v64|QWORD[.] + 8] size: DWORD state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B76" "B77" "B82" "B61" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613268576488536858
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i11 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v10 
values: i4 i33 i33 i742 i33 
=== Succesors ===
=== Usages ===
?12 ?1103 v42 ?25 ?1102 i742 ?400 ?1101 ?167 ?172 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v10 values: i4 i33 i33 i742 i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.702796958917486
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 4
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 9]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v9 
=== Succesors ===
next: v58 
=== Usages ===
i11 v18 v514 v43 v391 v472 v930 v890 v920 v900 v910 v885 v875 v870 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v9 #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
trueSuccessorProbability: 0.7840774193548387
=== Inputs ===
condition: v1413 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1413 #trueSuccessor: v51 #falseSuccessor: v57  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v65|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7840774193548387 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611954437614218348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=hasNext target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1439 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1439 <|@
result v68|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1473 
=== Succesors ===
next: i1440 
=== Usages ===
v1474 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1473 #next: i1440  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
i1440 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1474 <|@
result [v68|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1439 
=== Succesors ===
=== Usages ===
i1440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1440 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v1474 
=== Succesors ===
next: i1441 
=== Usages ===
v72 
=== Predecessor ===
a1439 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v1474 #next: i1441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1441 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1472 
=== Succesors ===
next: v407 
=== Usages ===
v72 
=== Predecessor ===
i1440 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1472 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1440 
y: i1441 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1440 y: i1441  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stamp: void
trueSuccessorProbability: 0.36998709677419356
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
i1441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v408 #falseSuccessor: v406  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOV [v64|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 9]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV [v68|DWORD[.] * 8 + 16] size: DWORD state [bci:9] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: [v64|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605237561092548558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:346) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608691686027412720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B41 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603431775042550455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1437 
y: v1406 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1437 y: v1406  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
trueSuccessorProbability: 0.9078522768017206
=== Inputs ===
condition: v1414 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1414 #trueSuccessor: v63 #falseSuccessor: v66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v65|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9078522768017206 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602947395421611253
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1442 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1442 <|@
result v70|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1475 
=== Succesors ===
next: v454 
=== Usages ===
v737 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1475 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
=== Inputs ===
value: a1442 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1442  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stamp: void
trueSuccessorProbability: 0.36998709677419356
=== Inputs ===
condition: v737 
=== Succesors ===
trueSuccessor: v455 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
a1442 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v737 #trueSuccessor: v455 #falseSuccessor: v453  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v64|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD[.], y: v70|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    probability 4596230594281659301
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:346) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599684684675013655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B45 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587910894970821661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i14 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i14  <|@  <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4453db4c
stamp: void
targetMethod: HotSpotMethod<Iterator.hasNext()>
=== Inputs ===
arguments: a82 
=== Succesors ===
=== Usages ===
i14 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a82  <|@  <|@
tid ?1101 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
i14 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i14 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 10
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Iterator.hasNext
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v635 
stateDuring: ?1101 
=== Succesors ===
next: v22 
=== Usages ===
i403 v16 
=== Predecessor ===
v66 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v635 stateDuring: ?1101 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i14 
y: i4 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i14 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stamp: void
trueSuccessorProbability: 0.36998709677419356
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
i14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v393 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4581392076118436085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:346) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B40" "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v395 v397 v456 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v395 v397 v456 #next: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:346) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:346) [bci: 41]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585043467615815586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B41" "B45" 
    successors "B52" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610347534922315315
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i403 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v398 
values: i14 i33 i33 
=== Succesors ===
=== Usages ===
?400 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v398 values: i14 i33 i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v399 v401 v457 
=== Succesors ===
next: v117 
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v399 v401 v457 #next: v117  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 344
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
?249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ArrayDeque.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 423
stackSize: 0
=== Inputs ===
outerFrameState: ?172 
values: - - 
=== Succesors ===
=== Usages ===
?1104 ?508 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
trueSuccessorProbability: 0.8881743333469871
=== Inputs ===
condition: v1413 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1413 #trueSuccessor: v111 #falseSuccessor: v116  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v65|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$Itr; target_method=next target_method_class=Ljava/util/ArrayList$Itr; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1443 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1443 <|@
result v73|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1473 
=== Succesors ===
next: i1444 
=== Usages ===
v1478 v1477 v1476 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1473 #next: i1444  <|@  <|@
tid ?400 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - i403 
=== Succesors ===
=== Usages ===
v1166 i1444 i1449 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 - i403  <|@  <|@
f <@~|@floating>@ <|@
tid v1476 <|@
result [v73|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1443 
=== Succesors ===
=== Usages ===
i1444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1444 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?400 
guard: - 
address: v1476 
=== Succesors ===
next: i1445 
=== Usages ===
v222 
=== Predecessor ===
a1443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?400 guard: - address: v1476 #next: i1445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1445 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 8]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1475 
=== Succesors ===
next: v871 
=== Usages ===
v222 
=== Predecessor ===
i1444 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1475 #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1444 
y: i1445 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1444 y: i1445  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v867 
falseSuccessor: v870 
=== Usages ===
=== Predecessor ===
i1445 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v867 #falseSuccessor: v870  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = MOV [v64|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: v72|DWORD 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction v74|DWORD = MOV [v73|DWORD[.] * 8 + 12] size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|DWORD, y: [v64|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1446 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1446 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:860) [bci: 5]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1472 
=== Succesors ===
next: i1447 
=== Usages ===
v153 v158 i160 v665 v663 ?164 ?164 v1481 
=== Predecessor ===
v867 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1472 #next: i1447  <|@  <|@
f <@~|@floating>@ <|@
tid v1477 <|@
result [v73|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1443 
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1447 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 14]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1477 
=== Succesors ===
next: v876 
=== Usages ===
v153 
=== Predecessor ===
i1446 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1477 #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1446 
y: i1447 
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1446 y: i1447  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v872 
falseSuccessor: v875 
=== Usages ===
=== Predecessor ===
i1447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v872 #falseSuccessor: v875  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v64|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|DWORD, y: [v73|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1448 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1448  <|@  <|@
f <@~|@floating>@ <|@
tid v1478 <|@
result [v73|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1443 
=== Succesors ===
=== Usages ===
a1448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1448 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1478 
=== Succesors ===
next: i1449 
=== Usages ===
a654 v1479 
=== Predecessor ===
v872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1478 #next: i1449  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
result [v76|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1448 
=== Succesors ===
=== Usages ===
i1449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1449 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 38]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?400 
guard: - 
address: v1479 
=== Succesors ===
next: v886 
=== Usages ===
v158 v665 
=== Predecessor ===
a1448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?400 guard: - address: v1479 #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1446 
y: i1449 
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1446 y: i1449  <|@  <|@
f <@*|@fixed>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v882 
falseSuccessor: v885 
=== Usages ===
=== Predecessor ===
i1449 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v882 #falseSuccessor: v885  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v73|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: v72|DWORD 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 12] size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1446 
y: i1449 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1446 y: i1449  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v665 
=== Succesors ===
trueSuccessor: v887 
falseSuccessor: v890 
=== Usages ===
=== Predecessor ===
v882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v665 #trueSuccessor: v887 #falseSuccessor: v890  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v661 
=== Usages ===
a1450 
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v661  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 53]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: i32
=== Inputs ===
x: i1446 
y: i33 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1446 y: i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:866) [bci: 54]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1472 
value: i160 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1472 value: i160 stateAfter: - lastLocationAccess: - #next: v663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 61]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1480 
value: i1446 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1450 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1480 value: i1446 stateAfter: - lastLocationAccess: - #next: a1450  <|@  <|@
f <@~|@floating>@ <|@
tid a654 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:863) [bci: 32]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1448 
=== Succesors ===
=== Usages ===
v1481 ?164 ?164 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1448  <|@  <|@
f <@~|@floating>@ <|@
tid v1481 <|@
result [v79|QWORD[.] + v75|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a654 
index: i1446 
=== Succesors ===
=== Usages ===
a1450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a654 index: i1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1450 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v887 
address: v1481 
=== Succesors ===
next: v374 
=== Usages ===
a673 v1528 v692 
=== Predecessor ===
v663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v887 address: v1481 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid a673 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1450 
=== Succesors ===
=== Usages ===
a370 ?508 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1450  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayDeque; target_method=add target_method_class=Ljava/util/ArrayDeque; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 0.8881743333469871
=== Inputs ===
condition: v1416 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
a1450 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1416 #trueSuccessor: v372 #falseSuccessor: v373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v75|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.] + v75|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayDeque; target_method=add target_method_class=Ljava/util/ArrayDeque; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1451 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1451 <|@
result v82|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 13]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1482 
=== Succesors ===
next: v1452 
=== Usages ===
a677 v1511 v1484 
=== Predecessor ===
v372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1482 #next: v1452  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
?164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<ArrayList$Itr.next()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 61]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 867
stackSize: 2
=== Inputs ===
outerFrameState: ?167 
values: a82 i1446 a654 a654 i1446 
=== Succesors ===
=== Usages ===
v1146 v1452 v1528 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?167 values: a82 i1446 a654 a654 i1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
result [v82|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1451 
=== Succesors ===
=== Usages ===
v1452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1452 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?164 
guard: - 
address: v1511 
=== Succesors ===
next: v901 
=== Usages ===
v1418 
=== Predecessor ===
a1451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?164 guard: - address: v1511 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v1418 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1452 
y: v1417 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1452 y: v1417  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1418 
=== Succesors ===
trueSuccessor: v897 
falseSuccessor: v900 
=== Usages ===
=== Predecessor ===
v1452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1418 #trueSuccessor: v897 #falseSuccessor: v900  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: v79|QWORD[.] v75|DWORD 
locals: v64|QWORD[.] v75|DWORD v79|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction CMP [v82|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:64, 19] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?164 
object: a1450 
=== Succesors ===
next: i1453 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?164 object: a1450 #next: i1453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1453 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 17]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1483 
=== Succesors ===
next: i1454 
=== Usages ===
v1485 i503 v684 
=== Predecessor ===
v1528 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1483 #next: i1454  <|@  <|@
f <@~|@floating>@ <|@
tid v1484 <|@
result [v82|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1451 
=== Succesors ===
=== Usages ===
i1454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1454 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1484 
=== Succesors ===
next: v911 
=== Usages ===
v684 i505 
=== Predecessor ===
i1453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1484 #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1453 
y: i1454 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1453 y: i1454  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v684 
=== Succesors ===
trueSuccessor: v907 
falseSuccessor: v910 
=== Usages ===
=== Predecessor ===
i1454 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v684 #trueSuccessor: v907 #falseSuccessor: v910  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: v79|QWORD[.] v75|DWORD 
locals: v64|QWORD[.] v75|DWORD v79|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v80|DWORD[.] * 8] state [bci:64, 19] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV [v82|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
v692 
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid a677 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 13]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1451 
=== Succesors ===
=== Usages ===
v1485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1451  <|@  <|@
f <@~|@floating>@ <|@
tid v1485 <|@
result [v85|QWORD[.] + v83|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a677 
index: i1453 
=== Succesors ===
=== Usages ===
v692 j1364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a677 index: i1453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v907 
address: v1485 
value: a1450 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1364 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v907 address: v1485 value: a1450 stateAfter: - lastLocationAccess: - #next: j1364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1364 <|@
result [v85|QWORD[.] + v83|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1485 
=== Succesors ===
next: v1368 
=== Usages ===
j1365 
=== Predecessor ===
v692 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1485 #next: v1368  <|@  <|@
f <@~|@floating>@ <|@
tid j1365 <|@
result v86|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1364 
y: i1290 
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1364 y: i1290  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
result [v86|QWORD[*] + v4|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1365 
index: j1294 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1512 
value: i1296 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
j1364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1512 value: i1296 stateAfter: - lastLocationAccess: - #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 28]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32
=== Inputs ===
x: i1453 
y: i33 
=== Succesors ===
=== Usages ===
i506 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1453 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 35]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1454 
y: i175 
=== Succesors ===
=== Usages ===
i506 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1454 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid i506 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 36]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32
=== Inputs ===
x: i503 
y: i505 
=== Succesors ===
=== Usages ===
v698 ?508 v510 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i503 y: i505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 38]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1483 
value: i506 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1455 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1483 value: i506 stateAfter: - lastLocationAccess: - #next: i1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1455 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 42]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1486 
=== Succesors ===
next: v513 
=== Usages ===
v510 
=== Predecessor ===
v698 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1486 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 45]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i506 
y: i1455 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i506 y: i1455  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 45]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 0.005257702249921503
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
i1455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v511 #falseSuccessor: v512  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + v83|DWORD * 4 + 16], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = LEA [v85|QWORD[.] + v83|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SHR v87|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v86|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = INC v83|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = AND (x: v88|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4574792470851418416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 48]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608696507114877912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:253) [bci: 52]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v808  <|@  <|@
tid ?508 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 38]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 251
stackSize: 1
=== Inputs ===
outerFrameState: ?249 
values: a1 a673 i506 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?249 values: a1 a673 i506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?508 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?508 #next: v514  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 41]
stack: v90|DWORD 
locals: v0|QWORD[.] v81|QWORD[.] 
java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
locals: - - 
java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 2, 29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B61 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1151  <|@  <|@
f <@~|@floating>@ <|@
tid i1152 <|@
result int[-175387|0xfffffffffffd52e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -175387
stableDimension: 0
stamp: i32 [-175387] ⇊00000000fffd52e5 ⇈00000000fffd52e5
stampKind: i32
value: int[-175387|0xfffffffffffd52e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
v910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-175387|0xfffffffffffd52e5], Object[null]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid i1148 <|@
result int[-174396|0xfffffffffffd56c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -174396
stableDimension: 0
stamp: i32 [-174396] ⇊00000000fffd56c4 ⇈00000000fffd56c4
stampKind: i32
value: int[-174396|0xfffffffffffd56c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-174396|0xfffffffffffd56c4], v3|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1144 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-177675 - -172563] ⇊00000000fffd40c4 ⇈00000000fffd5ffd
valueDescription: i32
=== Inputs ===
merge: v1141 
values: i1148 i1152 
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1141 values: i1148 i1152  <|@  <|@
f <@~|@floating>@ <|@
tid a1145 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1141 
values: a1136 a293 
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1141 values: a1136 a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1147 v1151 
=== Succesors ===
next: v1146 
=== Usages ===
i1144 a1145 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1147 v1151 #next: v1146  <|@  <|@
f <@*|@fixed>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?164 
actionAndReason: i1144 
speculation: a1145 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?164 actionAndReason: i1144 speculation: a1145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD, v92|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v92|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: v79|QWORD[.] v75|DWORD 
locals: v64|QWORD[.] v75|DWORD v79|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:64, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597396
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v367  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[.]] destination: B65 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1175 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1175  <|@  <|@
f <@~|@floating>@ <|@
tid i1176 <|@
result int[-170523|0xfffffffffffd65e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -170523
stableDimension: 0
stamp: i32 [-170523] ⇊00000000fffd65e5 ⇈00000000fffd65e5
stampKind: i32
value: int[-170523|0xfffffffffffd65e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-170523|0xfffffffffffd65e5]] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:864) [bci: 39]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1173  <|@  <|@
f <@~|@floating>@ <|@
tid i1174 <|@
result int[-168979|0xfffffffffffd6bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168979
stableDimension: 0
stamp: i32 [-168979] ⇊00000000fffd6bed ⇈00000000fffd6bed
stampKind: i32
value: int[-168979|0xfffffffffffd6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v885 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168979|0xfffffffffffd6bed]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.next(ArrayList.java:861) [bci: 17]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1169 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1169  <|@  <|@
f <@~|@floating>@ <|@
tid i1170 <|@
result int[-166675|0xfffffffffffd74ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166675
stableDimension: 0
stamp: i32 [-166675] ⇊00000000fffd74ed ⇈00000000fffd74ed
stampKind: i32
value: int[-166675|0xfffffffffffd74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v875 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166675|0xfffffffffffd74ed]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$Itr.next(ArrayList.java:859) [bci: 1]
at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1167  <|@  <|@
f <@~|@floating>@ <|@
tid i1168 <|@
result int[-165395|0xfffffffffffd79ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -165395
stableDimension: 0
stamp: i32 [-165395] ⇊00000000fffd79ed ⇈00000000fffd79ed
stampKind: i32
value: int[-165395|0xfffffffffffd79ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1161 
=== Predecessor ===
v870 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-165395|0xfffffffffffd79ed]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1164 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-170523 - -163851] ⇊00000000fffd60e5 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1161 
values: i1168 i1170 i1174 i1176 
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1161 values: i1168 i1170 i1174 i1176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1167 v1169 v1173 v1175 
=== Succesors ===
next: v1166 
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1167 v1169 v1173 v1175 #next: v1166  <|@  <|@
f <@*|@fixed>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?400 
actionAndReason: i1164 
speculation: a293 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1161 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?400 actionAndReason: i1164 speculation: a293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: v72|DWORD 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B72" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596028494299168451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a24 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a24  <|@  <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@3c8a4ea0
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a82 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a82  <|@  <|@
tid ?1102 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a24 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 19
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v701 
stateDuring: ?1102 
=== Succesors ===
next: v130 
=== Usages ===
a370 ?25 v1527 a719 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v701 stateDuring: ?1102 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayDeque; target_method=add target_method_class=Ljava/util/ArrayDeque; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 0.8881743333469871
=== Inputs ===
condition: v1416 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
a24 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1416 #trueSuccessor: v126 #falseSuccessor: v129  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayDeque; target_method=add target_method_class=Ljava/util/ArrayDeque; position=at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1456 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1456 <|@
result v95|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 13]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1482 
=== Succesors ===
next: v1457 
=== Usages ===
a705 v1513 v1487 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1482 #next: v1457  <|@  <|@
tid ?25 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 343
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - a24 
=== Succesors ===
=== Usages ===
v1133 v1457 v1527 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 - a24  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
result [v95|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1456 
=== Succesors ===
=== Usages ===
v1457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1457 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?25 
guard: - 
address: v1513 
=== Succesors ===
next: v921 
=== Usages ===
v1419 
=== Predecessor ===
a1456 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?25 guard: - address: v1513 #next: v921  <|@  <|@
f <@~|@floating>@ <|@
tid v1419 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1457 
y: v1417 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1457 y: v1417  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1419 
=== Succesors ===
trueSuccessor: v917 
falseSuccessor: v920 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1419 #trueSuccessor: v917 #falseSuccessor: v920  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: v94|QWORD[.] 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction CMP [v95|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:24] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1527 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?25 
object: a24 
=== Succesors ===
next: i1458 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?25 object: a24 #next: i1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1458 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 17]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1483 
=== Succesors ===
next: i1459 
=== Usages ===
v1488 i232 v712 
=== Predecessor ===
v1527 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1483 #next: i1459  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
result [v95|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1456 
=== Succesors ===
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1459 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1487 
=== Succesors ===
next: v931 
=== Usages ===
v712 i235 
=== Predecessor ===
i1458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1487 #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1458 
y: i1459 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1458 y: i1459  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v712 
=== Succesors ===
trueSuccessor: v927 
falseSuccessor: v930 
=== Usages ===
=== Predecessor ===
i1459 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v712 #trueSuccessor: v927 #falseSuccessor: v930  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: v94|QWORD[.] 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction NULLCHECK [v94|QWORD[.]] state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOV [v95|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v97|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B77" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
v720 
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid a705 <|@
result v98|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 13]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1456 
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1456  <|@  <|@
f <@~|@floating>@ <|@
tid v1488 <|@
result [v98|QWORD[.] + v96|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a705 
index: i1458 
=== Succesors ===
=== Usages ===
v720 j1374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a705 index: i1458  <|@  <|@
f <@~|@floating>@ <|@
tid a719 <|@
result v99|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a24 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a24  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v927 
address: v1488 
value: a719 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1374 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v927 address: v1488 value: a719 stateAfter: - lastLocationAccess: - #next: j1374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1374 <|@
result [v98|QWORD[.] + v96|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1488 
=== Succesors ===
next: v1378 
=== Usages ===
j1375 
=== Predecessor ===
v720 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1488 #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid j1375 <|@
result v100|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1374 
y: i1290 
=== Succesors ===
=== Usages ===
v1514 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1374 y: i1290  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
result [v100|QWORD[*] + v4|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1375 
index: j1294 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1375 index: j1294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1514 
value: i1296 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
j1374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1514 value: i1296 stateAfter: - lastLocationAccess: - #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 28]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32
=== Inputs ===
x: i1458 
y: i33 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1458 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 35]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1459 
y: i175 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1459 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 36]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: i32
=== Inputs ===
x: i232 
y: i235 
=== Succesors ===
=== Usages ===
v726 v240 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i232 y: i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 38]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1483 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1460 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1483 value: i236 stateAfter: - lastLocationAccess: - #next: i1460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1460 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 42]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1486 
=== Succesors ===
next: v243 
=== Usages ===
v240 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1486 #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 45]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i1460 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i236 y: i1460  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 45]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
trueSuccessorProbability: 0.005257702249921503
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v241 
falseSuccessor: v242 
=== Usages ===
=== Predecessor ===
i1460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v241 #falseSuccessor: v242  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = UNCOMPRESSPOINTER (input: v95|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = COMPRESSPOINTER (input: v94|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[.] + v96|DWORD * 4 + 16], y: v99|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = LEA [v98|QWORD[.] + v96|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[*] = SHR v101|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v100|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = INC v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = DEC v97|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = AND (x: v102|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v104|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4561340628960753897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 48]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
v241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B60" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575737433985495079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v482 v484 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v482 v484 #next: v245  <|@  <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 49]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@48a8e659
stamp: void
targetMethod: HotSpotMethod<ArrayDeque.doubleCapacity()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1104 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 252
stackSize: 0
=== Inputs ===
outerFrameState: ?249 
values: - - 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?249 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
bci: 49
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 49]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
polymorphic: false
stamp: void
targetMethod: Direct#ArrayDeque.doubleCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v729 
stateDuring: ?1104 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v729 stateDuring: ?1104 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 37]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 49]
locals: - - 
java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
locals: - - 
java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:49, 2, 29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B76 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595229280478624026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:253) [bci: 52]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B77 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:250) [bci: 21]
at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid i1140 <|@
result int[-182555|0xfffffffffffd36e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -182555
stableDimension: 0
stamp: i32 [-182555] ⇊00000000fffd36e5 ⇈00000000fffd36e5
stampKind: i32
value: int[-182555|0xfffffffffffd36e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
v930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-182555|0xfffffffffffd36e5], Object[null]] destination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid i1135 <|@
result int[-181564|0xfffffffffffd3ac4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -181564
stableDimension: 0
stamp: i32 [-181564] ⇊00000000fffd3ac4 ⇈00000000fffd3ac4
stampKind: i32
value: int[-181564|0xfffffffffffd3ac4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
v920 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181564|0xfffffffffffd3ac4], v3|QWORD[.]] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1131 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-184843 - -179731] ⇊00000000fffd00c4 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1128 
values: i1135 i1140 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1128 values: i1135 i1140  <|@  <|@
f <@~|@floating>@ <|@
tid a1132 <|@
result v106|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1128 
values: a1136 a293 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1128 values: a1136 a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1134 v1139 
=== Succesors ===
next: v1133 
=== Usages ===
i1131 a1132 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1134 v1139 #next: v1133  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?25 
actionAndReason: i1131 
speculation: a1132 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?25 actionAndReason: i1131 speculation: a1132  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD, v106|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: v94|QWORD[.] 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581794638044992382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|QWORD[.]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B65" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596028494299168452
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a370 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v364 
values: a24 a673 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: a24 a673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v365 v367 
=== Succesors ===
next: i27 
=== Usages ===
a370 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v365 v367 #next: i27  <|@  <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@62d356c8
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.add(Object)>
=== Inputs ===
arguments: a1 a370 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a370  <|@  <|@
tid ?1103 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<AbstractCollection.addAll(Collection)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 344
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i11 a82 - 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i11 a82 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i27 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 29
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#AbstractCollection.add
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v730 
stateDuring: ?1103 
=== Succesors ===
next: v472 
=== Usages ===
v468 
=== Predecessor ===
v364 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v730 stateDuring: ?1103 #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i4 
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i27 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i742 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v468 
trueValue: i11 
falseValue: i33 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v468 trueValue: i11 falseValue: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i27 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.add(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v108|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v67|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B82 -> B38 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38006865 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6068215107763131 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603640981804901626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4603586324182305374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603640981804901626
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE v9|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v11|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*]], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 12], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 20], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 24], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B4" "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 8]
stack: Object[null] 
locals: v0|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction v65|DWORD = MOV [v64|QWORD[.] + 8] size: DWORD state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B76" "B77" "B82" "B61" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613268576488536858
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v65|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7840774193548387 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611954437614218348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOV [v64|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 9]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV [v68|DWORD[.] * 8 + 16] size: DWORD state [bci:9] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: [v64|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608691686027412720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B41 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B41" "B45" 
    successors "B52" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610347534922315315
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v65|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = MOV [v64|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: v72|DWORD 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction v74|DWORD = MOV [v73|DWORD[.] * 8 + 12] size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|DWORD, y: [v64|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v64|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|DWORD, y: [v73|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v73|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: v72|DWORD 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 12] size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v75|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.] + v75|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: v79|QWORD[.] v75|DWORD 
locals: v64|QWORD[.] v75|DWORD v79|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction CMP [v82|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:64, 19] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: v79|QWORD[.] v75|DWORD 
locals: v64|QWORD[.] v75|DWORD v79|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v80|DWORD[.] * 8] state [bci:64, 19] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV [v82|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + v83|DWORD * 4 + 16], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = LEA [v85|QWORD[.] + v83|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SHR v87|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v86|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = INC v83|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = AND (x: v88|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608696507114877912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 41]
stack: v90|DWORD 
locals: v0|QWORD[.] v81|QWORD[.] 
java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
locals: - - 
java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 2, 29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B61 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603431775042550455
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v65|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9078522768017206 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602947395421611253
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v64|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD[.], y: v70|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599684684675013655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B45 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B72" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596028494299168451
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: v94|QWORD[.] 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction CMP [v95|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:24] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: v94|QWORD[.] 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction NULLCHECK [v94|QWORD[.]] state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOV [v95|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v97|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B77" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = UNCOMPRESSPOINTER (input: v95|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = COMPRESSPOINTER (input: v94|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[.] + v96|DWORD * 4 + 16], y: v99|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = LEA [v98|QWORD[.] + v96|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[*] = SHR v101|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v100|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = INC v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = DEC v97|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = AND (x: v102|DWORD, y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v104|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595229280478624026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B77 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597396
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[.]] destination: B65 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B65" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596028494299168452
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.add(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v108|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v67|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B82 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587910894970821661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585043467615815586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581794638044992382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|QWORD[.]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4574792470851418416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B60" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575737433985495079
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 49]
locals: - - 
java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
locals: - - 
java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:49, 2, 29] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B76 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4561340628960753897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605237561092548558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B40" "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4600754493908137484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9423452190881676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B34" 
    xhandlers
    flags 
    probability 4600346132360004567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction CMP [v16|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4600346132360004567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD[.], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7263120186279778 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598519398523084142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v18|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598470920737032360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4598519398523084142
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*]], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v21|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[*] + 12], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = COMPRESSPOINTER (input: v22|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[.] * 8 + 12], y: v25|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v27|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v16|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v16|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD[.], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598465069624739146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.], v28|DWORD, v29|DWORD[.], v22|QWORD[.], v16|DWORD[.]] destination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B13" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4600271331314515020
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|DWORD, v37|DWORD[.], v38|QWORD[.], v39|DWORD[.]] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v35|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v40|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600271331314515020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
stack: v38|QWORD[.] 
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction v41|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD state [bci:7, 3] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = MOV [v42|QWORD[.] + v43|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = INC v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD[.], y: v45|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611316956268601049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} - v42|QWORD[.] 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} Ljava/util/HashMap$KeyIterator; v36|DWORD v43|DWORD v44|QWORD[.] Object[null] v35|QWORD[.] v35|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8, 7, 3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|DWORD, v46|QWORD[.]] destination: B24 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B24" 
    successors "B22" "B31" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|DWORD, v44|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600271331314515021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|DWORD, v46|QWORD[.], v35|QWORD[.], v36|DWORD, v45|DWORD[.], v39|DWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B12" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4600346132360004569
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD[.], v50|QWORD[.], v51|DWORD, v52|DWORD[.], v53|DWORD[.]] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v54|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600279387235583582
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v54|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600346132360004569
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [v59|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*]], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v57|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 12], y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 20], y: v52|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 28], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[*] + 32], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD[.]] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    probability 4596230594281659301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4591971356010846628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v17|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591971356010846628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction v31|DWORD[.] = MOV [v30|DWORD[.] * 8 + 36] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV [v30|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD[.], y: v31|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591889467422268424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.], v32|DWORD, v31|DWORD[.], v34|QWORD[.], v30|DWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" 
    xhandlers
    flags 
    probability 4582191006178550608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4581392076118436085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4573646197846003219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v114|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570689798452198726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v112|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
locals: - - - 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=v51|DWORD,index=v48|DWORD,next=v49|QWORD[.],current=Object[null],this$0=v50|QWORD[.],this$0=v50|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=v51|DWORD,index=v48|DWORD,next=v49|QWORD[.],current=Object[null],this$0=v50|QWORD[.],this$0=v50|QWORD[.]} Ljava/util/HashMap$KeyIterator; v51|DWORD v48|DWORD v49|QWORD[.] Object[null] v50|QWORD[.] v50|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8, 7, 3] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B26" 
    xhandlers
    flags 
    probability 4569100521514472011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null], v26|QWORD[.], v28|DWORD, Object[null], v16|DWORD[.]] destination: B12 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4568351579140940578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v113|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4562883692567947038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], Object[null], v33|QWORD[.], v32|DWORD, Object[null], v30|DWORD[.]] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328584330] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-174396|0xfffffffffffd56c4], v111|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD, v92|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v92|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: v79|QWORD[.] v75|DWORD 
locals: v64|QWORD[.] v75|DWORD v79|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:64, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149299|0xfffffffffffdb8cd]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-182555|0xfffffffffffd36e5], Object[null]] destination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD, v106|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: v94|QWORD[.] 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-156187|0xfffffffffffd9de5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} - v42|QWORD[.] 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=v36|DWORD,index=v43|DWORD,next=v44|QWORD[.],current=Object[null],this$0=v35|QWORD[.],this$0=v35|QWORD[.]} Ljava/util/HashMap$KeyIterator; v36|DWORD v43|DWORD v44|QWORD[.] Object[null] v35|QWORD[.] v35|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 7, 8, 7, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-175387|0xfffffffffffd52e5], Object[null]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328584330] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181564|0xfffffffffffd3ac4], v110|QWORD[.]] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166675|0xfffffffffffd74ed]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: v72|DWORD 
locals: v0|QWORD[.] - v67|DWORD v64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-155411|0xfffffffffffda0ed]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145971|0xfffffffffffdc5cd]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-170523|0xfffffffffffd65e5]] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -153875 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
stack: v38|QWORD[.] 
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: v0|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction DEOPT info [bci:7, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-165395|0xfffffffffffd79ed]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168979|0xfffffffffffd6bed]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_1       
     3: invokeinterface#16, 1      // java.util.Collection.iterator:()java.util.Iterator
     8: astore_3      
     9: aload_3       
    10: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    15: ifeq          40
    18: aload_3       
    19: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    24: astore        4
    26: aload_0       
    27: aload         4
    29: invokevirtual #18         // add:(java.lang.Object)boolean
    32: ifeq          37
    35: iconst_1      
    36: istore_2      
    37: goto          9
    40: iload_2       
    41: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38006865 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.6068215107763131 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603640981804901626
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   22  <|@ instruction r8|QWORD = LEA [r10|QWORD + 32] size: QWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4603586324182305374
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr   50  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 224] instr: 0 <|@ <|@
      nr   52  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603640981804901626
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>} <|@ <|@
      nr   62  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr   64  <|@ instruction MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   68  <|@ instruction r9|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r9|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r10|QWORD[*] + 20], y: r9|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   78  <|@ instruction MOV (x: [r10|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B4" "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  452  <|@ instruction stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 8]
stack: Object[null] 
locals: rsi|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:8] <|@ <|@
      nr  456  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  460  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B76" "B77" "B82" "B61" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613268576488536858
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  468  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.7840774193548387 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611954437614218348
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [rcx:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 9]
locals: stack:32|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD state [bci:9] <|@ <|@
      nr  478  <|@ instruction CMP (x: rbx|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608691686027412720
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B41 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B41" "B45" 
    successors "B52" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610347534922315315
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  546  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rsi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: rax|DWORD 
locals: stack:32|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:15] <|@ <|@
      nr  558  <|@ instruction CMP (x: r10|DWORD, y: [rcx|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  566  <|@ instruction CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  574  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: rax|DWORD 
locals: stack:32|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:15] <|@ <|@
      nr  576  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r11|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [rcx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  596  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  600  <|@ instruction CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed} <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rbx|DWORD[.] = MOV [r9|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: rsi|QWORD[.] r10|DWORD 
locals: rcx|QWORD[.] r10|DWORD rsi|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: r9|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:64, 19] <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: rsi|QWORD[.] r10|DWORD 
locals: rcx|QWORD[.] r10|DWORD rsi|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: r9|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:64, 19] <|@ <|@
      nr  618  <|@ instruction rdi|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  620  <|@ instruction rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  622  <|@ instruction CMP (x: rdx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  630  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  632  <|@ instruction MOV (x: [rbx|QWORD[.] + rdi|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  634  <|@ instruction rsi|QWORD[.] = LEA [rbx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  638  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction rdx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction rdi|DWORD = AND (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction CMP (x: rdi|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608696507114877912
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ st <@st|@reference-map: [rcx:0, r8:0, r9:0, stack:24, stack:32]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 41]
stack: rdi|DWORD 
locals: r9|QWORD[.] r8|QWORD[.] 
java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
locals: - - 
java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: r9|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 2, 29] <|@ <|@
      nr  660  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  662  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B61 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603431775042550455
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.9078522768017206 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602947395421611253
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  502  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599684684675013655
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B45 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B72" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596028494299168451
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:19] <|@ <|@
      nr  746  <|@ instruction CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed} <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  756  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:24] <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:24] <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B77" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  782  <|@ instruction rdx|QWORD[.] = LEA [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  786  <|@ instruction MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  788  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  790  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  792  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595229280478624026
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  822  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B77 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597396
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B65 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B65" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596028494299168452
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  864  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.add(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:29] <|@ <|@
      nr  872  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r10|DWORD) condition: = <|@ <|@
      nr  878  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B82 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587910894970821661
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10] <|@ <|@
      nr  522  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585043467615815586
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581794638044992382
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4574792470851418416
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B60 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B60" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575737433985495079
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 49]
locals: - - 
java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
locals: - - 
java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:49, 2, 29] <|@ <|@
      nr  810  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  812  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction JUMP ~[] destination: B76 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4561340628960753897
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605237561092548558
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B40" "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4600754493908137484
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.9423452190881676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B34" 
    xhandlers
    flags 
    probability 4600346132360004567
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction CMP [r14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4600346132360004567
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  102  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.7263120186279778 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598519398523084142
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  110  <|@ instruction r8|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598470920737032360
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 208] instr: 0 <|@ <|@
      nr  140  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4598519398523084142
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>} <|@ <|@
      nr  150  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  158  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 12], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  162  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction r9|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOVB (x: [r9|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  168  <|@ instruction r9|DWORD = MOV [r14|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  170  <|@ instruction rcx|DWORD[.] = MOV [r14|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  172  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598465069624739146
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B13" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4600271331314515020
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  250  <|@ instruction CMP rbx|DWORD y: 1 size: DWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600271331314515020
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r10:0, r14:0, stack:32]
live-base-pointers: []
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
stack: r8|QWORD[.] 
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: rsi|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:7, 3] <|@ <|@
      nr  266  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  268  <|@ instruction rdi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  282  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rdx|DWORD[.] = MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611316956268601049
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, rdi:0, r10:0, r14:0, stack:32]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} - rcx|QWORD[.] 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: rsi|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} Ljava/util/HashMap$KeyIterator; r9|DWORD r8|DWORD rdi|QWORD[.] Object[null] r10|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8, 7, 3] <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B24 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B24" 
    successors "B22" "B31" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600271331314515021
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction r8|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction r13|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B12" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4600346132360004569
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  324  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600279387235583582
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0 <|@ <|@
      nr  366  <|@ instruction r10|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600346132360004569
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>} <|@ <|@
      nr  376  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV (x: [r10|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr  382  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [r10|QWORD[*] + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r10|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r10|QWORD[*] + 28], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV (x: [r10|QWORD[*] + 32], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    probability 4596230594281659301
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4591971356010846628
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591971356010846628
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r13:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction r9|DWORD[.] = MOV [r8|DWORD[.] * 8 + 36] size: DWORD state [bci:0] <|@ <|@
      nr  206  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  208  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591889467422268424
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction r14|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction rcx|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" 
    xhandlers
    flags 
    probability 4582191006178550608
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: stack:32|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3] <|@ <|@
      nr  442  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4581392076118436085
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4573646197846003219
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   34  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [r13:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   38  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570689798452198726
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction stack:44|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction stack:48|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [r14:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
locals: - - - 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=stack:52|DWORD,index=r13|DWORD,next=r14|QWORD[.],current=Object[null],this$0=stack:40|QWORD[.],this$0=stack:40|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: stack:32|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=stack:52|DWORD,index=r13|DWORD,next=r14|QWORD[.],current=Object[null],this$0=stack:40|QWORD[.],this$0=stack:40|QWORD[.]} Ljava/util/HashMap$KeyIterator; stack:52|DWORD r13|DWORD r14|QWORD[.] Object[null] stack:40|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8, 7, 3] <|@ <|@
      nr  346  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B26" 
    xhandlers
    flags 
    probability 4569100521514472011
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction r8|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr  182  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction r14|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  186  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B12 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4568351579140940578
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  120  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  126  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  130  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4562883692567947038
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r14|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  224  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328584330] <|@ <|@
      nr  678  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction r11|DWORD = MOVE input: int[-174396|0xfffffffffffd56c4] <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@reference-map: [rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: rsi|QWORD[.] r10|DWORD 
locals: stack:40|QWORD[.] r10|DWORD rsi|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:64, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r10|DWORD = MOVE input: int[-149299|0xfffffffffffdb8cd] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-182555|0xfffffffffffd36e5] <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  848  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction r11|DWORD = MOVE input: int[-156187|0xfffffffffffd9de5] <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [rcx:0, rdi:0, r10:0, stack:32]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} - rcx|QWORD[.] 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: stack:32|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} Ljava/util/HashMap$KeyIterator; r9|DWORD r8|DWORD rdi|QWORD[.] Object[null] r10|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 7, 8, 7, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  670  <|@ instruction r11|DWORD = MOVE input: int[-175387|0xfffffffffffd52e5] <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328584330] <|@ <|@
      nr  840  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction r10|DWORD = MOVE input: int[-181564|0xfffffffffffd3ac4] <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r10|DWORD = MOVE input: int[-166675|0xfffffffffffd74ed] <|@ <|@
      nr  718  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  732  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  736  <|@ st <@st|@reference-map: [rcx:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: rax|DWORD 
locals: stack:32|QWORD[.] - r11|DWORD rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction r11|DWORD = MOVE input: int[-155411|0xfffffffffffda0ed] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction r10|DWORD = MOVE input: int[-145971|0xfffffffffffdc5cd] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction r10|DWORD = MOVE input: int[-170523|0xfffffffffffd65e5] <|@ <|@
      nr  702  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOV [r15|QWORD + 668] y: -153875 size: DWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [r8:0, stack:32]
live-base-pointers: []
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
stack: r8|QWORD[.] 
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: stack:32|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction DEOPT info [bci:7, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-165395|0xfffffffffffd79ed] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r10|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr  710  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_1       
     3: invokeinterface#16, 1      // java.util.Collection.iterator:()java.util.Iterator
     8: astore_3      
     9: aload_3       
    10: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    15: ifeq          40
    18: aload_3       
    19: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    24: astore        4
    26: aload_0       
    27: aload         4
    29: invokevirtual #18         // add:(java.lang.Object)boolean
    32: ifeq          37
    35: iconst_1      
    36: istore_2      
    37: goto          9
    40: iload_2       
    41: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38006865 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.6068215107763131 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4603640981804901626
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   22  <|@ instruction r8|QWORD = LEA [r10|QWORD + 32] size: QWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4603586324182305374
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr   50  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 224] instr: 0 <|@ <|@
      nr   52  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603640981804901626
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>} <|@ <|@
      nr   62  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr   64  <|@ instruction MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   68  <|@ instruction r9|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r9|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r10|QWORD[*] + 20], y: r9|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr   78  <|@ instruction MOV (x: [r10|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B4" "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  452  <|@ instruction stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 8]
stack: Object[null] 
locals: rsi|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:8] <|@ <|@
      nr  456  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  460  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B76" "B77" "B82" "B61" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613268576488536858
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  468  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.7840774193548387 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B49" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611954437614218348
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [rcx:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 9]
locals: stack:32|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD state [bci:9] <|@ <|@
      nr  478  <|@ instruction CMP (x: rbx|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B39 -> B49 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608691686027412720
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B41 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B41" "B45" 
    successors "B52" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610347534922315315
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  546  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr  552  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction rsi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: rax|DWORD 
locals: stack:32|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:15] <|@ <|@
      nr  558  <|@ instruction CMP (x: r10|DWORD, y: [rcx|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  566  <|@ instruction CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  574  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: rax|DWORD 
locals: stack:32|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:15] <|@ <|@
      nr  576  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4609489975671236187
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r11|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV (x: [rcx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  596  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  598  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  600  <|@ instruction CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed} <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rbx|DWORD[.] = MOV [r9|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: rsi|QWORD[.] r10|DWORD 
locals: rcx|QWORD[.] r10|DWORD rsi|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: r9|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:64, 19] <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: rsi|QWORD[.] r10|DWORD 
locals: rcx|QWORD[.] r10|DWORD rsi|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: r9|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:64, 19] <|@ <|@
      nr  618  <|@ instruction rdi|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  620  <|@ instruction rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  622  <|@ instruction CMP (x: rdx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B76" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4608728313555103441
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  630  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  632  <|@ instruction MOV (x: [rbx|QWORD[.] + rdi|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  634  <|@ instruction rsi|QWORD[.] = LEA [rbx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  638  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  640  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction rdx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  644  <|@ instruction rdi|DWORD = AND (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction CMP (x: rdi|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B59 -> B76 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608696507114877912
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ st <@st|@reference-map: [rcx:0, r8:0, r9:0, stack:24, stack:32]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 41]
stack: rdi|DWORD 
locals: r9|QWORD[.] r8|QWORD[.] 
java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
locals: - - 
java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: r9|QWORD[.] - stack:44|DWORD rcx|QWORD[.] - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 2, 29] <|@ <|@
      nr  660  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  662  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B61 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603431775042550455
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.9078522768017206 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602947395421611253
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  502  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B43 -> B49 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599684684675013655
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B45 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B72" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596028494299168451
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:19] <|@ <|@
      nr  746  <|@ instruction CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed} <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  756  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:24] <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:24] <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  768  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595261317219597395
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  778  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  782  <|@ instruction rdx|QWORD[.] = LEA [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  786  <|@ instruction MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  788  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  790  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  792  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B74 -> B76 falseDestination: B74 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595229280478624026
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  822  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B77 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B56" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596028494299168452
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.add(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:29] <|@ <|@
      nr  872  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r10|DWORD) condition: = <|@ <|@
      nr  878  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B82 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4587910894970821661
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10]
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10] <|@ <|@
      nr  522  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581794638044992382
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" "B59" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575737433985495079
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 49]
locals: - - 
java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2]
locals: - - 
java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29]
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:49, 2, 29] <|@ <|@
      nr  810  <|@ instruction stack:44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  812  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction JUMP ~[] destination: B76 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" "B39" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4600754493908137484
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.9423452190881676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B34" 
    xhandlers
    flags 
    probability 4600346132360004567
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction CMP [r14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4600346132360004567
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  102  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.7263120186279778 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598519398523084142
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  110  <|@ instruction r8|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4598470920737032360
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 208] instr: 0 <|@ <|@
      nr  140  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B12" "B18" 
    xhandlers
    flags 
    probability 4598519398523084142
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>} <|@ <|@
      nr  150  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  158  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction MOV (x: [r14|DWORD[.] * 8 + 12], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  162  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  164  <|@ instruction r9|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOVB (x: [r9|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  168  <|@ instruction r9|DWORD = MOV [r14|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  170  <|@ instruction rcx|DWORD[.] = MOV [r14|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  172  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4600271331314515020
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  250  <|@ instruction CMP rbx|DWORD y: 1 size: DWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600271331314515020
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r10:0, r14:0, stack:32]
live-base-pointers: []
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
stack: r8|QWORD[.] 
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: rsi|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:7, 3] <|@ <|@
      nr  266  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  268  <|@ instruction rdi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  270  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  282  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rdx|DWORD[.] = MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611316956268601049
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, rdi:0, r10:0, r14:0, stack:32]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} - rcx|QWORD[.] 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: rsi|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} Ljava/util/HashMap$KeyIterator; r9|DWORD r8|DWORD rdi|QWORD[.] Object[null] r10|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8, 7, 3] <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B24 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B24" 
    successors "B22" "B31" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612326451272570614
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600271331314515021
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction r8|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction r13|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B16" "B25" "B12" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4600346132360004569
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  324  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 40] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600279387235583582
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0 <|@ <|@
      nr  366  <|@ instruction r10|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600346132360004569
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>} <|@ <|@
      nr  376  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV (x: [r10|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr  382  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction MOV (x: [r10|QWORD[*] + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [r10|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [r10|QWORD[*] + 28], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  392  <|@ instruction MOV (x: [r10|QWORD[*] + 32], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4591971356010846628
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed} <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591971356010846628
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  204  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r13:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction r9|DWORD[.] = MOV [r8|DWORD[.] * 8 + 36] size: DWORD state [bci:0] <|@ <|@
      nr  206  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  208  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591889467422268424
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction r14|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction rcx|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" 
    xhandlers
    flags 
    probability 4582191006178550608
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: stack:32|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3] <|@ <|@
      nr  442  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4573646197846003219
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   34  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [r13:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   38  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570689798452198726
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction stack:44|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction stack:48|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [r14:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
locals: - - - 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=stack:52|DWORD,index=r13|DWORD,next=r14|QWORD[.],current=Object[null],this$0=stack:40|QWORD[.],this$0=stack:40|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: stack:32|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=stack:52|DWORD,index=r13|DWORD,next=r14|QWORD[.],current=Object[null],this$0=stack:40|QWORD[.],this$0=stack:40|QWORD[.]} Ljava/util/HashMap$KeyIterator; stack:52|DWORD r13|DWORD r14|QWORD[.] Object[null] stack:40|QWORD[.] stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8, 7, 3] <|@ <|@
      nr  346  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B26" 
    xhandlers
    flags 
    probability 4569100521514472011
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction r8|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr  182  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction r14|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  186  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B12 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4568351579140940578
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  120  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  126  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  130  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" 
    xhandlers
    flags 
    probability 4562883692567947038
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r14|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  224  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B16 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328584330] <|@ <|@
      nr  678  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction r11|DWORD = MOVE input: int[-174396|0xfffffffffffd56c4] <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@reference-map: [rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64]
stack: rsi|QWORD[.] r10|DWORD 
locals: stack:40|QWORD[.] r10|DWORD rsi|QWORD[.] 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19]
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:64, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r10|DWORD = MOVE input: int[-149299|0xfffffffffffdb8cd] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-182555|0xfffffffffffd36e5] <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  848  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  852  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] - stack:44|DWORD stack:40|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction r11|DWORD = MOVE input: int[-156187|0xfffffffffffd9de5] <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [rcx:0, rdi:0, r10:0, stack:32]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} - rcx|QWORD[.] 
java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7]
locals: - - 
java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8]
stack: vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} 
locals: - 
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: stack:32|QWORD[.] - int[0|0x0] - - 
vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} Ljava/util/HashMap$KeyIterator; r9|DWORD r8|DWORD rdi|QWORD[.] Object[null] r10|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 7, 8, 7, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  670  <|@ instruction r11|DWORD = MOVE input: int[-175387|0xfffffffffffd52e5] <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328584330] <|@ <|@
      nr  840  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction r10|DWORD = MOVE input: int[-181564|0xfffffffffffd3ac4] <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r10|DWORD = MOVE input: int[-166675|0xfffffffffffd74ed] <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  732  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  736  <|@ st <@st|@reference-map: [rcx:0, stack:32]
live-base-pointers: []
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15]
stack: rax|DWORD 
locals: stack:32|QWORD[.] - r11|DWORD rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction r11|DWORD = MOVE input: int[-155411|0xfffffffffffda0ed] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction r10|DWORD = MOVE input: int[-145971|0xfffffffffffdc5cd] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction r10|DWORD = MOVE input: int[-170523|0xfffffffffffd65e5] <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOV [r15|QWORD + 668] y: -153875 size: DWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [r8:0, stack:32]
live-base-pointers: []
java.util.HashSet.iterator(HashSet.java:173) [bci: 7]
stack: r8|QWORD[.] 
locals: - 
java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3]
locals: stack:32|QWORD[.] - int[0|0x0] - - 
>@ <|@ instruction DEOPT info [bci:7, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-165395|0xfffffffffffd79ed] <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r10|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: aload_1       
     3: invokeinterface#16, 1      // java.util.Collection.iterator:()java.util.Iterator
     8: astore_3      
     9: aload_3       
    10: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    15: ifeq          40
    18: aload_3       
    19: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    24: astore        4
    26: aload_0       
    27: aload         4
    29: invokevirtual #18         // add:(java.lang.Object)boolean
    32: ifeq          37
    35: iconst_1      
    36: istore_2      
    37: goto          9
    40: iload_2       
    41: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8bea458b550849bb00e01b17010000004181faaddeadde0f85180300004d8b57604d8d42204d3b47700f870f0500004d894760410f1882e00000004d8bc249b9addeaddeaddeadde4d8b89a80000004d890a41c74208addeadde49b900000000ffffffff4d894a0c458b4d0c45894a1449c1ed0345896a18498bc848894c2418448b5108448954240c448b46084489442410c7442414000000004181faaddeadde0f851c0100008b59188b1cdd100000003b590c0f8464020000b801000000817c240caddeadde488b4c24180f85130100008b7118448b14f50c000000443b51140f8542060000448b510c443b14f5100000000f8dde0500008b34f514000000448b1cf50c000000453bda0f8e20060000453bda0f86ef050000458bda41ffc34489590c4489511048c1e603468b5c9610458bc349c1e003817c2410addeadde0f85490100004c8b4c2420418b5914813cdd08000000addeadde0f85d1040000438504dc418b79108b14dd0c0000003bd70f863905000049ba00e01b170100000048c1e30344895cbb10488d74bb1048c1ee0946882416ffc7ffca23fa41897910413b790c0f844e010000850500000000c744241401000000448b54240ce9d7feffff4181faaddeadde0f85020100008b591485db0f8443010000b801000000e9dafeffff488bf148b8ffffffffffffffff0f1f8000000000e80000000090817c2410addeadde0f85e7000000488b7424208b5614813cd508000000addeadde0f859c0400008500448b5610448b1cd50c000000453bda0f863504000049b900e01b170100000048c1e20348c1e80342894492104a8d54921048c1ea094688240a41ffc241ffcb4523d344895610443b560c0f8481000000c744241401000000448b54240c488b4c2418e90bfeffff488b7424204c8bce498bd048b8ffffffffffffffff0f1f440000e8000000009085c0448b542414be01000000410f44f289742414448b54240c488b4c2418e9c8fdffff488bf148b8ffffffffffffffff6690e8000000009085c00f85d0fdffffe92a0000004c8bc0eb96488b742420666690e80000000090c744241401000000448b54240c488b4c2418e97cfdffff8b442414488b6c24304883c438850500000000c5f877c34181faaddeadde0f85d1010000458b750c42813cf508000000addeadde0f85a6030000468b14f50c0000004585d20f85520100004d8b57604d8d42104d3b47700f87630200004d894760410f1882d00000004d8bc249b9addeaddeaddeadde4d8b89a80000004d890a41c74208addeadde4589720c4d8bd049c1ea03468914f50c000000458bd649c1e2034d8bca49c1e90947882419468b0cf518000000428b0cf52400000085c90f84d9010000418b5a1483fb010f8c210300008b1ccd0c00000048c1e10348bf000000000000000041b800000000e93700000066660f1f840000000000413bd80f8673020000428b5481108bc248c1e003418be8ffc585d20f8516000000850500000000488bf8448bc5413bd87fcee9a5020000458bc64c895424184c8bf0448bed498b4f60488d5928493b5f700f87fe00000049895f600f1881e80000004c8bd1498bca48bbaddeaddeaddeadde488b9ba800000049891a41c74208addeadde45894a0c45896a1041895214458962184589421c45894220e9c0fbffff42813cd508000000addeadde0f858b010000468b04d50c000000468b0cc524000000428b0cc518000000418bd848c1e3034585c90f841a01000049c1e203458bf04d8bc24c8bd3894c2414418bc9448b4c2414e9d0feffff498bf548b8ffffffffffffffff90e80000000090488bc849bb00e01b1701000000488b742420e93dfbffff48beaddeaddeaddeaddeba04000000b901000000e800000000904c8bd049bb00e01b1701000000488b742420e9ccfaffff44894424148954241044894c240c48beaddeaddeaddeaddeba06000000b901000000e800000000904c8bd0448b4424148b542410448b4c240c49bb00e01b1701000000488b742420e9c3feffff458bc6ba000000004c8954241849be000000000000000041bd00000000e981feffff48beaddeaddeaddeaddeba00000000b901000000e800000000904c8bd049bb00e01b1701000000488b742420e978fdffffba00000000448bc948895c241849be000000000000000041bd00000000e92efeffff49bbaddeaddeaddeadde4d8bc341bbc456fdff45899f9c0200004d8987a8020000e8000000009041bacdb8fdff4589979c0200004d89a7a8020000e8000000009049bb000000000000000041bae536fdff4589979c0200004d899fa8020000e8000000009041bbe59dfdff45899f9c0200004d89a7a8020000e8000000009049b8000000000000000041bbe552fdffeb8249baaddeaddeaddeadde4d8bda41bac43afdffebab41baed74fdff448b5c24144589979c0200004d89a7a8020000e8000000009041bbeda0fdffeb9e41bacdc5fdffe955ffffff41bae565fdffebcc41c7879c020000eda6fdff4d89a7a8020000e8000000009041baed79fdffebac41baed6bfdffeba4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38006865 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r10|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 56 [rsi:0, r13:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 70 14 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 70 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 77 16 BRANCH trueDestinationProbability: 0.6068215107763131 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5  <||@
  Comment 83 block B1 null  <||@
  Comment 83 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 20 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 87 22 r8|QWORD = LEA [r10|QWORD + 32] size: QWORD  <||@
  Comment 91 24 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 95 26 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 101 block B3 null  <||@
  Comment 101 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 48 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 105 50 AMD64PREFETCH ~[r10|QWORD + 224] instr: 0  <||@
  Comment 113 52 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 113 54 JUMP ~[] destination: B3 -> B4  <||@
  Comment 113 block B4 null  <||@
  Comment 113 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 113 58 r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 116 60 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}  <||@
  Comment 116 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}}  <||@
  Comment 126 62 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 133 64 MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 136 66 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}  <||@
  Comment 136 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}}  <||@
  Comment 144 68 r9|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 154 70 MOV (x: [r10|QWORD[*] + 12], y: r9|QWORD) size: QWORD  <||@
  Comment 158 72 r9|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 162 74 MOV (x: [r10|QWORD[*] + 20], y: r9|DWORD) size: DWORD  <||@
  Comment 166 76 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 170 78 MOV (x: [r10|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 174 80 rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 177 82 JUMP ~[] destination: B4 -> B37  <||@
  Comment 177 block B37 null  <||@
  Comment 177 450 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 177 452 stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 182 454 r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:8]  <||@
  Comment 182 [rcx:0, rsi:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 8, duringCall: false, rethrow: false]
              |0             |1  |2           |3  |4 
     locals:  |rsi|QWORD[.]  |-  |int[0|0x0]  |-  |- 
     stack:   |Object[null]  |   |            |   |    <||@
  Comment 182 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 186 456 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 191 458 r8|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 195 460 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 200 462 stack:44|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 208 464 JUMP ~[] destination: B37 -> B38  <||@
  Comment 208 block B38 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 208 466 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 208 468 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}  <||@
  Comment 208 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}}  <||@
  Comment 215 470 BRANCH trueDestinationProbability: 0.7840774193548387 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 221 block B39 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 221 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 221 474 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 224 476 rbx|DWORD = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD state [bci:9]  <||@
  Comment 224 [rcx:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1  |2               |3             |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |-   <||@
  Comment 224 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 231 478 CMP (x: rbx|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 234 480 BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B39 -> B49 falseDestination: B39 -> B41  <||@
  Comment 240 block B41 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 240 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 488 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 245 490 JUMP ~[] destination: B41 -> B51  <||@
  Comment 245 block B51 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 245 544 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 245 546 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}  <||@
  Comment 245 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}}  <||@
  Comment 253 552 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 258 548 BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B71  <||@
  Comment 264 block B52 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 264 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 554 rsi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 267 556 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:15]  <||@
  Comment 267 [rcx:0, rsi:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1  |2               |3             |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |- 
     stack:   |rax|DWORD          |   |                |              |    <||@
  Comment 267 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 275 558 CMP (x: r10|DWORD, y: [rcx|QWORD[.] + 20]) size: DWORD  <||@
  Comment 279 560 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B69  <||@
  Comment 285 block B53 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 285 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 564 r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 289 566 CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 297 568 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B68  <||@
  Comment 303 block B54 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 303 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 572 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 310 574 r11|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:15]  <||@
  Comment 310 [rcx:0, rsi:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1  |2               |3             |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |- 
     stack:   |rax|DWORD          |   |                |              |    <||@
  Comment 310 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 318 576 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 321 578 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B67  <||@
  Comment 327 block B55 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 327 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 582 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 330 584 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B66  <||@
  Comment 336 block B56 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 336 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 336 588 r11|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 342 590 MOV (x: [rcx|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 346 592 MOV (x: [rcx|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 350 594 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 354 596 r11|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 359 598 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 366 600 CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}  <||@
  Comment 366 {meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}}  <||@
  Comment 374 602 BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82  <||@
  Comment 380 block B57 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 380 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 606 r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 385 608 rbx|DWORD[.] = MOV [r9|QWORD[.] + 20] size: DWORD  <||@
  Comment 389 610 CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:64, 19]  <||@
  Comment 389 [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:24, stack:32]at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rcx|QWORD[.]  |r10|DWORD  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]  |r10|DWORD  |             
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19, duringCall: true, rethrow: false]
              |0            |1  |2               |3             |4 
     locals:  |r9|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |-   <||@
  Comment 389 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 389 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 400 612 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63  <||@
  Comment 406 block B58 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 406 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 616 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:64, 19]  <||@
  Comment 406 [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:24, stack:32]at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rcx|QWORD[.]  |r10|DWORD  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]  |r10|DWORD  |             
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19, duringCall: true, rethrow: false]
              |0            |1  |2               |3             |4 
     locals:  |r9|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |-   <||@
  Comment 406 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 410 618 rdi|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 414 620 rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 421 622 CMP (x: rdx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 423 624 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62  <||@
  Comment 429 block B59 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 429 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 628 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 439 630 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 443 632 MOV (x: [rbx|QWORD[.] + rdi|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 448 634 rsi|QWORD[.] = LEA [rbx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 453 636 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 457 638 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 461 640 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 463 642 rdx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 465 644 rdi|DWORD = AND (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 467 646 MOV (x: [r9|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 471 648 CMP (x: rdi|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD  <||@
  Comment 475 650 BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B59 -> B76 falseDestination: B59 -> B61  <||@
  Comment 481 block B61 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 481 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 481 658 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 2, 29]  <||@
  Comment 481 [rcx:0, r8:0, r9:0, stack:24, stack:32]at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 41, duringCall: false, rethrow: false]
              |0            |1           
     locals:  |r9|QWORD[.]  |r8|QWORD[.] 
     stack:   |rdi|DWORD    |            
  at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29, duringCall: true, rethrow: false]
              |0            |1  |2               |3             |4 
     locals:  |r9|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |-   <||@
  Comment 481 {infopoint: SAFEPOINT}  <||@
  Comment 481 11  <||@
  Comment 487 660 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 495 662 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 500 664 JUMP ~[] destination: B61 -> B38  <||@
  Comment 505 block B42 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 505 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 505 494 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 505 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 512 496 BRANCH trueDestinationProbability: 0.9078522768017206 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B46  <||@
  Comment 518 block B43 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 518 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 518 500 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD  <||@
  Comment 521 502 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 523 504 BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B43 -> B49 falseDestination: B43 -> B45  <||@
  Comment 529 block B45 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 529 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 512 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 534 514 JUMP ~[] destination: B45 -> B51  <||@
  Comment 539 block B71 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 539 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 539 742 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 542 744 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:19]  <||@
  Comment 542 6  <||@
  Comment 559 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 564 [stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |-   <||@
  Comment 565 746 CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}  <||@
  Comment 565 {meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}}  <||@
  Comment 573 748 BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B81  <||@
  Comment 579 block B72 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 579 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 752 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 584 754 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 587 756 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:24]  <||@
  Comment 587 [rax:0, rdx:0, rsi:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24, duringCall: false, rethrow: false]
              |0             |1  |2               |3                  |4 
     locals:  |rsi|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |- 
     stack:   |rax|QWORD[.]  |   |                |                   |    <||@
  Comment 587 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 587 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 598 758 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B79  <||@
  Comment 604 block B73 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 604 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 604 762 NULLCHECK [rax|QWORD[.]] state [bci:24]  <||@
  Comment 604 [rax:0, rdx:0, rsi:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24, duringCall: false, rethrow: false]
              |0             |1  |2               |3                  |4 
     locals:  |rsi|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |- 
     stack:   |rax|QWORD[.]  |   |                |                   |    <||@
  Comment 604 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 606 764 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 610 766 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 618 768 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 621 770 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B78  <||@
  Comment 627 block B74 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 627 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 627 774 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 637 776 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 641 778 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 645 780 MOV (x: [rdx|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 650 782 rdx|QWORD[.] = LEA [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 655 784 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 659 786 MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 663 788 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 666 790 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 669 792 r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 672 794 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 676 796 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 680 798 BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B74 -> B76 falseDestination: B74 -> B77  <||@
  Comment 686 block B77 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 686 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 686 820 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 694 822 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 699 824 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 704 826 JUMP ~[] destination: B77 -> B38  <||@
  Comment 709 block B82 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 709 862 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 709 858 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 714 864 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 717 868 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 720 870 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.add(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:29]  <||@
  Comment 720 7  <||@
  Comment 735 {HotSpotMethod<AbstractCollection.add(Object)>}  <||@
  Comment 740 [stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29, duringCall: true, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |-   <||@
  Comment 741 872 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 743 874 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 748 876 rsi|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r10|DWORD) condition: =  <||@
  Comment 757 878 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 761 880 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 766 882 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 771 884 JUMP ~[] destination: B82 -> B38  <||@
  Comment 776 block B46 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 776 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 776 518 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 779 520 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10]  <||@
  Comment 779 6  <||@
  Comment 791 {HotSpotMethod<Iterator.hasNext()>}  <||@
  Comment 796 [stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10, duringCall: true, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |-   <||@
  Comment 797 522 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 799 524 BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B51  <||@
  Comment 810 block B81 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 810 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 810 856 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 813 860 JUMP ~[] destination: B81 -> B82  <||@
  Comment 815 block B76 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 815 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 806 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 820 808 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:49, 2, 29]  <||@
  Comment 820 9  <||@
  Comment 823 {HotSpotMethod<ArrayDeque.doubleCapacity()>}  <||@
  Comment 828 [stack:24, stack:32]at java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 49, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29, duringCall: true, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |-   <||@
  Comment 829 810 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 837 812 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 842 814 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 847 816 JUMP ~[] destination: B76 -> B38  <||@
  Comment 852 block B49 null  <||@
  Comment 852 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 852 536 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 856 538 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 865 12  <||@
  Comment 875 block B5 null  <||@
  Comment 875 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 875 86 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}  <||@
  Comment 875 {meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}}  <||@
  Comment 882 88 BRANCH trueDestinationProbability: 0.9423452190881676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36  <||@
  Comment 888 block B6 null  <||@
  Comment 888 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 888 92 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 892 94 CMP [r14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} state [bci:0]  <||@
  Comment 892 [rsi:0, r13:0, r14:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 892 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 892 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 904 96 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B34  <||@
  Comment 910 block B7 null  <||@
  Comment 910 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 910 100 r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 918 102 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 921 104 BRANCH trueDestinationProbability: 0.7263120186279778 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14  <||@
  Comment 927 block B8 null  <||@
  Comment 927 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 927 108 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 931 110 r8|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 935 112 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 939 114 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 945 block B10 null  <||@
  Comment 945 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 945 136 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 949 138 AMD64PREFETCH ~[r10|QWORD + 208] instr: 0  <||@
  Comment 957 140 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 957 142 JUMP ~[] destination: B10 -> B11  <||@
  Comment 957 block B11 null  <||@
  Comment 957 144 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 957 146 r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 960 148 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>}  <||@
  Comment 960 {meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>}}  <||@
  Comment 970 150 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 977 152 MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 980 154 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}  <||@
  Comment 980 {meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}}  <||@
  Comment 988 156 MOV (x: [r10|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 992 158 r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 999 160 MOV (x: [r14|DWORD[.] * 8 + 12], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1007 162 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 1014 164 r9|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1021 166 MOVB (x: [r9|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1025 168 r9|DWORD = MOV [r14|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 1033 170 rcx|DWORD[.] = MOV [r14|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 1041 172 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1043 174 BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B18  <||@
  Comment 1049 block B18 null  <||@
  Comment 1049 246 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 1049 248 rbx|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1053 250 CMP rbx|DWORD y: 1 size: DWORD  <||@
  Comment 1056 252 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 1062 block B20 null  <||@
  Comment 1062 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1062 264 rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:7, 3]  <||@
  Comment 1062 [rcx:0, rsi:0, r8:0, r10:0, r14:0, stack:32]at java.util.HashSet.iterator(HashSet.java:173) [bci: 7, duringCall: false, rethrow: false]
              |0           
     locals:  |-           
     stack:   |r8|QWORD[.] 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0             |1  |2           |3  |4 
     locals:  |rsi|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1062 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1069 266 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 1073 268 rdi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1083 270 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1089 272 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1094 block B22 loop 0 depth 1 header:308|LoopBegin  <||@
  Comment 1094 280 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1104 282 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1107 284 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B30  <||@
  Comment 1113 block B23 loop 0 depth 1 header:308|LoopBegin  <||@
  Comment 1113 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 288 rdx|DWORD[.] = MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1118 290 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 1124 292 rbp|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 1129 294 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1131 296 BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 1137 block B24 loop 0 depth 1 header:308|LoopBegin  <||@
  Comment 1137 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1137 300 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8, 7, 3]  <||@
  Comment 1137 [rax:0, rcx:0, rsi:0, rdi:0, r10:0, r14:0, stack:32]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48, duringCall: false, rethrow: false]
              |0                                                                                                                                                       |1  |2            
     locals:  |vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]}  |-  |rcx|QWORD[.] 
  at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                      
     locals:  |-                                                                                                                                                      
     stack:   |vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} 
  at java.util.HashSet.iterator(HashSet.java:173) [bci: 7, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0             |1  |2           |3  |4 
     locals:  |rsi|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1137 {infopoint: SAFEPOINT}  <||@
  Comment 1137 11  <||@
  Comment 1143 302 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1146 304 r8|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1149 306 JUMP ~[] destination: B24 -> B21  <||@
  Comment 1149 block B21 loop 0 depth 1 header:308|LoopBegin  <||@
  Comment 1149 274 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1149 276 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1152 278 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B31  <||@
  Comment 1159 block B25 null  <||@
  Comment 1159 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1159 310 r8|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1162 312 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1167 314 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1170 316 r13|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1173 318 JUMP ~[] destination: B25 -> B26  <||@
  Comment 1173 block B26 null  <||@
  Comment 1173 320 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 1173 322 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1177 324 rbx|QWORD = LEA [rcx|QWORD + 40] size: QWORD  <||@
  Comment 1181 326 CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1185 328 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 1191 block B28 null  <||@
  Comment 1191 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1191 362 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 1195 364 AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0  <||@
  Comment 1202 366 r10|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1205 368 JUMP ~[] destination: B28 -> B29  <||@
  Comment 1205 block B29 null  <||@
  Comment 1205 370 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1205 372 rcx|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 1208 374 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}  <||@
  Comment 1208 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}}  <||@
  Comment 1218 376 rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD  <||@
  Comment 1225 378 MOV (x: [r10|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 1228 380 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 1228 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 1236 382 MOV (x: [r10|QWORD[*] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 1240 384 MOV (x: [r10|QWORD[*] + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1244 386 MOV (x: [r10|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1248 388 MOV (x: [r10|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1252 390 MOV (x: [r10|QWORD[*] + 28], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1256 392 MOV (x: [r10|QWORD[*] + 32], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1260 394 JUMP ~[] destination: B29 -> B37  <||@
  Comment 1265 block B14 null  <||@
  Comment 1265 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1265 196 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}  <||@
  Comment 1265 {meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}}  <||@
  Comment 1277 198 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B33  <||@
  Comment 1283 block B15 null  <||@
  Comment 1283 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1283 202 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1291 204 r9|DWORD[.] = MOV [r8|DWORD[.] * 8 + 36] size: DWORD state [bci:0]  <||@
  Comment 1291 [rsi:0, r8:0, r10:0, r13:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 1291 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1299 206 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 1307 208 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 1314 210 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1317 212 BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 1323 block B17 null  <||@
  Comment 1323 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1323 230 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 1327 232 r14|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1330 234 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1333 236 r10|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1336 238 stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1340 240 rcx|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 1343 242 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1348 244 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1353 block B36 null  <||@
  Comment 1353 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1353 438 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1356 440 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3]  <||@
  Comment 1356 6  <||@
  Comment 1367 {HotSpotMethod<Collection.iterator()>}  <||@
  Comment 1372 [stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1  |2           |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1373 442 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1376 444 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1386 446 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1391 448 JUMP ~[] destination: B36 -> B37  <||@
  Comment 1396 block B2 null  <||@
  Comment 1396 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1396 30 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1396 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1406 32 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1411 34 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1416 36 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1416 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1421 [r13:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 1422 38 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1425 40 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1435 42 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1440 44 JUMP ~[] destination: B2 -> B4  <||@
  Comment 1445 block B27 null  <||@
  Comment 1445 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1445 332 stack:44|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1450 334 stack:48|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD  <||@
  Comment 1454 336 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1459 338 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1459 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1469 340 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 1474 342 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1479 344 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8, 7, 3]  <||@
  Comment 1479 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1484 [r14:0, stack:16, stack:20, stack:24, stack:32]at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                                       
     locals:  |-                                                                                                                                                                       
     stack:   |vobject:HashMap$KeyIterator:0{expectedModCount=stack:52|DWORD,index=r13|DWORD,next=r14|QWORD[.],current=Object[null],this$0=stack:40|QWORD[.],this$0=stack:40|QWORD[.]} 
  at java.util.HashSet.iterator(HashSet.java:173) [bci: 7, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1  |2           |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1485 346 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1488 348 r8|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1493 350 rdx|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 1497 352 r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1502 354 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1512 356 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1517 358 JUMP ~[] destination: B27 -> B29  <||@
  Comment 1522 block B12 null  <||@
  Comment 1522 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 178 r8|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1525 180 rdx|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 1530 182 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1535 184 r14|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1545 186 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1551 188 JUMP ~[] destination: B12 -> B26  <||@
  Comment 1556 block B9 null  <||@
  Comment 1556 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1556 118 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1556 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1566 120 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1571 122 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1576 124 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1576 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1581 [r13:0, r14:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 1582 126 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1585 128 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1595 130 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1600 132 JUMP ~[] destination: B9 -> B11  <||@
  Comment 1605 block B16 null  <||@
  Comment 1605 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1605 216 rdx|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 1610 218 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1613 220 stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1618 222 r14|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1628 224 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1634 226 JUMP ~[] destination: B16 -> B26  <||@
  Comment 1639 block B63 null  <||@
  Comment 1639 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1639 676 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328584330]  <||@
  Comment 1639 {Object[d.a@328584330]}  <||@
  Comment 1649 678 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1652 680 r11|DWORD = MOVE input: int[-174396|0xfffffffffffd56c4]  <||@
  Comment 1658 682 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1658 block B64 null  <||@
  Comment 1658 684 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1658 686 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1665 688 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1672 690 DEOPT info [bci:64, 19]  <||@
  Comment 1672 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1677 [rsi:0, stack:24, stack:32]at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64, duringCall: false, rethrow: false]
              |0                  |1          |2            
     locals:  |stack:40|QWORD[.]  |r10|DWORD  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]       |r10|DWORD  |             
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |-   <||@
  Comment 1678 block B33 null  <||@
  Comment 1678 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1678 418 r10|DWORD = MOVE input: int[-149299|0xfffffffffffdb8cd]  <||@
  Comment 1684 420 JUMP ~[] destination: B33 -> B35  <||@
  Comment 1684 block B35 null  <||@
  Comment 1684 428 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1684 430 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1691 432 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1698 434 DEOPT info [bci:0]  <||@
  Comment 1698 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1703 [rsi:0, r13:0]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 1704 block B78 null  <||@
  Comment 1704 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1704 830 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1714 832 r10|DWORD = MOVE input: int[-182555|0xfffffffffffd36e5]  <||@
  Comment 1720 834 JUMP ~[] destination: B78 -> B80  <||@
  Comment 1720 block B80 null  <||@
  Comment 1720 846 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1720 848 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1727 850 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1734 852 DEOPT info [bci:24]  <||@
  Comment 1734 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1739 [rax:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |- 
     stack:   |rax|QWORD[.]       |   |                |                   |    <||@
  Comment 1740 block B30 null  <||@
  Comment 1740 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1740 398 r11|DWORD = MOVE input: int[-156187|0xfffffffffffd9de5]  <||@
  Comment 1746 400 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1746 block B32 null  <||@
  Comment 1746 408 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1746 410 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1753 412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1760 414 DEOPT info [bci:48, 7, 8, 7, 3]  <||@
  Comment 1760 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1765 [rcx:0, rdi:0, r10:0, stack:32]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48, duringCall: false, rethrow: false]
              |0                                                                                                                                                       |1  |2            
     locals:  |vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]}  |-  |rcx|QWORD[.] 
  at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                      
     locals:  |-                                                                                                                                                      
     stack:   |vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} 
  at java.util.HashSet.iterator(HashSet.java:173) [bci: 7, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1  |2           |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1766 block B62 null  <||@
  Comment 1766 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1766 668 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1776 670 r11|DWORD = MOVE input: int[-175387|0xfffffffffffd52e5]  <||@
  Comment 1782 672 JUMP ~[] destination: B62 -> B64  <||@
  Comment 1784 block B79 null  <||@
  Comment 1784 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1784 838 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328584330]  <||@
  Comment 1784 {Object[d.a@328584330]}  <||@
  Comment 1794 840 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1797 842 r10|DWORD = MOVE input: int[-181564|0xfffffffffffd3ac4]  <||@
  Comment 1803 844 JUMP ~[] destination: B79 -> B80  <||@
  Comment 1805 block B68 null  <||@
  Comment 1805 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1805 716 r10|DWORD = MOVE input: int[-166675|0xfffffffffffd74ed]  <||@
  Comment 1811 720 JUMP ~[] destination: B68 -> B70  <||@
  Comment 1811 block B70 null  <||@
  Comment 1811 730 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1811 726 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1816 732 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1823 734 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1830 736 DEOPT info [bci:15]  <||@
  Comment 1830 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1835 [rcx:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1  |2          |3             |4 
     locals:  |stack:32|QWORD[.]  |-  |r11|DWORD  |rcx|QWORD[.]  |- 
     stack:   |rax|DWORD          |   |           |              |    <||@
  Comment 1836 block B31 null  <||@
  Comment 1836 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1836 404 r11|DWORD = MOVE input: int[-155411|0xfffffffffffda0ed]  <||@
  Comment 1842 406 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1844 block B34 null  <||@
  Comment 1844 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1844 424 r10|DWORD = MOVE input: int[-145971|0xfffffffffffdc5cd]  <||@
  Comment 1850 426 JUMP ~[] destination: B34 -> B35  <||@
  Comment 1855 block B66 null  <||@
  Comment 1855 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1855 700 r10|DWORD = MOVE input: int[-170523|0xfffffffffffd65e5]  <||@
  Comment 1861 704 JUMP ~[] destination: B66 -> B70  <||@
  Comment 1863 block B19 null  <||@
  Comment 1863 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1863 256 MOV [r15|QWORD + 668] y: -153875 size: DWORD  <||@
  Comment 1874 258 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1881 260 DEOPT info [bci:7, 3]  <||@
  Comment 1881 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1886 [r8:0, stack:32]at java.util.HashSet.iterator(HashSet.java:173) [bci: 7, duringCall: false, rethrow: false]
              |0           
     locals:  |-           
     stack:   |r8|QWORD[.] 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1  |2           |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1887 block B69 null  <||@
  Comment 1887 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1887 724 r10|DWORD = MOVE input: int[-165395|0xfffffffffffd79ed]  <||@
  Comment 1893 728 JUMP ~[] destination: B69 -> B70  <||@
  Comment 1895 block B67 null  <||@
  Comment 1895 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1895 708 r10|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed]  <||@
  Comment 1901 712 JUMP ~[] destination: B67 -> B70  <||@
  Comment 1903 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1903 4  <||@
  Comment 1909 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1909 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10100[java.util.AbstractCollection.addAll(Collection)]"
  method "HotSpotCompilation-10100[java.util.AbstractCollection.addAll(Collection)]"
  date 1527005238016
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106e7fa60 448b560849c1e203493bc20f85ef6398ff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8bea458b550849bb00e01b17010000004181fa222f00f80f85180300004d8b57604d8d42204d3b47700f870f0500004d894760410f1882e00000004d8bc249b9d0fc05c0070000004d8b89a80000004d890a41c742089abf00f849b900000000ffffffff4d894a0c458b4d0c45894a1449c1ed0345896a18498bc848894c2418448b5108448954240c448b46084489442410c7442414000000004181fa9abf00f80f851c0100008b59188b1cdd100000003b590c0f8464020000b801000000817c240c9abf00f8488b4c24180f85130100008b7118448b14f50c000000443b51140f8542060000448b510c443b14f5100000000f8dde0500008b34f514000000448b1cf50c000000453bda0f8e20060000453bda0f86ef050000458bda41ffc34489590c4489511048c1e603468b5c9610458bc349c1e003817c2410008000f80f85490100004c8b4c2420418b5914813cdd08000000f52200f80f85d1040000438504dc418b79108b14dd0c0000003bd70f863905000049ba00e01b170100000048c1e30344895cbb10488d74bb1048c1ee0946882416ffc7ffca23fa41897910413b790c0f844e0100008505bff3a0fdc744241401000000448b54240ce9d7feffff4181fae39e00f80f85020100008b591485db0f8443010000b801000000e9dafeffff488bf148b8ffffffffffffffff0f1f8000000000e84c6698ff90817c2410008000f80f85e7000000488b7424208b5614813cd508000000f52200f80f859c0400008500448b5610448b1cd50c000000453bda0f863504000049b900e01b170100000048c1e20348c1e80342894492104a8d54921048c1ea094688240a41ffc241ffcb4523d344895610443b560c0f8481000000c744241401000000448b54240c488b4c2418e90bfeffff488b7424204c8bce498bd048b8ffffffffffffffff0f1f440000e89c6598ff9085c0448b542414be01000000410f44f289742414448b54240c488b4c2418e9c8fdffff488bf148b8ffffffffffffffff6690e8646598ff9085c00f85d0fdffffe92a0000004c8bc0eb96488b742420666690e8046398ff90c744241401000000448b54240c488b4c2418e97cfdffff8b442414488b6c24304883c43885053ff2a0fdc5f877c34181fac37100f80f85d1010000458b750c42813cf508000000a33700f80f85a6030000468b14f50c0000004585d20f85520100004d8b57604d8d42104d3b47700f87630200004d894760410f1882d00000004d8bc249b938f104c0070000004d8b89a80000004d890a41c74208279e00f84589720c4d8bd049c1ea03468914f50c000000458bd649c1e2034d8bca49c1e90947882419468b0cf518000000428b0cf52400000085c90f84d9010000418b5a1483fb010f8c210300008b1ccd0c00000048c1e10348bf000000000000000041b800000000e93700000066660f1f840000000000413bd80f8673020000428b5481108bc248c1e003418be8ffc585d20f851600000085052ff1a0fd488bf8448bc5413bd87fcee9a5020000458bc64c895424184c8bf0448bed498b4f60488d5928493b5f700f87fe00000049895f600f1881e80000004c8bd1498bca48bb18f704c007000000488b9ba800000049891a41c74208e39e00f845894a0c45896a1041895214458962184589421c45894220e9c0fbffff42813cd508000000279e00f80f858b010000468b04d50c000000468b0cc524000000428b0cc518000000418bd848c1e3034585c90f841a01000049c1e203458bf04d8bc24c8bd3894c2414418bc9448b4c2414e9d0feffff498bf548b8ffffffffffffffff90e8246398ff90488bc849bb00e01b1701000000488b742420e93dfbffff48be680b00c007000000ba04000000b901000000e8f36d1100904c8bd049bb00e01b1701000000488b742420e9ccfaffff44894424148954241044894c240c48be680b00c007000000ba06000000b901000000e8b46d1100904c8bd0448b4424148b542410448b4c240c49bb00e01b1701000000488b742420e9c3feffff458bc6ba000000004c8954241849be000000000000000041bd00000000e981feffff48be680b00c007000000ba00000000b901000000e8536d1100904c8bd049bb00e01b1701000000488b742420e978fdffffba00000000448bc948895c241849be000000000000000041bd00000000e92efeffff49bb800628bb070000004d8bc341bbc456fdff45899f9c0200004d8987a8020000e8117598ff9041bacdb8fdff4589979c0200004d89a7a8020000e8f77498ff9049bb000000000000000041bae536fdff4589979c0200004d899fa8020000e8d37498ff9041bbe59dfdff45899f9c0200004d89a7a8020000e8b97498ff9049b8000000000000000041bbe552fdffeb8249ba800628bb070000004d8bda41bac43afdffebab41baed74fdff448b5c24144589979c0200004d89a7a8020000e8737498ff9041bbeda0fdffeb9e41bacdc5fdffe955ffffff41bae565fdffebcc41c7879c020000eda6fdff4d89a7a8020000e8407498ff9041baed79fdffebac41baed6bfdffeba4e84ca4dcff90e8267398ff90f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38006865 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r10|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 56 [rsi:0, r13:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 60 12 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 70 14 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 70 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 77 16 BRANCH trueDestinationProbability: 0.6068215107763131 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5  <||@
  Comment 83 block B1 null  <||@
  Comment 83 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 20 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 87 22 r8|QWORD = LEA [r10|QWORD + 32] size: QWORD  <||@
  Comment 91 24 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 95 26 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 101 block B3 null  <||@
  Comment 101 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 48 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 105 50 AMD64PREFETCH ~[r10|QWORD + 224] instr: 0  <||@
  Comment 113 52 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 113 54 JUMP ~[] destination: B3 -> B4  <||@
  Comment 113 block B4 null  <||@
  Comment 113 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 113 58 r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 116 60 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}  <||@
  Comment 116 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}}  <||@
  Comment 126 62 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 133 64 MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 136 66 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}  <||@
  Comment 136 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}}  <||@
  Comment 144 68 r9|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 154 70 MOV (x: [r10|QWORD[*] + 12], y: r9|QWORD) size: QWORD  <||@
  Comment 158 72 r9|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 162 74 MOV (x: [r10|QWORD[*] + 20], y: r9|DWORD) size: DWORD  <||@
  Comment 166 76 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 170 78 MOV (x: [r10|QWORD[*] + 24], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 174 80 rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 177 82 JUMP ~[] destination: B4 -> B37  <||@
  Comment 177 block B37 null  <||@
  Comment 177 450 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 177 452 stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 182 454 r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:8]  <||@
  Comment 182 [rcx:0, rsi:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 8, duringCall: false, rethrow: false]
              |0             |1  |2           |3  |4 
     locals:  |rsi|QWORD[.]  |-  |int[0|0x0]  |-  |- 
     stack:   |Object[null]  |   |            |   |    <||@
  Comment 182 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 186 456 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 191 458 r8|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 195 460 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 200 462 stack:44|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 208 464 JUMP ~[] destination: B37 -> B38  <||@
  Comment 208 block B38 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 208 466 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 208 468 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}  <||@
  Comment 208 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}}  <||@
  Comment 215 470 BRANCH trueDestinationProbability: 0.7840774193548387 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 221 block B39 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 221 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 221 474 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 224 476 rbx|DWORD = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD state [bci:9]  <||@
  Comment 224 [rcx:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1  |2               |3             |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |-   <||@
  Comment 224 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 231 478 CMP (x: rbx|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 234 480 BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B39 -> B49 falseDestination: B39 -> B41  <||@
  Comment 240 block B41 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 240 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 488 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 245 490 JUMP ~[] destination: B41 -> B51  <||@
  Comment 245 block B51 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 245 544 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 245 546 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}  <||@
  Comment 245 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}}  <||@
  Comment 253 552 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 258 548 BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B71  <||@
  Comment 264 block B52 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 264 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 554 rsi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 267 556 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:15]  <||@
  Comment 267 [rcx:0, rsi:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1  |2               |3             |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |- 
     stack:   |rax|DWORD          |   |                |              |    <||@
  Comment 267 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 275 558 CMP (x: r10|DWORD, y: [rcx|QWORD[.] + 20]) size: DWORD  <||@
  Comment 279 560 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B69  <||@
  Comment 285 block B53 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 285 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 564 r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 289 566 CMP (x: r10|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 297 568 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B68  <||@
  Comment 303 block B54 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 303 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 572 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 310 574 r11|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:15]  <||@
  Comment 310 [rcx:0, rsi:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1  |2               |3             |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |- 
     stack:   |rax|DWORD          |   |                |              |    <||@
  Comment 310 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 318 576 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 321 578 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B67  <||@
  Comment 327 block B55 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 327 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 582 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 330 584 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B66  <||@
  Comment 336 block B56 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 336 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 336 588 r11|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 342 590 MOV (x: [rcx|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 346 592 MOV (x: [rcx|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 350 594 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 354 596 r11|DWORD[.] = MOV [rsi|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 359 598 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 366 600 CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}  <||@
  Comment 366 {meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}}  <||@
  Comment 374 602 BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82  <||@
  Comment 380 block B57 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 380 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 606 r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 385 608 rbx|DWORD[.] = MOV [r9|QWORD[.] + 20] size: DWORD  <||@
  Comment 389 610 CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:64, 19]  <||@
  Comment 389 [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:24, stack:32]at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rcx|QWORD[.]  |r10|DWORD  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]  |r10|DWORD  |             
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19, duringCall: true, rethrow: false]
              |0            |1  |2               |3             |4 
     locals:  |r9|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |-   <||@
  Comment 389 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 389 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 400 612 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63  <||@
  Comment 406 block B58 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 406 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 616 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:64, 19]  <||@
  Comment 406 [rcx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:24, stack:32]at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rcx|QWORD[.]  |r10|DWORD  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]  |r10|DWORD  |             
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19, duringCall: true, rethrow: false]
              |0            |1  |2               |3             |4 
     locals:  |r9|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |-   <||@
  Comment 406 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 410 618 rdi|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 414 620 rdx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 421 622 CMP (x: rdx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 423 624 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B62  <||@
  Comment 429 block B59 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 429 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 628 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 439 630 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 443 632 MOV (x: [rbx|QWORD[.] + rdi|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 448 634 rsi|QWORD[.] = LEA [rbx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 453 636 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 457 638 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 461 640 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 463 642 rdx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 465 644 rdi|DWORD = AND (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 467 646 MOV (x: [r9|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 471 648 CMP (x: rdi|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD  <||@
  Comment 475 650 BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B59 -> B76 falseDestination: B59 -> B61  <||@
  Comment 481 block B61 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 481 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 481 658 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 2, 29]  <||@
  Comment 481 [rcx:0, r8:0, r9:0, stack:24, stack:32]at java.util.ArrayDeque.addLast(ArrayDeque.java:251) [bci: 41, duringCall: false, rethrow: false]
              |0            |1           
     locals:  |r9|QWORD[.]  |r8|QWORD[.] 
     stack:   |rdi|DWORD    |            
  at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29, duringCall: true, rethrow: false]
              |0            |1  |2               |3             |4 
     locals:  |r9|QWORD[.]  |-  |stack:44|DWORD  |rcx|QWORD[.]  |-   <||@
  Comment 481 {infopoint: SAFEPOINT}  <||@
  Comment 481 11  <||@
  Comment 487 660 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 495 662 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 500 664 JUMP ~[] destination: B61 -> B38  <||@
  Comment 505 block B42 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 505 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 505 494 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 505 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 512 496 BRANCH trueDestinationProbability: 0.9078522768017206 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B46  <||@
  Comment 518 block B43 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 518 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 518 500 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD  <||@
  Comment 521 502 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 523 504 BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B43 -> B49 falseDestination: B43 -> B45  <||@
  Comment 529 block B45 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 529 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 512 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 534 514 JUMP ~[] destination: B45 -> B51  <||@
  Comment 539 block B71 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 539 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 539 742 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 542 744 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:19]  <||@
  Comment 542 6  <||@
  Comment 559 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 564 [stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |-   <||@
  Comment 565 746 CMP stack:48|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}  <||@
  Comment 565 {meta{HotSpotType<Ljava/util/ArrayDeque;, resolved>;compressed}}  <||@
  Comment 573 748 BRANCH trueDestinationProbability: 0.8881743333469871 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B81  <||@
  Comment 579 block B72 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 579 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 752 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 584 754 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 587 756 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:24]  <||@
  Comment 587 [rax:0, rdx:0, rsi:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24, duringCall: false, rethrow: false]
              |0             |1  |2               |3                  |4 
     locals:  |rsi|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |- 
     stack:   |rax|QWORD[.]  |   |                |                   |    <||@
  Comment 587 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 587 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 598 758 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B79  <||@
  Comment 604 block B73 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 604 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 604 762 NULLCHECK [rax|QWORD[.]] state [bci:24]  <||@
  Comment 604 [rax:0, rdx:0, rsi:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24, duringCall: false, rethrow: false]
              |0             |1  |2               |3                  |4 
     locals:  |rsi|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |- 
     stack:   |rax|QWORD[.]  |   |                |                   |    <||@
  Comment 604 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 606 764 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 610 766 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 618 768 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 621 770 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B78  <||@
  Comment 627 block B74 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 627 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 627 774 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 637 776 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 641 778 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 645 780 MOV (x: [rdx|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 650 782 rdx|QWORD[.] = LEA [rdx|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 655 784 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 659 786 MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 663 788 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 666 790 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 669 792 r10|DWORD = AND (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 672 794 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 676 796 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 680 798 BRANCH trueDestinationProbability: 0.005257702249921503 condition: = trueDestination: B74 -> B76 falseDestination: B74 -> B77  <||@
  Comment 686 block B77 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 686 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 686 820 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 694 822 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 699 824 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 704 826 JUMP ~[] destination: B77 -> B38  <||@
  Comment 709 block B82 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 709 862 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 709 858 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 714 864 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 717 868 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 720 870 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.add(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:29]  <||@
  Comment 720 7  <||@
  Comment 735 {HotSpotMethod<AbstractCollection.add(Object)>}  <||@
  Comment 740 [stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29, duringCall: true, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |-   <||@
  Comment 741 872 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 743 874 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 748 876 rsi|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r10|DWORD) condition: =  <||@
  Comment 757 878 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 761 880 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 766 882 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 771 884 JUMP ~[] destination: B82 -> B38  <||@
  Comment 776 block B46 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 776 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 776 518 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 779 520 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:10]  <||@
  Comment 779 6  <||@
  Comment 791 {HotSpotMethod<Iterator.hasNext()>}  <||@
  Comment 796 [stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 10, duringCall: true, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |-   <||@
  Comment 797 522 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 799 524 BRANCH trueDestinationProbability: 0.36998709677419356 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B51  <||@
  Comment 810 block B81 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 810 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 810 856 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 813 860 JUMP ~[] destination: B81 -> B82  <||@
  Comment 815 block B76 loop 1 depth 1 header:10|LoopBegin  <||@
  Comment 815 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 806 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 820 808 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:49, 2, 29]  <||@
  Comment 820 9  <||@
  Comment 823 {HotSpotMethod<ArrayDeque.doubleCapacity()>}  <||@
  Comment 828 [stack:24, stack:32]at java.util.ArrayDeque.addLast(ArrayDeque.java:252) [bci: 49, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayDeque.add(ArrayDeque.java:423) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:344) [bci: 29, duringCall: true, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |-   <||@
  Comment 829 810 stack:44|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 837 812 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 842 814 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 847 816 JUMP ~[] destination: B76 -> B38  <||@
  Comment 852 block B49 null  <||@
  Comment 852 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 852 536 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 856 538 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 865 12  <||@
  Comment 875 block B5 null  <||@
  Comment 875 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 875 86 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}  <||@
  Comment 875 {meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}}  <||@
  Comment 882 88 BRANCH trueDestinationProbability: 0.9423452190881676 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36  <||@
  Comment 888 block B6 null  <||@
  Comment 888 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 888 92 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 892 94 CMP [r14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} state [bci:0]  <||@
  Comment 892 [rsi:0, r13:0, r14:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 892 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 892 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 904 96 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B34  <||@
  Comment 910 block B7 null  <||@
  Comment 910 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 910 100 r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 918 102 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 921 104 BRANCH trueDestinationProbability: 0.7263120186279778 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B14  <||@
  Comment 927 block B8 null  <||@
  Comment 927 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 927 108 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 931 110 r8|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 935 112 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 939 114 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 945 block B10 null  <||@
  Comment 945 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 945 136 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 949 138 AMD64PREFETCH ~[r10|QWORD + 208] instr: 0  <||@
  Comment 957 140 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 957 142 JUMP ~[] destination: B10 -> B11  <||@
  Comment 957 block B11 null  <||@
  Comment 957 144 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 957 146 r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 960 148 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>}  <||@
  Comment 960 {meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>}}  <||@
  Comment 970 150 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 977 152 MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 980 154 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}  <||@
  Comment 980 {meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}}  <||@
  Comment 988 156 MOV (x: [r10|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 992 158 r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 999 160 MOV (x: [r14|DWORD[.] * 8 + 12], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1007 162 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 1014 164 r9|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1021 166 MOVB (x: [r9|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1025 168 r9|DWORD = MOV [r14|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 1033 170 rcx|DWORD[.] = MOV [r14|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 1041 172 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1043 174 BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B18  <||@
  Comment 1049 block B18 null  <||@
  Comment 1049 246 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 1049 248 rbx|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1053 250 CMP rbx|DWORD y: 1 size: DWORD  <||@
  Comment 1056 252 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 1062 block B20 null  <||@
  Comment 1062 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1062 264 rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:7, 3]  <||@
  Comment 1062 [rcx:0, rsi:0, r8:0, r10:0, r14:0, stack:32]at java.util.HashSet.iterator(HashSet.java:173) [bci: 7, duringCall: false, rethrow: false]
              |0           
     locals:  |-           
     stack:   |r8|QWORD[.] 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0             |1  |2           |3  |4 
     locals:  |rsi|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1062 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1069 266 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 1073 268 rdi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1083 270 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1089 272 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1094 block B22 loop 0 depth 1 header:308|LoopBegin  <||@
  Comment 1094 280 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1104 282 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1107 284 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B30  <||@
  Comment 1113 block B23 loop 0 depth 1 header:308|LoopBegin  <||@
  Comment 1113 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 288 rdx|DWORD[.] = MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1118 290 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 1124 292 rbp|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 1129 294 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1131 296 BRANCH trueDestinationProbability: 0.8396269990561175 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 1137 block B24 loop 0 depth 1 header:308|LoopBegin  <||@
  Comment 1137 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1137 300 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:48, 7, 8, 7, 3]  <||@
  Comment 1137 [rax:0, rcx:0, rsi:0, rdi:0, r10:0, r14:0, stack:32]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48, duringCall: false, rethrow: false]
              |0                                                                                                                                                       |1  |2            
     locals:  |vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]}  |-  |rcx|QWORD[.] 
  at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                      
     locals:  |-                                                                                                                                                      
     stack:   |vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} 
  at java.util.HashSet.iterator(HashSet.java:173) [bci: 7, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0             |1  |2           |3  |4 
     locals:  |rsi|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1137 {infopoint: SAFEPOINT}  <||@
  Comment 1137 11  <||@
  Comment 1143 302 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1146 304 r8|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1149 306 JUMP ~[] destination: B24 -> B21  <||@
  Comment 1149 block B21 loop 0 depth 1 header:308|LoopBegin  <||@
  Comment 1149 274 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1149 276 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1152 278 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B31  <||@
  Comment 1159 block B25 null  <||@
  Comment 1159 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1159 310 r8|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1162 312 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1167 314 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1170 316 r13|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1173 318 JUMP ~[] destination: B25 -> B26  <||@
  Comment 1173 block B26 null  <||@
  Comment 1173 320 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 1173 322 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1177 324 rbx|QWORD = LEA [rcx|QWORD + 40] size: QWORD  <||@
  Comment 1181 326 CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1185 328 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 1191 block B28 null  <||@
  Comment 1191 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1191 362 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 1195 364 AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0  <||@
  Comment 1202 366 r10|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1205 368 JUMP ~[] destination: B28 -> B29  <||@
  Comment 1205 block B29 null  <||@
  Comment 1205 370 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1205 372 rcx|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 1208 374 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}  <||@
  Comment 1208 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>}}  <||@
  Comment 1218 376 rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD  <||@
  Comment 1225 378 MOV (x: [r10|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 1228 380 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 1228 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 1236 382 MOV (x: [r10|QWORD[*] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 1240 384 MOV (x: [r10|QWORD[*] + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1244 386 MOV (x: [r10|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1248 388 MOV (x: [r10|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1252 390 MOV (x: [r10|QWORD[*] + 28], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1256 392 MOV (x: [r10|QWORD[*] + 32], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1260 394 JUMP ~[] destination: B29 -> B37  <||@
  Comment 1265 block B14 null  <||@
  Comment 1265 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1265 196 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}  <||@
  Comment 1265 {meta{HotSpotType<Ljava/util/HashMap$KeySet;, resolved>;compressed}}  <||@
  Comment 1277 198 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B33  <||@
  Comment 1283 block B15 null  <||@
  Comment 1283 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1283 202 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1291 204 r9|DWORD[.] = MOV [r8|DWORD[.] * 8 + 36] size: DWORD state [bci:0]  <||@
  Comment 1291 [rsi:0, r8:0, r10:0, r13:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 1291 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1299 206 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 1307 208 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 1314 210 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1317 212 BRANCH trueDestinationProbability: 0.011206967720630727 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 1323 block B17 null  <||@
  Comment 1323 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1323 230 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5611de8b encoding: base: 0 shift: 3  <||@
  Comment 1327 232 r14|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1330 234 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1333 236 r10|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1336 238 stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1340 240 rcx|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 1343 242 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1348 244 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1353 block B36 null  <||@
  Comment 1353 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1353 438 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1356 440 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Collection.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:3]  <||@
  Comment 1356 6  <||@
  Comment 1367 {HotSpotMethod<Collection.iterator()>}  <||@
  Comment 1372 [stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1  |2           |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1373 442 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1376 444 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1386 446 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1391 448 JUMP ~[] destination: B36 -> B37  <||@
  Comment 1396 block B2 null  <||@
  Comment 1396 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1396 30 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1396 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1406 32 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1411 34 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1416 36 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1416 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1421 [r13:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 1422 38 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1425 40 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1435 42 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1440 44 JUMP ~[] destination: B2 -> B4  <||@
  Comment 1445 block B27 null  <||@
  Comment 1445 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1445 332 stack:44|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1450 334 stack:48|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD  <||@
  Comment 1454 336 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1459 338 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1459 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1469 340 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 1474 342 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1479 344 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:78, 7, 8, 7, 3]  <||@
  Comment 1479 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1484 [r14:0, stack:16, stack:20, stack:24, stack:32]at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                                       
     locals:  |-                                                                                                                                                                       
     stack:   |vobject:HashMap$KeyIterator:0{expectedModCount=stack:52|DWORD,index=r13|DWORD,next=r14|QWORD[.],current=Object[null],this$0=stack:40|QWORD[.],this$0=stack:40|QWORD[.]} 
  at java.util.HashSet.iterator(HashSet.java:173) [bci: 7, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1  |2           |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1485 346 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1488 348 r8|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1493 350 rdx|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 1497 352 r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1502 354 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1512 356 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1517 358 JUMP ~[] destination: B27 -> B29  <||@
  Comment 1522 block B12 null  <||@
  Comment 1522 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 178 r8|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1525 180 rdx|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 1530 182 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1535 184 r14|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1545 186 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1551 188 JUMP ~[] destination: B12 -> B26  <||@
  Comment 1556 block B9 null  <||@
  Comment 1556 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1556 118 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1556 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1566 120 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1571 122 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1576 124 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1576 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1581 [r13:0, r14:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 1582 126 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1585 128 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1595 130 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1600 132 JUMP ~[] destination: B9 -> B11  <||@
  Comment 1605 block B16 null  <||@
  Comment 1605 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1605 216 rdx|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 1610 218 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1613 220 stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1618 222 r14|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1628 224 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1634 226 JUMP ~[] destination: B16 -> B26  <||@
  Comment 1639 block B63 null  <||@
  Comment 1639 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1639 676 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328584330]  <||@
  Comment 1639 {Object[d.a@328584330]}  <||@
  Comment 1649 678 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1652 680 r11|DWORD = MOVE input: int[-174396|0xfffffffffffd56c4]  <||@
  Comment 1658 682 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1658 block B64 null  <||@
  Comment 1658 684 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1658 686 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1665 688 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1672 690 DEOPT info [bci:64, 19]  <||@
  Comment 1672 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1677 [rsi:0, stack:24, stack:32]at java.util.ArrayList$Itr.next(ArrayList.java:867) [bci: 64, duringCall: false, rethrow: false]
              |0                  |1          |2            
     locals:  |stack:40|QWORD[.]  |r10|DWORD  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]       |r10|DWORD  |             
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |-   <||@
  Comment 1678 block B33 null  <||@
  Comment 1678 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1678 418 r10|DWORD = MOVE input: int[-149299|0xfffffffffffdb8cd]  <||@
  Comment 1684 420 JUMP ~[] destination: B33 -> B35  <||@
  Comment 1684 block B35 null  <||@
  Comment 1684 428 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1684 430 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1691 432 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1698 434 DEOPT info [bci:0]  <||@
  Comment 1698 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1703 [rsi:0, r13:0]at java.util.AbstractCollection.addAll(AbstractCollection.java:342) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 1704 block B78 null  <||@
  Comment 1704 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1704 830 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1714 832 r10|DWORD = MOVE input: int[-182555|0xfffffffffffd36e5]  <||@
  Comment 1720 834 JUMP ~[] destination: B78 -> B80  <||@
  Comment 1720 block B80 null  <||@
  Comment 1720 846 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1720 848 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1727 850 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1734 852 DEOPT info [bci:24]  <||@
  Comment 1734 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1739 [rax:0, stack:24, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1  |2               |3                  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:44|DWORD  |stack:40|QWORD[.]  |- 
     stack:   |rax|QWORD[.]       |   |                |                   |    <||@
  Comment 1740 block B30 null  <||@
  Comment 1740 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1740 398 r11|DWORD = MOVE input: int[-156187|0xfffffffffffd9de5]  <||@
  Comment 1746 400 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1746 block B32 null  <||@
  Comment 1746 408 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1746 410 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1753 412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1760 414 DEOPT info [bci:48, 7, 8, 7, 3]  <||@
  Comment 1760 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1765 [rcx:0, rdi:0, r10:0, stack:32]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48, duringCall: false, rethrow: false]
              |0                                                                                                                                                       |1  |2            
     locals:  |vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]}  |-  |rcx|QWORD[.] 
  at java.util.HashMap$KeyIterator.<init>(HashMap.java:1464) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap$KeySet.iterator(HashMap.java:917) [bci: 8, duringCall: true, rethrow: false]
              |0                                                                                                                                                      
     locals:  |-                                                                                                                                                      
     stack:   |vobject:HashMap$KeyIterator:0{expectedModCount=r9|DWORD,index=r8|DWORD,next=rdi|QWORD[.],current=Object[null],this$0=r10|QWORD[.],this$0=r10|QWORD[.]} 
  at java.util.HashSet.iterator(HashSet.java:173) [bci: 7, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1  |2           |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1766 block B62 null  <||@
  Comment 1766 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1766 668 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1776 670 r11|DWORD = MOVE input: int[-175387|0xfffffffffffd52e5]  <||@
  Comment 1782 672 JUMP ~[] destination: B62 -> B64  <||@
  Comment 1784 block B79 null  <||@
  Comment 1784 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1784 838 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328584330]  <||@
  Comment 1784 {Object[d.a@328584330]}  <||@
  Comment 1794 840 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1797 842 r10|DWORD = MOVE input: int[-181564|0xfffffffffffd3ac4]  <||@
  Comment 1803 844 JUMP ~[] destination: B79 -> B80  <||@
  Comment 1805 block B68 null  <||@
  Comment 1805 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1805 716 r10|DWORD = MOVE input: int[-166675|0xfffffffffffd74ed]  <||@
  Comment 1811 720 JUMP ~[] destination: B68 -> B70  <||@
  Comment 1811 block B70 null  <||@
  Comment 1811 730 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1811 726 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1816 732 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1823 734 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1830 736 DEOPT info [bci:15]  <||@
  Comment 1830 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1835 [rcx:0, stack:32]at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1  |2          |3             |4 
     locals:  |stack:32|QWORD[.]  |-  |r11|DWORD  |rcx|QWORD[.]  |- 
     stack:   |rax|DWORD          |   |           |              |    <||@
  Comment 1836 block B31 null  <||@
  Comment 1836 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1836 404 r11|DWORD = MOVE input: int[-155411|0xfffffffffffda0ed]  <||@
  Comment 1842 406 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1844 block B34 null  <||@
  Comment 1844 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1844 424 r10|DWORD = MOVE input: int[-145971|0xfffffffffffdc5cd]  <||@
  Comment 1850 426 JUMP ~[] destination: B34 -> B35  <||@
  Comment 1855 block B66 null  <||@
  Comment 1855 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1855 700 r10|DWORD = MOVE input: int[-170523|0xfffffffffffd65e5]  <||@
  Comment 1861 704 JUMP ~[] destination: B66 -> B70  <||@
  Comment 1863 block B19 null  <||@
  Comment 1863 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1863 256 MOV [r15|QWORD + 668] y: -153875 size: DWORD  <||@
  Comment 1874 258 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1881 260 DEOPT info [bci:7, 3]  <||@
  Comment 1881 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1886 [r8:0, stack:32]at java.util.HashSet.iterator(HashSet.java:173) [bci: 7, duringCall: false, rethrow: false]
              |0           
     locals:  |-           
     stack:   |r8|QWORD[.] 
  at java.util.AbstractCollection.addAll(AbstractCollection.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1  |2           |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |int[0|0x0]  |-  |-   <||@
  Comment 1887 block B69 null  <||@
  Comment 1887 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1887 724 r10|DWORD = MOVE input: int[-165395|0xfffffffffffd79ed]  <||@
  Comment 1893 728 JUMP ~[] destination: B69 -> B70  <||@
  Comment 1895 block B67 null  <||@
  Comment 1895 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1895 708 r10|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed]  <||@
  Comment 1901 712 JUMP ~[] destination: B67 -> B70  <||@
  Comment 1903 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1903 4  <||@
  Comment 1909 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1909 5  <||@
  HexCodeFile>>> <|@
end_nmethod
