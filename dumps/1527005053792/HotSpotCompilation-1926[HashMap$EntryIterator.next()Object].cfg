begin_compilation
  name " HotSpotCompilation-1926[java.util.HashMap$EntryIterator.next()]"
  method "HotSpotCompilation-1926[java.util.HashMap$EntryIterator.next()]"
  date 1527005130451
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a199 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a199  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/HashMap$EntryIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 ?46 ?5 v210 v211 v213 v214 ?31 v217 ?20 j181 j191 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.this$0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 6]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: i200 
=== Usages ===
v216 v212 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: i200  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap$EntryIterator.next()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1474
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v173 i200 a203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 9]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v212 
=== Succesors ===
next: i201 
=== Usages ===
v12 
=== Predecessor ===
a199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v212 #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.expectedModCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 13]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v213 
=== Succesors ===
next: v153 
=== Usages ===
v12 
=== Predecessor ===
i200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v213 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i201 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i200 y: i201  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v152 
=== Usages ===
=== Predecessor ===
i201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v150 #falseSuccessor: v152  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a202 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a202  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a202 v103 v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: a203 
=== Usages ===
a77 v215 v95 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: a203  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a202 
=== Succesors ===
=== Usages ===
a203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 46]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: true
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v215 
=== Succesors ===
next: v95 
=== Usages ===
v103 v131 
=== Predecessor ===
a202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v215 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.current
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
value: a202 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j181 
=== Usages ===
=== Predecessor ===
a203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v214 value: a202 stateAfter: - lastLocationAccess: - #next: j181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v187 
=== Usages ===
j183 
=== Predecessor ===
v95 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j183 j192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j181 
y: i182 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j181 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid j186 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 v221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j183 
index: j186 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j183 index: j186  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 v195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v220 
value: i188 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
j181 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v220 value: i188 stateAfter: - lastLocationAccess: - #next: v103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: a203 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: a203 stateAfter: - lastLocationAccess: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
value: a203 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a203  <|@  <|@
f <@~|@floating>@ <|@
tid a77 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a202 
=== Succesors ===
=== Usages ===
v63 v62 v61 ?46 ?31 ?20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a202  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
trueSuccessorProbability: 0.862846997817839
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605947054380976758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 56]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a204 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a204  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
a204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
=== Succesors ===
next: i205 
=== Usages ===
a107 v218 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v216 #next: i205  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<HashMap$EntryIterator.next()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1474
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<HashMap$EntryIterator.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1476
stackSize: 0
=== Inputs ===
outerFrameState: ?5 
values: - 
=== Succesors ===
=== Usages ===
?46 ?20 ?31 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?5 values: -  <|@  <|@
f <@~|@floating>@ <|@
tid a208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?20 ?46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1445
stackSize: 1
=== Inputs ===
outerFrameState: ?56 
values: a1 - a77 a208 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: a1 - a77 a208  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a204 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 73]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v218 
=== Succesors ===
next: i206 
=== Usages ===
v34 v119 
=== Predecessor ===
a204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v218 #next: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i206 v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 69]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
=== Succesors ===
next: v29 
=== Usages ===
i198 
=== Predecessor ===
i205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v217 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid a107 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a204 
=== Succesors ===
=== Usages ===
?46 ?31 v219 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a204  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 95
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 1
=== Inputs ===
outerFrameState: ?56 
values: a1 a107 a77 a208 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: a1 a107 a77 a208  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 85]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
i206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613505637425017771
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i206 i41 
=== Succesors ===
=== Usages ===
v34 i41 v119 v219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v30 values: i206 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.2544276911054864
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v29 
=== Succesors ===
next: v38 
=== Usages ===
v36 v48 v49 i198 v165 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v29 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i198 
y: i205 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i198 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
trueSuccessorProbability: 0.973666701969634
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613339126224454475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 77]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i198 
y: i205 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i198 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v162 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613339126224454475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
a207 
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 86]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: i32
=== Inputs ===
x: i198 
y: i40 
=== Succesors ===
=== Usages ===
v117 i198 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i198 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 87]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a207 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v217 value: i41 stateAfter: - lastLocationAccess: - #next: a207  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a107 
index: i198 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: i198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v162 
address: v219 
=== Succesors ===
next: v130 
=== Usages ===
v130 v133 
=== Predecessor ===
v117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v162 address: v219 #next: v130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: a207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j191 
=== Usages ===
=== Predecessor ===
a207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: a207 stateAfter: - lastLocationAccess: - #next: j191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v195 
=== Usages ===
j192 
=== Predecessor ===
v130 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid j192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j191 
y: i182 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j191 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j192 
index: j186 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j192 index: j186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
value: i188 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
j191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v221 value: i188 stateAfter: - lastLocationAccess: - #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
value: a207 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a207  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7114614377628611
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v51 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611439339004797466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?46 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4605281009578723576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a77 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a77 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v163  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: a1 a107 a77 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: a1 a107 a77  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 120
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4589992779081190388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a77 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a77 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4594109477966698024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a77 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a77 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23315
stableDimension: 0
stamp: i32 [-23315] ⇊00000000ffffa4ed ⇈00000000ffffa4ed
stampKind: i32
value: int[-23315|0xffffffffffffa4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i177 
speculation: a170 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i177 speculation: a170  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a199 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a199  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/HashMap$EntryIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 ?46 ?5 v210 v211 v213 v214 ?31 v217 ?20 j181 j191 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.this$0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 6]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: i200 
=== Usages ===
v216 v212 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: i200  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap$EntryIterator.next()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1474
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v173 i200 a203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result [v1|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 9]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v212 
=== Succesors ===
next: i201 
=== Usages ===
v12 
=== Predecessor ===
a199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v212 #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.expectedModCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 13]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v213 
=== Succesors ===
next: v153 
=== Usages ===
v12 
=== Predecessor ===
i200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v213 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i201 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i200 y: i201  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v152 
=== Usages ===
=== Predecessor ===
i201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v150 #falseSuccessor: v152  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@891995c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a202 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a202  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a202 v103 v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a202 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: a203 
=== Usages ===
a77 v215 v95 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: a203  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result [v3|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a202 
=== Succesors ===
=== Usages ===
a203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a203 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 46]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: true
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v215 
=== Succesors ===
next: v95 
=== Usages ===
v103 v131 
=== Predecessor ===
a202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v215 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.current
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
value: a202 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j181 
=== Usages ===
=== Predecessor ===
a203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v214 value: a202 stateAfter: - lastLocationAccess: - #next: j181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j181 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v187 
=== Usages ===
j183 
=== Predecessor ===
v95 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j183 j192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
result v5|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j181 
y: i182 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j181 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid j186 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 v221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
result [v5|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j183 
index: j186 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j183 index: j186  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 v195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v220 
value: i188 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
j181 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v220 value: i188 stateAfter: - lastLocationAccess: - #next: v103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: a203 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: a203 stateAfter: - lastLocationAccess: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
value: a203 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a203  <|@  <|@
f <@~|@floating>@ <|@
tid a77 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a202 
=== Succesors ===
=== Usages ===
v63 v62 v61 ?46 ?31 ?20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a202  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
trueSuccessorProbability: 0.862846997817839
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v4|DWORD[.] = MOV [v3|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605947054380976758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 56]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a204 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a204  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
result [v1|DWORD[.] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
a204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a204 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
=== Succesors ===
next: i205 
=== Usages ===
a107 v218 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v216 #next: i205  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<HashMap$EntryIterator.next()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1474
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<HashMap$EntryIterator.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1476
stackSize: 0
=== Inputs ===
outerFrameState: ?5 
values: - 
=== Succesors ===
=== Usages ===
?46 ?20 ?31 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?5 values: -  <|@  <|@
f <@~|@floating>@ <|@
tid a208 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?20 ?46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1445
stackSize: 1
=== Inputs ===
outerFrameState: ?56 
values: a1 - a77 a208 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: a1 - a77 a208  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a204 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i205 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 73]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v218 
=== Succesors ===
next: i206 
=== Usages ===
v34 v119 
=== Predecessor ===
a204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v218 #next: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i206 v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i206 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 69]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
=== Succesors ===
next: v29 
=== Usages ===
i198 
=== Predecessor ===
i205 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v217 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid a107 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a204 
=== Succesors ===
=== Usages ===
?46 ?31 v219 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a204  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 95
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 1
=== Inputs ===
outerFrameState: ?56 
values: a1 a107 a77 a208 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: a1 a107 a77 a208  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 85]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
i206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v1|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: v0|QWORD[.] - v7|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 1] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613505637425017771
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i198 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i206 i41 
=== Succesors ===
=== Usages ===
v34 i41 v119 v219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v30 values: i206 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.2544276911054864
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v29 
=== Succesors ===
next: v38 
=== Usages ===
v36 v48 v49 i198 v165 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v29 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i198 
y: i205 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i198 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
trueSuccessorProbability: 0.973666701969634
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613339126224454475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 77]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i198 
y: i205 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i198 y: i205  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v162 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613339126224454475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
a207 
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 86]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: i32
=== Inputs ===
x: i198 
y: i40 
=== Succesors ===
=== Usages ===
v117 i198 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i198 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 87]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v217 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a207 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v217 value: i41 stateAfter: - lastLocationAccess: - #next: a207  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
result [v11|QWORD[.] + v12|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a107 
index: i198 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: i198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a207 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v162 
address: v219 
=== Succesors ===
next: v130 
=== Usages ===
v130 v133 
=== Predecessor ===
v117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v162 address: v219 #next: v130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: a207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j191 
=== Usages ===
=== Predecessor ===
a207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: a207 stateAfter: - lastLocationAccess: - #next: j191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j191 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v195 
=== Usages ===
j192 
=== Predecessor ===
v130 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid j192 <|@
result v15|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j191 
y: i182 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j191 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
result [v15|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j192 
index: j186 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j192 index: j186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
value: i188 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
j191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v221 value: i188 stateAfter: - lastLocationAccess: - #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
value: a207 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a207  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7114614377628611
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v51 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v11|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v15|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611439339004797466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?46 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: v0|QWORD[.] v11|QWORD[.] v7|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 1] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4605281009578723576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a77 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a77 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v163  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: a1 a107 a77 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: a1 a107 a77  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 120
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -30747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: v0|QWORD[.] v11|QWORD[.] v7|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:68, 1, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4589992779081190388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a77 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a77 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4594109477966698024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a77 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a77 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
result int[-23315|0xffffffffffffa4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23315
stableDimension: 0
stamp: i32 [-23315] ⇊00000000ffffa4ed ⇈00000000ffffa4ed
stampKind: i32
value: int[-23315|0xffffffffffffa4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i177 
speculation: a170 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i177 speculation: a170  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -23315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@891995c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v4|DWORD[.] = MOV [v3|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605947054380976758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v1|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: v0|QWORD[.] - v7|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 1] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613339126224454475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613339126224454475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v11|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v15|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611439339004797466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: v0|QWORD[.] v11|QWORD[.] v7|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 1] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613505637425017771
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4605281009578723576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4594109477966698024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4589992779081190388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -30747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: v0|QWORD[.] v11|QWORD[.] v7|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:68, 1, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -23315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // next:()java.util.Map$Entry
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@891995c slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   26  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   28  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605947054380976758
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: rsi|QWORD[.] - r10|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 1] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613339126224454475
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   58  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613339126224454475
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   76  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611439339004797466
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: rsi|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613505637425017771
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4605281009578723576
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4594109477966698024
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4589992779081190388
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction MOV [r15|QWORD + 668] y: -30747 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: rsi|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:68, 1, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r15|QWORD + 668] y: -23315 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // next:()java.util.Map$Entry
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@891995c slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   26  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   28  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605947054380976758
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: rsi|QWORD[.] - r10|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 1] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613339126224454475
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   58  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613339126224454475
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   76  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611439339004797466
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: rsi|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613505637425017771
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4605281009578723576
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4594109477966698024
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4589992779081190388
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction MOV [r15|QWORD + 668] y: -30747 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: rsi|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1]
locals: - 
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:68, 1, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r15|QWORD + 668] y: -23315 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // next:()java.util.Map$Entry
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461c448b14c518000000443b560c0f85f6000000448b5614468b1cd518000000448956184c8bc649c1e80949b900e01b17010000004788240844895e1449c1e2034585db0f857c0000008b04c524000000448b1cc50c000000448b461048c1e003e940000000660f1f840000000000453bd80f867a000000418bc8ffc1894e10468b44801044894614488bde48c1eb094688240b4585c00f8513000000850500000000448bc1453bd87fc4e92c000000498bc2488b6c24104883c418850500000000c5f877c3498bc2488b6c24104883c418850500000000c5f877c3498bc2488b6c24104883c418850500000000c5f877c341c7879c020000e587ffff4d89a7a8020000e8000000009041c7879c020000eda4ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@891995c slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 63 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11  <||@
  Comment 69 block B1 null  <||@
  Comment 69 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 18 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 73 20 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 73 [rax:0, rsi:0, r10:0]at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 22 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 85 24 r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 92 26 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 102 28 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 106 30 MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 110 32 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3  <||@
  Comment 114 34 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 117 36 BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10  <||@
  Comment 123 block B2 null  <||@
  Comment 123 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 40 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 130 42 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 1]  <||@
  Comment 130 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r10|QWORD[.] 
     stack:   |Object[null]  |   |             
  at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 130 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 138 44 r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 142 46 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3  <||@
  Comment 146 48 JUMP ~[] destination: B2 -> B3  <||@
  Comment 151 block B4 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 151 56 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 58 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 163 60 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 169 block B5 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 169 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 64 rcx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 174 66 MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 177 68 r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 182 70 MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 186 72 rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 193 74 MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 197 76 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 200 78 BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 206 block B6 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 206 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 82 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 1]  <||@
  Comment 206 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
     stack:   |Object[null]  |              |             
  at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 206 {infopoint: SAFEPOINT}  <||@
  Comment 206 11  <||@
  Comment 212 -1 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 215 84 JUMP ~[] destination: B6 -> B3  <||@
  Comment 215 block B3 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 215 50 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 215 52 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 218 54 BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9  <||@
  Comment 225 block B7 null  <||@
  Comment 225 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 88 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 228 90 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 237 12  <||@
  Comment 247 block B10 null  <||@
  Comment 247 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 247 94 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 250 96 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 259 12  <||@
  Comment 269 block B9 null  <||@
  Comment 269 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 100 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 272 102 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 281 12  <||@
  Comment 291 block B8 null  <||@
  Comment 291 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 106 MOV [r15|QWORD + 668] y: -30747 size: DWORD  <||@
  Comment 302 108 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 309 110 DEOPT info [bci:68, 1, 1]  <||@
  Comment 309 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 314 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 315 block B11 null  <||@
  Comment 315 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 114 MOV [r15|QWORD + 668] y: -23315 size: DWORD  <||@
  Comment 326 116 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 333 118 DEOPT info [bci:0]  <||@
  Comment 333 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 338 [rsi:0]at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 339 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 339 4  <||@
  Comment 345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 345 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1926[java.util.HashMap$EntryIterator.next()]"
  method "HotSpotCompilation-1926[java.util.HashMap$EntryIterator.next()]"
  date 1527005130527
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106e26220 448b560849c1e203493bc20f852ffc9dff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461c448b14c518000000443b560c0f85f6000000448b5614468b1cd518000000448956184c8bc649c1e80949b900e01b17010000004788240844895e1449c1e2034585db0f857c0000008b04c524000000448b1cc50c000000448b461048c1e003e940000000660f1f840000000000453bd80f867a000000418bc8ffc1894e10468b44801044894614488bde48c1eb094688240b4585c00f85130000008505128da6fd448bc1453bd87fc4e92c000000498bc2488b6c24104883c4188505f38ca6fdc5f877c3498bc2488b6c24104883c4188505dd8ca6fdc5f877c3498bc2488b6c24104883c4188505c78ca6fdc5f877c341c7879c020000e587ffff4d89a7a8020000e8a4129eff9041c7879c020000eda4ffff4d89a7a8020000e88c129eff90e8a842e2ff90e882119eff90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@891995c slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 63 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11  <||@
  Comment 69 block B1 null  <||@
  Comment 69 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 18 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 73 20 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 73 [rax:0, rsi:0, r10:0]at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 22 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 85 24 r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 92 26 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 102 28 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 106 30 MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 110 32 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3  <||@
  Comment 114 34 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 117 36 BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10  <||@
  Comment 123 block B2 null  <||@
  Comment 123 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 40 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 130 42 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 1]  <||@
  Comment 130 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r10|QWORD[.] 
     stack:   |Object[null]  |   |             
  at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 130 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 138 44 r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 142 46 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2f58047a encoding: base: 0 shift: 3  <||@
  Comment 146 48 JUMP ~[] destination: B2 -> B3  <||@
  Comment 151 block B4 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 151 56 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 58 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 163 60 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 169 block B5 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 169 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 64 rcx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 174 66 MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 177 68 r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 182 70 MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 186 72 rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 193 74 MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 197 76 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 200 78 BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 206 block B6 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 206 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 82 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 1]  <||@
  Comment 206 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
     stack:   |Object[null]  |              |             
  at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 206 {infopoint: SAFEPOINT}  <||@
  Comment 206 11  <||@
  Comment 212 -1 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 215 84 JUMP ~[] destination: B6 -> B3  <||@
  Comment 215 block B3 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 215 50 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 215 52 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 218 54 BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9  <||@
  Comment 225 block B7 null  <||@
  Comment 225 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 88 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 228 90 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 237 12  <||@
  Comment 247 block B10 null  <||@
  Comment 247 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 247 94 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 250 96 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 259 12  <||@
  Comment 269 block B9 null  <||@
  Comment 269 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 100 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 272 102 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 281 12  <||@
  Comment 291 block B8 null  <||@
  Comment 291 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 106 MOV [r15|QWORD + 668] y: -30747 size: DWORD  <||@
  Comment 302 108 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 309 110 DEOPT info [bci:68, 1, 1]  <||@
  Comment 309 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 314 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
  at java.util.HashMap$EntryIterator.next(HashMap.java:1476) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 315 block B11 null  <||@
  Comment 315 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 114 MOV [r15|QWORD + 668] y: -23315 size: DWORD  <||@
  Comment 326 116 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 333 118 DEOPT info [bci:0]  <||@
  Comment 333 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 338 [rsi:0]at java.util.HashMap$EntryIterator.next(HashMap.java:1474) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 339 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 339 4  <||@
  Comment 345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 345 5  <||@
  HexCodeFile>>> <|@
end_nmethod
