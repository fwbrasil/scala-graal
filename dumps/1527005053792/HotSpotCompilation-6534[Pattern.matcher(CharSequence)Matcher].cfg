begin_compilation
  name " HotSpotCompilation-6534[java.util.regex.Pattern.matcher(CharSequence)]"
  method "HotSpotCompilation-6534[java.util.regex.Pattern.matcher(CharSequence)]"
  date 1527005195665
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1025 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i1025  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1032 v1031 ?6 ?45 a297 ?114 ?113 v1033 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1025 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern.compiled
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
=== Succesors ===
next: v152 
=== Usages ===
i150 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1031 #next: v152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
i1025 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1025 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1025  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 v520 v245 v246 v239 a381 v233 a442 v977 v983 ?6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i150 
y: i7 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i150 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
v130 ?6 ?45 a299 v1058 ?114 ?113 v1034 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v247 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v249 #falseSuccessor: v247  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v248  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Pattern.matcher(CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 1]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 1087
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i7 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 153
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1026 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1026  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1026 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern.capturingGroupCount
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 50]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1032 
=== Succesors ===
next: v40 
=== Usages ===
v37 i144 i142 
=== Predecessor ===
v247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1032 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 53]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 i142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1026 
y: i36 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1026 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:208) [bci: 35]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?114 i144 ?113 a490 v787 v786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.26486855267639303
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
i1026 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v38 #falseSuccessor: v39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598443067578448185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid j158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 70]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 20
stableDimension: 0
stamp: i32 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i32
value: int[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4604796694969746276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 62]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1026 
y: i28 
=== Succesors ===
=== Usages ===
i146 j310 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1026 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
j311 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i144  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [10 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v42 
values: i1026 i36 
=== Succesors ===
=== Usages ===
?46 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: i1026 i36  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v42 
values: i144 i145 
=== Succesors ===
=== Usages ===
j675 j209 v233 v407 i357 v366 a381 v245 v786 ?69 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: i144 i145  <|@  <|@
f <@~|@floating>@ <|@
tid j311 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v42 
values: j310 j158 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: j310 j158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v41 v43 
=== Succesors ===
next: v1000 
=== Usages ===
i142 i146 j311 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v41 v43 #next: v1000  <|@  <|@
tid a112 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@559a51b4
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/regex/Matcher;
type: HotSpotType<Ljava/util/regex/Matcher;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?45 ?59 ?113 ?69 ?114 ?85 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<Pattern.matcher(CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 1093
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a112 
=== Succesors ===
=== Usages ===
?110 ?45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a112  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rethrowException: false
sourceFile: Matcher.java
sourceLine: 224
stackSize: 0
=== Inputs ===
outerFrameState: ?59 
values: a112 a1 a2 - 
=== Succesors ===
=== Usages ===
?46 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?59 values: a112 a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:151) [bci: 10]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
?113 ?113 ?114 ?114 v965 v971 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a112 
values: - - - - i17 - i17 - - - - i28 a1 - a2 - 
=== Succesors ===
=== Usages ===
?46 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a112 values: - - - - i17 - i17 - - - - i28 a1 - a2 -  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?45 
values: - - i142 
virtualObjectMappings: ?113 
=== Succesors ===
=== Usages ===
a381 a442 v252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?45 values: - - i142 virtualObjectMappings: ?113  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967294] ⇈00000000fffffffe
=== Inputs ===
value: i146 
=== Succesors ===
=== Usages ===
j211 j831 j821 j827 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i146  <|@  <|@
f <@~|@floating>@ <|@
tid j210 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j211 j222 j916 j958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j211 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 4294967293] ⇊0000000000000001
=== Inputs ===
x: j209 
y: j210 
=== Succesors ===
=== Usages ===
v213 v834 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j209 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i7 
=== Succesors ===
=== Usages ===
v1000 v572 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i146 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v996 
falseSuccessor: v999 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v996 #falseSuccessor: v999  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v996 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B109" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1008  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j211 
y: j311 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j211 y: j311  <|@  <|@
f <@*|@fixed>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v1007 
falseSuccessor: v1004 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v1007 #falseSuccessor: v1004  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i7 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i146 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v1005 
falseSuccessor: v997 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v1005 #falseSuccessor: v997  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v1005 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v995  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v997 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B12" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v994 v995 
=== Succesors ===
next: j360 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v994 v995 #next: j360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j404 
=== Usages ===
v1040 v1041 
=== Predecessor ===
v993 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j404  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
j404 v406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
=== Succesors ===
next: j405 
=== Usages ===
j364 v1042 v1043 a380 v1048 v1044 v1045 v1046 v1047 
=== Predecessor ===
j360 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 #next: j405  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
j405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
=== Succesors ===
next: v369 
=== Usages ===
v370 
=== Predecessor ===
j404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1041 #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i365 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i146 y: i365  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a381 a490 a442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 v465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j355 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 v462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i356 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i357 i420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i388 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i389 i449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i359 i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v366 
=== Succesors ===
trueSuccessor: v368 
falseSuccessor: v367 
=== Usages ===
=== Predecessor ===
j405 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v366 #trueSuccessor: v368 #falseSuccessor: v367  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i146 
y: i356 
=== Succesors ===
=== Usages ===
i389 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i146 y: i356  <|@  <|@
f <@~|@floating>@ <|@
tid i389 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i357 
y: i388 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i357 y: i388  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i389 
y: i358 
=== Succesors ===
=== Usages ===
j363 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i389 y: i358  <|@  <|@
f <@~|@floating>@ <|@
tid j363 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i359 
=== Succesors ===
=== Usages ===
j364 v1044 v1045 v1046 v1047 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i359  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i64
=== Inputs ===
x: j363 
y: j404 
=== Succesors ===
=== Usages ===
v370 v406 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j363 y: j404  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j405 
y: j364 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j405 y: j364  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v375 #falseSuccessor: v374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
value: j364 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1040 value: j364 stateAfter: - lastLocationAccess: - #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j363 
index: j404 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j363 index: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1044 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1044 #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j363 
index: j404 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j363 index: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1045 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1045 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j363 
index: j404 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j363 index: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1046 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1046 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j363 
index: j404 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j363 index: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1047 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1047 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j404 
index: - 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
value: i146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1042 value: i146 stateAfter: - lastLocationAccess: - #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j404 
index: - 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
value: j355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1043 value: j355 stateAfter: - lastLocationAccess: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j404 
index: - 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1048 
value: v546 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1048 value: v546 stateAfter: - lastLocationAccess: - #next: v379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a380 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j404 
=== Succesors ===
next: v382 
=== Usages ===
a385 
=== Predecessor ===
v379 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j404 #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
a380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v371 v373 
=== Succesors ===
next: a381 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v371 v373 #next: a381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a381 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?46 
arguments: v354 i146 i7 
=== Succesors ===
next: v384 
=== Usages ===
a385 
=== Predecessor ===
v372 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?46 arguments: v354 i146 i7 #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
a381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v383 
values: a380 a381 
=== Succesors ===
=== Usages ===
v1038 a332 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: a380 a381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v382 v384 
=== Succesors ===
next: v878 
=== Usages ===
a385 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v382 v384 #next: v878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v682 
=== Usages ===
j880 
=== Predecessor ===
v383 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i28 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i146 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j806 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j807 j851 j892 j934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 v984 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j830 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j831 j872 j913 j955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j813 j857 j898 j940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v981 v985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j827 j869 j910 j952 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j946 j904 j863 j819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v986 v982 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j820 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j821 j864 j905 j947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j290 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j893 v906 j899 v948 j808 j814 v822 j941 j852 j858 v865 j935 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v680 
falseSuccessor: v681 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v680 #falseSuccessor: v681  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a385 
index: - 
=== Succesors ===
=== Usages ===
j880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a385 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j880 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v878 
address: v1038 
=== Succesors ===
=== Usages ===
v1082 v1083 v1084 v1085 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v878 address: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid j675 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i146 
=== Succesors ===
=== Usages ===
j916 j905 j910 j913 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i146  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j675 
y: j820 
=== Succesors ===
=== Usages ===
v906 v908 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j675 y: j820  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j905 
y: j290 
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j905 y: j290  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v906 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v906 #trueSuccessor: v683 #falseSuccessor: v684  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v684 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B108" 
    successors "B23" "B108" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j899 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v687 
values: j290 j904 
=== Succesors ===
=== Usages ===
v1085 j904 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v687 values: j290 j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v686 
=== Succesors ===
next: v982 
=== Usages ===
j899 v690 v691 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v686 #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j880 
index: j899 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: j899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1085 
value: v990 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1085 value: v990 stateAfter: - lastLocationAccess: - #next: v693  <|@  <|@
f <@~|@floating>@ <|@
tid j904 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j899 
y: j410 
=== Succesors ===
=== Usages ===
j893 j899 v908 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j899 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j905 
y: j904 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j905 y: j904  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v908 
=== Succesors ===
trueSuccessor: v690 
falseSuccessor: v692 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v908 #trueSuccessor: v690 #falseSuccessor: v692  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v687 
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v687 #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j893 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v695 
values: j290 j904 
=== Succesors ===
=== Usages ===
v1084 j898 j887 v911 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v695 values: j290 j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v694 v696 
=== Succesors ===
next: v714 
=== Usages ===
j893 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v694 v696 #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid j910 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j675 
y: j826 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j675 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j910 
y: j893 
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j910 y: j893  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v911 
=== Succesors ===
trueSuccessor: v713 
falseSuccessor: v712 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v911 #trueSuccessor: v713 #falseSuccessor: v712  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j880 
index: j893 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: j893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1084 
value: v992 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1084 value: v992 stateAfter: - lastLocationAccess: - #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid j898 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j893 
y: j796 
=== Succesors ===
=== Usages ===
j887 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v981 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j887 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v706 
values: j898 j893 
=== Succesors ===
=== Usages ===
v1083 j892 j881 v914 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v706 values: j898 j893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v717 
=== Succesors ===
next: v720 
=== Usages ===
j887 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v717 #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid j913 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j675 
y: j830 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j675 y: j830  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j913 
y: j887 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j913 y: j887  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v914 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v914 #trueSuccessor: v719 #falseSuccessor: v718  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j880 
index: j887 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: j887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1083 
value: v991 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1083 value: v991 stateAfter: - lastLocationAccess: - #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j887 
y: j806 
=== Succesors ===
=== Usages ===
j881 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j887 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j881 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v709 
values: j892 j887 
=== Succesors ===
=== Usages ===
v1082 v917 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v709 values: j892 j887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v708 v723 
=== Succesors ===
next: v726 
=== Usages ===
j881 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v708 v723 #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid j916 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j675 
y: j210 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j675 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j916 
y: j881 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j916 y: j881  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v917 
=== Succesors ===
trueSuccessor: v725 
falseSuccessor: v724 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v917 #trueSuccessor: v725 #falseSuccessor: v724  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j880 
index: j881 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: j881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
value: i7 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1082 value: i7 stateAfter: - lastLocationAccess: - #next: v711  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v977 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" "B32" "B31" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v698 v711 v729 
=== Succesors ===
next: a332 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v698 v711 v729 #next: a332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a385 
=== Succesors ===
next: j422 
=== Usages ===
a298 ?114 v1036 
=== Predecessor ===
v699 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a385 #next: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j458 
=== Usages ===
v1049 v1050 
=== Predecessor ===
a332 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j458  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
j458 v460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
=== Succesors ===
next: j459 
=== Usages ===
j426 v1051 v1052 a441 v1057 v1053 v1054 v1055 v1056 
=== Predecessor ===
j422 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1049 #next: j459  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
j459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1050 
=== Succesors ===
next: i1027 
=== Usages ===
v431 
=== Predecessor ===
j458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1050 #next: i1027  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1027 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern.localCount
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 70]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1033 
=== Succesors ===
next: v430 
=== Usages ===
v787 j221 v239 j220 v461 i420 v427 a442 ?85 v246 
=== Predecessor ===
j459 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1033 #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1027 
y: i365 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1027 y: i365  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v429 
falseSuccessor: v428 
=== Usages ===
=== Predecessor ===
i1027 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v429 #falseSuccessor: v428  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1027 
y: i356 
=== Succesors ===
=== Usages ===
i449 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1027 y: i356  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i420 
y: i388 
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i420 y: i388  <|@  <|@
f <@~|@floating>@ <|@
tid i421 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i449 
y: i358 
=== Succesors ===
=== Usages ===
j425 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i449 y: i358  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i421 
=== Succesors ===
=== Usages ===
j426 v1053 v1054 v1055 v1056 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i421  <|@  <|@
f <@~|@floating>@ <|@
tid j426 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i64
=== Inputs ===
x: j425 
y: j458 
=== Succesors ===
=== Usages ===
v431 v460 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j425 y: j458  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j459 
y: j426 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j459 y: j426  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v431 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v431 #trueSuccessor: v436 #falseSuccessor: v435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
value: j426 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1049 value: j426 stateAfter: - lastLocationAccess: - #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j425 
index: j458 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j425 index: j458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1053 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1053 #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j425 
index: j458 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j425 index: j458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1054 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1054 #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j425 
index: j458 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j425 index: j458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1055 
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1055 #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j425 
index: j458 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j425 index: j458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1056 
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1056 #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j458 
index: - 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
value: i1027 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1051 value: i1027 stateAfter: - lastLocationAccess: - #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j458 
index: - 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
value: j355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1052 value: j355 stateAfter: - lastLocationAccess: - #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j458 
index: - 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1057 
value: v546 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1057 value: v546 stateAfter: - lastLocationAccess: - #next: v440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a441 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j458 
=== Succesors ===
next: v443 
=== Usages ===
a446 
=== Predecessor ===
v440 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j458 #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
a441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
v428 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v432 v434 
=== Succesors ===
next: a442 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v432 v434 #next: a442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a442 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?46 
arguments: v354 i1027 i7 
=== Succesors ===
next: v445 
=== Usages ===
a446 
=== Predecessor ===
v433 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?46 arguments: v354 i1027 i7 #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
a442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v444 
values: a441 a442 
=== Succesors ===
=== Usages ===
v1039 a336 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v444 values: a441 a442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v443 v445 
=== Succesors ===
next: v920 
=== Usages ===
a446 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v443 v445 #next: v920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v736 
=== Usages ===
j922 
=== Predecessor ===
v444 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1027 
=== Succesors ===
=== Usages ===
v224 j958 j947 j952 j955 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1027  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1027 
y: i28 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1027 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v787 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v735 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v787 #trueSuccessor: v734 #falseSuccessor: v735  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a446 
index: - 
=== Succesors ===
=== Usages ===
j922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a446 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j922 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v920 
address: v1039 
=== Succesors ===
=== Usages ===
v1086 v1087 v1088 v1089 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v920 address: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid j947 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j220 
y: j820 
=== Succesors ===
=== Usages ===
v948 v950 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j220 y: j820  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j947 
y: j290 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j947 y: j290  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v948 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v738 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v948 #trueSuccessor: v737 #falseSuccessor: v738  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v748  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
v738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B107" 
    successors "B45" "B107" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j941 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v741 
values: j290 j946 
=== Succesors ===
=== Usages ===
v1089 j946 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v741 values: j290 j946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v740 
=== Succesors ===
next: v986 
=== Usages ===
j941 v744 v745 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v740 #next: v986  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j922 
index: j941 
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: j941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1089 
value: v990 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1089 value: v990 stateAfter: - lastLocationAccess: - #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid j946 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j941 
y: j410 
=== Succesors ===
=== Usages ===
j935 j941 v950 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j941 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j947 
y: j946 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j947 y: j946  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v950 
=== Succesors ===
trueSuccessor: v744 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v950 #trueSuccessor: v744 #falseSuccessor: v746  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v741 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v741 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j935 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v749 
values: j290 j946 
=== Succesors ===
=== Usages ===
v1088 j940 j929 v953 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v749 values: j290 j946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v748 v750 
=== Succesors ===
next: v768 
=== Usages ===
j935 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v748 v750 #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid j952 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j220 
y: j826 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j220 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j952 
y: j935 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j952 y: j935  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v953 
=== Succesors ===
trueSuccessor: v767 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v953 #trueSuccessor: v767 #falseSuccessor: v766  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v985  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j922 
index: j935 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: j935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1088 
value: v992 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1088 value: v992 stateAfter: - lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid j940 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j935 
y: j796 
=== Succesors ===
=== Usages ===
j929 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j935 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j929 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v760 
values: j940 j935 
=== Succesors ===
=== Usages ===
v1087 j934 j923 v956 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v760 values: j940 j935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v759 v771 
=== Succesors ===
next: v774 
=== Usages ===
j929 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v759 v771 #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid j955 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j220 
y: j830 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j220 y: j830  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j955 
y: j929 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j955 y: j929  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v956 
=== Succesors ===
trueSuccessor: v773 
falseSuccessor: v772 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v956 #trueSuccessor: v773 #falseSuccessor: v772  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v777  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v984 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v984  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j922 
index: j929 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: j929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
value: v991 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1087 value: v991 stateAfter: - lastLocationAccess: - #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid j934 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j929 
y: j806 
=== Succesors ===
=== Usages ===
j923 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j929 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v984 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j923 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v763 
values: j934 j929 
=== Succesors ===
=== Usages ===
v1086 v959 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v763 values: j934 j929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v762 v777 
=== Succesors ===
next: v780 
=== Usages ===
j923 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v762 v777 #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid j958 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j220 
y: j210 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j220 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j958 
y: j923 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j958 y: j923  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v959 
=== Succesors ===
trueSuccessor: v779 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v959 #trueSuccessor: v779 #falseSuccessor: v778  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j922 
index: j923 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: j923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
value: i7 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1086 value: i7 stateAfter: - lastLocationAccess: - #next: v765  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B40" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v752 v765 v783 
=== Succesors ===
next: a336 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v752 v765 v783 #next: a336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a446 
=== Succesors ===
next: v791 
=== Usages ===
a300 ?114 v1037 
=== Predecessor ===
v753 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a446 #next: v791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v572 
=== Usages ===
j793 
=== Predecessor ===
a336 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32>
value: SIMD<-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v967 v972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1,-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32,i32,i32>
value: SIMD<-1,-1,-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 v973 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1,-1,-1,-1,-1,-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 v970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v571 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v570 #falseSuccessor: v571  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a332 
index: - 
=== Succesors ===
=== Usages ===
j793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a332 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j793 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v791 
address: v1036 
=== Succesors ===
=== Usages ===
v1074 v1075 v1076 v1077 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v791 address: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 4294967286] ⇈fffffffffffffffe
=== Inputs ===
x: j209 
y: j820 
=== Succesors ===
=== Usages ===
v822 v824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j209 y: j820  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j821 
y: j290 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j821 y: j290  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v822 
=== Succesors ===
trueSuccessor: v573 
falseSuccessor: v574 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v822 #trueSuccessor: v573 #falseSuccessor: v574  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B106" 
    successors "B61" "B106" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j814 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v577 
values: j290 j819 
=== Succesors ===
=== Usages ===
v1077 j819 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v577 values: j290 j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v576 
=== Succesors ===
next: v970 
=== Usages ===
j814 v581 v582 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v576 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j793 
index: j814 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j793 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1077 
value: v987 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1077 value: v987 stateAfter: - lastLocationAccess: - #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j814 
y: j410 
=== Succesors ===
=== Usages ===
j808 j814 v824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j814 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j821 
y: j819 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j821 y: j819  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v583 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v581 #falseSuccessor: v583  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v577 
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v577 #next: v587  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j808 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v586 
values: j290 j819 
=== Succesors ===
=== Usages ===
v1076 j813 j801 v828 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v586 values: j290 j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v585 v587 
=== Succesors ===
next: v605 
=== Usages ===
j808 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v585 v587 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 4294967290] ⇈fffffffffffffffe
=== Inputs ===
x: j209 
y: j826 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j209 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j827 
y: j808 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j827 y: j808  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v828 
=== Succesors ===
trueSuccessor: v604 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v828 #trueSuccessor: v604 #falseSuccessor: v603  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
v604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j793 
index: j808 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j793 index: j808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1076 
value: v989 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1076 value: v989 stateAfter: - lastLocationAccess: - #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid j813 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j808 
y: j796 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j808 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
v969 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v597 
values: j813 j808 
=== Succesors ===
=== Usages ===
v1075 j807 j794 v832 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v597 values: j813 j808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v596 v608 
=== Succesors ===
next: v611 
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v596 v608 #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 4294967292] ⇈fffffffffffffffe
=== Inputs ===
x: j209 
y: j830 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j209 y: j830  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j831 
y: j801 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j831 y: j801  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v832 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v832 #trueSuccessor: v610 #falseSuccessor: v609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v967  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j793 
index: j801 
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j793 index: j801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
value: v988 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v599 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1075 value: v988 stateAfter: - lastLocationAccess: - #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j801 
y: j806 
=== Succesors ===
=== Usages ===
j794 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j801 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j794 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v600 
values: j807 j801 
=== Succesors ===
=== Usages ===
v1074 v834 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v600 values: j807 j801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v599 v614 
=== Succesors ===
next: v617 
=== Usages ===
j794 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v599 v614 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j211 
y: j794 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j211 y: j794  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v834 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v834 #trueSuccessor: v616 #falseSuccessor: v615  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v620  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j793 
index: j794 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j793 index: j794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1074 value: i17 stateAfter: - lastLocationAccess: - #next: v602  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
v965 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B56" "B70" "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v589 v602 v620 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v589 v602 v620 #next: v1016  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a112 
values: - - - - i17 - i17 - - - - i28 a1 a332 a2 a336 
=== Succesors ===
=== Usages ===
?69 ?85 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a112 values: - - - - i17 - i17 - - - - i28 a1 a332 a2 a336  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i1027 
=== Succesors ===
=== Usages ===
j222 j872 j864 j869 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1027  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 4294967294]
=== Inputs ===
x: j221 
y: j210 
=== Succesors ===
=== Usages ===
v224 v875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j221 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1027 
y: i7 
=== Succesors ===
=== Usages ===
v1016 v627 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1027 y: i7  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 229
stackSize: 0
=== Inputs ===
outerFrameState: ?59 
values: - - - - 
=== Succesors ===
=== Usages ===
?69 ?85 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?59 values: - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v246 
=== Succesors ===
trueSuccessor: v1012 
falseSuccessor: v1015 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v246 #trueSuccessor: v1012 #falseSuccessor: v1015  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
v1012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B104" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j222 
y: j220 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j222 y: j220  <|@  <|@
f <@~|@floating>@ <|@
tid a348 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@765841921
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@765841921]
=== Inputs ===
=== Succesors ===
=== Usages ===
a344 a344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -44059
stableDimension: 0
stamp: i32 [-44059] ⇊00000000ffff53e5 ⇈00000000ffff53e5
stampKind: i32
value: int[-44059|0xffffffffffff53e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 i343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v1023 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v1023 #falseSuccessor: v1020  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1022 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1022  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1027 
y: i7 
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1027 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v1021 
falseSuccessor: v1013 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v1021 #falseSuccessor: v1013  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1090  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v1021 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1011 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
v1013 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1010 v1011 
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1010 v1011 #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid a342 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1387570399
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1387570399]
=== Inputs ===
=== Succesors ===
=== Usages ===
a344 a344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v259 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v261 #falseSuccessor: v259  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45835
stableDimension: 0
stamp: i32 [-45835] ⇊00000000ffff4cf5 ⇈00000000ffff4cf5
stampKind: i32
value: int[-45835|0xffffffffffff4cf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B103" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
=== Succesors ===
next: v266 
=== Usages ===
v548 
=== Predecessor ===
v259 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1058 #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1028 
y: v547 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1028 y: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v263 
falseSuccessor: v265 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v263 #falseSuccessor: v265  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1029 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1029  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1029 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1034 
=== Succesors ===
next: v270 
=== Usages ===
v1035 v185 
=== Predecessor ===
v263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1034 #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
value: a1029 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1029  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v185 
=== Succesors ===
trueSuccessor: v269 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
a1029 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v185 #trueSuccessor: v269 #falseSuccessor: v267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -47627
stableDimension: 0
stamp: i32 [-47627] ⇊00000000ffff45f5 ⇈00000000ffff45f5
stampKind: i32
value: int[-47627|0xffffffffffff45f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v269 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v627 
=== Usages ===
j839 
=== Predecessor ===
v267 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v627  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v246 
=== Succesors ===
trueSuccessor: v625 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v246 #trueSuccessor: v625 #falseSuccessor: v626  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B98" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a336 
index: - 
=== Succesors ===
=== Usages ===
j839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a336 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j839 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v837 
address: v1037 
=== Succesors ===
=== Usages ===
v1078 v1079 v1080 v1081 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v837 address: v1037  <|@  <|@
f <@~|@floating>@ <|@
tid j864 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 4294967287]
=== Inputs ===
x: j221 
y: j820 
=== Succesors ===
=== Usages ===
v865 v867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j221 y: j820  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j864 
y: j290 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j864 y: j290  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v628 #falseSuccessor: v629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B102" 
    successors "B88" "B102" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j858 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v632 
values: j290 j863 
=== Succesors ===
=== Usages ===
v1081 j863 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v632 values: j290 j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v631 
=== Succesors ===
next: v974 
=== Usages ===
j858 v635 v636 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v631 #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j858 
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1081 
value: v987 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1081 value: v987 stateAfter: - lastLocationAccess: - #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid j863 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j858 
y: j410 
=== Succesors ===
=== Usages ===
j852 j858 v867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j858 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j864 
y: j863 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j864 y: j863  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v867 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v637 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v867 #trueSuccessor: v635 #falseSuccessor: v637  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v632 
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v632 #next: v641  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j852 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v640 
values: j290 j863 
=== Succesors ===
=== Usages ===
v1080 j857 j846 v870 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v640 values: j290 j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v639 v641 
=== Succesors ===
next: v659 
=== Usages ===
j852 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v639 v641 #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid j869 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 4294967291]
=== Inputs ===
x: j221 
y: j826 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j221 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j869 
y: j852 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j869 y: j852  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v870 
=== Succesors ===
trueSuccessor: v658 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v870 #trueSuccessor: v658 #falseSuccessor: v657  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
v658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j852 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1080 
value: v989 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1080 value: v989 stateAfter: - lastLocationAccess: - #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid j857 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j852 
y: j796 
=== Succesors ===
=== Usages ===
j846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j852 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
v973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j846 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v651 
values: j857 j852 
=== Succesors ===
=== Usages ===
v1079 j851 j840 v873 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v651 values: j857 j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v650 v662 
=== Succesors ===
next: v665 
=== Usages ===
j846 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v650 v662 #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 4294967293]
=== Inputs ===
x: j221 
y: j830 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j221 y: j830  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j872 
y: j846 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j872 y: j846  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v664 
falseSuccessor: v663 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v664 #falseSuccessor: v663  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j846 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1079 
value: v988 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1079 value: v988 stateAfter: - lastLocationAccess: - #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid j851 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j846 
y: j806 
=== Succesors ===
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j846 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
v972 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j840 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v654 
values: j851 j846 
=== Succesors ===
=== Usages ===
v1078 v875 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v654 values: j851 j846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v653 v668 
=== Succesors ===
next: v671 
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v653 v668 #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j222 
y: j840 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j222 y: j840  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v670 
falseSuccessor: v669 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v670 #falseSuccessor: v669  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v670 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v971 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v971  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j840 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1078 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1078 value: i17 stateAfter: - lastLocationAccess: - #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v971 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B83" "B97" "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v643 v656 v674 
=== Succesors ===
next: j478 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v643 v656 v674 #next: j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j478 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j494 
=== Usages ===
v1059 v1060 
=== Predecessor ===
v644 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j494  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: - 
=== Succesors ===
=== Usages ===
j494 v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
=== Succesors ===
next: j495 
=== Usages ===
j550 j500 v1064 
=== Predecessor ===
j478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1059 #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: - 
=== Succesors ===
=== Usages ===
j495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
=== Succesors ===
next: v486 
=== Usages ===
v483 
=== Predecessor ===
j494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid j549 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 64
stableDimension: 0
stamp: i64 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i64
value: long[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
j550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j494 
y: j549 
=== Succesors ===
=== Usages ===
v483 v496 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j494 y: j549  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j495 
y: j550 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j495 y: j550  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v484 
falseSuccessor: v485 
=== Usages ===
=== Predecessor ===
j495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v484 #falseSuccessor: v485  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a490 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a490  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<Matcher.reset()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 305
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a112 i1027 
virtualObjectMappings: ?114 
=== Succesors ===
=== Usages ===
a490 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a112 i1027 virtualObjectMappings: ?114  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
a490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a490 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?85 
arguments: v354 i552 i28 
=== Succesors ===
next: j491 
=== Usages ===
j491 
=== Predecessor ===
v484 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?85 arguments: v354 i552 i28 #next: j491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j491 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a490 
=== Succesors ===
next: v501 
=== Usages ===
j500 
=== Predecessor ===
a490 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a490 #next: v501  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
j491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
value: j550 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1059 value: j550 stateAfter: - lastLocationAccess: - #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j494 
index: - 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1064 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1064 #next: v499  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j500 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v498 
values: j494 j491 
=== Succesors ===
=== Usages ===
v1063 v1062 a292 v1065 v1066 v1067 v1068 v1069 v1070 v1071 v1072 v1073 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v498 values: j494 j491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v499 v501 
=== Succesors ===
next: a292 
=== Usages ===
j500 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v499 v501 #next: a292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a292 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j500 
=== Succesors ===
next: j512 
=== Usages ===
a303 
=== Predecessor ===
v498 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j500 #next: j512  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v506 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1061 
=== Succesors ===
next: v513 
=== Usages ===
v513 
=== Predecessor ===
a292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1061 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1062 
value: j512 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
j512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1062 value: j512 stateAfter: - lastLocationAccess: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
value: v555 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1063 value: v555 stateAfter: - lastLocationAccess: - #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
value: i7 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1030 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1065 value: i7 stateAfter: - lastLocationAccess: - #next: i1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1029 
=== Succesors ===
=== Usages ===
i1030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
=== Succesors ===
next: v522 
=== Usages ===
v522 
=== Predecessor ===
v520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1035 #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
value: i1030 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
i1030 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1066 value: i1030 stateAfter: - lastLocationAccess: - #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,4294967295>
stableDimension: 0
stamp: <i64,i64>
stampKind: <i64,i64>
value: SIMD<0,4294967295>
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
value: v523 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1067 value: v523 stateAfter: - lastLocationAccess: - #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1068 
value: j526 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1068 value: j526 stateAfter: - lastLocationAccess: - #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i530 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777216
stableDimension: 0
stamp: i32 [16777216] ⇊0000000001000000 ⇈0000000001000000
stampKind: i32
value: int[16777216|0x1000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1069 
value: i530 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1069 value: i530 stateAfter: - lastLocationAccess: - #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a297 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/regex/Pattern;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
value: a297 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1070 value: a297 stateAfter: - lastLocationAccess: - #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a332 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1071 
value: a298 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1071 value: a298 stateAfter: - lastLocationAccess: - #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
value: a299 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1072 value: a299 stateAfter: - lastLocationAccess: - #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a300 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
value: a300 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a303 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1073 value: a300 stateAfter: - lastLocationAccess: - #next: a303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a303 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a292 
=== Succesors ===
next: v304 
=== Usages ===
v14 
=== Predecessor ===
v545 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a292 #next: v304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a303 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1094) [bci: 43]
stamp: void
=== Inputs ===
result: a303 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a303 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B87" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v636  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v632 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v632  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@376705954
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@376705954]
=== Inputs ===
=== Succesors ===
=== Usages ===
a344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46131
stableDimension: 0
stamp: i32 [-46131] ⇊00000000ffff4bcd ⇈00000000ffff4bcd
stampKind: i32
value: int[-46131|0xffffffffffff4bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v1020 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B78" "B104" "B81" "B103" "B75" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i343 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-47627 - -44059] ⇊00000000ffff40c5 ⇈00000000ffff5ffd
valueDescription: i32
=== Inputs ===
merge: v339 
values: i341 i347 i350 i352 i347 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v339 values: i341 i347 i350 i352 i347  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v339 
values: a342 a348 a342 a353 a348 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v339 values: a342 a348 a342 a353 a348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v346 v349 v351 v1090 
=== Succesors ===
next: v345 
=== Usages ===
i343 a344 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v346 v349 v351 v1090 #next: v345  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Matcher.reset()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 303
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a112 i146 
virtualObjectMappings: ?114 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a112 i146 virtualObjectMappings: ?114  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?69 
actionAndReason: i343 
speculation: a344 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?69 actionAndReason: i343 speculation: a344  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v577 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v577  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v741 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v741  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v687 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v687  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v1004 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1002 v1003 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1002 v1003 #next: v252  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 163
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
reason: BoundsCheckException
speculation: Object[d.a@779243092]
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?46  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1025 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i1025  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1032 v1031 ?6 ?45 a297 ?114 ?113 v1033 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1025 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern.compiled
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
=== Succesors ===
next: v152 
=== Usages ===
i150 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1031 #next: v152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
i1025 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1025 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1025  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 v520 v245 v246 v239 a381 v233 a442 v977 v983 ?6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i150 
y: i7 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i150 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
v130 ?6 ?45 a299 v1058 ?114 ?113 v1034 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v247 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v249 #falseSuccessor: v247  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59979519 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVSXB [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVZXB v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v248  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Pattern.matcher(CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 1]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 1087
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i7 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 153
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -39187 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1026 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1026  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1026 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern.capturingGroupCount
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 50]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1032 
=== Succesors ===
next: v40 
=== Usages ===
v37 i144 i142 
=== Predecessor ===
v247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1032 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 53]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 i142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1026 
y: i36 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1026 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:208) [bci: 35]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?114 i144 ?113 a490 v787 v786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.26486855267639303
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
i1026 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v38 #falseSuccessor: v39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26486855267639303 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598443067578448185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid j158 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 70]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result int[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 20
stableDimension: 0
stamp: i32 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i32
value: int[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa], int[20|0x14], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4604796694969746276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 62]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1026 
y: i28 
=== Succesors ===
=== Usages ===
i146 j310 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1026 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j310 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
j311 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i144  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD, v5|DWORD, v6|QWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i142 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [10 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v42 
values: i1026 i36 
=== Succesors ===
=== Usages ===
?46 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: i1026 i36  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v42 
values: i144 i145 
=== Succesors ===
=== Usages ===
j675 j209 v233 v407 i357 v366 a381 v245 v786 ?69 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: i144 i145  <|@  <|@
f <@~|@floating>@ <|@
tid j311 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v42 
values: j310 j158 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: j310 j158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v41 v43 
=== Succesors ===
next: v1000 
=== Usages ===
i142 i146 j311 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v41 v43 #next: v1000  <|@  <|@
tid a112 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@559a51b4
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/regex/Matcher;
type: HotSpotType<Ljava/util/regex/Matcher;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?45 ?59 ?113 ?69 ?114 ?85 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<Pattern.matcher(CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 1093
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a112 
=== Succesors ===
=== Usages ===
?110 ?45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a112  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rethrowException: false
sourceFile: Matcher.java
sourceLine: 224
stackSize: 0
=== Inputs ===
outerFrameState: ?59 
values: a112 a1 a2 - 
=== Succesors ===
=== Usages ===
?46 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?59 values: a112 a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:151) [bci: 10]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
?113 ?113 ?114 ?114 v965 v971 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a112 
values: - - - - i17 - i17 - - - - i28 a1 - a2 - 
=== Succesors ===
=== Usages ===
?46 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a112 values: - - - - i17 - i17 - - - - i28 a1 - a2 -  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?45 
values: - - i142 
virtualObjectMappings: ?113 
=== Succesors ===
=== Usages ===
a381 a442 v252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?45 values: - - i142 virtualObjectMappings: ?113  <|@  <|@
f <@~|@floating>@ <|@
tid j209 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967294] ⇈00000000fffffffe
=== Inputs ===
value: i146 
=== Succesors ===
=== Usages ===
j211 j831 j821 j827 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i146  <|@  <|@
f <@~|@floating>@ <|@
tid j210 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j211 j222 j916 j958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j211 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 4294967293] ⇊0000000000000001
=== Inputs ===
x: j209 
y: j210 
=== Succesors ===
=== Usages ===
v213 v834 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j209 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i7 
=== Succesors ===
=== Usages ===
v1000 v572 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i146 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v996 
falseSuccessor: v999 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v996 #falseSuccessor: v999  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD, v8|DWORD, v9|QWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = DEC v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v994 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v994  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v996 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B109" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1008  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j211 
y: j311 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j211 y: j311  <|@  <|@
f <@*|@fixed>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v1007 
falseSuccessor: v1004 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v1007 #falseSuccessor: v1004  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i7 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i146 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v1005 
falseSuccessor: v997 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v1005 #falseSuccessor: v997  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v1005 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v995  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
v997 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B12" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v994 v995 
=== Succesors ===
next: j360 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v994 v995 #next: j360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j404 
=== Usages ===
v1040 v1041 
=== Predecessor ===
v993 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j404  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
j404 v406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j404 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
=== Succesors ===
next: j405 
=== Usages ===
j364 v1042 v1043 a380 v1048 v1044 v1045 v1046 v1047 
=== Predecessor ===
j360 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 #next: j405  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j360 
index: - 
=== Succesors ===
=== Usages ===
j405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j360 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j405 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
=== Succesors ===
next: v369 
=== Usages ===
v370 
=== Predecessor ===
j404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1041 #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid i365 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i365 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i146 y: i365  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a381 a490 a442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 v465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j355 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 v462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i356 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i357 i420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i388 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i389 i449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i359 i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v366 
=== Succesors ===
trueSuccessor: v368 
falseSuccessor: v367 
=== Usages ===
=== Predecessor ===
j405 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v366 #trueSuccessor: v368 #falseSuccessor: v367  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i146 
y: i356 
=== Succesors ===
=== Usages ===
i389 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i146 y: i356  <|@  <|@
f <@~|@floating>@ <|@
tid i389 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i357 
y: i388 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i357 y: i388  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i389 
y: i358 
=== Succesors ===
=== Usages ===
j363 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i389 y: i358  <|@  <|@
f <@~|@floating>@ <|@
tid j363 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i359 
=== Succesors ===
=== Usages ===
j364 v1044 v1045 v1046 v1047 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i359  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i64
=== Inputs ===
x: j363 
y: j404 
=== Succesors ===
=== Usages ===
v370 v406 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j363 y: j404  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j405 
y: j364 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j405 y: j364  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v375 #falseSuccessor: v374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v8|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v15|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = AND v16|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
value: j364 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1040 value: j364 stateAfter: - lastLocationAccess: - #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
result [v18|QWORD + v12|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j363 
index: j404 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j363 index: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1044 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1044 #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
result [v18|QWORD + v12|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j363 
index: j404 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j363 index: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1045 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1045 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
result [v18|QWORD + v12|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j363 
index: j404 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j363 index: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1046 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1046 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
result [v18|QWORD + v12|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j363 
index: j404 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j363 index: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1047 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1047 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
result [v12|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j404 
index: - 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
value: i146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1042 value: i146 stateAfter: - lastLocationAccess: - #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
result [v12|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j404 
index: - 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
value: j355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1043 value: j355 stateAfter: - lastLocationAccess: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
result [v12|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j404 
index: - 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1048 
value: v546 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1048 value: v546 stateAfter: - lastLocationAccess: - #next: v379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a380 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a380 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j404 
=== Succesors ===
next: v382 
=== Usages ===
a385 
=== Predecessor ===
v379 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j404 #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
a380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v371 v373 
=== Succesors ===
next: a381 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v371 v373 #next: a381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a381 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?46 
arguments: v354 i146 i7 
=== Succesors ===
next: v384 
=== Usages ===
a385 
=== Predecessor ===
v372 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?46 arguments: v354 i146 i7 #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
a381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v7|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} v0|QWORD[.] v1|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] Object[null] v1|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a385 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v383 
values: a380 a381 
=== Succesors ===
=== Usages ===
v1038 a332 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: a380 a381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v382 v384 
=== Succesors ===
next: v878 
=== Usages ===
a385 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v382 v384 #next: v878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v682 
=== Usages ===
j880 
=== Predecessor ===
v383 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i28 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i146 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j806 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j807 j851 j892 j934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result v23|V64_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 v984 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j830 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j831 j872 j913 j955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j796 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j813 j857 j898 j940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result v24|V128_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v981 v985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j827 j869 j910 j952 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j946 j904 j863 j819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result v25|V256_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000,i32 [0] ⇈0000000000000000>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v986 v982 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j820 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j821 j864 j905 j947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j290 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j893 v906 j899 v948 j808 j814 v822 j941 j852 j858 v865 j935 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v680 
falseSuccessor: v681 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v680 #falseSuccessor: v681  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction v24|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v25|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
result [v22|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a385 
index: - 
=== Succesors ===
=== Usages ===
j880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a385 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j880 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v878 
address: v1038 
=== Succesors ===
=== Usages ===
v1082 v1083 v1084 v1085 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v878 address: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid j675 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i146 
=== Succesors ===
=== Usages ===
j916 j905 j910 j913 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i146  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j675 
y: j820 
=== Succesors ===
=== Usages ===
v906 v908 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j675 y: j820  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j905 
y: j290 
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j905 y: j290  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v906 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v906 #trueSuccessor: v683 #falseSuccessor: v684  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v684 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B108" 
    successors "B23" "B108" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j899 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v687 
values: j290 j904 
=== Succesors ===
=== Usages ===
v1085 j904 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v687 values: j290 j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v686 
=== Succesors ===
next: v982 
=== Usages ===
j899 v690 v691 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v686 #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
result [v26|QWORD[.] + v29|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j880 
index: j899 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: j899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1085 
value: v990 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1085 value: v990 stateAfter: - lastLocationAccess: - #next: v693  <|@  <|@
f <@~|@floating>@ <|@
tid j904 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j899 
y: j410 
=== Succesors ===
=== Usages ===
j893 j899 v908 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j899 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j905 
y: j904 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j905 y: j904  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v908 
=== Succesors ===
trueSuccessor: v690 
falseSuccessor: v692 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v908 #trueSuccessor: v690 #falseSuccessor: v692  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v29|QWORD * 4], input: v25|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v29|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v687 
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v687 #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j893 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v695 
values: j290 j904 
=== Succesors ===
=== Usages ===
v1084 j898 j887 v911 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v695 values: j290 j904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v694 v696 
=== Succesors ===
next: v714 
=== Usages ===
j893 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v694 v696 #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid j910 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j675 
y: j826 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j675 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j910 
y: j893 
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j910 y: j893  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v911 
=== Succesors ===
trueSuccessor: v713 
falseSuccessor: v712 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v911 #trueSuccessor: v713 #falseSuccessor: v712  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v27|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
result [v26|QWORD[.] + v31|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j880 
index: j893 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: j893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1084 
value: v992 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1084 value: v992 stateAfter: - lastLocationAccess: - #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid j898 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j893 
y: j796 
=== Succesors ===
=== Usages ===
j887 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j893 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v981 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v31|QWORD * 4], input: v24|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v31|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j887 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v706 
values: j898 j893 
=== Succesors ===
=== Usages ===
v1083 j892 j881 v914 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v706 values: j898 j893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v717 
=== Succesors ===
next: v720 
=== Usages ===
j887 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v717 #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid j913 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j675 
y: j830 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j675 y: j830  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j913 
y: j887 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j913 y: j887  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v914 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v914 #trueSuccessor: v719 #falseSuccessor: v718  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v27|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
result [v26|QWORD[.] + v34|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j880 
index: j887 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: j887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1083 
value: v991 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1083 value: v991 stateAfter: - lastLocationAccess: - #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j887 
y: j806 
=== Succesors ===
=== Usages ===
j881 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j887 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v34|QWORD * 4], input: v23|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v34|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j881 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v709 
values: j892 j887 
=== Succesors ===
=== Usages ===
v1082 v917 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v709 values: j892 j887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v708 v723 
=== Succesors ===
next: v726 
=== Usages ===
j881 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v708 v723 #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid j916 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j675 
y: j210 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j675 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j916 
y: j881 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j916 y: j881  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v917 
=== Succesors ===
trueSuccessor: v725 
falseSuccessor: v724 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v917 #trueSuccessor: v725 #falseSuccessor: v724  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = DEC v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
result [v26|QWORD[.] + v37|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j880 
index: j881 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: j881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
value: i7 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1082 value: i7 stateAfter: - lastLocationAccess: - #next: v711  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v977 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v37|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" "B32" "B31" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v698 v711 v729 
=== Succesors ===
next: a332 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v698 v711 v729 #next: a332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a332 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:225) [bci: 63]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a385 
=== Succesors ===
next: j422 
=== Usages ===
a298 ?114 v1036 
=== Predecessor ===
v699 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a385 #next: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j422 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j458 
=== Usages ===
v1049 v1050 
=== Predecessor ===
a332 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j458  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
j458 v460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j458 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
=== Succesors ===
next: j459 
=== Usages ===
j426 v1051 v1052 a441 v1057 v1053 v1054 v1055 v1056 
=== Predecessor ===
j422 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1049 #next: j459  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
j459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j459 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1050 
=== Succesors ===
next: i1027 
=== Usages ===
v431 
=== Predecessor ===
j458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1050 #next: i1027  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1027 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern.localCount
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 70]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1033 
=== Succesors ===
next: v430 
=== Usages ===
v787 j221 v239 j220 v461 i420 v427 a442 ?85 v246 
=== Predecessor ===
j459 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1033 #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1027 
y: i365 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1027 y: i365  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v429 
falseSuccessor: v428 
=== Usages ===
=== Predecessor ===
i1027 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v429 #falseSuccessor: v428  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1027 
y: i356 
=== Succesors ===
=== Usages ===
i449 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1027 y: i356  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i420 
y: i388 
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i420 y: i388  <|@  <|@
f <@~|@floating>@ <|@
tid i421 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i449 
y: i358 
=== Succesors ===
=== Usages ===
j425 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i449 y: i358  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i421 
=== Succesors ===
=== Usages ===
j426 v1053 v1054 v1055 v1056 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i421  <|@  <|@
f <@~|@floating>@ <|@
tid j426 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: i64
=== Inputs ===
x: j425 
y: j458 
=== Succesors ===
=== Usages ===
v431 v460 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j425 y: j458  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j459 
y: j426 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j459 y: j426  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v431 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v431 #trueSuccessor: v436 #falseSuccessor: v435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SHL v41|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v42|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = AND v43|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v45|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
value: j426 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1049 value: j426 stateAfter: - lastLocationAccess: - #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
result [v45|QWORD + v39|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j425 
index: j458 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j425 index: j458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1053 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1053 #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
result [v45|QWORD + v39|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j425 
index: j458 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j425 index: j458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1054 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1054 #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
result [v45|QWORD + v39|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j425 
index: j458 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j425 index: j458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1055 
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1055 #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
result [v45|QWORD + v39|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j425 
index: j458 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j425 index: j458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
address: v1056 
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1056 #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
result [v39|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j458 
index: - 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
value: i1027 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1051 value: i1027 stateAfter: - lastLocationAccess: - #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
result [v39|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j458 
index: - 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
value: j355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1052 value: j355 stateAfter: - lastLocationAccess: - #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
result [v39|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j458 
index: - 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1057 
value: v546 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1057 value: v546 stateAfter: - lastLocationAccess: - #next: v440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a441 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a441 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j458 
=== Succesors ===
next: v443 
=== Usages ===
a446 
=== Predecessor ===
v440 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j458 #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
a441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v39|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + 12], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
v428 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v432 v434 
=== Succesors ===
next: a442 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v432 v434 #next: a442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a442 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?46 
arguments: v354 i1027 i7 
=== Succesors ===
next: v445 
=== Usages ===
a446 
=== Predecessor ===
v433 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?46 arguments: v354 i1027 i7 #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
a442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v7|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} v0|QWORD[.] v1|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] Object[null] v1|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a446 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v444 
values: a441 a442 
=== Succesors ===
=== Usages ===
v1039 a336 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v444 values: a441 a442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v443 v445 
=== Succesors ===
next: v920 
=== Usages ===
a446 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v443 v445 #next: v920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v736 
=== Usages ===
j922 
=== Predecessor ===
v444 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1027 
=== Succesors ===
=== Usages ===
v224 j958 j947 j952 j955 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1027  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1027 
y: i28 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1027 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v787 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v735 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v787 #trueSuccessor: v734 #falseSuccessor: v735  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v41|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
result [v49|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a446 
index: - 
=== Succesors ===
=== Usages ===
j922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a446 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j922 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v920 
address: v1039 
=== Succesors ===
=== Usages ===
v1086 v1087 v1088 v1089 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v920 address: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid j947 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j220 
y: j820 
=== Succesors ===
=== Usages ===
v948 v950 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j220 y: j820  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j947 
y: j290 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j947 y: j290  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v948 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v738 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v948 #trueSuccessor: v737 #falseSuccessor: v738  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = LEA [v49|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v748  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
v738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B107" 
    successors "B45" "B107" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j941 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v741 
values: j290 j946 
=== Succesors ===
=== Usages ===
v1089 j946 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v741 values: j290 j946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v740 
=== Succesors ===
next: v986 
=== Usages ===
j941 v744 v745 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v740 #next: v986  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
result [v51|QWORD[.] + v53|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j922 
index: j941 
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: j941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1089 
value: v990 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1089 value: v990 stateAfter: - lastLocationAccess: - #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid j946 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j941 
y: j410 
=== Succesors ===
=== Usages ===
j935 j941 v950 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j941 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j947 
y: j946 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j947 y: j946  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v950 
=== Succesors ===
trueSuccessor: v744 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v950 #trueSuccessor: v744 #falseSuccessor: v746  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v53|QWORD * 4], input: v25|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v53|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v741 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v741 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j935 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v749 
values: j290 j946 
=== Succesors ===
=== Usages ===
v1088 j940 j929 v953 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v749 values: j290 j946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v748 v750 
=== Succesors ===
next: v768 
=== Usages ===
j935 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v748 v750 #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid j952 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j220 
y: j826 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j220 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j952 
y: j935 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j952 y: j935  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v953 
=== Succesors ===
trueSuccessor: v767 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v953 #trueSuccessor: v767 #falseSuccessor: v766  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v50|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v985  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
result [v51|QWORD[.] + v55|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j922 
index: j935 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: j935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1088 
value: v992 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1088 value: v992 stateAfter: - lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid j940 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j935 
y: j796 
=== Succesors ===
=== Usages ===
j929 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j935 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v55|QWORD * 4], input: v24|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v55|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j929 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v760 
values: j940 j935 
=== Succesors ===
=== Usages ===
v1087 j934 j923 v956 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v760 values: j940 j935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v759 v771 
=== Succesors ===
next: v774 
=== Usages ===
j929 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v759 v771 #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid j955 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j220 
y: j830 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j220 y: j830  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j955 
y: j929 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j955 y: j929  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v956 
=== Succesors ===
trueSuccessor: v773 
falseSuccessor: v772 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v956 #trueSuccessor: v773 #falseSuccessor: v772  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v50|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v777  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v984 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v984  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
result [v51|QWORD[.] + v58|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j922 
index: j929 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: j929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
value: v991 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1087 value: v991 stateAfter: - lastLocationAccess: - #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid j934 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j929 
y: j806 
=== Succesors ===
=== Usages ===
j923 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j929 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v984 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v58|QWORD * 4], input: v23|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v58|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j923 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v763 
values: j934 j929 
=== Succesors ===
=== Usages ===
v1086 v959 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v763 values: j934 j929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v762 v777 
=== Succesors ===
next: v780 
=== Usages ===
j923 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v762 v777 #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid j958 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j220 
y: j210 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j220 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j958 
y: j923 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j958 y: j923  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v959 
=== Succesors ===
trueSuccessor: v779 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v959 #trueSuccessor: v779 #falseSuccessor: v778  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = DEC v50|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
result [v51|QWORD[.] + v61|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j922 
index: j923 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: j923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
value: i7 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1086 value: i7 stateAfter: - lastLocationAccess: - #next: v765  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v61|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B40" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v752 v765 v783 
=== Succesors ===
next: a336 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v752 v765 v783 #next: a336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a336 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:226) [bci: 73]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a446 
=== Succesors ===
next: v791 
=== Usages ===
a300 ?114 v1037 
=== Predecessor ===
v753 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a446 #next: v791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v572 
=== Usages ===
j793 
=== Predecessor ===
a336 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result v63|V64_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32>
value: SIMD<-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v967 v972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
result v64|V128_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1,-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32,i32,i32>
value: SIMD<-1,-1,-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 v973 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
result v65|V256_DWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <-1,-1,-1,-1,-1,-1,-1,-1>
stableDimension: 0
stamp: <i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff,i32 [-1] ⇊00000000ffffffff>
stampKind: <i32,i32,i32,i32,i32,i32,i32,i32>
value: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 v970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v571 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v570 #falseSuccessor: v571  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr   -1  <|@ instruction v64|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction v65|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
result [v22|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a332 
index: - 
=== Succesors ===
=== Usages ===
j793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a332 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j793 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v791 
address: v1036 
=== Succesors ===
=== Usages ===
v1074 v1075 v1076 v1077 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v791 address: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 4294967286] ⇈fffffffffffffffe
=== Inputs ===
x: j209 
y: j820 
=== Succesors ===
=== Usages ===
v822 v824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j209 y: j820  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j821 
y: j290 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j821 y: j290  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v822 
=== Succesors ===
trueSuccessor: v573 
falseSuccessor: v574 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v822 #trueSuccessor: v573 #falseSuccessor: v574  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v10|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B106" 
    successors "B61" "B106" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j814 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v577 
values: j290 j819 
=== Succesors ===
=== Usages ===
v1077 j819 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v577 values: j290 j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v576 
=== Succesors ===
next: v970 
=== Usages ===
j814 v581 v582 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v576 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
result [v66|QWORD[.] + v68|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j793 
index: j814 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j793 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1077 
value: v987 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1077 value: v987 stateAfter: - lastLocationAccess: - #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j814 
y: j410 
=== Succesors ===
=== Usages ===
j808 j814 v824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j814 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j821 
y: j819 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j821 y: j819  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v583 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v581 #falseSuccessor: v583  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v68|QWORD * 4], input: v65|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v577 
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v577 #next: v587  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j808 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v586 
values: j290 j819 
=== Succesors ===
=== Usages ===
v1076 j813 j801 v828 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v586 values: j290 j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v585 v587 
=== Succesors ===
next: v605 
=== Usages ===
j808 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v585 v587 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 4294967290] ⇈fffffffffffffffe
=== Inputs ===
x: j209 
y: j826 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j209 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j827 
y: j808 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j827 y: j808  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v828 
=== Succesors ===
trueSuccessor: v604 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v828 #trueSuccessor: v604 #falseSuccessor: v603  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v10|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
v604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
result [v66|QWORD[.] + v70|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j793 
index: j808 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j793 index: j808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1076 
value: v989 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1076 value: v989 stateAfter: - lastLocationAccess: - #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid j813 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j808 
y: j796 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j808 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
v969 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v70|QWORD * 4], input: v64|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v70|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j801 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v597 
values: j813 j808 
=== Succesors ===
=== Usages ===
v1075 j807 j794 v832 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v597 values: j813 j808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v596 v608 
=== Succesors ===
next: v611 
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v596 v608 #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 4294967292] ⇈fffffffffffffffe
=== Inputs ===
x: j209 
y: j830 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j209 y: j830  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j831 
y: j801 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j831 y: j801  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v832 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v832 #trueSuccessor: v610 #falseSuccessor: v609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v10|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v967  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
result [v66|QWORD[.] + v73|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j793 
index: j801 
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j793 index: j801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
value: v988 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v599 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1075 value: v988 stateAfter: - lastLocationAccess: - #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j801 
y: j806 
=== Succesors ===
=== Usages ===
j794 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j801 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v73|QWORD * 4], input: v63|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v73|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j794 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v600 
values: j807 j801 
=== Succesors ===
=== Usages ===
v1074 v834 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v600 values: j807 j801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v599 v614 
=== Succesors ===
next: v617 
=== Usages ===
j794 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v599 v614 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j211 
y: j794 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j211 y: j794  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v834 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v615 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v834 #trueSuccessor: v616 #falseSuccessor: v615  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v620  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
result [v66|QWORD[.] + v76|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j793 
index: j794 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j793 index: j794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1074 value: i17 stateAfter: - lastLocationAccess: - #next: v602  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
v965 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v66|QWORD[.] + v76|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B56" "B70" "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v589 v602 v620 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v589 v602 v620 #next: v1016  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a112 
values: - - - - i17 - i17 - - - - i28 a1 a332 a2 a336 
=== Succesors ===
=== Usages ===
?69 ?85 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a112 values: - - - - i17 - i17 - - - - i28 a1 a332 a2 a336  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i1027 
=== Succesors ===
=== Usages ===
j222 j872 j864 j869 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1027  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 4294967294]
=== Inputs ===
x: j221 
y: j210 
=== Succesors ===
=== Usages ===
v224 v875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j221 y: j210  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1027 
y: i7 
=== Succesors ===
=== Usages ===
v1016 v627 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1027 y: i7  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 229
stackSize: 0
=== Inputs ===
outerFrameState: ?59 
values: - - - - 
=== Succesors ===
=== Usages ===
?69 ?85 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?59 values: - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v246 
=== Succesors ===
trueSuccessor: v1012 
falseSuccessor: v1015 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v246 #trueSuccessor: v1012 #falseSuccessor: v1015  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = DEC v77|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
v1012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B104" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j222 
y: j220 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j222 y: j220  <|@  <|@
f <@~|@floating>@ <|@
tid a348 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@765841921
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@765841921]
=== Inputs ===
=== Succesors ===
=== Usages ===
a344 a344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i347 <|@
result int[-44059|0xffffffffffff53e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -44059
stableDimension: 0
stamp: i32 [-44059] ⇊00000000ffff53e5 ⇈00000000ffff53e5
stampKind: i32
value: int[-44059|0xffffffffffff53e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 i343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v1023 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v1023 #falseSuccessor: v1020  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@765841921] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1022 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1022  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1027 
y: i7 
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1027 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v1021 
falseSuccessor: v1013 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v1021 #falseSuccessor: v1013  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1090  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v1021 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-44059|0xffffffffffff53e5], v79|QWORD[.]] destination: B75 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1011 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
v1013 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1010 v1011 
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1010 v1011 #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid a342 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1387570399
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1387570399]
=== Inputs ===
=== Succesors ===
=== Usages ===
a344 a344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v259 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v261 #falseSuccessor: v259  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1387570399] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result int[-45835|0xffffffffffff4cf5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45835
stableDimension: 0
stamp: i32 [-45835] ⇊00000000ffff4cf5 ⇈00000000ffff4cf5
stampKind: i32
value: int[-45835|0xffffffffffff4cf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45835|0xffffffffffff4cf5], v80|QWORD[.]] destination: B78 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B103" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
=== Succesors ===
next: v266 
=== Usages ===
v548 
=== Predecessor ===
v259 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1058 #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1028 
y: v547 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1028 y: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v263 
falseSuccessor: v265 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v263 #falseSuccessor: v265  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1029 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1029  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1029 <|@
result v81|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1034 
=== Succesors ===
next: v270 
=== Usages ===
v1035 v185 
=== Predecessor ===
v263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1034 #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
value: a1029 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1029  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v185 
=== Succesors ===
trueSuccessor: v269 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
a1029 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v185 #trueSuccessor: v269 #falseSuccessor: v267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|DWORD[.], y: v81|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
result int[-47627|0xffffffffffff45f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -47627
stableDimension: 0
stamp: i32 [-47627] ⇊00000000ffff45f5 ⇈00000000ffff45f5
stampKind: i32
value: int[-47627|0xffffffffffff45f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v269 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-47627|0xffffffffffff45f5], v80|QWORD[.]] destination: B81 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v627 
=== Usages ===
j839 
=== Predecessor ===
v267 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v627  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v246 
=== Succesors ===
trueSuccessor: v625 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v246 #trueSuccessor: v625 #falseSuccessor: v626  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B98" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
result [v49|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a336 
index: - 
=== Succesors ===
=== Usages ===
j839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a336 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j839 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v837 
address: v1037 
=== Succesors ===
=== Usages ===
v1078 v1079 v1080 v1081 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v837 address: v1037  <|@  <|@
f <@~|@floating>@ <|@
tid j864 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 4294967287]
=== Inputs ===
x: j221 
y: j820 
=== Succesors ===
=== Usages ===
v865 v867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j221 y: j820  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j864 
y: j290 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j864 y: j290  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v628 #falseSuccessor: v629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LEA [v49|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|QWORD, y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B102" 
    successors "B88" "B102" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j858 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v632 
values: j290 j863 
=== Succesors ===
=== Usages ===
v1081 j863 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v632 values: j290 j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v631 
=== Succesors ===
next: v974 
=== Usages ===
j858 v635 v636 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v631 #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
result [v82|QWORD[.] + v84|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j858 
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1081 
value: v987 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1081 value: v987 stateAfter: - lastLocationAccess: - #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid j863 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j858 
y: j410 
=== Succesors ===
=== Usages ===
j852 j858 v867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j858 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j864 
y: j863 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j864 y: j863  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v867 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v637 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v867 #trueSuccessor: v635 #falseSuccessor: v637  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v84|QWORD * 4], input: v65|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v84|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v632 
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v632 #next: v641  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j852 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v640 
values: j290 j863 
=== Succesors ===
=== Usages ===
v1080 j857 j846 v870 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v640 values: j290 j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v639 v641 
=== Succesors ===
next: v659 
=== Usages ===
j852 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v639 v641 #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid j869 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 4294967291]
=== Inputs ===
x: j221 
y: j826 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j221 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j869 
y: j852 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j869 y: j852  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v870 
=== Succesors ===
trueSuccessor: v658 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v870 #trueSuccessor: v658 #falseSuccessor: v657  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v77|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|QWORD, y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
v658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
result [v82|QWORD[.] + v86|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j852 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1080 
value: v989 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1080 value: v989 stateAfter: - lastLocationAccess: - #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid j857 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j852 
y: j796 
=== Succesors ===
=== Usages ===
j846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j852 y: j796  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
v973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v86|QWORD * 4], input: v64|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v86|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j846 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v651 
values: j857 j852 
=== Succesors ===
=== Usages ===
v1079 j851 j840 v873 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v651 values: j857 j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v650 v662 
=== Succesors ===
next: v665 
=== Usages ===
j846 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v650 v662 #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 4294967293]
=== Inputs ===
x: j221 
y: j830 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j221 y: j830  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j872 
y: j846 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j872 y: j846  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v664 
falseSuccessor: v663 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v664 #falseSuccessor: v663  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v77|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD, y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
result [v82|QWORD[.] + v89|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j846 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1079 
value: v988 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1079 value: v988 stateAfter: - lastLocationAccess: - #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid j851 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j846 
y: j806 
=== Succesors ===
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j846 y: j806  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
v972 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v89|QWORD * 4], input: v63|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v89|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j840 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v654 
values: j851 j846 
=== Succesors ===
=== Usages ===
v1078 v875 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v654 values: j851 j846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v653 v668 
=== Succesors ===
next: v671 
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v653 v668 #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j222 
y: j840 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j222 y: j840  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v670 
falseSuccessor: v669 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v670 #falseSuccessor: v669  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v670 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v971 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v971  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
result [v82|QWORD[.] + v92|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j840 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1078 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1078 value: i17 stateAfter: - lastLocationAccess: - #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v971 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v82|QWORD[.] + v92|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B83" "B97" "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v643 v656 v674 
=== Succesors ===
next: j478 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v643 v656 v674 #next: j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j478 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j494 
=== Usages ===
v1059 v1060 
=== Predecessor ===
v644 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j494  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: - 
=== Succesors ===
=== Usages ===
j494 v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
=== Succesors ===
next: j495 
=== Usages ===
j550 j500 v1064 
=== Predecessor ===
j478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1059 #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: - 
=== Succesors ===
=== Usages ===
j495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
=== Succesors ===
next: v486 
=== Usages ===
v483 
=== Predecessor ===
j494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid j549 <|@
result long[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 64
stableDimension: 0
stamp: i64 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i64
value: long[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
j550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j494 
y: j549 
=== Succesors ===
=== Usages ===
v483 v496 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j494 y: j549  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j495 
y: j550 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j495 y: j550  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v484 
falseSuccessor: v485 
=== Usages ===
=== Predecessor ===
j495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v484 #falseSuccessor: v485  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = LEA [v93|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a490 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a490  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<Matcher.reset()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 305
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a112 i1027 
virtualObjectMappings: ?114 
=== Succesors ===
=== Usages ===
a490 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a112 i1027 virtualObjectMappings: ?114  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
a490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a490 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?85 
arguments: v354 i552 i28 
=== Succesors ===
next: j491 
=== Usages ===
j491 
=== Predecessor ===
v484 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?85 arguments: v354 i552 i28 #next: j491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j491 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a490 
=== Succesors ===
next: v501 
=== Usages ===
j500 
=== Predecessor ===
a490 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a490 #next: v501  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
j491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:305) [bci: 41]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} v41|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v22|QWORD[.] v1|QWORD[.] v49|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 79, 38] <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
value: j550 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1059 value: j550 stateAfter: - lastLocationAccess: - #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
result [v93|QWORD + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j494 
index: - 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1064 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1064 #next: v499  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v93|QWORD + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|QWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j500 <|@
result v96|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v498 
values: j494 j491 
=== Succesors ===
=== Usages ===
v1063 v1062 a292 v1065 v1066 v1067 v1068 v1069 v1070 v1071 v1072 v1073 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v498 values: j494 j491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v499 v501 
=== Succesors ===
next: a292 
=== Usages ===
j500 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v499 v501 #next: a292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a292 <|@
result v97|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j500 
=== Succesors ===
next: j512 
=== Usages ===
a303 
=== Predecessor ===
v498 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j500 #next: j512  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v506 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
result [v98|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1061 
=== Succesors ===
next: v513 
=== Usages ===
v513 
=== Predecessor ===
a292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1061 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
result [v96|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1062 
value: j512 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
j512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1062 value: j512 stateAfter: - lastLocationAccess: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
result [v96|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
value: v555 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1063 value: v555 stateAfter: - lastLocationAccess: - #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
result [v96|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
value: i7 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1030 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1065 value: i7 stateAfter: - lastLocationAccess: - #next: i1030  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
result [v81|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1029 
=== Succesors ===
=== Usages ===
i1030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1030 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
=== Succesors ===
next: v522 
=== Usages ===
v522 
=== Predecessor ===
v520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1035 #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
result [v96|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
value: i1030 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
i1030 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1066 value: i1030 stateAfter: - lastLocationAccess: - #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
result [v96|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
result v101|V128_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,4294967295>
stableDimension: 0
stamp: <i64,i64>
stampKind: <i64,i64>
value: SIMD<0,4294967295>
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
value: v523 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1067 value: v523 stateAfter: - lastLocationAccess: - #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
result [v96|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1068 
value: j526 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1068 value: j526 stateAfter: - lastLocationAccess: - #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
result [v96|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i530 <|@
result int[16777216|0x1000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777216
stableDimension: 0
stamp: i32 [16777216] ⇊0000000001000000 ⇈0000000001000000
stampKind: i32
value: int[16777216|0x1000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1069 
value: i530 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1069 value: i530 stateAfter: - lastLocationAccess: - #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
result [v96|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a297 <|@
result v103|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/regex/Pattern;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
value: a297 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1070 value: a297 stateAfter: - lastLocationAccess: - #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
result [v96|QWORD[*] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a298 <|@
result v104|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a332 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1071 
value: a298 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1071 value: a298 stateAfter: - lastLocationAccess: - #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
result [v96|QWORD[*] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
result v105|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
value: a299 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1072 value: a299 stateAfter: - lastLocationAccess: - #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
result [v96|QWORD[*] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: j500 
index: - 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a300 <|@
result v106|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
value: a300 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a303 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1073 value: a300 stateAfter: - lastLocationAccess: - #next: a303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a303 <|@
result v97|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a292 
=== Succesors ===
next: v304 
=== Usages ===
v14 
=== Predecessor ===
v545 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a292 #next: v304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a303 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.matcher(Pattern.java:1094) [bci: 43]
stamp: void
=== Inputs ===
result: a303 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a303 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE v96|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [v98|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*]], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v96|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOV [v81|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 16], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|V128_QWORD = A od: SIMD<0,4294967295> oe: QWORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[*] + 20], input: v101|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 36], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v96|QWORD[*] + 44] y: 16777216 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 48], y: v103|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = COMPRESSPOINTER (input: v22|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 52], y: v104|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 56], y: v105|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 60], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B87" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v636  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v632 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v632  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B102 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=length target_method_class=Ljava/lang/String; position=at java.util.regex.Matcher.getTextLength(Matcher.java:1283) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:309) [bci: 75]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@376705954
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@376705954]
=== Inputs ===
=== Succesors ===
=== Usages ===
a344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
result int[-46131|0xffffffffffff4bcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46131
stableDimension: 0
stamp: i32 [-46131] ⇊00000000ffff4bcd ⇈00000000ffff4bcd
stampKind: i32
value: int[-46131|0xffffffffffff4bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376705954] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46131|0xffffffffffff4bcd], v107|QWORD[.]] destination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:306) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v1020 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-44059|0xffffffffffff53e5], v79|QWORD[.]] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B78" "B104" "B81" "B103" "B75" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i343 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-47627 - -44059] ⇊00000000ffff40c5 ⇈00000000ffff5ffd
valueDescription: i32
=== Inputs ===
merge: v339 
values: i341 i347 i350 i352 i347 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v339 values: i341 i347 i350 i352 i347  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
result v109|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v339 
values: a342 a348 a342 a353 a348 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v339 values: a342 a348 a342 a353 a348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v346 v349 v351 v1090 
=== Succesors ===
next: v345 
=== Usages ===
i343 a344 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v346 v349 v351 v1090 #next: v345  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Matcher.reset()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Matcher.java
sourceLine: 303
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a112 i146 
virtualObjectMappings: ?114 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a112 i146 virtualObjectMappings: ?114  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?69 
actionAndReason: i343 
speculation: a344 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?69 actionAndReason: i343 speculation: a344  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD, v109|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v109|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} v8|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v22|QWORD[.] v1|QWORD[.] v49|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:17, 79, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v577 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v577  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B106 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v741 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v741  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B107 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v687 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v687  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B108 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1001 
=== Predecessor ===
v1004 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1002 v1003 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1002 v1003 #next: v252  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 163
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:304) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
reason: BoundsCheckException
speculation: Object[d.a@779243092]
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@779243092] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -41755 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v110|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v7|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} v0|QWORD[.] v1|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] Object[null] v1|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 55, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59979519 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVSXB [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVZXB v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26486855267639303 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4604796694969746276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD, v5|DWORD, v6|QWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD, v8|DWORD, v9|QWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = DEC v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B109" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B12" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v8|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v15|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = AND v16|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v27|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v31|QWORD * 4], input: v117|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v31|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v27|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v34|QWORD * 4], input: v115|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v34|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = DEC v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v37|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" "B32" "B31" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SHL v41|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v42|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = AND v43|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v45|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v39|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + 12], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v41|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = LEA [v49|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v50|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v55|QWORD * 4], input: v116|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v55|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v50|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v58|QWORD * 4], input: v114|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v58|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = DEC v50|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v61|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B40" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v10|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v10|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v70|QWORD * 4], input: v123|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v70|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v10|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v73|QWORD * 4], input: v121|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v73|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v66|QWORD[.] + v76|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B56" "B70" "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = DEC v77|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B104" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B103" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|DWORD[.], y: v81|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LEA [v49|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|QWORD, y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v77|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|QWORD, y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v86|QWORD * 4], input: v122|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v86|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v77|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD, y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v89|QWORD * 4], input: v120|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v89|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v82|QWORD[.] + v92|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B83" "B97" "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = LEA [v93|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v94|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v93|QWORD + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|QWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE v96|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [v98|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*]], y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v96|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOV [v81|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 16], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|V128_QWORD = A od: SIMD<0,4294967295> oe: QWORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[*] + 20], input: v101|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 36], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v96|QWORD[*] + 44] y: 16777216 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 48], y: v103|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = COMPRESSPOINTER (input: v22|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 52], y: v104|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 56], y: v105|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[*] + 60], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B98" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598443067578448185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa], int[20|0x14], long[20|0x14]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v125|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B106 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B106" 
    successors "B61" "B106" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v66|QWORD[.] + v68|QWORD * 4], input: v125|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B108 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B108" 
    successors "B23" "B108" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v29|QWORD * 4], input: v119|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v29|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B107 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B107" 
    successors "B45" "B107" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v53|QWORD * 4], input: v118|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v53|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B87" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B102 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B102" 
    successors "B88" "B102" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v84|QWORD * 4], input: v124|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v84|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v112|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v7|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} v0|QWORD[.] v1|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] Object[null] v1|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v113|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v7|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} v0|QWORD[.] v1|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] Object[null] v1|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v111|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:305) [bci: 41]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} v41|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v22|QWORD[.] v1|QWORD[.] v49|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 79, 38] <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@765841921] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-44059|0xffffffffffff53e5], v127|QWORD[.]] destination: B75 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B78" "B104" "B81" "B103" "B75" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD, v109|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v109|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} v8|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=v22|QWORD[.],text=v1|QWORD[.],locals=v49|QWORD[.]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] v22|QWORD[.] v1|QWORD[.] v49|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:17, 79, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@765841921] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-44059|0xffffffffffff53e5], v126|QWORD[.]] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1387570399] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-47627|0xffffffffffff45f5], v128|QWORD[.]] destination: B81 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -39187 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@779243092] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -41755 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v110|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v7|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} v0|QWORD[.] v1|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=v0|QWORD[.],groups=Object[null],text=v1|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] v0|QWORD[.] Object[null] v1|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 55, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376705954] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46131|0xffffffffffff4bcd], v107|QWORD[.]] destination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1387570399] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45835|0xffffffffffff4cf5], v129|QWORD[.]] destination: B78 -> B105 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #6          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokespecial #7          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #10         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #8          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59979519 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = MOVSXB [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = MOVZXB rsi|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMP rsi|DWORD y: 10 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.26486855267639303 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4604796694969746276
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B109" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B12" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  102  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r9|DWORD = SHL rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr  112  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  138  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  140  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  142  <|@ instruction MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  188  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  206  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  254  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  256  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  258  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  278  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  280  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" "B32" "B31" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  324  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  344  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  346  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  348  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  350  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  354  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  390  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rcx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  440  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  452  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  454  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rcx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  476  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  478  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rcx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  488  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B40" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  524  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr  572  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  574  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  584  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction xmm0|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr  596  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  606  <|@ instruction CMP (x: r8|QWORD, y: stack:48|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction MOV [rdx|QWORD[.] + r8|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B56" "B70" "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rdx|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction rcx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  626  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B104" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B103" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r8|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  706  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  742  <|@ instruction r9|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  744  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  778  <|@ instruction r9|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  780  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr  792  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  794  <|@ instruction r9|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  804  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  806  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction xmm0|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr  816  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  818  <|@ instruction rdx|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  820  <|@ instruction rbx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  826  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction MOV [rsi|QWORD[.] + rbx|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B83" "B97" "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  844  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 64] size: QWORD <|@ <|@
      nr  846  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  848  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 256] instr: 0 <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  894  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr  898  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  902  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr  904  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  910  <|@ instruction xmm0|V128_QWORD = A od: SIMD<0,4294967295> oe: QWORD <|@ <|@
      nr  912  <|@ instruction J (address: [rsi|QWORD[*] + 20], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  914  <|@ instruction rcx|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr  916  <|@ instruction MOV (x: [rsi|QWORD[*] + 36], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction MOV [rsi|QWORD[*] + 44] y: 16777216 size: DWORD <|@ <|@
      nr  920  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr  922  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  924  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[*] + 52], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  928  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr  930  <|@ instruction MOV (x: [rsi|QWORD[*] + 56], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  932  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[*] + 60], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  936  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B6 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B98" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B83 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B56 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598443067578448185
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE input: int[20|0x14] <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr  538  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B106 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B106" 
    successors "B61" "B106" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  544  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  546  <|@ instruction r8|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  220  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B108 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B108" 
    successors "B23" "B108" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  226  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  228  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  418  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B107 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B107" 
    successors "B45" "B107" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  424  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  426  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr  758  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B87" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B102 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B102" 
    successors "B88" "B102" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  764  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  766  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:36|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:72|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} stack:72|QWORD[.] stack:32|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:72|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:72|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:72|QWORD[.] Object[null] stack:32|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  180  <|@ instruction r14|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:36|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r13|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} r13|QWORD[.] stack:32|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r13|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r13|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r13|QWORD[.] Object[null] stack:32|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction r14|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:16, stack:32, stack:64]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:305) [bci: 41]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r14|QWORD[.],groups=stack:64|QWORD[.],text=stack:32|QWORD[.],locals=stack:80|QWORD[.]} r13|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r14|QWORD[.],groups=stack:64|QWORD[.],text=stack:32|QWORD[.],locals=stack:80|QWORD[.]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r14|QWORD[.],groups=stack:64|QWORD[.],text=stack:32|QWORD[.],locals=stack:80|QWORD[.]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r14|QWORD[.] stack:64|QWORD[.] stack:32|QWORD[.] stack:80|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 79, 38] <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction r13|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@765841921] <|@ <|@
      nr  656  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r11|DWORD = MOVE input: int[-44059|0xffffffffffff53e5] <|@ <|@
      nr  660  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B75 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B78" "B104" "B81" "B103" "B75" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  982  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ st <@st|@reference-map: [rax:0, r9:0, r10:0, stack:64]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=rax|QWORD[.],text=stack:32|QWORD[.],locals=r9|QWORD[.]} r14|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=rax|QWORD[.],text=stack:32|QWORD[.],locals=r9|QWORD[.]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=rax|QWORD[.],text=stack:32|QWORD[.],locals=r9|QWORD[.]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r10|QWORD[.] rax|QWORD[.] stack:32|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:17, 79, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@765841921] <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction r11|DWORD = MOVE input: int[-44059|0xffffffffffff53e5] <|@ <|@
      nr  974  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1387570399] <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r11|DWORD = MOVE input: int[-47627|0xffffffffffff45f5] <|@ <|@
      nr  722  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B81 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction MOV [r15|QWORD + 668] y: -39187 size: DWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [r10:0, r14:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stack: int[0|0x0] 
locals: r10|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B9 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@779243092] <|@ <|@
      nr 1012  <|@ instruction MOV [r15|QWORD + 668] y: -41755 size: DWORD <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@reference-map: [r10:0, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: r11|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} r10|QWORD[.] stack:32|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r10|QWORD[.] Object[null] stack:32|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 55, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376705954] <|@ <|@
      nr  952  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr  956  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1387570399] <|@ <|@
      nr  686  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction r11|DWORD = MOVE input: int[-45835|0xffffffffffff4cf5] <|@ <|@
      nr  690  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B78 -> B105 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #6          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokespecial #7          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #10         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #8          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59979519 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = MOVSXB [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = MOVZXB rsi|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMP rsi|DWORD y: 10 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.26486855267639303 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4604796694969746276
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B11" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B11 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B110" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B110" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B110 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  100  <|@ instruction r8|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  102  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" "B14" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r9|DWORD = SHL rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr  112  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B16 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  138  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  140  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  142  <|@ instruction MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B33" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  188  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B33 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  206  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B27" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  254  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  256  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  258  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B24" 
    successors "B30" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  278  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  280  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B33" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B17" "B32" "B30" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" "B36" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  324  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B38 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  344  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  346  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  348  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  350  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  354  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B55" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  390  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B55 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors "B49" "B48" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rcx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  440  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction xmm0|V128_DWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  452  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  454  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  456  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B46" 
    successors "B52" "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rcx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction xmm0|V64_DWORD = L oc: SIMD<0,0> <|@ <|@
      nr  476  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  478  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" 
    successors "B55" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rcx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  488  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B39" "B54" "B52" 
    successors "B71" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B71 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  522  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  524  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B60" 
    successors "B65" "B64" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr  572  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  574  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  576  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B62" 
    successors "B68" "B67" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rcx|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  584  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B68 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction xmm0|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr  596  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  598  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  600  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B65" 
    successors "B71" "B70" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  606  <|@ instruction CMP (x: r8|QWORD, y: stack:48|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B71 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction MOV [rdx|QWORD[.] + r8|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B55" "B70" "B68" 
    successors "B77" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rdx|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  624  <|@ instruction rcx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  626  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B77 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B104" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B71" "B74" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B103" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r8|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  706  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B98" "B84" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B98 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  742  <|@ instruction r9|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  744  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" "B87" 
    successors "B92" "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  778  <|@ instruction r9|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  780  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B92 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1> <|@ <|@
      nr  792  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  794  <|@ instruction r9|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B89" 
    successors "B95" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  802  <|@ instruction rdx|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  804  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  806  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B95 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction xmm0|V64_DWORD = F nX: SIMD<-1,-1> <|@ <|@
      nr  816  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  818  <|@ instruction rdx|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  820  <|@ instruction rbx|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B92" 
    successors "B98" "B97" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  826  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B98 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction MOV [rsi|QWORD[.] + rbx|QWORD * 4] y: -1 size: DWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B82" "B97" "B95" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  844  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 64] size: QWORD <|@ <|@
      nr  846  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  848  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 256] instr: 0 <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  894  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>} <|@ <|@
      nr  898  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  900  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  902  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed} <|@ <|@
      nr  904  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  906  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  910  <|@ instruction xmm0|V128_QWORD = A od: SIMD<0,4294967295> oe: QWORD <|@ <|@
      nr  912  <|@ instruction J (address: [rsi|QWORD[*] + 20], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  914  <|@ instruction rcx|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr  916  <|@ instruction MOV (x: [rsi|QWORD[*] + 36], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction MOV [rsi|QWORD[*] + 44] y: 16777216 size: DWORD <|@ <|@
      nr  920  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr  922  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  924  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[*] + 52], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  928  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr  930  <|@ instruction MOV (x: [rsi|QWORD[*] + 56], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  932  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3 <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[*] + 60], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  936  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598443067578448185
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = MOVE input: int[20|0x14] <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr  538  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B60" 
    successors "B62" "B60" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  544  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  546  <|@ instruction r8|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B62 falseDestination: B60 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  220  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B22" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  226  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  228  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B24 falseDestination: B22 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  418  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" 
    successors "B46" "B44" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  424  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  426  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B46 falseDestination: B44 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1> <|@ <|@
      nr  758  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B87" 
    successors "B89" "B87" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  764  <|@ instruction J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  766  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B89 falseDestination: B87 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:36|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:72|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} stack:72|QWORD[.] stack:32|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:72|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:72|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] stack:72|QWORD[.] Object[null] stack:32|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  180  <|@ instruction r14|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:36|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r13|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} r13|QWORD[.] stack:32|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r13|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r13|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r13|QWORD[.] Object[null] stack:32|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction r14|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:16, stack:32, stack:64]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:305) [bci: 41]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r14|QWORD[.],groups=stack:64|QWORD[.],text=stack:32|QWORD[.],locals=stack:80|QWORD[.]} r13|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r14|QWORD[.],groups=stack:64|QWORD[.],text=stack:32|QWORD[.],locals=stack:80|QWORD[.]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r14|QWORD[.],groups=stack:64|QWORD[.],text=stack:32|QWORD[.],locals=stack:80|QWORD[.]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r14|QWORD[.] stack:64|QWORD[.] stack:32|QWORD[.] stack:80|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 79, 38] <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction r13|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@765841921] <|@ <|@
      nr  656  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r11|DWORD = MOVE input: int[-44059|0xffffffffffff53e5] <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B75 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B78" "B104" "B81" "B103" "B75" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  986  <|@ st <@st|@reference-map: [rax:0, r9:0, r10:0, stack:64]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=rax|QWORD[.],text=stack:32|QWORD[.],locals=r9|QWORD[.]} r14|DWORD 
java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79]
locals: - - - - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=rax|QWORD[.],text=stack:32|QWORD[.],locals=r9|QWORD[.]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=rax|QWORD[.],text=stack:32|QWORD[.],locals=r9|QWORD[.]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r10|QWORD[.] rax|QWORD[.] stack:32|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:17, 79, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@765841921] <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction r11|DWORD = MOVE input: int[-44059|0xffffffffffff53e5] <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1387570399] <|@ <|@
      nr  718  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r11|DWORD = MOVE input: int[-47627|0xffffffffffff45f5] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B81 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction MOV [r15|QWORD + 668] y: -39187 size: DWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [r10:0, r14:0]
live-base-pointers: []
java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4]
stack: int[0|0x0] 
locals: r10|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@779243092] <|@ <|@
      nr 1012  <|@ instruction MOV [r15|QWORD + 668] y: -41755 size: DWORD <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@reference-map: [r10:0, stack:64]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: r11|DWORD 
locals: - - 
java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55]
locals: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} r10|QWORD[.] stack:32|QWORD[.] - 
java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38]
stack: vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} 
locals: - - - - 
vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]} Ljava/util/regex/Matcher; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[-1|0xffffffffffffffff] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[1|0x1] r10|QWORD[.] Object[null] stack:32|QWORD[.] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 55, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376705954] <|@ <|@
      nr  952  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd] <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B105" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1387570399] <|@ <|@
      nr  686  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction r11|DWORD = MOVE input: int[-45835|0xffffffffffff4cf5] <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B78 -> B105 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // compiled:boolean
     4: ifne          32
     7: aload_0       
     8: dup           
     9: astore_2      
    10: monitorenter  
    11: aload_0       
    12: getfield      #6          // compiled:boolean
    15: ifne          22
    18: aload_0       
    19: invokespecial #7          // compile:()void
    22: aload_2       
    23: monitorexit   
    24: goto          32
    27: astore_3      
    28: aload_2       
    29: monitorexit   
    30: aload_3       
    31: athrow        
    32: new           #10         // java.util.regex.Matcher
    35: dup           
    36: aload_0       
    37: aload_1       
    38: invokespecial #8          // java.util.regex.Matcher.<init>:(java.util.regex.Pattern, java.lang.CharSequence)void
    41: astore_2      
    42: aload_2       
    43: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8bee4c8bf24c89742440410fbe7520400fb6f685f60f84aa050000418b751083fe0a0f8ce70300008bd6d1e24863ca8974243c448bd24d8bda49ffcb85d20f8411000000493bcb0f869305000085d20f848b050000498b4f604d8b477081faffffff000f836e040000448bca41c1e102458d49174183e1f84d63c9498bd94803d9493bd80f874d04000049895f60410f188409c0000000410f18840900010000410f18840940010000410f1884098001000089510c48c70101000000c74108addeadde488bc14c895c24304c89542428448bf248894424204183fe010f8c67000000488d70104963d6488d4af84885c90f8d5d03000049c7c200000000488d4afc4c3bd10f8f11000000c5f9efc0c4a17a7f0496498d4a044c8bd1488d4afe4c3bd10f8f11000000c5f9efc0c4a1f97e0496498d4a024c8bd148ffca4c3bd20f8f0400000046892496498b7760498b5770458b55144181faffffff000f8350030000418bcac1e1028d491783e1f84863c94c8bd94c03de4c3bda0f87320300004d895f600f188431c00000000f188431000100000f188431400100000f188431800100004489560c48c70601000000c74608addeadde4c896c2418488bc6458bea4963f54183fd010f8c67000000488d5010488d4ef84885c90f8d9402000049c7c200000000488d4efc4c3bd10f8f11000000c5f9efc0c4a17a7f0492498d4a044c8bd1488d4efe4c3bd10f8f11000000c5f9efc0c4a1f97e0492498d4a024c8bd1488bce48ffc94c3bd10f8f04000000468924924585f64c8b5424200f846c0000004c8b5c2428498d5210498d4bf84885c90f8dcf01000049c7c000000000498d4bfc4c3bc10f8f11000000c5f976c0c4a17a7f0482498d48044c8bc1498d4bfe4c3bc10f8f11000000c5f976c0c4a1f97e0482498d48024c8bc14c3b4424300f8f0800000042c70482ffffffff418bd5488bca48ffc94585ed0f8412000000483bf10f86bd0200004585ed0f84790200004c8b5c24404d85db0f844b03000041817b08addeadde0f851b030000458b430c4585c00f84aa0200004585ed0f8463000000488d70104c8d4af84d85c90f8d7d01000048c7c3000000004c8d4afc493bd90f8f10000000c5f976c0c5fa7f049e4c8d4b04498bd9488d52fe483bda0f8f11000000c5f976c0c4e1f97e049e488d5302488bda483bd90f8f07000000c7049effffffff498b7760488d5640493b57700f878a010000498957600f1886000100004c8b6c2418488bd648b9addeaddeaddeadde488b89a800000048890ec74608addeadde4489660c428b0cc50c000000894e10c4c1796f0500000000c5fa7f4614b9ffffffff48894e24c7462c0000000149c1ed0344896e30498bca48c1e903894e344d8bf349c1ee034489763848c1e80389463c488bc2488b6c24504883c458850500000000c5f877c348c7c114000000ba14000000c744243c0a000000e90bfcffffc5fd76c049c7c000000000660f1f440000660f1f440000c4a17e7f04824d8d40084c3bc17ef1e90dfeffffc5f9efc049c7c20000000090c4a17e7f04964d8d52084c3bd17ef1e98afcffffc5f9efc049c7c20000000090c4a17e7f04924d8d52084c3bd17ef1e953fdffffc5fd76c048c7c30000000090c5fe7f049e488d5b08493bd97ef2e96bfeffff4c896c241848beaddeaddeaddeadde418bd2b900000000458beae80000000090e9eafcffff4c895c24304c8954242848b9addeaddeaddeadde488bf1448bcab900000000458bf1e80000000090e9cffbffff448944240c48894424104c8b74241848beaddeaddeaddeaddeba0c000000b901000000e80000000090488bf0448b44240c488b4424104c8b5424204c8b5c24404d8beee93efeffff48894424104c8b54241849bbaddeaddeaddeadde4d8bc341bbe553ffff4c8b4c2410488b44242045899f9c0200004d8987a8020000e8000000009048894424104c8b54241849bbaddeaddeaddeadde4d8bc341bbe553ffffebc348894424104c8b54241849bbaddeaddeaddeadde4d8bc341bbf545ffffeba44d8bd541c7879c020000ed66ffff4d89a7a8020000e80000000090448b5c243c4d8bd549b8addeaddeaddeadde41c7879c020000e55cffff4d8987a8020000e8000000009048894424104c8b54241849bbaddeaddeaddeadde4d8bc341bbcd4bffffe93dffffff48894424104c8b54241849bbaddeaddeaddeadde4d8bc341bbf54cffffe91bffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59979519 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 59 12 rsi|DWORD = MOVSXB [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 64 14 rsi|DWORD = MOVZXB rsi|DWORD size: DWORD  <||@
  Comment 68 16 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 70 18 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 76 block B2 null  <||@
  Comment 76 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 32 rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 80 34 CMP rsi|DWORD y: 10 size: DWORD  <||@
  Comment 83 36 BRANCH trueDestinationProbability: 0.26486855267639303 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 89 block B4 null  <||@
  Comment 89 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 89 50 rdx|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 93 52 rcx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 96 54 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 100 56 JUMP ~[] destination: B4 -> B5  <||@
  Comment 100 block B5 null  <||@
  Comment 100 58 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 100 60 r10|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 103 62 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 109 64 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 111 66 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B11 falseDestination: B5 -> B7  <||@
  Comment 117 block B7 null  <||@
  Comment 117 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 74 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 120 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B110  <||@
  Comment 126 block B8 null  <||@
  Comment 126 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 80 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 128 82 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B110 falseDestination: B8 -> B11  <||@
  Comment 134 block B11 null  <||@
  Comment 134 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 98 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 138 100 r8|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 142 102 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 148 104 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16  <||@
  Comment 154 block B12 null  <||@
  Comment 154 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 108 r9|DWORD = SHL rdx|DWORD y: 2 size: DWORD  <||@
  Comment 161 110 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 165 112 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 169 114 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 172 116 rbx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 178 118 CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 181 120 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B16 falseDestination: B12 -> B14  <||@
  Comment 187 block B14 null  <||@
  Comment 187 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 132 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 191 134 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 200 136 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 209 138 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 218 140 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 227 142 MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 230 144 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 237 146 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 237 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 244 148 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 244 150 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 247 152 stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 252 154 stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 257 156 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 260 158 JUMP ~[] destination: B14 -> B17  <||@
  Comment 260 block B17 null  <||@
  Comment 260 186 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 260 188 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 265 190 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 269 192 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B33 falseDestination: B17 -> B19  <||@
  Comment 275 block B19 null  <||@
  Comment 275 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 200 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 279 202 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 282 204 rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 286 206 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 289 208 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 295 block B20 null  <||@
  Comment 295 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 295 212 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 302 214 JUMP ~[] destination: B20 -> B24  <||@
  Comment 302 block B24 null  <||@
  Comment 302 238 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 302 240 rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 306 242 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 309 244 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 315 block B26 null  <||@
  Comment 315 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 252 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 319 254 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 325 256 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 329 258 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 332 260 JUMP ~[] destination: B26 -> B27  <||@
  Comment 332 block B27 null  <||@
  Comment 332 262 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 332 264 rcx|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 336 266 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 339 268 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 345 block B29 null  <||@
  Comment 345 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 276 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 349 278 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 355 280 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 359 282 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 362 284 JUMP ~[] destination: B29 -> B30  <||@
  Comment 362 block B30 null  <||@
  Comment 362 286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 362 288 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 365 290 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 368 292 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32  <||@
  Comment 374 block B32 null  <||@
  Comment 374 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 300 MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 378 302 JUMP ~[] destination: B32 -> B33  <||@
  Comment 378 block B33 null  <||@
  Comment 378 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 378 306 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 382 308 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 386 310 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 390 312 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 397 314 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38  <||@
  Comment 403 block B34 null  <||@
  Comment 403 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 403 318 rcx|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 409 320 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 412 322 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 415 324 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 418 326 r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 424 328 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 427 330 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B38 falseDestination: B34 -> B36  <||@
  Comment 433 block B36 null  <||@
  Comment 433 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 433 340 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 437 342 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 445 344 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 453 346 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 461 348 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 469 350 MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 473 352 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 480 354 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 480 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 487 356 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 487 358 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 492 360 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 495 362 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 498 364 JUMP ~[] destination: B36 -> B39  <||@
  Comment 498 block B39 null  <||@
  Comment 498 386 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 498 388 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 501 390 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 505 392 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B55 falseDestination: B39 -> B41  <||@
  Comment 511 block B41 null  <||@
  Comment 511 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 400 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 515 402 rcx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 519 404 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 522 406 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 528 block B42 null  <||@
  Comment 528 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 528 410 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 535 412 JUMP ~[] destination: B42 -> B46  <||@
  Comment 535 block B46 null  <||@
  Comment 535 436 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 535 438 rcx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 539 440 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 542 442 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 548 block B48 null  <||@
  Comment 548 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 450 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 552 452 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 558 454 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 562 456 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 565 458 JUMP ~[] destination: B48 -> B49  <||@
  Comment 565 block B49 null  <||@
  Comment 565 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 565 462 rcx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 569 464 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 572 466 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51  <||@
  Comment 578 block B51 null  <||@
  Comment 578 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 578 474 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 582 476 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 588 478 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 592 480 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 595 482 JUMP ~[] destination: B51 -> B52  <||@
  Comment 595 block B52 null  <||@
  Comment 595 484 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 595 486 rcx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 601 488 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 604 490 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54  <||@
  Comment 610 block B54 null  <||@
  Comment 610 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 610 498 MOV (x: [rdx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 614 500 JUMP ~[] destination: B54 -> B55  <||@
  Comment 614 block B55 null  <||@
  Comment 614 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 614 504 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 617 510 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 622 506 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B71 falseDestination: B55 -> B57  <||@
  Comment 628 block B57 null  <||@
  Comment 628 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 518 r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 633 520 rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 637 522 rcx|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 641 524 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 644 526 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 650 block B58 null  <||@
  Comment 650 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 650 530 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 657 532 JUMP ~[] destination: B58 -> B62  <||@
  Comment 657 block B62 null  <||@
  Comment 657 556 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 657 558 rcx|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 661 560 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 664 562 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 670 block B64 null  <||@
  Comment 670 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 670 570 xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1>  <||@
  Comment 674 572 J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 680 574 rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 684 576 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 687 578 JUMP ~[] destination: B64 -> B65  <||@
  Comment 687 block B65 null  <||@
  Comment 687 580 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 687 582 rcx|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 691 584 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 694 586 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B68 falseDestination: B65 -> B67  <||@
  Comment 700 block B67 null  <||@
  Comment 700 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 594 xmm0|V64_DWORD = F nX: SIMD<-1,-1>  <||@
  Comment 704 596 J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 710 598 rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 714 600 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 717 602 JUMP ~[] destination: B67 -> B68  <||@
  Comment 717 block B68 null  <||@
  Comment 717 604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 717 606 CMP (x: r8|QWORD, y: stack:48|QWORD) size: QWORD  <||@
  Comment 722 608 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B71 falseDestination: B68 -> B70  <||@
  Comment 728 block B70 null  <||@
  Comment 728 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 728 616 MOV [rdx|QWORD[.] + r8|QWORD * 4] y: -1 size: DWORD  <||@
  Comment 736 618 JUMP ~[] destination: B70 -> B71  <||@
  Comment 736 block B71 null  <||@
  Comment 736 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 736 622 rdx|QWORD = MOV r13|DWORD size: DWORD  <||@
  Comment 739 624 rcx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 745 626 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 748 628 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B77 falseDestination: B71 -> B73  <||@
  Comment 754 block B73 null  <||@
  Comment 754 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 638 CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 757 640 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B104  <||@
  Comment 763 block B74 null  <||@
  Comment 763 642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 644 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 766 646 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B77  <||@
  Comment 772 block B77 null  <||@
  Comment 772 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 772 632 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 777 674 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 780 676 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 786 block B79 null  <||@
  Comment 786 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 786 698 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 786 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 794 700 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B103  <||@
  Comment 800 block B80 null  <||@
  Comment 800 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 800 704 r8|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 804 706 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 807 708 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 813 block B82 null  <||@
  Comment 813 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 813 730 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 816 732 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B98 falseDestination: B82 -> B84  <||@
  Comment 822 block B84 null  <||@
  Comment 822 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 822 740 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 826 742 r9|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 830 744 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 833 746 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 839 block B85 null  <||@
  Comment 839 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 750 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 846 752 JUMP ~[] destination: B85 -> B89  <||@
  Comment 846 block B89 null  <||@
  Comment 846 776 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 846 778 r9|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 850 780 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 853 782 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B92 falseDestination: B89 -> B91  <||@
  Comment 859 block B91 null  <||@
  Comment 859 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 790 xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1>  <||@
  Comment 863 792 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 868 794 r9|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 872 796 rbx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 875 798 JUMP ~[] destination: B91 -> B92  <||@
  Comment 875 block B92 null  <||@
  Comment 875 800 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 875 802 rdx|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 879 804 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 882 806 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B95 falseDestination: B92 -> B94  <||@
  Comment 888 block B94 null  <||@
  Comment 888 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 888 814 xmm0|V64_DWORD = F nX: SIMD<-1,-1>  <||@
  Comment 892 816 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 898 818 rdx|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 902 820 rbx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 905 822 JUMP ~[] destination: B94 -> B95  <||@
  Comment 905 block B95 null  <||@
  Comment 905 824 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 905 826 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 908 828 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B98 falseDestination: B95 -> B97  <||@
  Comment 914 block B97 null  <||@
  Comment 914 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 836 MOV [rsi|QWORD[.] + rbx|QWORD * 4] y: -1 size: DWORD  <||@
  Comment 921 838 JUMP ~[] destination: B97 -> B98  <||@
  Comment 921 block B98 null  <||@
  Comment 921 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 921 842 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 925 844 rdx|QWORD = LEA [rsi|QWORD + 64] size: QWORD  <||@
  Comment 929 846 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 933 848 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 939 block B100 null  <||@
  Comment 939 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 882 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 943 884 AMD64PREFETCH ~[rsi|QWORD + 256] instr: 0  <||@
  Comment 950 886 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 950 888 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 955 890 JUMP ~[] destination: B100 -> B101  <||@
  Comment 955 block B101 null  <||@
  Comment 955 892 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 955 894 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 958 896 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}  <||@
  Comment 958 {meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}}  <||@
  Comment 968 898 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 975 900 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 978 902 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}  <||@
  Comment 978 {meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}}  <||@
  Comment 985 904 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 989 906 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 997 908 MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1000 910 xmm0|V128_QWORD = A od: SIMD<0,4294967295> oe: QWORD  <||@
  Comment 1000 {DataSection[0x0]}  <||@
  Comment 1009 912 J (address: [rsi|QWORD[*] + 20], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1014 914 rcx|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 1019 916 MOV (x: [rsi|QWORD[*] + 36], y: rcx|QWORD) size: QWORD  <||@
  Comment 1023 918 MOV [rsi|QWORD[*] + 44] y: 16777216 size: DWORD  <||@
  Comment 1030 920 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3  <||@
  Comment 1034 922 MOV (x: [rsi|QWORD[*] + 48], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1038 924 rcx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3  <||@
  Comment 1045 926 MOV (x: [rsi|QWORD[*] + 52], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1048 928 r14|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3  <||@
  Comment 1055 930 MOV (x: [rsi|QWORD[*] + 56], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1059 932 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3  <||@
  Comment 1063 934 MOV (x: [rsi|QWORD[*] + 60], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1066 936 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1069 938 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1078 12  <||@
  Comment 1088 block B3 null  <||@
  Comment 1088 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1088 40 rcx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1095 42 rdx|DWORD = MOVE input: int[20|0x14]  <||@
  Comment 1100 44 stack:36|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1108 46 JUMP ~[] destination: B3 -> B5  <||@
  Comment 1113 block B59 null  <||@
  Comment 1113 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 536 xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>  <||@
  Comment 1117 538 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1124 540 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1124 block B60 loop 2 depth 1 header:577|LoopBegin  <||@
  Comment 1124 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1136 544 J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1142 546 r8|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1146 548 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1149 550 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B62 falseDestination: B60 -> B60  <||@
  Comment 1156 block B21 null  <||@
  Comment 1156 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1156 218 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1160 220 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1167 222 JUMP ~[] destination: B21 -> B22  <||@
  Comment 1167 block B22 loop 0 depth 1 header:687|LoopBegin  <||@
  Comment 1167 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1168 226 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1174 228 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1178 230 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1181 232 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B24 falseDestination: B22 -> B22  <||@
  Comment 1188 block B43 null  <||@
  Comment 1188 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1188 416 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1192 418 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1199 420 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1199 block B44 loop 1 depth 1 header:741|LoopBegin  <||@
  Comment 1199 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1200 424 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1206 426 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1210 428 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1213 430 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B46 falseDestination: B44 -> B44  <||@
  Comment 1220 block B86 null  <||@
  Comment 1220 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1220 756 xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>  <||@
  Comment 1224 758 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1231 760 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1231 block B87 loop 3 depth 1 header:632|LoopBegin  <||@
  Comment 1231 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1232 764 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1237 766 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 1241 768 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1244 770 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B89 falseDestination: B87 -> B87  <||@
  Comment 1251 block B38 null  <||@
  Comment 1251 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1251 368 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1256 374 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1256 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1266 376 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1269 378 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1274 380 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1277 382 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38]  <||@
  Comment 1277 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1282 [stack:24, stack:32, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:36|DWORD  |  
  at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                |1                  |2                  |3 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:72|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:72|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |   |   |    <||@
  Comment 1283 384 JUMP ~[] destination: B38 -> B39  <||@
  Comment 1288 block B16 null  <||@
  Comment 1288 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1288 162 stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1293 164 stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1298 170 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1298 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1308 172 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1311 174 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1314 178 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1319 180 r14|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1322 182 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38]  <||@
  Comment 1322 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1327 [r13:0, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:36|DWORD  |  
  at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                           |1             |2                  |3 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r13|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |r13|QWORD[.]  |stack:32|QWORD[.]  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                           |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                           |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r13|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |   |   |    <||@
  Comment 1328 184 JUMP ~[] destination: B16 -> B17  <||@
  Comment 1333 block B99 null  <||@
  Comment 1333 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1333 852 stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1338 854 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 856 r14|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1348 858 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1348 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1358 860 rdx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 1363 862 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1368 864 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 79, 38]  <||@
  Comment 1368 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1373 [r14:0, stack:12, stack:16, stack:32, stack:64]at java.util.regex.Matcher.reset(Matcher.java:305) [bci: 41, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                     |1         
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r14|QWORD[.],groups=stack:64|QWORD[.],text=stack:32|QWORD[.],locals=stack:80|QWORD[.]}  |r13|DWORD 
  at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                     |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                     |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r14|QWORD[.],groups=stack:64|QWORD[.],text=stack:32|QWORD[.],locals=stack:80|QWORD[.]}  |   |   |    <||@
  Comment 1374 866 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1377 868 r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1382 870 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 872 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1392 874 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1397 876 r13|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1400 878 JUMP ~[] destination: B99 -> B101  <||@
  Comment 1405 block B75 null  <||@
  Comment 1405 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1405 650 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1410 652 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1415 654 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@765841921]  <||@
  Comment 1415 {Object[d.a@765841921]}  <||@
  Comment 1425 656 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1428 658 r11|DWORD = MOVE input: int[-44059|0xffffffffffff53e5]  <||@
  Comment 1434 664 JUMP ~[] destination: B75 -> B105  <||@
  Comment 1434 block B105 null  <||@
  Comment 1434 980 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1434 690 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 692 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1444 982 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1451 984 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1458 986 DEOPT info [bci:17, 79, 38]  <||@
  Comment 1458 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1463 [rax:0, r9:0, r10:0, stack:64]at java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                          |1         
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=rax|QWORD[.],text=stack:32|QWORD[.],locals=r9|QWORD[.]}  |r14|DWORD 
  at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                          |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                          |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=rax|QWORD[.],text=stack:32|QWORD[.],locals=r9|QWORD[.]}  |   |   |    <||@
  Comment 1464 block B104 null  <||@
  Comment 1464 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1464 964 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1469 966 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1474 968 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@765841921]  <||@
  Comment 1474 {Object[d.a@765841921]}  <||@
  Comment 1484 970 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1487 972 r11|DWORD = MOVE input: int[-44059|0xffffffffffff53e5]  <||@
  Comment 1493 978 JUMP ~[] destination: B104 -> B105  <||@
  Comment 1495 block B81 null  <||@
  Comment 1495 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1495 712 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1500 714 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1505 716 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1387570399]  <||@
  Comment 1505 {Object[d.a@1387570399]}  <||@
  Comment 1515 718 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1518 720 r11|DWORD = MOVE input: int[-47627|0xffffffffffff45f5]  <||@
  Comment 1524 726 JUMP ~[] destination: B81 -> B105  <||@
  Comment 1526 block B1 null  <||@
  Comment 1526 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1526 22 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1529 24 MOV [r15|QWORD + 668] y: -39187 size: DWORD  <||@
  Comment 1540 26 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1547 28 DEOPT info [bci:4]  <||@
  Comment 1547 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1552 [r10:0, r14:0]at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r14|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]    |              |   |    <||@
  Comment 1553 block B110 null  <||@
  Comment 1553 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1553 1002 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1558 1004 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1561 1010 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@779243092]  <||@
  Comment 1561 {Object[d.a@779243092]}  <||@
  Comment 1571 1012 MOV [r15|QWORD + 668] y: -41755 size: DWORD  <||@
  Comment 1582 1014 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1589 1016 DEOPT info [bci:10, 55, 38]  <||@
  Comment 1589 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1594 [r10:0, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r11|DWORD  |  
  at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                           |1             |2                  |3 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |r10|QWORD[.]  |stack:32|QWORD[.]  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                           |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                           |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |   |   |    <||@
  Comment 1595 block B103 null  <||@
  Comment 1595 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1595 946 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1600 948 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1605 950 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376705954]  <||@
  Comment 1605 {Object[d.a@376705954]}  <||@
  Comment 1615 952 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1618 954 r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd]  <||@
  Comment 1624 960 JUMP ~[] destination: B103 -> B105  <||@
  Comment 1629 block B78 null  <||@
  Comment 1629 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 680 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 682 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 684 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1387570399]  <||@
  Comment 1639 {Object[d.a@1387570399]}  <||@
  Comment 1649 686 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1652 688 r11|DWORD = MOVE input: int[-45835|0xffffffffffff4cf5]  <||@
  Comment 1658 694 JUMP ~[] destination: B78 -> B105  <||@
  Comment 1663 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1663 4  <||@
  Comment 1669 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1669 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6534[java.util.regex.Pattern.matcher(CharSequence)]"
  method "HotSpotCompilation-6534[java.util.regex.Pattern.matcher(CharSequence)]"
  date 1527005196159
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b4af40 448b560849c1e203493bc20f850fafcbfe900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8bee4c8bf24c89742440410fbe7520400fb6f685f60f84aa050000418b751083fe0a0f8ce70300008bd6d1e24863ca8974243c448bd24d8bda49ffcb85d20f8411000000493bcb0f869305000085d20f848b050000498b4f604d8b477081faffffff000f836e040000448bca41c1e102458d49174183e1f84d63c9498bd94803d9493bd80f874d04000049895f60410f188409c0000000410f18840900010000410f18840940010000410f1884098001000089510c48c70101000000c741086d0100f8488bc14c895c24304c89542428448bf248894424204183fe010f8c67000000488d70104963d6488d4af84885c90f8d5d03000049c7c200000000488d4afc4c3bd10f8f11000000c5f9efc0c4a17a7f0496498d4a044c8bd1488d4afe4c3bd10f8f11000000c5f9efc0c4a1f97e0496498d4a024c8bd148ffca4c3bd20f8f0400000046892496498b7760498b5770458b55144181faffffff000f8350030000418bcac1e1028d491783e1f84863c94c8bd94c03de4c3bda0f87320300004d895f600f188431c00000000f188431000100000f188431400100000f188431800100004489560c48c70601000000c746086d0100f84c896c2418488bc6458bea4963f54183fd010f8c67000000488d5010488d4ef84885c90f8d9402000049c7c200000000488d4efc4c3bd10f8f11000000c5f9efc0c4a17a7f0492498d4a044c8bd1488d4efe4c3bd10f8f11000000c5f9efc0c4a1f97e0492498d4a024c8bd1488bce48ffc94c3bd10f8f04000000468924924585f64c8b5424200f846c0000004c8b5c2428498d5210498d4bf84885c90f8dcf01000049c7c000000000498d4bfc4c3bc10f8f11000000c5f976c0c4a17a7f0482498d48044c8bc1498d4bfe4c3bc10f8f11000000c5f976c0c4a1f97e0482498d48024c8bc14c3b4424300f8f0800000042c70482ffffffff418bd5488bca48ffc94585ed0f8412000000483bf10f86bd0200004585ed0f84790200004c8b5c24404d85db0f844b03000041817b08da0200f80f851b030000458b430c4585c00f84aa0200004585ed0f8463000000488d70104c8d4af84d85c90f8d7d01000048c7c3000000004c8d4afc493bd90f8f10000000c5f976c0c5fa7f049e4c8d4b04498bd9488d52fe483bda0f8f11000000c5f976c0c4e1f97e049e488d5302488bda483bd90f8f07000000c7049effffffff498b7760488d5640493b57700f878a010000498957600f1886000100004c8b6c2418488bd648b9287805c007000000488b89a800000048890ec7460805af00f84489660c428b0cc50c000000894e10c4c1796f05effbffffc5fa7f4614b9ffffffff48894e24c7462c0000000149c1ed0344896e30498bca48c1e903894e344d8bf349c1ee034489763848c1e80389463c488bc2488b6c24504883c45885058a3cd4fcc5f877c348c7c114000000ba14000000c744243c0a000000e90bfcffffc5fd76c049c7c000000000660f1f440000660f1f440000c4a17e7f04824d8d40084c3bc17ef1e90dfeffffc5f9efc049c7c20000000090c4a17e7f04964d8d52084c3bd17ef1e98afcffffc5f9efc049c7c20000000090c4a17e7f04924d8d52084c3bd17ef1e953fdffffc5fd76c048c7c30000000090c5fe7f049e488d5b08493bd97ef2e96bfeffff4c896c241848be680b00c007000000418bd2b900000000458beae89eb944ff90e9eafcffff4c895c24304c8954242848b9680b00c007000000488bf1448bcab900000000458bf1e871b944ff90e9cffbffff448944240c48894424104c8b74241848be680b00c007000000ba0c000000b901000000e843b944ff90488bf0448b44240c488b4424104c8b5424204c8b5c24404d8beee93efeffff48894424104c8b54241849bbe00309bd070000004d8bc341bbe553ffff4c8b4c2410488b44242045899f9c0200004d8987a8020000e807c1cbfe9048894424104c8b54241849bbe00309bd070000004d8bc341bbe553ffffebc348894424104c8b54241849bb400409bd070000004d8bc341bbf545ffffeba44d8bd541c7879c020000ed66ffff4d89a7a8020000e8aec0cbfe90448b5c243c4d8bd549b8b00309bd0700000041c7879c020000e55cffff4d8987a8020000e884c0cbfe9048894424104c8b54241849bb700409bd070000004d8bc341bbcd4bffffe93dffffff48894424104c8b54241849bb400409bd070000004d8bc341bbf54cffffe91bffffffe85cf00fff90e836bfcbfe90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59979519 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 stack:32|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 59 12 rsi|DWORD = MOVSXB [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 64 14 rsi|DWORD = MOVZXB rsi|DWORD size: DWORD  <||@
  Comment 68 16 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 70 18 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 76 block B2 null  <||@
  Comment 76 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 32 rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 80 34 CMP rsi|DWORD y: 10 size: DWORD  <||@
  Comment 83 36 BRANCH trueDestinationProbability: 0.26486855267639303 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 89 block B4 null  <||@
  Comment 89 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 89 50 rdx|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 93 52 rcx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 96 54 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 100 56 JUMP ~[] destination: B4 -> B5  <||@
  Comment 100 block B5 null  <||@
  Comment 100 58 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 100 60 r10|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 103 62 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 109 64 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 111 66 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B11 falseDestination: B5 -> B7  <||@
  Comment 117 block B7 null  <||@
  Comment 117 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 74 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 120 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B110  <||@
  Comment 126 block B8 null  <||@
  Comment 126 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 80 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 128 82 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B110 falseDestination: B8 -> B11  <||@
  Comment 134 block B11 null  <||@
  Comment 134 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 98 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 138 100 r8|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 142 102 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 148 104 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16  <||@
  Comment 154 block B12 null  <||@
  Comment 154 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 108 r9|DWORD = SHL rdx|DWORD y: 2 size: DWORD  <||@
  Comment 161 110 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 165 112 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 169 114 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 172 116 rbx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 178 118 CMP (x: rbx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 181 120 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B16 falseDestination: B12 -> B14  <||@
  Comment 187 block B14 null  <||@
  Comment 187 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 132 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 191 134 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 200 136 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 209 138 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 218 140 AMD64PREFETCH ~[r9|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 227 142 MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 230 144 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 237 146 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 237 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 244 148 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 244 150 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 247 152 stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 252 154 stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 257 156 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 260 158 JUMP ~[] destination: B14 -> B17  <||@
  Comment 260 block B17 null  <||@
  Comment 260 186 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 260 188 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 265 190 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 269 192 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B17 -> B33 falseDestination: B17 -> B19  <||@
  Comment 275 block B19 null  <||@
  Comment 275 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 200 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 279 202 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 282 204 rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 286 206 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 289 208 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 295 block B20 null  <||@
  Comment 295 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 295 212 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 302 214 JUMP ~[] destination: B20 -> B24  <||@
  Comment 302 block B24 null  <||@
  Comment 302 238 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 302 240 rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 306 242 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 309 244 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 315 block B26 null  <||@
  Comment 315 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 252 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 319 254 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 325 256 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 329 258 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 332 260 JUMP ~[] destination: B26 -> B27  <||@
  Comment 332 block B27 null  <||@
  Comment 332 262 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 332 264 rcx|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 336 266 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 339 268 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 345 block B29 null  <||@
  Comment 345 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 276 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 349 278 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 355 280 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 359 282 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 362 284 JUMP ~[] destination: B29 -> B30  <||@
  Comment 362 block B30 null  <||@
  Comment 362 286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 362 288 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 365 290 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 368 292 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32  <||@
  Comment 374 block B32 null  <||@
  Comment 374 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 300 MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 378 302 JUMP ~[] destination: B32 -> B33  <||@
  Comment 378 block B33 null  <||@
  Comment 378 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 378 306 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 382 308 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 386 310 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 390 312 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 397 314 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38  <||@
  Comment 403 block B34 null  <||@
  Comment 403 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 403 318 rcx|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 409 320 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 412 322 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 415 324 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 418 326 r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 424 328 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 427 330 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B38 falseDestination: B34 -> B36  <||@
  Comment 433 block B36 null  <||@
  Comment 433 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 433 340 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 437 342 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 445 344 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 453 346 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 461 348 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 469 350 MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 473 352 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 480 354 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 480 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 487 356 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 487 358 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 492 360 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 495 362 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 498 364 JUMP ~[] destination: B36 -> B39  <||@
  Comment 498 block B39 null  <||@
  Comment 498 386 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 498 388 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 501 390 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 505 392 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B55 falseDestination: B39 -> B41  <||@
  Comment 511 block B41 null  <||@
  Comment 511 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 400 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 515 402 rcx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 519 404 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 522 406 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 528 block B42 null  <||@
  Comment 528 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 528 410 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 535 412 JUMP ~[] destination: B42 -> B46  <||@
  Comment 535 block B46 null  <||@
  Comment 535 436 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 535 438 rcx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 539 440 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 542 442 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 548 block B48 null  <||@
  Comment 548 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 450 xmm0|V128_DWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 552 452 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 558 454 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 562 456 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 565 458 JUMP ~[] destination: B48 -> B49  <||@
  Comment 565 block B49 null  <||@
  Comment 565 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 565 462 rcx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 569 464 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 572 466 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51  <||@
  Comment 578 block B51 null  <||@
  Comment 578 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 578 474 xmm0|V64_DWORD = L oc: SIMD<0,0>  <||@
  Comment 582 476 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 588 478 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 592 480 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 595 482 JUMP ~[] destination: B51 -> B52  <||@
  Comment 595 block B52 null  <||@
  Comment 595 484 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 595 486 rcx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 601 488 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 604 490 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54  <||@
  Comment 610 block B54 null  <||@
  Comment 610 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 610 498 MOV (x: [rdx|QWORD[.] + r10|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 614 500 JUMP ~[] destination: B54 -> B55  <||@
  Comment 614 block B55 null  <||@
  Comment 614 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 614 504 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 617 510 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 622 506 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B71 falseDestination: B55 -> B57  <||@
  Comment 628 block B57 null  <||@
  Comment 628 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 518 r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 633 520 rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 637 522 rcx|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 641 524 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 644 526 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 650 block B58 null  <||@
  Comment 650 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 650 530 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 657 532 JUMP ~[] destination: B58 -> B62  <||@
  Comment 657 block B62 null  <||@
  Comment 657 556 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 657 558 rcx|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 661 560 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 664 562 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 670 block B64 null  <||@
  Comment 670 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 670 570 xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1>  <||@
  Comment 674 572 J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 680 574 rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 684 576 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 687 578 JUMP ~[] destination: B64 -> B65  <||@
  Comment 687 block B65 null  <||@
  Comment 687 580 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 687 582 rcx|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 691 584 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 694 586 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B68 falseDestination: B65 -> B67  <||@
  Comment 700 block B67 null  <||@
  Comment 700 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 594 xmm0|V64_DWORD = F nX: SIMD<-1,-1>  <||@
  Comment 704 596 J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 710 598 rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 714 600 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 717 602 JUMP ~[] destination: B67 -> B68  <||@
  Comment 717 block B68 null  <||@
  Comment 717 604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 717 606 CMP (x: r8|QWORD, y: stack:48|QWORD) size: QWORD  <||@
  Comment 722 608 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B71 falseDestination: B68 -> B70  <||@
  Comment 728 block B70 null  <||@
  Comment 728 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 728 616 MOV [rdx|QWORD[.] + r8|QWORD * 4] y: -1 size: DWORD  <||@
  Comment 736 618 JUMP ~[] destination: B70 -> B71  <||@
  Comment 736 block B71 null  <||@
  Comment 736 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 736 622 rdx|QWORD = MOV r13|DWORD size: DWORD  <||@
  Comment 739 624 rcx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 745 626 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 748 628 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B71 -> B77 falseDestination: B71 -> B73  <||@
  Comment 754 block B73 null  <||@
  Comment 754 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 638 CMP (x: rsi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 757 640 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B104  <||@
  Comment 763 block B74 null  <||@
  Comment 763 642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 644 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 766 646 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B77  <||@
  Comment 772 block B77 null  <||@
  Comment 772 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 772 632 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 777 674 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 780 676 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 786 block B79 null  <||@
  Comment 786 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 786 698 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 786 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 794 700 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B103  <||@
  Comment 800 block B80 null  <||@
  Comment 800 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 800 704 r8|DWORD[.] = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 804 706 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 807 708 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 813 block B82 null  <||@
  Comment 813 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 813 730 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 816 732 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B98 falseDestination: B82 -> B84  <||@
  Comment 822 block B84 null  <||@
  Comment 822 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 822 740 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 826 742 r9|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 830 744 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 833 746 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 839 block B85 null  <||@
  Comment 839 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 750 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 846 752 JUMP ~[] destination: B85 -> B89  <||@
  Comment 846 block B89 null  <||@
  Comment 846 776 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 846 778 r9|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 850 780 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 853 782 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B89 -> B92 falseDestination: B89 -> B91  <||@
  Comment 859 block B91 null  <||@
  Comment 859 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 790 xmm0|V128_DWORD = F nX: SIMD<-1,-1,-1,-1>  <||@
  Comment 863 792 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 868 794 r9|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 872 796 rbx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 875 798 JUMP ~[] destination: B91 -> B92  <||@
  Comment 875 block B92 null  <||@
  Comment 875 800 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 875 802 rdx|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 879 804 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 882 806 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B92 -> B95 falseDestination: B92 -> B94  <||@
  Comment 888 block B94 null  <||@
  Comment 888 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 888 814 xmm0|V64_DWORD = F nX: SIMD<-1,-1>  <||@
  Comment 892 816 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 898 818 rdx|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 902 820 rbx|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 905 822 JUMP ~[] destination: B94 -> B95  <||@
  Comment 905 block B95 null  <||@
  Comment 905 824 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 905 826 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 908 828 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B98 falseDestination: B95 -> B97  <||@
  Comment 914 block B97 null  <||@
  Comment 914 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 914 836 MOV [rsi|QWORD[.] + rbx|QWORD * 4] y: -1 size: DWORD  <||@
  Comment 921 838 JUMP ~[] destination: B97 -> B98  <||@
  Comment 921 block B98 null  <||@
  Comment 921 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 921 842 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 925 844 rdx|QWORD = LEA [rsi|QWORD + 64] size: QWORD  <||@
  Comment 929 846 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 933 848 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 939 block B100 null  <||@
  Comment 939 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 882 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 943 884 AMD64PREFETCH ~[rsi|QWORD + 256] instr: 0  <||@
  Comment 950 886 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 950 888 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 955 890 JUMP ~[] destination: B100 -> B101  <||@
  Comment 955 block B101 null  <||@
  Comment 955 892 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 955 894 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 958 896 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}  <||@
  Comment 958 {meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>}}  <||@
  Comment 968 898 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 975 900 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 978 902 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}  <||@
  Comment 978 {meta{HotSpotType<Ljava/util/regex/Matcher;, resolved>;compressed}}  <||@
  Comment 985 904 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 989 906 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 997 908 MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1000 910 xmm0|V128_QWORD = A od: SIMD<0,4294967295> oe: QWORD  <||@
  Comment 1000 {DataSection[0x0]}  <||@
  Comment 1009 912 J (address: [rsi|QWORD[*] + 20], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1014 914 rcx|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 1019 916 MOV (x: [rsi|QWORD[*] + 36], y: rcx|QWORD) size: QWORD  <||@
  Comment 1023 918 MOV [rsi|QWORD[*] + 44] y: 16777216 size: DWORD  <||@
  Comment 1030 920 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3  <||@
  Comment 1034 922 MOV (x: [rsi|QWORD[*] + 48], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1038 924 rcx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3  <||@
  Comment 1045 926 MOV (x: [rsi|QWORD[*] + 52], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1048 928 r14|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3  <||@
  Comment 1055 930 MOV (x: [rsi|QWORD[*] + 56], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1059 932 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@35980b6c encoding: base: 0 shift: 3  <||@
  Comment 1063 934 MOV (x: [rsi|QWORD[*] + 60], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1066 936 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1069 938 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1078 12  <||@
  Comment 1088 block B3 null  <||@
  Comment 1088 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1088 40 rcx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1095 42 rdx|DWORD = MOVE input: int[20|0x14]  <||@
  Comment 1100 44 stack:36|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 1108 46 JUMP ~[] destination: B3 -> B5  <||@
  Comment 1113 block B59 null  <||@
  Comment 1113 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 536 xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>  <||@
  Comment 1117 538 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1124 540 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1124 block B60 loop 2 depth 1 header:577|LoopBegin  <||@
  Comment 1124 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1136 544 J (address: [rdx|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1142 546 r8|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1146 548 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1149 550 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B60 -> B62 falseDestination: B60 -> B60  <||@
  Comment 1156 block B21 null  <||@
  Comment 1156 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1156 218 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1160 220 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1167 222 JUMP ~[] destination: B21 -> B22  <||@
  Comment 1167 block B22 loop 0 depth 1 header:687|LoopBegin  <||@
  Comment 1167 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1168 226 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1174 228 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1178 230 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1181 232 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B24 falseDestination: B22 -> B22  <||@
  Comment 1188 block B43 null  <||@
  Comment 1188 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1188 416 xmm0|V256_DWORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1192 418 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1199 420 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1199 block B44 loop 1 depth 1 header:741|LoopBegin  <||@
  Comment 1199 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1200 424 J (address: [rdx|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1206 426 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1210 428 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1213 430 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B46 falseDestination: B44 -> B44  <||@
  Comment 1220 block B86 null  <||@
  Comment 1220 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1220 756 xmm0|V256_DWORD = F nX: SIMD<-1,-1,-1,-1,-1,-1,-1,-1>  <||@
  Comment 1224 758 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1231 760 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1231 block B87 loop 3 depth 1 header:632|LoopBegin  <||@
  Comment 1231 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1232 764 J (address: [rsi|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1237 766 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 1241 768 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1244 770 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B87 -> B89 falseDestination: B87 -> B87  <||@
  Comment 1251 block B38 null  <||@
  Comment 1251 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1251 368 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1256 374 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1256 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1266 376 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1269 378 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1274 380 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1277 382 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38]  <||@
  Comment 1277 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1282 [stack:24, stack:32, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:36|DWORD  |  
  at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                |1                  |2                  |3 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:72|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=stack:72|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |   |   |    <||@
  Comment 1283 384 JUMP ~[] destination: B38 -> B39  <||@
  Comment 1288 block B16 null  <||@
  Comment 1288 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1288 162 stack:48|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1293 164 stack:56|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1298 170 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1298 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1308 172 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1311 174 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1314 178 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1319 180 r14|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1322 182 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 55, 38]  <||@
  Comment 1322 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1327 [r13:0, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:36|DWORD  |  
  at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                           |1             |2                  |3 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r13|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |r13|QWORD[.]  |stack:32|QWORD[.]  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                           |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                           |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r13|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |   |   |    <||@
  Comment 1328 184 JUMP ~[] destination: B16 -> B17  <||@
  Comment 1333 block B99 null  <||@
  Comment 1333 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1333 852 stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1338 854 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 856 r14|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1348 858 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1348 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1358 860 rdx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 1363 862 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1368 864 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 79, 38]  <||@
  Comment 1368 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1373 [r14:0, stack:12, stack:16, stack:32, stack:64]at java.util.regex.Matcher.reset(Matcher.java:305) [bci: 41, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                     |1         
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r14|QWORD[.],groups=stack:64|QWORD[.],text=stack:32|QWORD[.],locals=stack:80|QWORD[.]}  |r13|DWORD 
  at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                                     |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                                     |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r14|QWORD[.],groups=stack:64|QWORD[.],text=stack:32|QWORD[.],locals=stack:80|QWORD[.]}  |   |   |    <||@
  Comment 1374 866 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1377 868 r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1382 870 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 872 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1392 874 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1397 876 r13|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1400 878 JUMP ~[] destination: B99 -> B101  <||@
  Comment 1405 block B75 null  <||@
  Comment 1405 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1405 650 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1410 652 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1415 654 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@765841921]  <||@
  Comment 1415 {Object[d.a@765841921]}  <||@
  Comment 1425 656 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1428 658 r11|DWORD = MOVE input: int[-44059|0xffffffffffff53e5]  <||@
  Comment 1434 664 JUMP ~[] destination: B75 -> B105  <||@
  Comment 1434 block B105 null  <||@
  Comment 1434 980 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1434 690 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 692 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1444 982 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1451 984 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1458 986 DEOPT info [bci:17, 79, 38]  <||@
  Comment 1458 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1463 [rax:0, r9:0, r10:0, stack:64]at java.util.regex.Matcher.reset(Matcher.java:303) [bci: 17, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                          |1         
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=rax|QWORD[.],text=stack:32|QWORD[.],locals=r9|QWORD[.]}  |r14|DWORD 
  at java.util.regex.Matcher.<init>(Matcher.java:229) [bci: 79, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                          |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                          |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=rax|QWORD[.],text=stack:32|QWORD[.],locals=r9|QWORD[.]}  |   |   |    <||@
  Comment 1464 block B104 null  <||@
  Comment 1464 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1464 964 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1469 966 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1474 968 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@765841921]  <||@
  Comment 1474 {Object[d.a@765841921]}  <||@
  Comment 1484 970 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1487 972 r11|DWORD = MOVE input: int[-44059|0xffffffffffff53e5]  <||@
  Comment 1493 978 JUMP ~[] destination: B104 -> B105  <||@
  Comment 1495 block B81 null  <||@
  Comment 1495 710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1495 712 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1500 714 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1505 716 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1387570399]  <||@
  Comment 1505 {Object[d.a@1387570399]}  <||@
  Comment 1515 718 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1518 720 r11|DWORD = MOVE input: int[-47627|0xffffffffffff45f5]  <||@
  Comment 1524 726 JUMP ~[] destination: B81 -> B105  <||@
  Comment 1526 block B1 null  <||@
  Comment 1526 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1526 22 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1529 24 MOV [r15|QWORD + 668] y: -39187 size: DWORD  <||@
  Comment 1540 26 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1547 28 DEOPT info [bci:4]  <||@
  Comment 1547 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1552 [r10:0, r14:0]at java.util.regex.Pattern.matcher(Pattern.java:1087) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r14|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]    |              |   |    <||@
  Comment 1553 block B110 null  <||@
  Comment 1553 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1553 1002 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1558 1004 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1561 1010 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@779243092]  <||@
  Comment 1561 {Object[d.a@779243092]}  <||@
  Comment 1571 1012 MOV [r15|QWORD + 668] y: -41755 size: DWORD  <||@
  Comment 1582 1014 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1589 1016 DEOPT info [bci:10, 55, 38]  <||@
  Comment 1589 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1594 [r10:0, stack:64]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r11|DWORD  |  
  at java.util.regex.Matcher.<init>(Matcher.java:224) [bci: 55, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                           |1             |2                  |3 
     locals:  |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |r10|QWORD[.]  |stack:32|QWORD[.]  |- 
  at java.util.regex.Pattern.matcher(Pattern.java:1093) [bci: 38, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                                                                           |1  |2  |3 
     locals:  |-                                                                                                                                                                                                                                                                                                                                                                                                           |-  |-  |- 
     stack:   |vobject:Matcher:0{from=int[0|0x0],to=int[0|0x0],lookbehindTo=int[0|0x0],acceptMode=int[0|0x0],first=int[-1|0xffffffffffffffff],last=int[0|0x0],oldLast=int[-1|0xffffffffffffffff],lastAppendPosition=int[0|0x0],hitEnd=int[0|0x0],requireEnd=int[0|0x0],transparentBounds=int[0|0x0],anchoringBounds=int[1|0x1],parentPattern=r10|QWORD[.],groups=Object[null],text=stack:32|QWORD[.],locals=Object[null]}  |   |   |    <||@
  Comment 1595 block B103 null  <||@
  Comment 1595 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1595 946 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1600 948 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1605 950 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@376705954]  <||@
  Comment 1605 {Object[d.a@376705954]}  <||@
  Comment 1615 952 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1618 954 r11|DWORD = MOVE input: int[-46131|0xffffffffffff4bcd]  <||@
  Comment 1624 960 JUMP ~[] destination: B103 -> B105  <||@
  Comment 1629 block B78 null  <||@
  Comment 1629 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 680 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 682 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 684 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1387570399]  <||@
  Comment 1639 {Object[d.a@1387570399]}  <||@
  Comment 1649 686 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1652 688 r11|DWORD = MOVE input: int[-45835|0xffffffffffff4cf5]  <||@
  Comment 1658 694 JUMP ~[] destination: B78 -> B105  <||@
  Comment 1663 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1663 4  <||@
  Comment 1669 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1669 5  <||@
  HexCodeFile>>> <|@
end_nmethod
