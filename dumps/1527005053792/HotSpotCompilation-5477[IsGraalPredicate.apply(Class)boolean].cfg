begin_compilation
  name " HotSpotCompilation-5477[org.graalvm.compiler.hotspot.IsGraalPredicate.apply(Class)]"
  method "HotSpotCompilation-5477[org.graalvm.compiler.hotspot.IsGraalPredicate.apply(Class)]"
  date 1527005179362
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a102  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/IsGraalPredicate;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v106 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a102 a105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: IsGraalPredicate.jvmciLoader
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 1]
nullCheck: false
stamp: n Ljava/lang/ClassLoader;
=== Inputs ===
stateBefore: - 
guard: - 
address: v106 
=== Succesors ===
next: v109 
=== Usages ===
a90 v109 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v106 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/Class;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<IsGraalPredicate.apply(Class)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: IsGraalPredicate.java
sourceLine: 38
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v97 v109 a103 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a102 
=== Succesors ===
next: a103 
=== Usages ===
=== Predecessor ===
a102 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a102 #next: a103  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a103 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.classLoader
nodeSourcePosition: at java.lang.Class.getClassLoader0(Class.java:689) [bci: 1]
at java.lang.Class.getClassLoader(Class.java:678) [bci: 1]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
nullCheck: true
stamp: n Ljava/lang/ClassLoader;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v107 
=== Succesors ===
next: v31 
=== Usages ===
a59 v71 
=== Predecessor ===
v109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v107 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:679) [bci: 6]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
value: a103 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a103  <|@  <|@
f <@~|@floating>@ <|@
tid a27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:679) [bci: 6]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a45 v97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:679) [bci: 6]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
trueSuccessorProbability: 0.08156104212060045
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
a103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4590541513125601496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:680) [bci: 9]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606447782242212837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:681) [bci: 11]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.getClassLoader(Class.java:681) [bci: 11]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a104 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a104  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.getClassLoader(Class.java:681) [bci: 11]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
rawvalue: Class:java.lang.System
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.System]
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a60 
index: - 
=== Succesors ===
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.getClassLoader(Class.java:681) [bci: 11]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v108 
=== Succesors ===
next: v89 
=== Usages ===
v72 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v108 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:682) [bci: 16]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
value: a104 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a104  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:682) [bci: 16]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
a104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v86 #falseSuccessor: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606447782242212837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:682) [bci: 16]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.getClassLoader(Class.java:681) [bci: 11]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a105 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: IsGraalPredicate.jvmciLoader
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 12]
nullCheck: false
stamp: n Ljava/lang/ClassLoader;
=== Inputs ===
stateBefore: - 
guard: - 
address: v106 
=== Succesors ===
next: v43 
=== Usages ===
a90 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v106 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid a59 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getClassLoader0(Class.java:689) [bci: 1]
at java.lang.Class.getClassLoader(Class.java:678) [bci: 1]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
op: Uncompress
stamp: a Ljava/lang/ClassLoader;
=== Inputs ===
value: a103 
=== Succesors ===
=== Usages ===
a45 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a103  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
a105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a90 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/lang/ClassLoader;
valueDescription: n -
=== Inputs ===
merge: v42 
values: a102 a105 
=== Succesors ===
=== Usages ===
a91 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: a102 a105  <|@  <|@
f <@~|@floating>@ <|@
tid a45 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/lang/ClassLoader;
valueDescription: a -
=== Inputs ===
merge: v42 
values: a27 a59 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: a27 a59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v41 v43 
=== Succesors ===
next: v22 
=== Usages ===
a90 a45 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v41 v43 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid a91 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 1]
op: Uncompress
stamp: a Ljava/lang/ClassLoader;
=== Inputs ===
value: a90 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a90  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a45 
y: a91 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a45 y: a91  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:43) [bci: 18]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:68) [bci: 128]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 15]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v12 
trueValue: i16 
falseValue: i19 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v12 trueValue: i16 falseValue: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 15]
stamp: void
=== Inputs ===
result: i21 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i21 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:682) [bci: 16]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17171
stableDimension: 0
stamp: i32 [-17171] ⇊00000000ffffbced ⇈00000000ffffbced
stampKind: i32
value: int[-17171|0xffffffffffffbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i101 
speculation: a27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i101 speculation: a27  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a102  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/IsGraalPredicate;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v106 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a102 a105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: IsGraalPredicate.jvmciLoader
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 1]
nullCheck: false
stamp: n Ljava/lang/ClassLoader;
=== Inputs ===
stateBefore: - 
guard: - 
address: v106 
=== Succesors ===
next: v109 
=== Usages ===
a90 v109 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v106 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/Class;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<IsGraalPredicate.apply(Class)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: IsGraalPredicate.java
sourceLine: 38
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v97 v109 a103 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a102 
=== Succesors ===
next: a103 
=== Usages ===
=== Predecessor ===
a102 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a102 #next: a103  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a103 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.classLoader
nodeSourcePosition: at java.lang.Class.getClassLoader0(Class.java:689) [bci: 1]
at java.lang.Class.getClassLoader(Class.java:678) [bci: 1]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
nullCheck: true
stamp: n Ljava/lang/ClassLoader;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v107 
=== Succesors ===
next: v31 
=== Usages ===
a59 v71 
=== Predecessor ===
v109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v107 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:679) [bci: 6]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
value: a103 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a103  <|@  <|@
f <@~|@floating>@ <|@
tid a27 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:679) [bci: 6]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a45 v97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:679) [bci: 6]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
trueSuccessorProbability: 0.08156104212060045
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
a103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6456214d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08156104212060045 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4590541513125601496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:680) [bci: 9]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD[.], Object[null]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606447782242212837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:681) [bci: 11]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.getClassLoader(Class.java:681) [bci: 11]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a104 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a104  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.getClassLoader(Class.java:681) [bci: 11]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
rawvalue: Class:java.lang.System
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.System]
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
result [v4|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a60 
index: - 
=== Succesors ===
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a104 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.getClassLoader(Class.java:681) [bci: 11]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v108 
=== Succesors ===
next: v89 
=== Usages ===
v72 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v108 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:682) [bci: 16]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
value: a104 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a104  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:682) [bci: 16]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
a104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v86 #falseSuccessor: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v4|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606447782242212837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:682) [bci: 16]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.getClassLoader(Class.java:681) [bci: 11]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a105 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a105 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: IsGraalPredicate.jvmciLoader
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 12]
nullCheck: false
stamp: n Ljava/lang/ClassLoader;
=== Inputs ===
stateBefore: - 
guard: - 
address: v106 
=== Succesors ===
next: v43 
=== Usages ===
a90 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v106 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid a59 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getClassLoader0(Class.java:689) [bci: 1]
at java.lang.Class.getClassLoader(Class.java:678) [bci: 1]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
op: Uncompress
stamp: a Ljava/lang/ClassLoader;
=== Inputs ===
value: a103 
=== Succesors ===
=== Usages ===
a45 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a103  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
a105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD[.], v7|QWORD[.]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a90 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/lang/ClassLoader;
valueDescription: n -
=== Inputs ===
merge: v42 
values: a102 a105 
=== Succesors ===
=== Usages ===
a91 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: a102 a105  <|@  <|@
f <@~|@floating>@ <|@
tid a45 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/lang/ClassLoader;
valueDescription: a -
=== Inputs ===
merge: v42 
values: a27 a59 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: a27 a59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v41 v43 
=== Succesors ===
next: v22 
=== Usages ===
a90 a45 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v41 v43 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid a91 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 1]
op: Uncompress
stamp: a Ljava/lang/ClassLoader;
=== Inputs ===
value: a90 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a90  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a45 
y: a91 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a45 y: a91  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:43) [bci: 18]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:68) [bci: 128]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 15]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v12 
trueValue: i16 
falseValue: i19 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v12 trueValue: i16 falseValue: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 15]
stamp: void
=== Inputs ===
result: i21 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i21 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD[.], v9|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD[.], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getClassLoader(Class.java:682) [bci: 16]
at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:42) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
result int[-17171|0xffffffffffffbced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17171
stableDimension: 0
stamp: i32 [-17171] ⇊00000000ffffbced ⇈00000000ffffbced
stampKind: i32
value: int[-17171|0xffffffffffffbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i101 
speculation: a27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i101 speculation: a27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -17171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6456214d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08156104212060045 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606447782242212837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v4|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606447782242212837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD[.], v7|QWORD[.]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD[.], v9|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD[.], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4590541513125601496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD[.], Object[null]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -17171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // jvmciLoader:java.lang.ClassLoader
     4: ifnull        27
     7: aload_1       
     8: invokevirtual #2          // java.lang.Class.getClassLoader:()java.lang.ClassLoader
    11: aload_0       
    12: getfield      #3          // jvmciLoader:java.lang.ClassLoader
    15: if_acmpne     20
    18: iconst_1      
    19: ireturn       
    20: goto          128
    23: astore_2      
    24: goto          128
    27: aload_1       
    28: invokevirtual #4          // java.lang.Class.getName:()java.lang.String
    31: astore_2      
    32: aload_2       
    33: ldc           #7          // "jdk.vm.ci"
    35: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    38: ifeq          43
    41: iconst_1      
    42: ireturn       
    43: aload_2       
    44: ldc           #9          // "org.graalvm."
    46: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    49: ifeq          90
    52: aload_2       
    53: ldc           #10         // "org.graalvm.compiler."
    55: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    58: ifne          88
    61: aload_2       
    62: ldc           #11         // "org.graalvm.collections."
    64: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    67: ifne          88
    70: aload_2       
    71: ldc           #12         // "org.graalvm.compiler.word."
    73: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    76: ifne          88
    79: aload_2       
    80: ldc           #13         // "org.graalvm.graphio."
    82: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    85: ifeq          90
    88: iconst_1      
    89: ireturn       
    90: aload_2       
    91: ldc           #14         // "com.oracle.graal"
    93: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    96: ifeq          128
    99: aload_2       
   100: ldc           #15         // "com.oracle.graal.enterprise"
   102: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
   105: ifne          126
   108: aload_2       
   109: ldc           #16         // "com.oracle.graal.vector"
   111: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
   114: ifne          126
   117: aload_2       
   118: ldc           #17         // "com.oracle.graal.asm"
   120: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
   123: ifeq          128
   126: iconst_1      
   127: ireturn       
   128: iconst_0      
   129: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6456214d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.08156104212060045 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606447782242212837
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   24  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606447782242212837
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction CMP (x: r10|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4590541513125601496
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 668] y: -17171 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // jvmciLoader:java.lang.ClassLoader
     4: ifnull        27
     7: aload_1       
     8: invokevirtual #2          // java.lang.Class.getClassLoader:()java.lang.ClassLoader
    11: aload_0       
    12: getfield      #3          // jvmciLoader:java.lang.ClassLoader
    15: if_acmpne     20
    18: iconst_1      
    19: ireturn       
    20: goto          128
    23: astore_2      
    24: goto          128
    27: aload_1       
    28: invokevirtual #4          // java.lang.Class.getName:()java.lang.String
    31: astore_2      
    32: aload_2       
    33: ldc           #7          // "jdk.vm.ci"
    35: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    38: ifeq          43
    41: iconst_1      
    42: ireturn       
    43: aload_2       
    44: ldc           #9          // "org.graalvm."
    46: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    49: ifeq          90
    52: aload_2       
    53: ldc           #10         // "org.graalvm.compiler."
    55: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    58: ifne          88
    61: aload_2       
    62: ldc           #11         // "org.graalvm.collections."
    64: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    67: ifne          88
    70: aload_2       
    71: ldc           #12         // "org.graalvm.compiler.word."
    73: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    76: ifne          88
    79: aload_2       
    80: ldc           #13         // "org.graalvm.graphio."
    82: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    85: ifeq          90
    88: iconst_1      
    89: ireturn       
    90: aload_2       
    91: ldc           #14         // "com.oracle.graal"
    93: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    96: ifeq          128
    99: aload_2       
   100: ldc           #15         // "com.oracle.graal.enterprise"
   102: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
   105: ifne          126
   108: aload_2       
   109: ldc           #16         // "com.oracle.graal.vector"
   111: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
   114: ifne          126
   117: aload_2       
   118: ldc           #17         // "com.oracle.graal.asm"
   120: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
   123: ifeq          128
   126: iconst_1      
   127: ireturn       
   128: iconst_0      
   129: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6456214d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.08156104212060045 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606447782242212837
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   24  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   26  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606447782242212837
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction CMP (x: r10|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4590541513125601496
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 668] y: -17171 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #3          // jvmciLoader:java.lang.ClassLoader
     4: ifnull        27
     7: aload_1       
     8: invokevirtual #2          // java.lang.Class.getClassLoader:()java.lang.ClassLoader
    11: aload_0       
    12: getfield      #3          // jvmciLoader:java.lang.ClassLoader
    15: if_acmpne     20
    18: iconst_1      
    19: ireturn       
    20: goto          128
    23: astore_2      
    24: goto          128
    27: aload_1       
    28: invokevirtual #4          // java.lang.Class.getName:()java.lang.String
    31: astore_2      
    32: aload_2       
    33: ldc           #7          // "jdk.vm.ci"
    35: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    38: ifeq          43
    41: iconst_1      
    42: ireturn       
    43: aload_2       
    44: ldc           #9          // "org.graalvm."
    46: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    49: ifeq          90
    52: aload_2       
    53: ldc           #10         // "org.graalvm.compiler."
    55: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    58: ifne          88
    61: aload_2       
    62: ldc           #11         // "org.graalvm.collections."
    64: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    67: ifne          88
    70: aload_2       
    71: ldc           #12         // "org.graalvm.compiler.word."
    73: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    76: ifne          88
    79: aload_2       
    80: ldc           #13         // "org.graalvm.graphio."
    82: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    85: ifeq          90
    88: iconst_1      
    89: ireturn       
    90: aload_2       
    91: ldc           #14         // "com.oracle.graal"
    93: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
    96: ifeq          128
    99: aload_2       
   100: ldc           #15         // "com.oracle.graal.enterprise"
   102: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
   105: ifne          126
   108: aload_2       
   109: ldc           #16         // "com.oracle.graal.vector"
   111: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
   114: ifne          126
   117: aload_2       
   118: ldc           #17         // "com.oracle.graal.asm"
   120: invokevirtual #5          // java.lang.String.startsWith:(java.lang.String)boolean
   123: ifeq          128
   126: iconst_1      
   127: ireturn       
   128: iconst_0      
   129: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b560c438504d48b421885c00f843f00000049baaddeaddeaddeadde458b52744585d20f8534000000448b560c48c1e00349c1e2034c3bd00f94c00fb6c0488b6c24104883c418850500000000c5f877c348b80000000000000000ebd441c7879c020000edbcffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6456214d slotKind: QWORD  <||@
  Comment 48 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 52 12 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 52 [rdx:0, rsi:0, r10:0]at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 14 rax|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 56 [rdx:0, rsi:0, r10:0]at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 16 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 61 18 BRANCH trueDestinationProbability: 0.08156104212060045 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 22 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 67 {Object[Class:java.lang.System]}  <||@
  Comment 77 24 r10|DWORD[.] = MOV [r10|QWORD[.] + 116] size: DWORD  <||@
  Comment 81 26 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 84 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5  <||@
  Comment 90 block B3 null  <||@
  Comment 90 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 32 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 94 34 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3  <||@
  Comment 98 36 JUMP ~[] destination: B3 -> B4  <||@
  Comment 98 block B4 null  <||@
  Comment 98 38 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 98 40 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3  <||@
  Comment 102 42 CMP (x: r10|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 105 44 rax|DWORD = SETCC condition: =  <||@
  Comment 111 48 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 120 12  <||@
  Comment 130 block B1 null  <||@
  Comment 130 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 -1 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 140 52 JUMP ~[] destination: B1 -> B4  <||@
  Comment 142 block B5 null  <||@
  Comment 142 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 56 MOV [r15|QWORD + 668] y: -17171 size: DWORD  <||@
  Comment 153 58 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 160 60 DEOPT info [bci:0]  <||@
  Comment 160 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 165 [rdx:0, rsi:0]at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 166 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 166 4  <||@
  Comment 172 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 172 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5477[org.graalvm.compiler.hotspot.IsGraalPredicate.apply(Class)]"
  method "HotSpotCompilation-5477[org.graalvm.compiler.hotspot.IsGraalPredicate.apply(Class)]"
  date 1527005179401
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106b83460 448b560849c1e203493bc20f85ef29c8ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b560c438504d48b421885c00f843f00000049ba28cd03c006000000458b52744585d20f8534000000448b560c48c1e00349c1e2034c3bd00f94c00fb6c0488b6c24104883c418850528bbd0fdc5f877c348b80000000000000000ebd441c7879c020000edbcffff4d89a7a8020000e8f940c8ff90e815710c0090e8ef3fc8ff90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6456214d slotKind: QWORD  <||@
  Comment 48 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 52 12 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 52 [rdx:0, rsi:0, r10:0]at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 14 rax|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 56 [rdx:0, rsi:0, r10:0]at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 16 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 61 18 BRANCH trueDestinationProbability: 0.08156104212060045 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 22 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 67 {Object[Class:java.lang.System]}  <||@
  Comment 77 24 r10|DWORD[.] = MOV [r10|QWORD[.] + 116] size: DWORD  <||@
  Comment 81 26 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 84 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B5  <||@
  Comment 90 block B3 null  <||@
  Comment 90 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 32 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 94 34 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3  <||@
  Comment 98 36 JUMP ~[] destination: B3 -> B4  <||@
  Comment 98 block B4 null  <||@
  Comment 98 38 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 98 40 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@422fe8d encoding: base: 0 shift: 3  <||@
  Comment 102 42 CMP (x: r10|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 105 44 rax|DWORD = SETCC condition: =  <||@
  Comment 111 48 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 120 12  <||@
  Comment 130 block B1 null  <||@
  Comment 130 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 -1 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 140 52 JUMP ~[] destination: B1 -> B4  <||@
  Comment 142 block B5 null  <||@
  Comment 142 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 56 MOV [r15|QWORD + 668] y: -17171 size: DWORD  <||@
  Comment 153 58 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 160 60 DEOPT info [bci:0]  <||@
  Comment 160 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 165 [rdx:0, rsi:0]at org.graalvm.compiler.hotspot.IsGraalPredicate.apply(IsGraalPredicate.java:38) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 166 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 166 4  <||@
  Comment 172 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 172 5  <||@
  HexCodeFile>>> <|@
end_nmethod
