begin_compilation
  name " HotSpotCompilation-9303[java.lang.ClassValue.get(Class)]"
  method "HotSpotCompilation-9303[java.lang.ClassValue.get(Class)]"
  date 1527005204102
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a160 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a160  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/ClassValue;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?6 v102 v169 v174 ?12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 ?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 102
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a153 - - 
=== Succesors ===
=== Usages ===
a160 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a153 - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/Class;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?12 v168 ?6 v102 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a160 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.classValueMap
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:189) [bci: 1]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
nullCheck: true
stamp: n# Ljava/lang/ClassValue$ClassValueMap;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v168 
=== Succesors ===
next: v35 
=== Usages ===
v175 v121 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v168 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:190) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
stamp: void
=== Inputs ===
value: a160 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a160  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:190) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0011908223597668632
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
a160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4563134521725909504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:190) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid a36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:190) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
rawvalue: ClassValue.Entry[1]{null}
stableDimension: 0
stamp: a!# [Ljava/lang/ClassValue$Entry;
stampKind: a -
value: Object[ClassValue.Entry[1]{null}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v33 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607171692825745987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:191) [bci: 13]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a161 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a161  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a160 
=== Succesors ===
=== Usages ===
a161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue$ClassValueMap.cacheArray
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.getCache(ClassValue.java:424) [bci: 1]
at java.lang.ClassValue.getCacheCarefully(ClassValue.java:191) [bci: 14]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
nullCheck: false
stamp: n# [Ljava/lang/ClassValue$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
=== Succesors ===
next: v45 
=== Usages ===
a120 
=== Predecessor ===
v34 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v175 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid a120 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.getCache(ClassValue.java:424) [bci: 1]
at java.lang.ClassValue.getCacheCarefully(ClassValue.java:191) [bci: 14]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
op: Uncompress
stamp: a# [Ljava/lang/ClassValue$Entry;
=== Inputs ===
value: a161 
=== Succesors ===
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a161  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
a161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a44 <|@
d <@d|@=== Debug Properties ===
stamp: a# [Ljava/lang/ClassValue$Entry;
valueDescription: a -
=== Inputs ===
merge: v42 
values: a36 a120 
=== Succesors ===
=== Usages ===
?6 v171 v170 ?12 v102 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: a36 a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v43 v45 
=== Succesors ===
next: i162 
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v43 v45 #next: i162  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 102
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - a44 
=== Succesors ===
=== Usages ===
v156 i162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - a44  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a44 
index: - 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 3]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v170 
=== Succesors ===
next: i163 
=== Usages ===
i49 v91 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v170 #next: i163  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue.hashCodeForCache
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 3]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v169 
=== Succesors ===
next: v144 
=== Usages ===
i50 
=== Predecessor ===
i162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v169 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i162 
y: i48 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i162 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 6]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
stamp: i32
=== Inputs ===
x: i49 
y: i163 
=== Succesors ===
=== Usages ===
v171 v91 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i49 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i162 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v143 
=== Usages ===
=== Predecessor ===
i163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v141 #falseSuccessor: v143  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a164 
=== Usages ===
a164 
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a164  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a44 
index: i50 
=== Succesors ===
=== Usages ===
a164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a164 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Entry;
=== Inputs ===
stateBefore: - 
guard: v141 
address: v171 
=== Succesors ===
next: v56 
=== Usages ===
?12 v123 v172 v173 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v141 address: v171 #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 1]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
value: a164 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a164  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:105) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 i66 i72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 1]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
trueSuccessorProbability: 0.002392606163353477
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
a164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v54 #falseSuccessor: v55  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4567663396721882660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 19]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607160868119565962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 4]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a165 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a165  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a164 
=== Succesors ===
=== Usages ===
a165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:243) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
=== Succesors ===
next: v60 
=== Usages ===
v159 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v173 #next: v60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:243) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
a165 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a166 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a166  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a166 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue.version
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Version;
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
=== Succesors ===
next: v116 
=== Usages ===
v159 
=== Predecessor ===
v115 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 #next: v116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
a166 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a165 
y: a166 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a165 y: a166  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v159 
trueValue: i65 
falseValue: i13 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v159 trueValue: i65 falseValue: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v70 
values: i66 i13 
=== Succesors ===
=== Usages ===
?12 v14 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v70 values: i66 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v73 
=== Succesors ===
next: v17 
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v73 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:105) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i72 
y: i13 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i72 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:105) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0024367956137678953
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v15 #falseSuccessor: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4567765290657201742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:115) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a28 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a28  <|@  <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:115) [bci: 27]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@f779a28
stamp: void
targetMethod: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)>
=== Inputs ===
arguments: a1 a44 a2 
=== Succesors ===
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a44 a2  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 115
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a28 <|@
d <@d|@=== Debug Properties ===
bci: 27
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:115) [bci: 27]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ClassValue.getFromBackup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v102 
stateDuring: ?149 
=== Succesors ===
next: v30 
=== Usages ===
v30 
=== Predecessor ===
v15 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v102 stateDuring: ?149 #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:115) [bci: 30]
stamp: void
=== Inputs ===
result: a28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a28 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a28 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607160470096381122
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:109) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a167 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a167  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 105
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 a44 a164 i72 
=== Succesors ===
=== Usages ===
a167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a44 a164 i72  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a164 
=== Succesors ===
=== Usages ===
a167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue$Entry.value
nodeSourcePosition: at java.lang.ClassValue$Entry.value(ClassValue.java:337) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:109) [bci: 20]
nullCheck: true
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v172 
=== Succesors ===
next: v26 
=== Usages ===
a107 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v172 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid a107 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue$Entry.value(ClassValue.java:337) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:109) [bci: 20]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a167 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a167  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:109) [bci: 23]
stamp: void
=== Inputs ===
result: a107 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a167 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a107 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23579
stableDimension: 0
stamp: i32 [-23579] ⇊00000000ffffa3e5 ⇈00000000ffffa3e5
stampKind: i32
value: int[-23579|0xffffffffffffa3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i158 
speculation: a153 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i158 speculation: a153  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a160 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a160  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/ClassValue;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?6 v102 v169 v174 ?12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a153 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 ?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 102
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a153 - - 
=== Succesors ===
=== Usages ===
a160 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a153 - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/Class;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?12 v168 ?6 v102 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
result [v1|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a160 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.classValueMap
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:189) [bci: 1]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
nullCheck: true
stamp: n# Ljava/lang/ClassValue$ClassValueMap;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v168 
=== Succesors ===
next: v35 
=== Usages ===
v175 v121 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v168 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:190) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
stamp: void
=== Inputs ===
value: a160 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a160  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:190) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0011908223597668632
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
a160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a840468 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:102) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0011908223597668632 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4563134521725909504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:190) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid a36 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:190) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
rawvalue: ClassValue.Entry[1]{null}
stableDimension: 0
stamp: a!# [Ljava/lang/ClassValue$Entry;
stampKind: a -
value: Object[ClassValue.Entry[1]{null}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v33 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607171692825745987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.getCacheCarefully(ClassValue.java:191) [bci: 13]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a161 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a161  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
result [v2|DWORD[.] * 8 + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a160 
=== Succesors ===
=== Usages ===
a161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a161 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue$ClassValueMap.cacheArray
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.getCache(ClassValue.java:424) [bci: 1]
at java.lang.ClassValue.getCacheCarefully(ClassValue.java:191) [bci: 14]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
nullCheck: false
stamp: n# [Ljava/lang/ClassValue$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
=== Succesors ===
next: v45 
=== Usages ===
a120 
=== Predecessor ===
v34 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v175 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid a120 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.getCache(ClassValue.java:424) [bci: 1]
at java.lang.ClassValue.getCacheCarefully(ClassValue.java:191) [bci: 14]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
op: Uncompress
stamp: a# [Ljava/lang/ClassValue$Entry;
=== Inputs ===
value: a161 
=== Succesors ===
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a161  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
a161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v2|DWORD[.] * 8 + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a44 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [Ljava/lang/ClassValue$Entry;
valueDescription: a -
=== Inputs ===
merge: v42 
values: a36 a120 
=== Succesors ===
=== Usages ===
?6 v171 v170 ?12 v102 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v42 values: a36 a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v43 v45 
=== Succesors ===
next: i162 
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v43 v45 #next: i162  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:102) [bci: 1]
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 102
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - a44 
=== Succesors ===
=== Usages ===
v156 i162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - a44  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
result [v6|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a44 
index: - 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i162 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 3]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v170 
=== Succesors ===
next: i163 
=== Usages ===
i49 v91 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v170 #next: i163  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i163 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue.hashCodeForCache
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 3]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v169 
=== Succesors ===
next: v144 
=== Usages ===
i50 
=== Predecessor ===
i162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v169 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 5]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i162 
y: i48 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i162 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 6]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
stamp: i32
=== Inputs ===
x: i49 
y: i163 
=== Succesors ===
=== Usages ===
v171 v91 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i49 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i162 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v143 
=== Usages ===
=== Predecessor ===
i163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v141 #falseSuccessor: v143  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:102) [bci: 4]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV [v6|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = DEC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND (x: v8|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a164 
=== Usages ===
a164 
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a164  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
result [v6|QWORD[.] + v9|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a44 
index: i50 
=== Succesors ===
=== Usages ===
a164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a164 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Entry;
=== Inputs ===
stateBefore: - 
guard: v141 
address: v171 
=== Succesors ===
next: v56 
=== Usages ===
?12 v123 v172 v173 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v141 address: v171 #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 1]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
value: a164 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a164  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:105) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 i66 i72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 1]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
trueSuccessorProbability: 0.002392606163353477
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
a164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v54 #falseSuccessor: v55  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v6|QWORD[.] + v9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.002392606163353477 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4567663396721882660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 19]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607160868119565962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 4]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a165 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a165  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a164 
=== Succesors ===
=== Usages ===
a165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a165 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:243) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
=== Succesors ===
next: v60 
=== Usages ===
v159 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v173 #next: v60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ClassValue.match(ClassValue.java:243) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
a165 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a166 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a166  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a166 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue.version
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
nullCheck: false
stamp: n# Ljava/lang/ClassValue$Version;
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
=== Succesors ===
next: v116 
=== Usages ===
v159 
=== Predecessor ===
v115 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 #next: v116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 9]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
a166 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a165 
y: a166 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a165 y: a166  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.match(ClassValue.java:243) [bci: 12]
at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v159 
trueValue: i65 
falseValue: i13 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v159 trueValue: i65 falseValue: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD[.], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i72 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v70 
values: i66 i13 
=== Succesors ===
=== Usages ===
?12 v14 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v70 values: i66 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v73 
=== Succesors ===
next: v17 
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v73 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:105) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i72 
y: i13 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i72 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:105) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0024367956137678953
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v15 #falseSuccessor: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0024367956137678953 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4567765290657201742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:115) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a28 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a28  <|@  <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:115) [bci: 27]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@f779a28
stamp: void
targetMethod: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)>
=== Inputs ===
arguments: a1 a44 a2 
=== Succesors ===
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a44 a2  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 115
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a28 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:115) [bci: 27]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ClassValue.getFromBackup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v102 
stateDuring: ?149 
=== Succesors ===
next: v30 
=== Usages ===
v30 
=== Predecessor ===
v15 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v102 stateDuring: ?149 #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:115) [bci: 30]
stamp: void
=== Inputs ===
result: a28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a28 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a28 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:115) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607160470096381122
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:109) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a167 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a167  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ClassValue.get(Class)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:105) [bci: 13]
rethrowException: false
sourceFile: ClassValue.java
sourceLine: 105
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 a44 a164 i72 
=== Succesors ===
=== Usages ===
a167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a44 a164 i72  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
result [v10|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a164 
=== Succesors ===
=== Usages ===
a167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a167 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ClassValue$Entry.value
nodeSourcePosition: at java.lang.ClassValue$Entry.value(ClassValue.java:337) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:109) [bci: 20]
nullCheck: true
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v172 
=== Succesors ===
next: v26 
=== Usages ===
a107 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v172 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid a107 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ClassValue$Entry.value(ClassValue.java:337) [bci: 5]
at java.lang.ClassValue.get(ClassValue.java:109) [bci: 20]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a167 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a167  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue.get(ClassValue.java:109) [bci: 23]
stamp: void
=== Inputs ===
result: a107 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a167 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a107 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:105) [bci: 16]
stack: v14|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v6|QWORD[.] v10|DWORD[.] 
>@ <|@ instruction v16|DWORD[.] = MOV [v10|DWORD[.] * 8 + 28] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ClassValue$ClassValueMap.loadFromCache(ClassValue.java:538) [bci: 7]
at java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544) [bci: 6]
at java.lang.ClassValue.get(ClassValue.java:102) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
result int[-23579|0xffffffffffffa3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23579
stableDimension: 0
stamp: i32 [-23579] ⇊00000000ffffa3e5 ⇈00000000ffffa3e5
stampKind: i32
value: int[-23579|0xffffffffffffa3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i158 
speculation: a153 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i158 speculation: a153  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -23579 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:102) [bci: 4]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a840468 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:102) [bci: 0]
locals: v0|QWORD[.] Object[null] - - 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0011908223597668632 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607171692825745987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v2|DWORD[.] * 8 + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:102) [bci: 4]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV [v6|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = DEC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND (x: v8|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v6|QWORD[.] + v9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.002392606163353477 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607160868119565962
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD[.], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0024367956137678953 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607160470096381122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:105) [bci: 16]
stack: v14|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v6|QWORD[.] v10|DWORD[.] 
>@ <|@ instruction v16|DWORD[.] = MOV [v10|DWORD[.] * 8 + 28] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4567765290657201742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:115) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4567663396721882660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4563134521725909504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -23579 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ClassValue.get(ClassValue.java:102) [bci: 4]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokespecial #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a840468 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:102) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0011908223597668632 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607171692825745987
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 60] size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:102) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r11|DWORD[.] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.002392606163353477 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607160868119565962
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: rcx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.0024367956137678953 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607160470096381122
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:105) [bci: 16]
stack: rdx|DWORD 
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|DWORD[.] 
>@ <|@ instruction rcx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 28] size: DWORD state [bci:16] <|@ <|@
      nr   66  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4567765290657201742
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:115) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:27] <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4567663396721882660
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4563134521725909504
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 668] y: -23579 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:102) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokespecial #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a840468 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:102) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0011908223597668632 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607171692825745987
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 60] size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:102) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:4] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r11|DWORD[.] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.002392606163353477 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607160868119565962
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: rcx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.0024367956137678953 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607160470096381122
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:105) [bci: 16]
stack: rdx|DWORD 
locals: rsi|QWORD[.] r10|QWORD[.] rax|QWORD[.] r11|DWORD[.] 
>@ <|@ instruction rcx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 28] size: DWORD state [bci:16] <|@ <|@
      nr   66  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4567765290657201742
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:115) [bci: 27]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:27] <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4567663396721882660
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4563134521725909504
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 668] y: -23579 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.lang.ClassValue.get(ClassValue.java:102) [bci: 4]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokestatic  #8          // getCacheCarefully:(java.lang.Class)java.lang.ClassValue$Entry[]
     4: dup           
     5: astore_2      
     6: aload_0       
     7: invokestatic  #9          // java.lang.ClassValue$ClassValueMap.probeHomeLocation:(java.lang.ClassValue$Entry[], java.lang.ClassValue)java.lang.ClassValue$Entry
    10: astore_3      
    11: aload_0       
    12: aload_3       
    13: invokevirtual #10         // match:(java.lang.ClassValue$Entry)boolean
    16: ifeq          24
    19: aload_3       
    20: invokevirtual #11         // java.lang.ClassValue$Entry.value:()java.lang.Object
    23: areturn       
    24: aload_0       
    25: aload_2       
    26: aload_1       
    27: invokespecial #12         // getFromBackup:(java.lang.ClassValue$Entry[], java.lang.Class)java.lang.Object
    30: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bd2418b423485c00f84900000008b04c53c00000048c1e0038b500c8bcaffc9234e0c3bd10f8682000000448b5c88104585db0f845e000000428b14dd0c0000008b4e143bca0f94c20fb6d285d20f8422000000428b0cdd1c00000048c1e103488bc1488b6c24104883c418850500000000c5f877c3488bd0498bca6690e80000000090488b6c24104883c418850500000000c5f877c3ba00000000ebae48b8addeaddeaddeaddee96cffffff41c7879c020000e5a3ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a840468 slotKind: QWORD  <||@
  Comment 48 8 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 51 10 rax|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:102) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |Object[null]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 12 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 57 14 BRANCH trueDestinationProbability: 0.0011908223597668632 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 18 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 60] size: DWORD  <||@
  Comment 70 20 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3  <||@
  Comment 74 22 JUMP ~[] destination: B2 -> B3  <||@
  Comment 74 block B3 null  <||@
  Comment 74 24 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 74 26 rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:4]  <||@
  Comment 74 [rax:0, rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:102) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |              |   |    <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 77 28 rcx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 81 30 rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 84 32 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 86 34 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B10  <||@
  Comment 92 block B4 null  <||@
  Comment 92 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 92 38 r11|DWORD[.] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 97 40 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 100 42 BRANCH trueDestinationProbability: 0.002392606163353477 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 106 block B6 null  <||@
  Comment 106 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 46 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 114 48 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 117 50 CMP (x: rcx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 119 52 rdx|DWORD = SETCC condition: =  <||@
  Comment 125 54 JUMP ~[] destination: B6 -> B7  <||@
  Comment 125 block B7 null  <||@
  Comment 125 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 125 58 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 127 60 BRANCH trueDestinationProbability: 0.0024367956137678953 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 133 block B9 null  <||@
  Comment 133 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 64 rcx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 28] size: DWORD state [bci:16]  <||@
  Comment 133 [rax:0, rsi:0, r10:0, r11:0]at java.lang.ClassValue.get(ClassValue.java:105) [bci: 16, duringCall: false, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rax|QWORD[.]  |r11|DWORD[.] 
     stack:   |rdx|DWORD     |              |              |               <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 66 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3  <||@
  Comment 145 68 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 148 70 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 157 12  <||@
  Comment 167 block B8 null  <||@
  Comment 167 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 76 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 170 78 rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 173 80 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:27]  <||@
  Comment 173 9  <||@
  Comment 175 {HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)>}  <||@
  Comment 180 []at java.lang.ClassValue.get(ClassValue.java:115) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 181 86 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 190 12  <||@
  Comment 200 block B5 null  <||@
  Comment 200 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 -1 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 205 90 JUMP ~[] destination: B5 -> B7  <||@
  Comment 207 block B1 null  <||@
  Comment 207 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 94 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}]  <||@
  Comment 207 {Object[ClassValue.Entry[1]{null}]}  <||@
  Comment 217 96 JUMP ~[] destination: B1 -> B3  <||@
  Comment 222 block B10 null  <||@
  Comment 222 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 222 100 MOV [r15|QWORD + 668] y: -23579 size: DWORD  <||@
  Comment 233 102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 240 104 DEOPT info [bci:4]  <||@
  Comment 240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 245 [rax:0, rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:102) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |              |   |    <||@
  Comment 246 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 246 4  <||@
  Comment 252 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 252 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9303[java.lang.ClassValue.get(Class)]"
  method "HotSpotCompilation-9303[java.lang.ClassValue.get(Class)]"
  date 1527005204164
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106bbaa40 448b560849c1e203493bc20f850fb4c4ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bd2418b423485c00f84900000008b04c53c00000048c1e0038b500c8bcaffc9234e0c3bd10f8682000000448b5c88104585db0f845e000000428b14dd0c0000008b4e143bca0f94c20fb6d285d20f8422000000428b0cdd1c00000048c1e103488bc1488b6c24104883c41885052345cdfdc5f877c3488bd0498bca6690e8acb5c4ff90488b6c24104883c41885050245cdfdc5f877c3ba00000000ebae48b8f01b00c006000000e96cffffff41c7879c020000e5a3ffff4d89a7a8020000e8c9cac4ff90e8e5fa080090e8bfc9c4ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7a840468 slotKind: QWORD  <||@
  Comment 48 8 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 51 10 rax|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:102) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |Object[null]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 12 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 57 14 BRANCH trueDestinationProbability: 0.0011908223597668632 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 18 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 60] size: DWORD  <||@
  Comment 70 20 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3  <||@
  Comment 74 22 JUMP ~[] destination: B2 -> B3  <||@
  Comment 74 block B3 null  <||@
  Comment 74 24 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 74 26 rdx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:4]  <||@
  Comment 74 [rax:0, rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:102) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |              |   |    <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 77 28 rcx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 81 30 rcx|DWORD = AND (x: rcx|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 84 32 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 86 34 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B10  <||@
  Comment 92 block B4 null  <||@
  Comment 92 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 92 38 r11|DWORD[.] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 97 40 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 100 42 BRANCH trueDestinationProbability: 0.002392606163353477 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 106 block B6 null  <||@
  Comment 106 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 46 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 114 48 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 117 50 CMP (x: rcx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 119 52 rdx|DWORD = SETCC condition: =  <||@
  Comment 125 54 JUMP ~[] destination: B6 -> B7  <||@
  Comment 125 block B7 null  <||@
  Comment 125 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 125 58 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 127 60 BRANCH trueDestinationProbability: 0.0024367956137678953 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 133 block B9 null  <||@
  Comment 133 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 64 rcx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 28] size: DWORD state [bci:16]  <||@
  Comment 133 [rax:0, rsi:0, r10:0, r11:0]at java.lang.ClassValue.get(ClassValue.java:105) [bci: 16, duringCall: false, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rax|QWORD[.]  |r11|DWORD[.] 
     stack:   |rdx|DWORD     |              |              |               <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 66 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3310f1d9 encoding: base: 0 shift: 3  <||@
  Comment 145 68 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 148 70 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 157 12  <||@
  Comment 167 block B8 null  <||@
  Comment 167 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 76 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 170 78 rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 173 80 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:27]  <||@
  Comment 173 9  <||@
  Comment 175 {HotSpotMethod<ClassValue.getFromBackup(ClassValue$Entry[], Class)>}  <||@
  Comment 180 []at java.lang.ClassValue.get(ClassValue.java:115) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 181 86 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 190 12  <||@
  Comment 200 block B5 null  <||@
  Comment 200 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 -1 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 205 90 JUMP ~[] destination: B5 -> B7  <||@
  Comment 207 block B1 null  <||@
  Comment 207 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 94 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ClassValue.Entry[1]{null}]  <||@
  Comment 207 {Object[ClassValue.Entry[1]{null}]}  <||@
  Comment 217 96 JUMP ~[] destination: B1 -> B3  <||@
  Comment 222 block B10 null  <||@
  Comment 222 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 222 100 MOV [r15|QWORD + 668] y: -23579 size: DWORD  <||@
  Comment 233 102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 240 104 DEOPT info [bci:4]  <||@
  Comment 240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 245 [rax:0, rsi:0, r10:0]at java.lang.ClassValue.get(ClassValue.java:102) [bci: 4, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |              |   |    <||@
  Comment 246 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 246 4  <||@
  Comment 252 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 252 5  <||@
  HexCodeFile>>> <|@
end_nmethod
