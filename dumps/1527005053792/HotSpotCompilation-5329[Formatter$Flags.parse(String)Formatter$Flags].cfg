begin_compilation
  name " HotSpotCompilation-5329[java.util.Formatter$Flags.parse(String)]"
  method "HotSpotCompilation-5329[java.util.Formatter$Flags.parse(String)]"
  date 1527005060558
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a556 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a556  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v561 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$Flags.parse(String)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 4438
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - 
=== Succesors ===
=== Usages ===
v267 a309 a556 i557 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v561 
=== Succesors ===
next: i557 
=== Usages ===
a113 v562 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v561 #next: i557  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a556 
=== Succesors ===
=== Usages ===
i557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v562 
=== Succesors ===
next: v555 
=== Usages ===
j197 a309 v17 v294 v211 v336 i285 
=== Predecessor ===
a556 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v562 #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4439) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i90 a309 i14 v211 a372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i557 
y: i7 
=== Succesors ===
=== Usages ===
v553 v414 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i557 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j197 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i557 
=== Succesors ===
=== Usages ===
j201 v203 v355 j527 j513 j519 j523 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i557  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j197 
y: j200 
=== Succesors ===
=== Usages ===
v203 v530 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j197 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j201 
y: j197 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j201 y: j197  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v551 
falseSuccessor: v554 
=== Usages ===
=== Predecessor ===
i557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v551 #falseSuccessor: v554  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
v551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v211 
=== Succesors ===
trueSuccessor: v552 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v211 #trueSuccessor: v552 #falseSuccessor: v228  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v549 v550 
=== Succesors ===
next: j288 
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v549 v550 #next: j288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j288 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j333 
=== Usages ===
v568 v569 
=== Predecessor ===
v548 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j333  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j288 
index: - 
=== Succesors ===
=== Usages ===
j333 v335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
=== Succesors ===
next: j334 
=== Usages ===
j292 v570 v571 a308 v576 v572 v573 v574 v575 
=== Predecessor ===
j288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v568 #next: j334  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j288 
index: - 
=== Succesors ===
=== Usages ===
j334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
=== Succesors ===
next: v297 
=== Usages ===
v298 
=== Predecessor ===
j333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v569 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid i293 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i557 
y: i293 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i557 y: i293  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 59]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 a372 i285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
j334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v296 #falseSuccessor: v295  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i557 
y: i35 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i557 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i285 
y: i316 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i285 y: i316  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i317 
y: i286 
=== Succesors ===
=== Usages ===
j291 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i317 y: i286  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i287 
=== Succesors ===
=== Usages ===
j292 v572 v573 v574 v575 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i287  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i64
=== Inputs ===
x: j291 
y: j333 
=== Succesors ===
=== Usages ===
v298 v335 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j291 y: j333  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j334 
y: j292 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j334 y: j292  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v303 
falseSuccessor: v302 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v303 #falseSuccessor: v302  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
value: j292 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v568 value: j292 stateAfter: - lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j291 
index: j333 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j291 index: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
address: v572 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v572 #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j291 
index: j333 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j291 index: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
address: v573 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v573 #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j291 
index: j333 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j291 index: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
address: v574 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v574 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j291 
index: j333 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j291 index: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
address: v575 
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v575 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j333 
index: - 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j333 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
value: i557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 value: i557 stateAfter: - lastLocationAccess: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j333 
index: - 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j333 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j284 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
value: j284 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v571 value: j284 stateAfter: - lastLocationAccess: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j333 
index: - 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j333 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
value: v401 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v576 value: v401 stateAfter: - lastLocationAccess: - #next: v307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a308 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j333 
=== Succesors ===
next: v310 
=== Usages ===
a313 
=== Predecessor ===
v307 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j333 #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
a308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v299 v301 
=== Succesors ===
next: a309 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v299 v301 #next: a309  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a309 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v283 i557 i7 
=== Succesors ===
next: v312 
=== Usages ===
a313 
=== Predecessor ===
v300 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v283 i557 i7 #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
a309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v311 
values: a308 a309 
=== Succesors ===
=== Usages ===
v567 a258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v311 values: a308 a309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v310 v312 
=== Succesors ===
next: v477 
=== Usages ===
a313 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v310 v312 #next: v477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v414 
=== Usages ===
j479 
=== Predecessor ===
v311 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid j169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j511 j402 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v211 
=== Succesors ===
trueSuccessor: v412 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v211 #trueSuccessor: v412 #falseSuccessor: v413  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v412 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a313 
index: - 
=== Succesors ===
=== Usages ===
j479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v477 
address: v567 
=== Succesors ===
=== Usages ===
v585 v586 v587 v588 v589 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v477 address: v567  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-16 - 2147483631]
=== Inputs ===
x: j197 
y: j512 
=== Succesors ===
=== Usages ===
v514 v516 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j197 y: j512  <|@  <|@
f <@~|@floating>@ <|@
tid j320 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j506 j500 v514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j513 
y: j320 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j513 y: j320  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v415 #falseSuccessor: v416  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B44" 
    successors "B16" "B44" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j506 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v419 
values: j320 j511 
=== Succesors ===
=== Usages ===
v589 j511 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v419 values: j320 j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v418 
=== Succesors ===
next: v542 
=== Usages ===
j506 v423 v424 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v418 #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j479 
index: j506 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j479 index: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
value: v543 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v589 value: v543 stateAfter: - lastLocationAccess: - #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid j511 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j506 
y: j169 
=== Succesors ===
=== Usages ===
j500 j506 v516 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j506 y: j169  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j513 
y: j511 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j513 y: j511  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v425 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v423 #falseSuccessor: v425  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v419 
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v419 #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j500 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v428 
values: j320 j511 
=== Succesors ===
=== Usages ===
v588 j505 j493 v520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v428 values: j320 j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v427 v429 
=== Succesors ===
next: v452 
=== Usages ===
j500 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v427 v429 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j197 
y: j518 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j197 y: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j519 
y: j500 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j519 y: j500  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v451 #falseSuccessor: v450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j479 
index: j500 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j479 index: j500  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
value: v547 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v588 value: v547 stateAfter: - lastLocationAccess: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid j339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j505 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j500 
y: j339 
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j500 y: j339  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j493 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v439 
values: j505 j500 
=== Succesors ===
=== Usages ===
v587 j499 j487 v524 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v439 values: j505 j500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v438 v455 
=== Succesors ===
next: v458 
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v438 v455 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j522 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j523 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j523 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j197 
y: j522 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j197 y: j522  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j523 
y: j493 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j523 y: j493  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v524 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v456 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v524 #trueSuccessor: v457 #falseSuccessor: v456  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j479 
index: j493 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j479 index: j493  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
value: v546 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v587 value: v546 stateAfter: - lastLocationAccess: - #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j499 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j493 
y: j498 
=== Succesors ===
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j493 y: j498  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j487 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v443 
values: j499 j493 
=== Succesors ===
=== Usages ===
v586 j492 j480 v528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v443 values: j499 j493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v461 
=== Succesors ===
next: v464 
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v461 #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j527 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j197 
y: j526 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j197 y: j526  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j527 
y: j487 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j527 y: j487  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v463 
falseSuccessor: v462 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v463 #falseSuccessor: v462  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j479 
index: j487 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j479 index: j487  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
value: v545 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v586 value: v545 stateAfter: - lastLocationAccess: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j487 
y: j482 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j487 y: j482  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v537 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j480 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v447 
values: j492 j487 
=== Succesors ===
=== Usages ===
v585 v530 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v447 values: j492 j487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v446 v467 
=== Succesors ===
next: v470 
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v446 v467 #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j201 
y: j480 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j201 y: j480  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v469 #falseSuccessor: v468  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j479 
index: j480 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j479 index: j480  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v585 
value: i544 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v585 value: i544 stateAfter: - lastLocationAccess: - #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B11" "B28" "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v431 v449 v473 
=== Succesors ===
next: a258 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v431 v449 v473 #next: a258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a313 
=== Succesors ===
next: j349 
=== Usages ===
j353 v563 ?15 
=== Predecessor ===
v432 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a313 #next: j349  <|@  <|@
f <@~|@floating>@ <|@
tid a113 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a556 
=== Succesors ===
=== Usages ===
j349 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i64
=== Inputs ===
object: a113 
=== Succesors ===
next: j353 
=== Usages ===
v577 
=== Predecessor ===
a258 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a113 #next: j353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i64
=== Inputs ===
object: a258 
=== Succesors ===
next: v355 
=== Usages ===
v578 
=== Predecessor ===
j349 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a258 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j353 
index: - 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j353 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v577 v578 j197 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
j353 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v577 v578 j197 #next: v12  <|@  <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@77145dbc
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/Formatter$Flags;
type: HotSpotType<Ljava/util/Formatter$Flags;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?15 ?91 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B37" "B34" 
    successors "B31" "B40" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607616684075228222
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i7 i36 i36 
=== Succesors ===
=== Usages ===
?15 v17 v563 i36 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i7 i36 i36  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i7 i82 i104 
=== Succesors ===
=== Usages ===
?91 i70 i82 v247 i102 i104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i7 i82 i104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0964262614668452
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v12 
=== Succesors ===
next: v22 
=== Usages ===
i14 v20 v37 i90 v96 v233 v238 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v12 #next: v22  <|@  <|@
tid ?91 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
values: i90 
=== Succesors ===
=== Usages ===
?15 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a89 values: i90  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Formatter$Flags.parse(String)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 4440
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a258 a89 i14 - 
virtualObjectMappings: ?91 
=== Succesors ===
=== Usages ===
v278 a372 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a258 a89 i14 - virtualObjectMappings: ?91  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i14 
y: i557 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i14 y: i557  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 19]
stamp: void
trueSuccessorProbability: 0.08794596121570653
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v18 #falseSuccessor: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B35" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591612665066537958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i558 
=== Usages ===
v209 
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i558  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v548 v18 
=== Succesors ===
=== Usages ===
i558 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v548 v18  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a258 
index: i14 
=== Succesors ===
=== Usages ===
i558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a258 index: i14  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v209 
address: v563 
=== Succesors ===
next: v60 
=== Usages ===
i173 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v209 address: v563 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i558 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i558  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 59]
stamp: i32
=== Inputs ===
x: i14 
y: i35 
=== Succesors ===
=== Usages ===
i14 i14 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i14 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@547095f7
keySuccessors: [I@60f93956
keys: [I@41705741
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4451) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
stamp: void
=== Inputs ===
value: i173 
=== Succesors ===
successors: v54 v55 v53 
=== Usages ===
=== Predecessor ===
i558 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i173 #successors: v54 v55 v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591567546596386185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4452) [bci: 132]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i559 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i559  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4452) [bci: 132]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
rawvalue: Formatter.Flags@122446495
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@122446495]
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a58 
index: - 
=== Succesors ===
=== Usages ===
i559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a58 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
=== Succesors ===
next: v234 
=== Usages ===
i102 v103 i104 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v564 #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
stamp: i32
=== Inputs ===
x: i90 
y: i559 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i90 y: i559  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i102 
y: i559 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i102 y: i559  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v233 
falseSuccessor: v230 
=== Usages ===
=== Predecessor ===
i559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v233 #falseSuccessor: v230  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45075
stableDimension: 0
stamp: i32 [-45075] ⇊00000000ffff4fed ⇈00000000ffff4fed
stampKind: i32
value: int[-45075|0xffffffffffff4fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591567546596386185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.Formatter$Flags.add(Formatter.java:4428) [bci: 9]
at java.util.Formatter$Flags.parse(Formatter.java:4444) [bci: 55]
stamp: i32
=== Inputs ===
x: i90 
y: i559 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i90 y: i559  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4558914387450998390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4456) [bci: 148]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i560 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i560  <|@  <|@
f <@~|@floating>@ <|@
tid a56 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4456) [bci: 148]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
rawvalue: Formatter.Flags@271681927
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@271681927]
=== Inputs ===
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a56 
index: - 
=== Succesors ===
=== Usages ===
i560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a56 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
=== Succesors ===
next: v239 
=== Usages ===
i70 v74 i82 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
stamp: i32
=== Inputs ===
x: i90 
y: i560 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i90 y: i560  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i560 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i70 y: i560  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
i560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v238 #falseSuccessor: v235  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45843
stableDimension: 0
stamp: i32 [-45843] ⇊00000000ffff4ced ⇈00000000ffff4ced
stampKind: i32
value: int[-45843|0xffffffffffff4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v238 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4558914387450998390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.Formatter$Flags.add(Formatter.java:4428) [bci: 9]
at java.util.Formatter$Flags.parse(Formatter.java:4444) [bci: 55]
stamp: i32
=== Inputs ===
x: i90 
y: i560 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i90 y: i560  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4451) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13331
stableDimension: 0
stamp: i32 [-13331] ⇊00000000ffffcbed ⇈00000000ffffcbed
stampKind: i32
value: int[-13331|0xffffffffffffcbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B33" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i276 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-45843 - -13331] ⇊00000000ffff48ed ⇈00000000ffffcfed
valueDescription: i32
=== Inputs ===
merge: v273 
values: i275 i280 i282 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v273 values: i275 i280 i282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v274 v279 v281 
=== Succesors ===
next: v278 
=== Usages ===
i276 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v274 v279 v281 #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid a264 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?15 
actionAndReason: i276 
speculation: a264 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?15 actionAndReason: i276 speculation: a264  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4446) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: j359 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: j359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j359 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j376 
=== Usages ===
v579 v580 
=== Predecessor ===
v20 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j376  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j359 
index: - 
=== Succesors ===
=== Usages ===
j376 v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j359 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
=== Succesors ===
next: j377 
=== Usages ===
j402 j382 v584 
=== Predecessor ===
j359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 #next: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j359 
index: - 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j359 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
=== Succesors ===
next: v367 
=== Usages ===
v364 
=== Predecessor ===
j376 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v580 #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid j402 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j376 
y: j169 
=== Succesors ===
=== Usages ===
v364 v378 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j376 y: j169  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j377 
y: j402 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j377 y: j402  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
j377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v365 #falseSuccessor: v366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4576918229304087679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a372 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a372  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a372 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?15 
arguments: v357 i7 i35 
=== Succesors ===
next: j373 
=== Usages ===
j373 
=== Predecessor ===
v365 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?15 arguments: v357 i7 i35 #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a372 
=== Succesors ===
next: v383 
=== Usages ===
j382 
=== Predecessor ===
a372 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a372 #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
j373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
value: j402 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v579 value: j402 stateAfter: - lastLocationAccess: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v584 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v584 #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j382 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v380 
values: j376 j373 
=== Succesors ===
=== Usages ===
v583 v566 a243 v582 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: j376 j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v381 v383 
=== Succesors ===
next: a243 
=== Usages ===
j382 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v381 v383 #next: a243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a243 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j382 
=== Succesors ===
next: j394 
=== Usages ===
a248 
=== Predecessor ===
v380 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j382 #next: j394  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v388 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v388  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j389 
index: - 
=== Succesors ===
=== Usages ===
j394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j394 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
=== Succesors ===
next: v395 
=== Usages ===
v395 
=== Predecessor ===
a243 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v581 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j382 
index: - 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
value: j394 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
j394 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v582 value: j394 stateAfter: - lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j382 
index: - 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j382 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v583 
value: v405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v583 value: v405 stateAfter: - lastLocationAccess: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j382 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
value: i90 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a248 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v566 value: i90 stateAfter: - lastLocationAccess: - #next: a248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a248 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a243 
=== Succesors ===
next: v249 
=== Usages ===
v38 
=== Predecessor ===
v247 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a243 #next: v249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
a248 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4446) [bci: 66]
stamp: void
=== Inputs ===
result: a248 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a248 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid a272 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@291814196
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@291814196]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i271 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42267
stableDimension: 0
stamp: i32 [-42267] ⇊00000000ffff5ae5 ⇈00000000ffff5ae5
stampKind: i32
value: int[-42267|0xffffffffffff5ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i271 
speculation: a272 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i271 speculation: a272  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a556 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a556  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v561 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$Flags.parse(String)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 4438
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - 
=== Succesors ===
=== Usages ===
v267 a309 a556 i557 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a556 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v561 
=== Succesors ===
next: i557 
=== Usages ===
a113 v562 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v561 #next: i557  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a556 
=== Succesors ===
=== Usages ===
i557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i557 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v562 
=== Succesors ===
next: v555 
=== Usages ===
j197 a309 v17 v294 v211 v336 i285 
=== Predecessor ===
a556 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v562 #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4439) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i90 a309 i14 v211 a372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i557 
y: i7 
=== Succesors ===
=== Usages ===
v553 v414 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i557 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j197 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i557 
=== Succesors ===
=== Usages ===
j201 v203 v355 j527 j513 j519 j523 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i557  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j197 
y: j200 
=== Succesors ===
=== Usages ===
v203 v530 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j197 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j201 
y: j197 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j201 y: j197  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v551 
falseSuccessor: v554 
=== Usages ===
=== Predecessor ===
i557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v551 #falseSuccessor: v554  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4302c5f7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = DEC v3|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
v551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v211 
=== Succesors ===
trueSuccessor: v552 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v211 #trueSuccessor: v552 #falseSuccessor: v228  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v549 v550 
=== Succesors ===
next: j288 
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v549 v550 #next: j288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j288 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j333 
=== Usages ===
v568 v569 
=== Predecessor ===
v548 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j333  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j288 
index: - 
=== Succesors ===
=== Usages ===
j333 v335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j333 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
=== Succesors ===
next: j334 
=== Usages ===
j292 v570 v571 a308 v576 v572 v573 v574 v575 
=== Predecessor ===
j288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v568 #next: j334  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j288 
index: - 
=== Succesors ===
=== Usages ===
j334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j288 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
=== Succesors ===
next: v297 
=== Usages ===
v298 
=== Predecessor ===
j333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v569 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid i293 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i557 
y: i293 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i557 y: i293  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 59]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 a372 i285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
j334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v296 #falseSuccessor: v295  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i557 
y: i35 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i557 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i285 
y: i316 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i285 y: i316  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i317 
y: i286 
=== Succesors ===
=== Usages ===
j291 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i317 y: i286  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i287 
=== Succesors ===
=== Usages ===
j292 v572 v573 v574 v575 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i287  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i64
=== Inputs ===
x: j291 
y: j333 
=== Succesors ===
=== Usages ===
v298 v335 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j291 y: j333  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j334 
y: j292 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j334 y: j292  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v303 
falseSuccessor: v302 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v303 #falseSuccessor: v302  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA [v7|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND v8|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
value: j292 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v568 value: j292 stateAfter: - lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [v10|QWORD + v5|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j291 
index: j333 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j291 index: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
address: v572 
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v572 #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v10|QWORD + v5|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j291 
index: j333 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j291 index: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
address: v573 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v573 #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
result [v10|QWORD + v5|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j291 
index: j333 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j291 index: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
address: v574 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v574 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result [v10|QWORD + v5|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j291 
index: j333 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j291 index: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
address: v575 
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v575 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v5|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j333 
index: - 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j333 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
value: i557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 value: i557 stateAfter: - lastLocationAccess: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v5|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j333 
index: - 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j333 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j284 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
value: j284 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v571 value: j284 stateAfter: - lastLocationAccess: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result [v5|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j333 
index: - 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j333 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
value: v401 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v576 value: v401 stateAfter: - lastLocationAccess: - #next: v307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a308 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a308 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j333 
=== Succesors ===
next: v310 
=== Usages ===
a313 
=== Predecessor ===
v307 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j333 #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
a308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v10|QWORD + v5|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v10|QWORD + v5|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v10|QWORD + v5|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v10|QWORD + v5|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v5|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v299 v301 
=== Succesors ===
next: a309 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v299 v301 #next: a309  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a309 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v283 i557 i7 
=== Succesors ===
next: v312 
=== Usages ===
a313 
=== Predecessor ===
v300 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v283 i557 i7 #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
a309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a313 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v311 
values: a308 a309 
=== Succesors ===
=== Usages ===
v567 a258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v311 values: a308 a309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v310 v312 
=== Succesors ===
next: v477 
=== Usages ===
a313 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v310 v312 #next: v477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v414 
=== Usages ===
j479 
=== Predecessor ===
v311 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid j169 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j511 j402 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v211 
=== Succesors ===
trueSuccessor: v412 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v211 #trueSuccessor: v412 #falseSuccessor: v413  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v412 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [v15|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a313 
index: - 
=== Succesors ===
=== Usages ===
j479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v477 
address: v567 
=== Succesors ===
=== Usages ===
v585 v586 v587 v588 v589 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v477 address: v567  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-16 - 2147483631]
=== Inputs ===
x: j197 
y: j512 
=== Succesors ===
=== Usages ===
v514 v516 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j197 y: j512  <|@  <|@
f <@~|@floating>@ <|@
tid j320 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j506 j500 v514 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j513 
y: j320 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j513 y: j320  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v415 #falseSuccessor: v416  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = LEA [v15|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = LEA [v3|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result v18|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B44" 
    successors "B16" "B44" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j506 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v419 
values: j320 j511 
=== Succesors ===
=== Usages ===
v589 j511 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v419 values: j320 j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v418 
=== Succesors ===
next: v542 
=== Usages ===
j506 v423 v424 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v418 #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
result [v16|QWORD[.] + v19|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j479 
index: j506 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j479 index: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
value: v543 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v589 value: v543 stateAfter: - lastLocationAccess: - #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid j511 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j506 
y: j169 
=== Succesors ===
=== Usages ===
j500 j506 v516 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j506 y: j169  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j513 
y: j511 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j513 y: j511  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v425 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v423 #falseSuccessor: v425  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v16|QWORD[.] + v19|QWORD * 2], input: v18|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v19|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v419 
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v419 #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j500 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v428 
values: j320 j511 
=== Succesors ===
=== Usages ===
v588 j505 j493 v520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v428 values: j320 j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v427 v429 
=== Succesors ===
next: v452 
=== Usages ===
j500 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v427 v429 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j197 
y: j518 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j197 y: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j519 
y: j500 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j519 y: j500  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v451 #falseSuccessor: v450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v3|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result [v16|QWORD[.] + v21|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j479 
index: j500 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j479 index: j500  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result v23|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
value: v547 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v588 value: v547 stateAfter: - lastLocationAccess: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid j339 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j505 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j500 
y: j339 
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j500 y: j339  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v16|QWORD[.] + v21|QWORD * 2], input: v23|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j493 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v439 
values: j505 j500 
=== Succesors ===
=== Usages ===
v587 j499 j487 v524 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v439 values: j505 j500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v438 v455 
=== Succesors ===
next: v458 
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v438 v455 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j522 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j523 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j523 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j197 
y: j522 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j197 y: j522  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j523 
y: j493 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j523 y: j493  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v524 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v456 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v524 #trueSuccessor: v457 #falseSuccessor: v456  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v3|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
result [v16|QWORD[.] + v25|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j479 
index: j493 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j479 index: j493  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result v27|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
value: v546 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v587 value: v546 stateAfter: - lastLocationAccess: - #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j499 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j493 
y: j498 
=== Succesors ===
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j493 y: j498  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v16|QWORD[.] + v25|QWORD * 2], input: v27|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j487 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v443 
values: j499 j493 
=== Succesors ===
=== Usages ===
v586 j492 j480 v528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v443 values: j499 j493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v461 
=== Succesors ===
next: v464 
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v461 #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j527 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j197 
y: j526 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j197 y: j526  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j527 
y: j487 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j527 y: j487  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v463 
falseSuccessor: v462 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v463 #falseSuccessor: v462  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v3|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
result [v16|QWORD[.] + v29|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j479 
index: j487 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j479 index: j487  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result v31|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
value: v545 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v586 value: v545 stateAfter: - lastLocationAccess: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j487 
y: j482 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j487 y: j482  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v537 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v16|QWORD[.] + v29|QWORD * 2], input: v31|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j480 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v447 
values: j492 j487 
=== Succesors ===
=== Usages ===
v585 v530 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v447 values: j492 j487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v446 v467 
=== Succesors ===
next: v470 
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v446 v467 #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j201 
y: j480 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j201 y: j480  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v469 #falseSuccessor: v468  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result [v16|QWORD[.] + v33|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j479 
index: j480 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j479 index: j480  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v585 
value: i544 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v585 value: i544 stateAfter: - lastLocationAccess: - #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD[.] + v33|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B11" "B28" "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v431 v449 v473 
=== Succesors ===
next: a258 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v431 v449 v473 #next: a258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a258 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a313 
=== Succesors ===
next: j349 
=== Usages ===
j353 v563 ?15 
=== Predecessor ===
v432 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a313 #next: j349  <|@  <|@
f <@~|@floating>@ <|@
tid a113 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a556 
=== Succesors ===
=== Usages ===
j349 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j349 <|@
result v35|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i64
=== Inputs ===
object: a113 
=== Succesors ===
next: j353 
=== Usages ===
v577 
=== Predecessor ===
a258 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a113 #next: j353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j353 <|@
result v36|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: i64
=== Inputs ===
object: a258 
=== Succesors ===
next: v355 
=== Usages ===
v578 
=== Predecessor ===
j349 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a258 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result [v35|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result [v36|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j353 
index: - 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j353 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v577 v578 j197 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
j353 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v577 v578 j197 #next: v12  <|@  <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@77145dbc
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/Formatter$Flags;
type: HotSpotType<Ljava/util/Formatter$Flags;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?15 ?91 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59b6b789 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v35|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v36|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B37" "B34" 
    successors "B31" "B40" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607616684075228222
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i14 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i7 i36 i36 
=== Succesors ===
=== Usages ===
?15 v17 v563 i36 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i7 i36 i36  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i7 i82 i104 
=== Succesors ===
=== Usages ===
?91 i70 i82 v247 i102 i104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i7 i82 i104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0964262614668452
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v12 
=== Succesors ===
next: v22 
=== Usages ===
i14 v20 v37 i90 v96 v233 v238 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v12 #next: v22  <|@  <|@
tid ?91 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
values: i90 
=== Succesors ===
=== Usages ===
?15 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a89 values: i90  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Formatter$Flags.parse(String)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 4440
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a258 a89 i14 - 
virtualObjectMappings: ?91 
=== Succesors ===
=== Usages ===
v278 a372 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a258 a89 i14 - virtualObjectMappings: ?91  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i14 
y: i557 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i14 y: i557  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 19]
stamp: void
trueSuccessorProbability: 0.08794596121570653
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v18 #falseSuccessor: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08794596121570653 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B35" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591612665066537958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i558 
=== Usages ===
v209 
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i558  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v548 v18 
=== Succesors ===
=== Usages ===
i558 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v548 v18  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [v15|QWORD[.] + v37|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a258 
index: i14 
=== Succesors ===
=== Usages ===
i558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a258 index: i14  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i558 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v209 
address: v563 
=== Succesors ===
next: v60 
=== Usages ===
i173 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v209 address: v563 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i558 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i558  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 59]
stamp: i32
=== Inputs ===
x: i14 
y: i35 
=== Succesors ===
=== Usages ===
i14 i14 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i14 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@547095f7
keySuccessors: [I@60f93956
keys: [I@41705741
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4451) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
stamp: void
=== Inputs ===
value: i173 
=== Succesors ===
successors: v54 v55 v53 
=== Usages ===
=== Predecessor ===
i558 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i173 #successors: v54 v55 v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZX [v15|QWORD[.] + v37|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v39|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591567546596386185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4452) [bci: 132]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i559 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i559  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4452) [bci: 132]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
rawvalue: Formatter.Flags@122446495
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@122446495]
=== Inputs ===
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v41|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a58 
index: - 
=== Succesors ===
=== Usages ===
i559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a58 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i559 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
=== Succesors ===
next: v234 
=== Usages ===
i102 v103 i104 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v564 #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
stamp: i32
=== Inputs ===
x: i90 
y: i559 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i90 y: i559  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i102 
y: i559 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i102 y: i559  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v233 
falseSuccessor: v230 
=== Usages ===
=== Predecessor ===
i559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v233 #falseSuccessor: v230  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = AND (x: v38|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
result int[-45075|0xffffffffffff4fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45075
stableDimension: 0
stamp: i32 [-45075] ⇊00000000ffff4fed ⇈00000000ffff4fed
stampKind: i32
value: int[-45075|0xffffffffffff4fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45075|0xffffffffffff4fed]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591567546596386185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.Formatter$Flags.add(Formatter.java:4428) [bci: 9]
at java.util.Formatter$Flags.parse(Formatter.java:4444) [bci: 55]
stamp: i32
=== Inputs ===
x: i90 
y: i559 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i90 y: i559  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = OR (x: v38|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v44|DWORD] destination: B34 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4558914387450998390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4456) [bci: 148]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i560 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i560  <|@  <|@
f <@~|@floating>@ <|@
tid a56 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4456) [bci: 148]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
rawvalue: Formatter.Flags@271681927
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@271681927]
=== Inputs ===
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [v45|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a56 
index: - 
=== Succesors ===
=== Usages ===
i560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a56 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i560 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
=== Succesors ===
next: v239 
=== Usages ===
i70 v74 i82 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
stamp: i32
=== Inputs ===
x: i90 
y: i560 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i90 y: i560  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 33]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i560 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i70 y: i560  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
i560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v238 #falseSuccessor: v235  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v45|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = AND (x: v38|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
result int[-45843|0xffffffffffff4ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45843
stableDimension: 0
stamp: i32 [-45843] ⇊00000000ffff4ced ⇈00000000ffff4ced
stampKind: i32
value: int[-45843|0xffffffffffff4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v238 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45843|0xffffffffffff4ced]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4558914387450998390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4442) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.Formatter$Flags.add(Formatter.java:4428) [bci: 9]
at java.util.Formatter$Flags.parse(Formatter.java:4444) [bci: 55]
stamp: i32
=== Inputs ===
x: i90 
y: i560 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i90 y: i560  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = OR (x: v38|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v48|DWORD] destination: B37 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4451) [bci: 1]
at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
result int[-13331|0xffffffffffffcbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13331
stableDimension: 0
stamp: i32 [-13331] ⇊00000000ffffcbed ⇈00000000ffffcbed
stampKind: i32
value: int[-13331|0xffffffffffffcbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13331|0xffffffffffffcbed]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B33" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i276 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-45843 - -13331] ⇊00000000ffff48ed ⇈00000000ffffcfed
valueDescription: i32
=== Inputs ===
merge: v273 
values: i275 i280 i282 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v273 values: i275 i280 i282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v274 v279 v281 
=== Succesors ===
next: v278 
=== Usages ===
i276 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v274 v279 v281 #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid a264 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?15 
actionAndReason: i276 
speculation: a264 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?15 actionAndReason: i276 speculation: a264  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - v15|QWORD[.] vobject:Formatter$Flags:0{flags=v38|DWORD} v37|DWORD - 
vobject:Formatter$Flags:0{flags=v38|DWORD} Ljava/util/Formatter$Flags; v38|DWORD 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4446) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: j359 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: j359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j359 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j376 
=== Usages ===
v579 v580 
=== Predecessor ===
v20 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j376  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j359 
index: - 
=== Succesors ===
=== Usages ===
j376 v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j359 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
=== Succesors ===
next: j377 
=== Usages ===
j402 j382 v584 
=== Predecessor ===
j359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 #next: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j359 
index: - 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j359 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j377 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
=== Succesors ===
next: v367 
=== Usages ===
v364 
=== Predecessor ===
j376 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v580 #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid j402 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j376 
y: j169 
=== Succesors ===
=== Usages ===
v364 v378 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j376 y: j169  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j377 
y: j402 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j377 y: j402  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
j377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v365 #falseSuccessor: v366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v50|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4576918229304087679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a372 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a372  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a372 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?15 
arguments: v357 i7 i35 
=== Succesors ===
next: j373 
=== Usages ===
j373 
=== Predecessor ===
v365 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?15 arguments: v357 i7 i35 #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a372 
=== Succesors ===
next: v383 
=== Usages ===
j382 
=== Predecessor ===
a372 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a372 #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
j373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - v15|QWORD[.] vobject:Formatter$Flags:0{flags=v38|DWORD} v37|DWORD - 
vobject:Formatter$Flags:0{flags=v38|DWORD} Ljava/util/Formatter$Flags; v38|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
value: j402 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v579 value: j402 stateAfter: - lastLocationAccess: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
result [v50|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v584 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v584 #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v50|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j382 <|@
result v54|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v380 
values: j376 j373 
=== Succesors ===
=== Usages ===
v583 v566 a243 v582 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: j376 j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v381 v383 
=== Succesors ===
next: a243 
=== Usages ===
j382 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v381 v383 #next: a243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a243 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j382 
=== Succesors ===
next: j394 
=== Usages ===
a248 
=== Predecessor ===
v380 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j382 #next: j394  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v388 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v388  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v56|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j389 
index: - 
=== Succesors ===
=== Usages ===
j394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j394 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
=== Succesors ===
next: v395 
=== Usages ===
v395 
=== Predecessor ===
a243 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v581 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result [v54|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j382 
index: - 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
value: j394 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
j394 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v582 value: j394 stateAfter: - lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
result [v54|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j382 
index: - 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j382 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
result meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v583 
value: v405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v583 value: v405 stateAfter: - lastLocationAccess: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [v54|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j382 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
value: i90 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a248 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v566 value: i90 stateAfter: - lastLocationAccess: - #next: a248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a248 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a243 
=== Succesors ===
next: v249 
=== Usages ===
v38 
=== Predecessor ===
v247 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a243 #next: v249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
a248 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4446) [bci: 66]
stamp: void
=== Inputs ===
result: a248 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a248 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE v54|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v56|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[*]], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v54|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[*] + 12], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B44 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.parse(Formatter.java:4441) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid a272 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@291814196
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@291814196]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i271 <|@
result int[-42267|0xffffffffffff5ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42267
stableDimension: 0
stamp: i32 [-42267] ⇊00000000ffff5ae5 ⇈00000000ffff5ae5
stampKind: i32
value: int[-42267|0xffffffffffff5ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i271 
speculation: a272 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i271 speculation: a272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@291814196] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -42267 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4302c5f7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = DEC v3|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA [v7|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND v8|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v10|QWORD + v5|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v10|QWORD + v5|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v10|QWORD + v5|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v10|QWORD + v5|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v5|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = LEA [v15|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = LEA [v3|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v3|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v16|QWORD[.] + v21|QWORD * 2], input: v23|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v3|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v16|QWORD[.] + v25|QWORD * 2], input: v27|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v3|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v16|QWORD[.] + v29|QWORD * 2], input: v31|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD[.] + v33|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B11" "B28" "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59b6b789 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v35|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v36|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B37" "B34" 
    successors "B31" "B40" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607616684075228222
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08794596121570653 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B35" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591612665066537958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZX [v15|QWORD[.] + v37|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v39|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591567546596386185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v41|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = AND (x: v38|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591567546596386185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = OR (x: v38|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v44|DWORD] destination: B34 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4558914387450998390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v45|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = AND (x: v38|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4558914387450998390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = OR (x: v38|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v48|DWORD] destination: B37 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v50|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v50|QWORD + 208] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE v54|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v56|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[*]], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v54|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[*] + 12], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B44 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B44" 
    successors "B16" "B44" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v16|QWORD[.] + v19|QWORD * 2], input: v18|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v19|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4576918229304087679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - v15|QWORD[.] vobject:Formatter$Flags:0{flags=v38|DWORD} v37|DWORD - 
vobject:Formatter$Flags:0{flags=v38|DWORD} Ljava/util/Formatter$Flags; v38|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13331|0xffffffffffffcbed]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B33" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - v15|QWORD[.] vobject:Formatter$Flags:0{flags=v38|DWORD} v37|DWORD - 
vobject:Formatter$Flags:0{flags=v38|DWORD} Ljava/util/Formatter$Flags; v38|DWORD 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@291814196] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -42267 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45075|0xffffffffffff4fed]] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45843|0xffffffffffff4ced]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #5          // java.lang.String.toCharArray:()char[]
     4: astore_1      
     5: new           #5          // java.util.Formatter$Flags
     8: dup           
     9: iconst_0      
    10: invokespecial #4          // <init>:(int)void
    13: astore_2      
    14: iconst_0      
    15: istore_3      
    16: iload_3       
    17: aload_1       
    18: arraylength   
    19: if_icmpge     65
    22: aload_1       
    23: iload_3       
    24: caload        
    25: invokestatic  #6          // parse:(char)java.util.Formatter$Flags
    28: astore        4
    30: aload_2       
    31: aload         4
    33: invokevirtual #7          // contains:(java.util.Formatter$Flags)boolean
    36: ifeq          52
    39: new           #10         // java.util.DuplicateFormatFlagsException
    42: dup           
    43: aload         4
    45: invokevirtual #8          // toString:()java.lang.String
    48: invokespecial #9          // java.util.DuplicateFormatFlagsException.<init>:(java.lang.String)void
    51: athrow        
    52: aload_2       
    53: aload         4
    55: invokespecial #0          // add:(java.util.Formatter$Flags)java.util.Formatter$Flags
    58: pop           
    59: iinc          
    62: goto          16
    65: aload_2       
    66: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4302c5f7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: r13|QWORD[.] - - - - 
>@ <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: r13|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   38  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   40  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   82  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   86  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  130  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  148  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  196  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 4] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  220  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 2] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  244  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  254  <|@ instruction CMP (x: rdx|QWORD, y: stack:32|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  270  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B11" "B28" "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59b6b789 encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  294  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  296  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  298  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B37" "B34" 
    successors "B31" "B40" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607616684075228222
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  306  <|@ instruction CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.08794596121570653 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B35" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591612665066537958
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVZX [r14|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rax|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591567546596386185
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591567546596386185
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B34 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4558914387450998390
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr  350  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  354  <|@ instruction CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4558914387450998390
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B37 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  396  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 208] instr: 0 <|@ <|@
      nr  424  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>} <|@ <|@
      nr  434  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  436  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed} <|@ <|@
      nr  440  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B11 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  162  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B44 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B44" 
    successors "B16" "B44" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  168  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  116  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  120  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:16, stack:28]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: stack:48|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4576918229304087679
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  406  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - r14|QWORD[.] vobject:Formatter$Flags:0{flags=stack:52|DWORD} r13|DWORD - 
vobject:Formatter$Flags:0{flags=stack:52|DWORD} Ljava/util/Formatter$Flags; stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16] <|@ <|@
      nr  412  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: int[-13331|0xffffffffffffcbed] <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B33" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  384  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  388  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - r14|QWORD[.] vobject:Formatter$Flags:0{flags=r11|DWORD} r13|DWORD - 
vobject:Formatter$Flags:0{flags=r11|DWORD} Ljava/util/Formatter$Flags; r11|DWORD 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@291814196] <|@ <|@
      nr  454  <|@ instruction MOV [r15|QWORD + 668] y: -42267 size: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: r13|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|DWORD = MOVE input: int[-45075|0xffffffffffff4fed] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #5          // java.lang.String.toCharArray:()char[]
     4: astore_1      
     5: new           #5          // java.util.Formatter$Flags
     8: dup           
     9: iconst_0      
    10: invokespecial #4          // <init>:(int)void
    13: astore_2      
    14: iconst_0      
    15: istore_3      
    16: iload_3       
    17: aload_1       
    18: arraylength   
    19: if_icmpge     65
    22: aload_1       
    23: iload_3       
    24: caload        
    25: invokestatic  #6          // parse:(char)java.util.Formatter$Flags
    28: astore        4
    30: aload_2       
    31: aload         4
    33: invokevirtual #7          // contains:(java.util.Formatter$Flags)boolean
    36: ifeq          52
    39: new           #10         // java.util.DuplicateFormatFlagsException
    42: dup           
    43: aload         4
    45: invokevirtual #8          // toString:()java.lang.String
    48: invokespecial #9          // java.util.DuplicateFormatFlagsException.<init>:(java.lang.String)void
    51: athrow        
    52: aload_2       
    53: aload         4
    55: invokespecial #0          // add:(java.util.Formatter$Flags)java.util.Formatter$Flags
    58: pop           
    59: iinc          
    62: goto          16
    65: aload_2       
    66: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B4" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4302c5f7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: r13|QWORD[.] - - - - 
>@ <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: r13|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B4 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   38  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   40  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   54  <|@ instruction r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   56  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   78  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   80  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   82  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   86  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B29" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  130  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B29 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  148  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B20" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  196  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B17" 
    successors "B23" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 4] size: QWORD <|@ <|@
      nr  208  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  220  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 2] size: QWORD <|@ <|@
      nr  232  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  244  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B29" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  254  <|@ instruction CMP (x: rdx|QWORD, y: stack:32|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59b6b789 encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  294  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  296  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  298  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B37" "B34" 
    successors "B31" "B40" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607616684075228222
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  306  <|@ instruction CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.08794596121570653 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B35" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591612665066537958
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVZX [r14|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rax|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591567546596386185
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr  322  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  324  <|@ instruction rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591567546596386185
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B34 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4558914387450998390
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927] <|@ <|@
      nr  350  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  354  <|@ instruction CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4558914387450998390
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B37 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  396  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 208] instr: 0 <|@ <|@
      nr  424  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>} <|@ <|@
      nr  434  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  436  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed} <|@ <|@
      nr  440  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  162  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  168  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B17 falseDestination: B15 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  116  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  120  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:16, stack:28]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: stack:48|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4576918229304087679
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  406  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - r14|QWORD[.] vobject:Formatter$Flags:0{flags=stack:52|DWORD} r13|DWORD - 
vobject:Formatter$Flags:0{flags=stack:52|DWORD} Ljava/util/Formatter$Flags; stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16] <|@ <|@
      nr  412  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: int[-13331|0xffffffffffffcbed] <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B33" "B36" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  384  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  388  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16]
locals: - r14|QWORD[.] vobject:Formatter$Flags:0{flags=r11|DWORD} r13|DWORD - 
vobject:Formatter$Flags:0{flags=r11|DWORD} Ljava/util/Formatter$Flags; r11|DWORD 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@291814196] <|@ <|@
      nr  454  <|@ instruction MOV [r15|QWORD + 668] y: -42267 size: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0]
locals: r13|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r10|DWORD = MOVE input: int[-45075|0xffffffffffff4fed] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #5          // java.lang.String.toCharArray:()char[]
     4: astore_1      
     5: new           #5          // java.util.Formatter$Flags
     8: dup           
     9: iconst_0      
    10: invokespecial #4          // <init>:(int)void
    13: astore_2      
    14: iconst_0      
    15: istore_3      
    16: iload_3       
    17: aload_1       
    18: arraylength   
    19: if_icmpge     65
    22: aload_1       
    23: iload_3       
    24: caload        
    25: invokestatic  #6          // parse:(char)java.util.Formatter$Flags
    28: astore        4
    30: aload_2       
    31: aload         4
    33: invokevirtual #7          // contains:(java.util.Formatter$Flags)boolean
    36: ifeq          52
    39: new           #10         // java.util.DuplicateFormatFlagsException
    42: dup           
    43: aload         4
    45: invokevirtual #8          // toString:()java.lang.String
    48: invokespecial #9          // java.util.DuplicateFormatFlagsException.<init>:(java.lang.String)void
    51: athrow        
    52: aload_2       
    53: aload         4
    55: invokespecial #0          // add:(java.util.Formatter$Flags)java.util.Formatter$Flags
    58: pop           
    59: iinc          
    62: goto          16
    65: aload_2       
    66: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec3848896c24304c8bee458b750c468b14f50c000000458bda4d8bc349ffc84d3bd80f87090000004585d20f85a1020000498b7760498b57704181faffffff000f8314020000418bcad1e18d491783e1f84863c94c8bc94c03ce4c3bca0f87f70100004d894f600f188431c00000000f188431000100000f188431400100000f188431800100004489560c48c70601000000c74608addeadde488bc64c89442420458bea448974241c4d8bf34585ed0f8480000000488d7810498d76f04885f60f8d7501000048c7c200000000498d76f8483bd60f8f10000000c5f9efc0c5fa7f0457488d7208488bd6498d76fc483bd60f8f11000000c5f9efc0c4e1f97e0457488d7204488bd6498d76fe483bd60f8f10000000c5f9efc0c5f97e0457488d7202488bd6483b5424200f8f05000000664489245744896c240c448b54241c418bfa48c1e703488bf0488d7f10488d7610498bd64889442410e8000000009041ba0000000041bd000000004c8b742410448b5c240c6690453bdd0f8e66000000430fb7446e10418bf5ffc683f82d0f840e00000083f8300f8427000000e91301000048b8addeaddeaddeadde8b400c418bd223d03bc20f8438010000440bd0448beeebb348b8addeaddeaddeadde8b400c418bd223d03bc20f8421010000440bd0448beeeb91498b4760488d7010493b77700f8794000000498977600f1880d0000000488bf048baaddeaddeaddeadde488b92a8000000488910c74008addeadde4489500c488bc6488b6c24304883c438850500000000c5f877c3c5f9efc048c7c20000000090c5fe7f0457488d5210483bd67ef2e973feffff4c89442420448974241c4c896c241048beaddeaddeaddeadde418bd2b9000000004d8bf3458beae80000000090e920feffff448954240c48beaddeaddeaddeaddeba00000000b901000000e80000000090448b54240ce94effffff458bda41baedcbffff4589979c0200004d89a7a8020000e8000000009049baaddeaddeaddeadde41c7879c020000e55affff4d8997a8020000e80000000090458bda41baed4fffffebbf458bda41baed4cffffebb4e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4302c5f7 slotKind: QWORD  <||@
  Comment 16 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 19 [r13:0]at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |r13|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 19 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 23 10 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 23 [r13:0, r14:0]at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |r13|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 23 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 31 12 r11|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 34 14 r8|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 40 16 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 43 18 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 49 block B2 null  <||@
  Comment 49 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 49 26 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 52 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B45  <||@
  Comment 58 block B4 null  <||@
  Comment 58 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 58 36 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 62 38 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 66 40 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 73 42 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 79 block B5 null  <||@
  Comment 79 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 46 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 84 48 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 87 50 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 90 52 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 93 54 r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 99 56 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 102 58 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7  <||@
  Comment 108 block B7 null  <||@
  Comment 108 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 72 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 112 74 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 120 76 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 128 78 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 136 80 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 144 82 MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 148 84 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 155 86 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 155 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 162 88 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 162 90 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 165 92 stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 170 94 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 173 96 stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 178 98 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 181 100 JUMP ~[] destination: B7 -> B10  <||@
  Comment 181 block B10 null  <||@
  Comment 181 128 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 181 130 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 184 132 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B29 falseDestination: B10 -> B12  <||@
  Comment 190 block B12 null  <||@
  Comment 190 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 144 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 194 146 rsi|QWORD = LEA [r14|QWORD - 16] size: QWORD  <||@
  Comment 198 148 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 201 150 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 207 block B13 null  <||@
  Comment 207 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 154 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 214 156 JUMP ~[] destination: B13 -> B17  <||@
  Comment 214 block B17 null  <||@
  Comment 214 180 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 214 182 rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD  <||@
  Comment 218 184 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 221 186 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19  <||@
  Comment 227 block B19 null  <||@
  Comment 227 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 194 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 231 196 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 236 198 rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 240 200 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 243 202 JUMP ~[] destination: B19 -> B20  <||@
  Comment 243 block B20 null  <||@
  Comment 243 204 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 243 206 rsi|QWORD = LEA [r14|QWORD - 4] size: QWORD  <||@
  Comment 247 208 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 250 210 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 256 block B22 null  <||@
  Comment 256 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 256 218 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 260 220 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 266 222 rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 270 224 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 273 226 JUMP ~[] destination: B22 -> B23  <||@
  Comment 273 block B23 null  <||@
  Comment 273 228 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 273 230 rsi|QWORD = LEA [r14|QWORD - 2] size: QWORD  <||@
  Comment 277 232 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 280 234 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 286 block B25 null  <||@
  Comment 286 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 242 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 290 244 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 295 246 rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 299 248 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 302 250 JUMP ~[] destination: B25 -> B26  <||@
  Comment 302 block B26 null  <||@
  Comment 302 252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 302 254 CMP (x: rdx|QWORD, y: stack:32|QWORD) size: QWORD  <||@
  Comment 307 256 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 313 block B28 null  <||@
  Comment 313 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 268 MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 318 274 JUMP ~[] destination: B28 -> B29  <||@
  Comment 318 block B29 null  <||@
  Comment 318 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 136 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 323 138 r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 328 278 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59b6b789 encoding: base: 0 shift: 3  <||@
  Comment 335 280 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 335 282 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 338 284 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 342 286 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 346 288 rdx|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 349 290 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 354 292 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 354 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 360 294 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 366 296 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 372 298 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 377 300 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 382 302 JUMP ~[] destination: B29 -> B30  <||@
  Comment 382 block B30 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 382 304 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 384 306 CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 387 308 BRANCH trueDestinationProbability: 0.08794596121570653 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B40  <||@
  Comment 393 block B31 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 393 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 393 312 rax|DWORD = MOVZX [r14|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD  <||@
  Comment 399 314 rsi|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 404 316 AMD64HOTSPOTSTRATEGYSWITCH ~rax|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066]  <||@
  Comment 427 block B32 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 427 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 320 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495]  <||@
  Comment 427 {Object[Formatter.Flags@122446495]}  <||@
  Comment 437 322 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 440 324 rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 445 326 CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 447 328 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 453 block B34 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 453 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 453 340 r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 456 342 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 459 344 JUMP ~[] destination: B34 -> B30  <||@
  Comment 461 block B35 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 461 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 348 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927]  <||@
  Comment 461 {Object[Formatter.Flags@271681927]}  <||@
  Comment 471 350 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 474 352 rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 479 354 CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 481 356 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 487 block B37 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 487 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 487 368 r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 490 370 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 493 372 JUMP ~[] destination: B37 -> B30  <||@
  Comment 495 block B40 null  <||@
  Comment 495 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 495 392 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 499 394 rsi|QWORD = LEA [rax|QWORD + 16] size: QWORD  <||@
  Comment 503 396 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 507 398 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 513 block B42 null  <||@
  Comment 513 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 420 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 517 422 AMD64PREFETCH ~[rax|QWORD + 208] instr: 0  <||@
  Comment 524 424 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 524 426 JUMP ~[] destination: B42 -> B43  <||@
  Comment 524 block B43 null  <||@
  Comment 524 428 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 524 430 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 527 432 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}  <||@
  Comment 527 {meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}}  <||@
  Comment 537 434 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 544 436 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 547 438 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}  <||@
  Comment 547 {meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}}  <||@
  Comment 554 440 MOV (x: [rax|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 558 442 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 561 444 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 570 12  <||@
  Comment 580 block B14 null  <||@
  Comment 580 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 580 160 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 584 162 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 591 164 JUMP ~[] destination: B14 -> B15  <||@
  Comment 591 block B15 loop 0 depth 1 header:419|LoopBegin  <||@
  Comment 591 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 592 168 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 597 170 rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD  <||@
  Comment 601 172 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 604 174 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B17 falseDestination: B15 -> B15  <||@
  Comment 611 block B9 null  <||@
  Comment 611 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 104 stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 616 106 stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 621 108 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 626 114 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 626 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 636 116 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 639 118 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 644 120 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 647 122 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 650 124 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 650 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 655 [stack:16, stack:28]at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 656 126 JUMP ~[] destination: B9 -> B10  <||@
  Comment 661 block B41 null  <||@
  Comment 661 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 402 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 666 404 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 666 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 676 406 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 681 408 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 686 410 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16]  <||@
  Comment 686 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 691 [r14:0]at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16, duringCall: false, rethrow: false]
              |0  |1             |2                                                |3          |4 
     locals:  |-  |r14|QWORD[.]  |vobject:Formatter$Flags:0{flags=stack:52|DWORD}  |r13|DWORD  |-   <||@
  Comment 692 412 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 692 414 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 697 416 JUMP ~[] destination: B41 -> B43  <||@
  Comment 702 block B38 null  <||@
  Comment 702 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 376 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 705 378 r10|DWORD = MOVE input: int[-13331|0xffffffffffffcbed]  <||@
  Comment 711 380 JUMP ~[] destination: B38 -> B39  <||@
  Comment 711 block B39 null  <||@
  Comment 711 382 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 711 384 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 718 386 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 725 388 DEOPT info [bci:16]  <||@
  Comment 725 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 730 [r14:0]at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16, duringCall: false, rethrow: false]
              |0  |1             |2                                           |3          |4 
     locals:  |-  |r14|QWORD[.]  |vobject:Formatter$Flags:0{flags=r11|DWORD}  |r13|DWORD  |-   <||@
  Comment 731 block B45 null  <||@
  Comment 731 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 731 452 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@291814196]  <||@
  Comment 731 {Object[d.a@291814196]}  <||@
  Comment 741 454 MOV [r15|QWORD + 668] y: -42267 size: DWORD  <||@
  Comment 752 456 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 759 458 DEOPT info [bci:0]  <||@
  Comment 759 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 764 [r13:0]at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |r13|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 765 block B33 null  <||@
  Comment 765 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 332 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 768 334 r10|DWORD = MOVE input: int[-45075|0xffffffffffff4fed]  <||@
  Comment 774 336 JUMP ~[] destination: B33 -> B39  <||@
  Comment 776 block B36 null  <||@
  Comment 776 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 776 360 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 779 362 r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced]  <||@
  Comment 785 364 JUMP ~[] destination: B36 -> B39  <||@
  Comment 787 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 787 4  <||@
  Comment 793 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 793 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5329[java.util.Formatter$Flags.parse(String)]"
  method "HotSpotCompilation-5329[java.util.Formatter$Flags.parse(String)]"
  date 1527005061054
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1072e1dc0 89842400c0feff4883ec3848896c24304c8bee458b750c468b14f50c000000458bda4d8bc349ffc84d3bd80f87090000004585d20f85a1020000498b7760498b57704181faffffff000f8314020000418bcad1e18d491783e1f84863c94c8bc94c03ce4c3bca0f87f70100004d894f600f188431c00000000f188431000100000f188431400100000f188431800100004489560c48c70601000000c74608410000f8488bc64c89442420458bea448974241c4d8bf34585ed0f8480000000488d7810498d76f04885f60f8d7501000048c7c200000000498d76f8483bd60f8f10000000c5f9efc0c5fa7f0457488d7208488bd6498d76fc483bd60f8f11000000c5f9efc0c4e1f97e0457488d7204488bd6498d76fe483bd60f8f10000000c5f9efc0c5f97e0457488d7202488bd6483b5424200f8f05000000664489245744896c240c448b54241c418bfa48c1e703488bf0488d7f10488d7610498bd64889442410e8590d53ff9041ba0000000041bd000000004c8b742410448b5c240c6690453bdd0f8e66000000430fb7446e10418bf5ffc683f82d0f840e00000083f8300f8427000000e91301000048b858711ac0060000008b400c418bd223d03bc20f8438010000440bd0448beeebb348b888711ac0060000008b400c418bd223d03bc20f8421010000440bd0448beeeb91498b4760488d7010493b77700f8794000000498977600f1880d0000000488bf048bae8160ac007000000488b92a8000000488910c74008dd4201f84489500c488bc6488b6c24304883c438850506d05afdc5f877c3c5f9efc048c7c20000000090c5fe7f0457488d5210483bd67ef2e973feffff4c89442420448974241c4c896c241048be080200c007000000418bd2b9000000004d8bf3458beae8914dcbff90e920feffff448954240c48be680b00c007000000ba00000000b901000000e86d4dcbff90448b54240ce94effffff458bda41baedcbffff4589979c0200004d89a7a8020000e8645552ff9049bad074b1860700000041c7879c020000e55affff4d8997a8020000e8425552ff90458bda41baed4fffffebbf458bda41baed4cffffebb4e8488596ff90e8225452ff90f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4302c5f7 slotKind: QWORD  <||@
  Comment 16 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 19 [r13:0]at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |r13|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 19 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 23 10 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 23 [r13:0, r14:0]at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |r13|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 23 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 31 12 r11|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 34 14 r8|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 40 16 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 43 18 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 49 block B2 null  <||@
  Comment 49 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 49 26 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 52 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B45  <||@
  Comment 58 block B4 null  <||@
  Comment 58 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 58 36 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 62 38 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 66 40 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 73 42 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 79 block B5 null  <||@
  Comment 79 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 46 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 84 48 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 87 50 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 90 52 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 93 54 r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 99 56 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 102 58 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7  <||@
  Comment 108 block B7 null  <||@
  Comment 108 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 72 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 112 74 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 120 76 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 128 78 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 136 80 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 144 82 MOV (x: [rsi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 148 84 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 155 86 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 155 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 162 88 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 162 90 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 165 92 stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 170 94 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 173 96 stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 178 98 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 181 100 JUMP ~[] destination: B7 -> B10  <||@
  Comment 181 block B10 null  <||@
  Comment 181 128 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 181 130 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 184 132 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B29 falseDestination: B10 -> B12  <||@
  Comment 190 block B12 null  <||@
  Comment 190 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 144 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 194 146 rsi|QWORD = LEA [r14|QWORD - 16] size: QWORD  <||@
  Comment 198 148 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 201 150 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 207 block B13 null  <||@
  Comment 207 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 154 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 214 156 JUMP ~[] destination: B13 -> B17  <||@
  Comment 214 block B17 null  <||@
  Comment 214 180 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 214 182 rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD  <||@
  Comment 218 184 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 221 186 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19  <||@
  Comment 227 block B19 null  <||@
  Comment 227 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 194 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 231 196 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 236 198 rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 240 200 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 243 202 JUMP ~[] destination: B19 -> B20  <||@
  Comment 243 block B20 null  <||@
  Comment 243 204 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 243 206 rsi|QWORD = LEA [r14|QWORD - 4] size: QWORD  <||@
  Comment 247 208 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 250 210 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 256 block B22 null  <||@
  Comment 256 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 256 218 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 260 220 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 266 222 rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 270 224 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 273 226 JUMP ~[] destination: B22 -> B23  <||@
  Comment 273 block B23 null  <||@
  Comment 273 228 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 273 230 rsi|QWORD = LEA [r14|QWORD - 2] size: QWORD  <||@
  Comment 277 232 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 280 234 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 286 block B25 null  <||@
  Comment 286 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 242 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 290 244 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 295 246 rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 299 248 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 302 250 JUMP ~[] destination: B25 -> B26  <||@
  Comment 302 block B26 null  <||@
  Comment 302 252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 302 254 CMP (x: rdx|QWORD, y: stack:32|QWORD) size: QWORD  <||@
  Comment 307 256 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 313 block B28 null  <||@
  Comment 313 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 268 MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 318 274 JUMP ~[] destination: B28 -> B29  <||@
  Comment 318 block B29 null  <||@
  Comment 318 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 136 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 323 138 r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 328 278 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59b6b789 encoding: base: 0 shift: 3  <||@
  Comment 335 280 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 335 282 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 338 284 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 342 286 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 346 288 rdx|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 349 290 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 354 292 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 354 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 360 294 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 366 296 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 372 298 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 377 300 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 382 302 JUMP ~[] destination: B29 -> B30  <||@
  Comment 382 block B30 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 382 304 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 384 306 CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 387 308 BRANCH trueDestinationProbability: 0.08794596121570653 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B40  <||@
  Comment 393 block B31 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 393 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 393 312 rax|DWORD = MOVZX [r14|QWORD[.] + r13|DWORD * 2 + 16] size: DWORD  <||@
  Comment 399 314 rsi|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 404 316 AMD64HOTSPOTSTRATEGYSWITCH ~rax|DWORD - keyConstants: [int[45|0x2d], int[48|0x30]] keyTargets: [B31 -> B32, B31 -> B35] defaultTarget: B31 -> B38 strategy: SequentialStrategy[avgEffort=1.0064935064935066]  <||@
  Comment 427 block B32 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 427 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 320 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495]  <||@
  Comment 427 {Object[Formatter.Flags@122446495]}  <||@
  Comment 437 322 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 440 324 rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 445 326 CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 447 328 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 453 block B34 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 453 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 453 340 r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 456 342 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 459 344 JUMP ~[] destination: B34 -> B30  <||@
  Comment 461 block B35 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 461 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 348 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@271681927]  <||@
  Comment 461 {Object[Formatter.Flags@271681927]}  <||@
  Comment 471 350 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 474 352 rdx|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 479 354 CMP (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 481 356 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 487 block B37 loop 1 depth 1 header:13|LoopBegin  <||@
  Comment 487 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 487 368 r10|DWORD = OR (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 490 370 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 493 372 JUMP ~[] destination: B37 -> B30  <||@
  Comment 495 block B40 null  <||@
  Comment 495 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 495 392 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 499 394 rsi|QWORD = LEA [rax|QWORD + 16] size: QWORD  <||@
  Comment 503 396 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 507 398 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 513 block B42 null  <||@
  Comment 513 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 420 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 517 422 AMD64PREFETCH ~[rax|QWORD + 208] instr: 0  <||@
  Comment 524 424 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 524 426 JUMP ~[] destination: B42 -> B43  <||@
  Comment 524 block B43 null  <||@
  Comment 524 428 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 524 430 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 527 432 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}  <||@
  Comment 527 {meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>}}  <||@
  Comment 537 434 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 544 436 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 547 438 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}  <||@
  Comment 547 {meta{HotSpotType<Ljava/util/Formatter$Flags;, resolved>;compressed}}  <||@
  Comment 554 440 MOV (x: [rax|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 558 442 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 561 444 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 570 12  <||@
  Comment 580 block B14 null  <||@
  Comment 580 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 580 160 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 584 162 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 591 164 JUMP ~[] destination: B14 -> B15  <||@
  Comment 591 block B15 loop 0 depth 1 header:419|LoopBegin  <||@
  Comment 591 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 592 168 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 597 170 rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD  <||@
  Comment 601 172 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 604 174 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B17 falseDestination: B15 -> B15  <||@
  Comment 611 block B9 null  <||@
  Comment 611 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 104 stack:32|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 616 106 stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 621 108 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 626 114 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 626 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 636 116 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 639 118 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 644 120 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 647 122 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 650 124 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 650 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 655 [stack:16, stack:28]at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 656 126 JUMP ~[] destination: B9 -> B10  <||@
  Comment 661 block B41 null  <||@
  Comment 661 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 402 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 666 404 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 666 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 676 406 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 681 408 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 686 410 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:16]  <||@
  Comment 686 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 691 [r14:0]at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16, duringCall: false, rethrow: false]
              |0  |1             |2                                                |3          |4 
     locals:  |-  |r14|QWORD[.]  |vobject:Formatter$Flags:0{flags=stack:52|DWORD}  |r13|DWORD  |-   <||@
  Comment 692 412 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 692 414 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 697 416 JUMP ~[] destination: B41 -> B43  <||@
  Comment 702 block B38 null  <||@
  Comment 702 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 376 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 705 378 r10|DWORD = MOVE input: int[-13331|0xffffffffffffcbed]  <||@
  Comment 711 380 JUMP ~[] destination: B38 -> B39  <||@
  Comment 711 block B39 null  <||@
  Comment 711 382 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 711 384 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 718 386 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 725 388 DEOPT info [bci:16]  <||@
  Comment 725 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 730 [r14:0]at java.util.Formatter$Flags.parse(Formatter.java:4440) [bci: 16, duringCall: false, rethrow: false]
              |0  |1             |2                                           |3          |4 
     locals:  |-  |r14|QWORD[.]  |vobject:Formatter$Flags:0{flags=r11|DWORD}  |r13|DWORD  |-   <||@
  Comment 731 block B45 null  <||@
  Comment 731 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 731 452 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@291814196]  <||@
  Comment 731 {Object[d.a@291814196]}  <||@
  Comment 741 454 MOV [r15|QWORD + 668] y: -42267 size: DWORD  <||@
  Comment 752 456 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 759 458 DEOPT info [bci:0]  <||@
  Comment 759 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 764 [r13:0]at java.util.Formatter$Flags.parse(Formatter.java:4438) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |r13|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 765 block B33 null  <||@
  Comment 765 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 332 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 768 334 r10|DWORD = MOVE input: int[-45075|0xffffffffffff4fed]  <||@
  Comment 774 336 JUMP ~[] destination: B33 -> B39  <||@
  Comment 776 block B36 null  <||@
  Comment 776 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 776 360 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 779 362 r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced]  <||@
  Comment 785 364 JUMP ~[] destination: B36 -> B39  <||@
  Comment 787 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 787 4  <||@
  Comment 793 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 793 5  <||@
  HexCodeFile>>> <|@
end_nmethod
