begin_compilation
  name " HotSpotCompilation-8926[org.graalvm.collections.EconomicMapImpl$2.advance()]"
  method "HotSpotCompilation-8926[org.graalvm.collections.EconomicMapImpl$2.advance()]"
  date 1527005178498
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a105 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a105  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$2;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v111 ?19 ?7 ?38 v112 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$2.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 15]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v112 
=== Succesors ===
next: i106 
=== Usages ===
v114 v113 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v112 #next: i106  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$2.advance()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 726
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a105 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$000(EconomicMapImpl.java:56) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 18]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v113 
=== Succesors ===
next: i107 
=== Usages ===
v11 
=== Predecessor ===
a105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v113 #next: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i107 v50 v80 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$2.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
=== Succesors ===
next: v50 
=== Usages ===
i5 
=== Predecessor ===
i106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v111 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 i26 i36 v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 6]
stamp: i32
=== Inputs ===
x: i107 
y: i4 
=== Succesors ===
=== Usages ===
v50 v11 i41 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i107 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$2.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
i107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v111 value: i5 stateAfter: - lastLocationAccess: - #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i106 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 21]
stamp: void
trueSuccessorProbability: 0.685535818856139
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604349977261975687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a108 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a108  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a105 
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v114 
=== Succesors ===
next: i109 
=== Usages ===
a64 v115 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v114 #next: i109  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<EconomicMapImpl$2.advance()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 7]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 727
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a108 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?7 
guard: - 
address: v115 
=== Succesors ===
next: v17 
=== Usages ===
v70 
=== Predecessor ===
a108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?7 guard: - address: v115 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a108 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a108  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
i109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B3" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4604483306550182699
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v18 
values: i5 i36 
=== Succesors ===
=== Usages ===
i26 i36 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v18 values: i5 i36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.021592634776006
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v17 
=== Succesors ===
next: v104 
=== Usages ===
v32 v39 i41 v103 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v17 #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i41 
y: i4 
=== Succesors ===
=== Usages ===
v116 v70 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i41 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i109 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i26 y: i109  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v70 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v70 #trueSuccessor: v100 #falseSuccessor: v103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604483306550182699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a110 
=== Usages ===
a110 
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a110  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a64 
index: i26 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a64 index: i26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v100 
address: v116 
=== Succesors ===
next: v34 
=== Usages ===
v82 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v100 address: v116 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 37]
stamp: void
=== Inputs ===
value: a110 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a110  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 37]
stamp: void
trueSuccessorProbability: 0.021136247503135586
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v32 
=== Usages ===
=== Predecessor ===
a110 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v30 #falseSuccessor: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4579686696226302237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 46]
stamp: i32
=== Inputs ===
x: i41 
y: i4 
=== Succesors ===
=== Usages ===
v80 i41 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i41 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$2.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 47]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
value: i36 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v111 value: i36 stateAfter: - lastLocationAccess: - #next: v90  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<EconomicMapImpl$2.advance()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 47]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 732
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?38 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?38 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
stamp: void
=== Inputs ===
loopBegin: v18 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4604349977261975687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:734) [bci: 53]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:734) [bci: 54]
stamp: void
=== Inputs ===
result: i4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i4 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v101  <|@  <|@
tid ?19 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl$2.advance()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 730
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 71
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?19 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4599336502993989362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:728) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:728) [bci: 24]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:728) [bci: 25]
stamp: void
=== Inputs ===
result: i15 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i15 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a105 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a105  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$2;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v111 ?19 ?7 ?38 v112 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a105 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$2.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 15]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v112 
=== Succesors ===
next: i106 
=== Usages ===
v114 v113 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v112 #next: i106  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$2.advance()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 726
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a105 
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i106 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$000(EconomicMapImpl.java:56) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 18]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v113 
=== Succesors ===
next: i107 
=== Usages ===
v11 
=== Predecessor ===
a105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v113 #next: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i107 v50 v80 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i107 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$2.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
=== Succesors ===
next: v50 
=== Usages ===
i5 
=== Predecessor ===
i106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v111 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 i26 i36 v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 6]
stamp: i32
=== Inputs ===
x: i107 
y: i4 
=== Succesors ===
=== Usages ===
v50 v11 i41 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i107 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$2.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
i107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v111 value: i5 stateAfter: - lastLocationAccess: - #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i106 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 21]
stamp: void
trueSuccessorProbability: 0.685535818856139
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54e27d48 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.685535818856139 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604349977261975687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a108 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a108  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
result [v1|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a105 
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a108 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v114 
=== Succesors ===
next: i109 
=== Usages ===
a64 v115 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v114 #next: i109  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<EconomicMapImpl$2.advance()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 7]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 727
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a108 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i109 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?7 
guard: - 
address: v115 
=== Succesors ===
next: v17 
=== Usages ===
v70 
=== Predecessor ===
a108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?7 guard: - address: v115 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a108 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a108  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
i109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 10]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c919038 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B3" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4604483306550182699
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i41 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v18 
values: i5 i36 
=== Succesors ===
=== Usages ===
i26 i36 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v18 values: i5 i36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.021592634776006
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v17 
=== Succesors ===
next: v104 
=== Usages ===
v32 v39 i41 v103 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v17 #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i41 
y: i4 
=== Succesors ===
=== Usages ===
v116 v70 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i41 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i109 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i26 y: i109  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v70 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v70 #trueSuccessor: v100 #falseSuccessor: v103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604483306550182699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a110 
=== Usages ===
a110 
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a110  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
result [v7|QWORD[.] + v9|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a64 
index: i26 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a64 index: i26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a110 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v100 
address: v116 
=== Succesors ===
next: v34 
=== Usages ===
v82 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v100 address: v116 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 37]
stamp: void
=== Inputs ===
value: a110 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a110  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 37]
stamp: void
trueSuccessorProbability: 0.021136247503135586
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v32 
=== Usages ===
=== Predecessor ===
a110 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v30 #falseSuccessor: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v7|QWORD[.] + v9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.021136247503135586 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4579686696226302237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 46]
stamp: i32
=== Inputs ===
x: i41 
y: i4 
=== Succesors ===
=== Usages ===
v80 i41 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i41 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$2.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 47]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v111 
value: i36 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v111 value: i36 stateAfter: - lastLocationAccess: - #next: v90  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<EconomicMapImpl$2.advance()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 47]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 732
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?38 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?38 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
stamp: void
=== Inputs ===
loopBegin: v18 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 50]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B4 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4604349977261975687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:734) [bci: 53]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:734) [bci: 54]
stamp: void
=== Inputs ===
result: i4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i4 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v101  <|@  <|@
tid ?19 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl$2.advance()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 730
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 71
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 34]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?19 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -18203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4599336502993989362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:728) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:728) [bci: 24]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:728) [bci: 25]
stamp: void
=== Inputs ===
result: i15 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i15 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54e27d48 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.685535818856139 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604349977261975687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 10]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c919038 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604483306550182699
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v7|QWORD[.] + v9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.021136247503135586 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4579686696226302237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 50]
locals: v0|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B4 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B3" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4604483306550182699
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4604349977261975687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4599336502993989362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -18203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #2          // current:int
     5: iconst_1      
     6: iadd          
     7: putfield      #2          // current:int
    10: aload_0       
    11: getfield      #2          // current:int
    14: aload_0       
    15: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
    18: invokestatic  #3          // org.graalvm.collections.EconomicMapImpl.access$000:(org.graalvm.collections.EconomicMapImpl)int
    21: if_icmplt     26
    24: iconst_0      
    25: ireturn       
    26: aload_0       
    27: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
    30: aload_0       
    31: getfield      #2          // current:int
    34: invokestatic  #4          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    37: ifnonnull     53
    40: aload_0       
    41: dup           
    42: getfield      #2          // current:int
    45: iconst_1      
    46: iadd          
    47: putfield      #2          // current:int
    50: goto          26
    53: iconst_1      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54e27d48 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.685535818856139 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604349977261975687
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 10]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:10] <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c919038 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604483306550182699
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   42  <|@ instruction r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.021136247503135586 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4579686696226302237
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 50]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:50] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B3" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4604483306550182699
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4604349977261975687
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4599336502993989362
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV [r15|QWORD + 668] y: -18203 size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #2          // current:int
     5: iconst_1      
     6: iadd          
     7: putfield      #2          // current:int
    10: aload_0       
    11: getfield      #2          // current:int
    14: aload_0       
    15: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
    18: invokestatic  #3          // org.graalvm.collections.EconomicMapImpl.access$000:(org.graalvm.collections.EconomicMapImpl)int
    21: if_icmplt     26
    24: iconst_0      
    25: ireturn       
    26: aload_0       
    27: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
    30: aload_0       
    31: getfield      #2          // current:int
    34: invokestatic  #4          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    37: ifnonnull     53
    40: aload_0       
    41: dup           
    42: getfield      #2          // current:int
    45: iconst_1      
    46: iadd          
    47: putfield      #2          // current:int
    50: goto          26
    53: iconst_1      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54e27d48 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   16  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.685535818856139 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4604349977261975687
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 10]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:10] <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c919038 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604483306550182699
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   42  <|@ instruction r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.021136247503135586 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4579686696226302237
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 50]
locals: rsi|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:50] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors "B3" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4604483306550182699
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4604349977261975687
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4599336502993989362
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV [r15|QWORD + 668] y: -18203 size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #2          // current:int
     5: iconst_1      
     6: iadd          
     7: putfield      #2          // current:int
    10: aload_0       
    11: getfield      #2          // current:int
    14: aload_0       
    15: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
    18: invokestatic  #3          // org.graalvm.collections.EconomicMapImpl.access$000:(org.graalvm.collections.EconomicMapImpl)int
    21: if_icmplt     26
    24: iconst_0      
    25: ireturn       
    26: aload_0       
    27: getfield      #0          // this$0:org.graalvm.collections.EconomicMapImpl
    30: aload_0       
    31: getfield      #2          // current:int
    34: invokestatic  #4          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    37: ifnonnull     53
    40: aload_0       
    41: dup           
    42: getfield      #2          // current:int
    45: iconst_1      
    46: iadd          
    47: putfield      #2          // current:int
    50: goto          26
    53: iconst_1      
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4610448b14c50c00000041bb0100000044035e0c44895e0c453bd30f8e610000008b04c518000000448b14c50c00000048c1e003e921000000660f1f440000468b4480104585c00f851d00000041ffc344895e0c850500000000458bc341d1e0453bd077dae930000000b801000000488b6c24104883c418850500000000c5f877c3b800000000488b6c24104883c418850500000000c5f877c341c7879c020000e5b8ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54e27d48 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 65 14 r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 69 16 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 73 18 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 76 20 BRANCH trueDestinationProbability: 0.685535818856139 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B7  <||@
  Comment 82 block B1 null  <||@
  Comment 82 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 24 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 89 26 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:10]  <||@
  Comment 89 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 10, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c919038 encoding: base: 0 shift: 3  <||@
  Comment 101 30 JUMP ~[] destination: B1 -> B2  <||@
  Comment 106 block B3 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 106 40 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 42 r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 117 44 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 120 46 BRANCH trueDestinationProbability: 0.021136247503135586 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 126 block B4 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 126 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 50 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 129 52 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 133 54 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:50]  <||@
  Comment 133 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 50, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 133 {infopoint: SAFEPOINT}  <||@
  Comment 133 11  <||@
  Comment 139 56 JUMP ~[] destination: B4 -> B2  <||@
  Comment 139 block B2 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 139 32 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 139 34 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 145 36 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 148 38 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 155 block B5 null  <||@
  Comment 155 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 60 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 160 62 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 169 12  <||@
  Comment 179 block B7 null  <||@
  Comment 179 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 66 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 184 68 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 193 12  <||@
  Comment 203 block B6 null  <||@
  Comment 203 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 72 MOV [r15|QWORD + 668] y: -18203 size: DWORD  <||@
  Comment 214 74 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 221 76 DEOPT info [bci:26]  <||@
  Comment 221 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 226 [rsi:0]at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 227 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 227 4  <||@
  Comment 233 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 233 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8926[org.graalvm.collections.EconomicMapImpl$2.advance()]"
  method "HotSpotCompilation-8926[org.graalvm.collections.EconomicMapImpl$2.advance()]"
  date 1527005178551
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107a521e0 448b560849c1e203493bc20f856f3cdbfe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4610448b14c50c00000041bb0100000044035e0c44895e0c453bd30f8e610000008b04c518000000448b14c50c00000048c1e003e921000000660f1f440000468b4480104585c00f851d00000041ffc344895e0c85059bcde3fc458bc341d1e0453bd077dae930000000b801000000488b6c24104883c418850577cde3fcc5f877c3b800000000488b6c24104883c41885055fcde3fcc5f877c341c7879c020000e5b8ffff4d89a7a8020000e83c53dbfe90e858831fff90e83252dbfe90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@54e27d48 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:726) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 65 14 r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 69 16 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 73 18 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 76 20 BRANCH trueDestinationProbability: 0.685535818856139 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B7  <||@
  Comment 82 block B1 null  <||@
  Comment 82 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 24 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 89 26 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:10]  <||@
  Comment 89 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:727) [bci: 10, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c919038 encoding: base: 0 shift: 3  <||@
  Comment 101 30 JUMP ~[] destination: B1 -> B2  <||@
  Comment 106 block B3 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 106 40 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 42 r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 117 44 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 120 46 BRANCH trueDestinationProbability: 0.021136247503135586 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 126 block B4 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 126 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 50 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 129 52 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 133 54 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:50]  <||@
  Comment 133 [rax:0, rsi:0]at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:732) [bci: 50, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 133 {infopoint: SAFEPOINT}  <||@
  Comment 133 11  <||@
  Comment 139 56 JUMP ~[] destination: B4 -> B2  <||@
  Comment 139 block B2 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 139 32 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 139 34 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 145 36 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 148 38 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 155 block B5 null  <||@
  Comment 155 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 60 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 160 62 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 169 12  <||@
  Comment 179 block B7 null  <||@
  Comment 179 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 66 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 184 68 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 193 12  <||@
  Comment 203 block B6 null  <||@
  Comment 203 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 72 MOV [r15|QWORD + 668] y: -18203 size: DWORD  <||@
  Comment 214 74 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 221 76 DEOPT info [bci:26]  <||@
  Comment 221 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 226 [rsi:0]at org.graalvm.collections.EconomicMapImpl$2.advance(EconomicMapImpl.java:730) [bci: 26, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 227 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 227 4  <||@
  Comment 233 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 233 5  <||@
  HexCodeFile>>> <|@
end_nmethod
