begin_compilation
  name " HotSpotCompilation-5121[java.util.ArrayList.grow(int)]"
  method "HotSpotCompilation-5121[java.util.ArrayList.grow(int)]"
  date 1527005171629
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a514 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a514  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v521 j261 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a514 v58 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:258) [bci: 1]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
=== Succesors ===
next: i515 
=== Usages ===
v525 v523 v522 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v521 #next: i515  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i9 i59 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 258
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
v144 a186 i515 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
i515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:258) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v522 
=== Succesors ===
next: v69 
=== Usages ===
i7 i8 i119 v90 
=== Predecessor ===
a514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v522 #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i7 v23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i515 
y: i6 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i515 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
stamp: i32
=== Inputs ===
x: i7 
y: i515 
=== Succesors ===
=== Usages ===
i9 i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i7 y: i515  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
stamp: i32
=== Inputs ===
x: i8 
y: i2 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i8 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 v74 v253 a186 v227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i10 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v11 
trueValue: i2 
falseValue: i8 
=== Succesors ===
=== Usages ===
j270 i22 v74 v90 i119 a186 v215 i236 v227 i170 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v11 trueValue: i2 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
stamp: i32
=== Inputs ===
x: i59 
y: i21 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i22 
y: i6 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i22 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
i515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v66 #falseSuccessor: v68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i10 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i59 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v79 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22113
stableDimension: 0
stamp: i32 [-22113] ⇊00000000ffffa99f ⇈00000000ffffa99f
stampKind: i32
value: int[-22113|0xffffffffffffa99f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j173 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j173 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j212 
=== Usages ===
v526 v527 
=== Predecessor ===
v75 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
j212 v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
=== Succesors ===
next: j213 
=== Usages ===
j177 v528 v529 a185 v534 v530 v531 v532 v533 
=== Predecessor ===
j173 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v526 #next: j213  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
j213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j213 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
=== Succesors ===
next: v516 
=== Usages ===
v178 
=== Predecessor ===
j212 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v527 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
=== Succesors ===
next: v181 
=== Usages ===
v154 v219 
=== Predecessor ===
j213 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v525 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:403) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i170 i237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i59 
y: i169 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i59 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i170 
y: i193 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i170 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i194 
y: i171 
=== Succesors ===
=== Usages ===
j176 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i194 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j176 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i172 
=== Succesors ===
=== Usages ===
j177 v530 v531 v532 v533 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i172  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
=== Inputs ===
x: j176 
y: j212 
=== Succesors ===
=== Usages ===
v178 v214 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j176 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j213 
y: j177 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j213 y: j177  <|@  <|@
f <@~|@floating>@ <|@
tid j156 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v216 j242 v248 v281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v179 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a186 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a186  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v516 
=== Succesors ===
=== Usages ===
a186 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a186 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v154 i59 i10 
=== Succesors ===
next: v189 
=== Usages ===
a190 
=== Predecessor ===
v179 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v154 i59 i10 #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
a186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
value: j177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v526 value: j177 stateAfter: - lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: j212 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: j212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
address: v530 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v530 #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: j212 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: j212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
address: v531 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v531 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: j212 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: j212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
address: v532 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v532 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: j212 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: j212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
address: v533 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v533 #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j212 
index: - 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j212 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v528 
value: i59 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v528 value: i59 stateAfter: - lastLocationAccess: - #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j212 
index: - 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j212 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v529 
value: j156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v529 value: j156 stateAfter: - lastLocationAccess: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j212 
index: - 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j212 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v534 
value: v516 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v534 value: v516 stateAfter: - lastLocationAccess: - #next: v184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a185 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j212 
=== Succesors ===
next: v187 
=== Usages ===
a190 
=== Predecessor ===
v184 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j212 #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
a185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v188 
values: a185 a186 
=== Succesors ===
=== Usages ===
v536 a125 v524 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v188 values: a185 a186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v187 v189 
=== Succesors ===
next: v392 
=== Usages ===
a190 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v187 v189 #next: v392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v284 
=== Usages ===
j393 j395 
=== Predecessor ===
v188 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a190 
index: - 
=== Succesors ===
=== Usages ===
j395 j234 j232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a190 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i515 
y: i59 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i515 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v90 
trueValue: i515 
falseValue: i59 
=== Succesors ===
=== Usages ===
j271 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v90 trueValue: i515 falseValue: i59  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i119 
=== Succesors ===
=== Usages ===
j444 v536 j275 v281 v389 j431 j437 j441 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i119  <|@  <|@
f <@~|@floating>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j271 
y: j156 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j271 y: j156  <|@  <|@
f <@~|@floating>@ <|@
tid j246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j247 j444 j486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j413 j462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j441 j483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j398 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j421 j468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j437 j480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j474 j429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j431 j475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j197 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j463 v476 j414 j422 v432 j469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v281 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v281 #trueSuccessor: v282 #falseSuccessor: v283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v392 
address: v524 
=== Succesors ===
=== Usages ===
v537 v539 v541 v543 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v392 address: v524  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
j393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@~|@floating>@ <|@
tid j393 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v392 
address: v523 
=== Succesors ===
=== Usages ===
v538 v540 v542 v544 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v392 address: v523  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j271 
y: j430 
=== Succesors ===
=== Usages ===
v432 v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j271 y: j430  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j431 
y: j197 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j431 y: j197  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v286 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v285 #falseSuccessor: v286  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v297  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
v286 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B46" 
    successors "B12" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v289 
values: j197 j429 
=== Succesors ===
=== Usages ===
v544 j429 v543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v289 values: j197 j429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v288 
=== Succesors ===
next: v517 
=== Usages ===
v517 v293 v294 j422 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v288 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j393 
index: j422 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j393 index: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v289 
address: v544 
=== Succesors ===
next: v501 
=== Usages ===
v501 
=== Predecessor ===
v289 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v289 address: v544 #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j395 
index: j422 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
value: v517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 value: v517 stateAfter: - lastLocationAccess: - #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid j429 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j422 
y: j151 
=== Succesors ===
=== Usages ===
j414 j422 v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j422 y: j151  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j431 
y: j429 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j431 y: j429  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v434 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v434 #trueSuccessor: v293 #falseSuccessor: v295  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v289 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v289 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j414 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v298 
values: j197 j429 
=== Succesors ===
=== Usages ===
v542 j421 j405 v438 v541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v298 values: j197 j429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v297 v299 
=== Succesors ===
next: v317 
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v297 v299 #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j271 
y: j436 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j271 y: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j437 
y: j414 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j437 y: j414  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v316 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v316 #falseSuccessor: v315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
v518 
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j393 
index: j414 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j393 index: j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v315 
address: v542 
=== Succesors ===
next: v499 
=== Usages ===
v499 
=== Predecessor ===
v315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v315 address: v542 #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j395 
index: j414 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
value: v518 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v541 value: v518 stateAfter: - lastLocationAccess: - #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j414 
y: j398 
=== Succesors ===
=== Usages ===
j405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j414 y: j398  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
v499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j405 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v309 
values: j421 j414 
=== Succesors ===
=== Usages ===
v540 j413 j396 v442 v539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v309 values: j421 j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v308 v320 
=== Succesors ===
next: v323 
=== Usages ===
j405 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v308 v320 #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid j441 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j271 
y: j440 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j271 y: j440  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j441 
y: j405 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j441 y: j405  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v442 
=== Succesors ===
trueSuccessor: v322 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v442 #trueSuccessor: v322 #falseSuccessor: v321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
v519 
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j393 
index: j405 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j393 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v321 
address: v540 
=== Succesors ===
next: v497 
=== Usages ===
v497 
=== Predecessor ===
v321 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v321 address: v540 #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j395 
index: j405 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
value: v519 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v539 value: v519 stateAfter: - lastLocationAccess: - #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j405 
y: j412 
=== Succesors ===
=== Usages ===
j396 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j412  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j396 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v312 
values: j413 j405 
=== Succesors ===
=== Usages ===
v538 v445 v537 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: j413 j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v311 v326 
=== Succesors ===
next: v329 
=== Usages ===
j396 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v311 v326 #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j271 
y: j246 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j271 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j444 
y: j396 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j444 y: j396  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v328 #falseSuccessor: v327  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
v328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a520 
=== Usages ===
a520 
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a520  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j393 
index: j396 
=== Succesors ===
=== Usages ===
a520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j393 index: j396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a520 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v327 
address: v538 
=== Succesors ===
next: v495 
=== Usages ===
v495 
=== Predecessor ===
v327 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v327 address: v538 #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j395 
index: j396 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: j396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
value: a520 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
a520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v537 value: a520 stateAfter: - lastLocationAccess: - #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
v495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B21" "B20" 
    successors "B23" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v301 v314 v332 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v301 v314 v332 #next: v448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v339 
=== Usages ===
j450 
=== Predecessor ===
v302 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i59 
=== Succesors ===
=== Usages ===
j275 v389 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i59  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j271 
y: j270 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j271 y: j270  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v337 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v338 #falseSuccessor: v337  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a190 
index: j271 
=== Succesors ===
=== Usages ===
j450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a190 index: j271  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v448 
address: v536 
=== Succesors ===
=== Usages ===
v545 v546 v547 v548 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v448 address: v536  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j270 
y: j271 
=== Succesors ===
=== Usages ===
j486 j475 j480 j483 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j270 y: j271  <|@  <|@
f <@~|@floating>@ <|@
tid j475 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j275 
y: j430 
=== Succesors ===
=== Usages ===
v476 v478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j275 y: j430  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j475 
y: j197 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j475 y: j197  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v340 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B37" 
    successors "B27" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j469 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v344 
values: j197 j474 
=== Succesors ===
=== Usages ===
v548 j474 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v344 values: j197 j474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v343 
=== Succesors ===
next: v509 
=== Usages ===
j469 v347 v348 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v343 #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j450 
index: j469 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j450 index: j469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
value: v510 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 value: v510 stateAfter: - lastLocationAccess: - #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid j474 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j469 
y: j151 
=== Succesors ===
=== Usages ===
j463 j469 v478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j151  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j475 
y: j474 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j475 y: j474  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v478 
=== Succesors ===
trueSuccessor: v347 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v478 #trueSuccessor: v347 #falseSuccessor: v349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v344 
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v344 #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v352 
values: j197 j474 
=== Succesors ===
=== Usages ===
v547 j468 j457 v481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v352 values: j197 j474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v351 v353 
=== Succesors ===
next: v371 
=== Usages ===
j463 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v351 v353 #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid j480 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j275 
y: j436 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j275 y: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j480 
y: j463 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j480 y: j463  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v369 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v370 #falseSuccessor: v369  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v374  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j450 
index: j463 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j450 index: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
value: v513 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v547 value: v513 stateAfter: - lastLocationAccess: - #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j463 
y: j398 
=== Succesors ===
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j463 y: j398  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j457 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v363 
values: j468 j463 
=== Succesors ===
=== Usages ===
v546 j462 j451 v484 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v363 values: j468 j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v362 v374 
=== Succesors ===
next: v377 
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v362 v374 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j275 
y: j440 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j275 y: j440  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j483 
y: j457 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j483 y: j457  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v484 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v375 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v484 #trueSuccessor: v376 #falseSuccessor: v375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j450 
index: j457 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j450 index: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
value: v512 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v546 value: v512 stateAfter: - lastLocationAccess: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j457 
y: j412 
=== Succesors ===
=== Usages ===
j451 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j412  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
v506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j451 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v366 
values: j462 j457 
=== Succesors ===
=== Usages ===
v545 v487 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v366 values: j462 j457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v365 v380 
=== Succesors ===
next: v383 
=== Usages ===
j451 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v365 v380 #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j275 
y: j246 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j275 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j486 
y: j451 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j486 y: j451  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v382 #falseSuccessor: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j450 
index: j451 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j450 index: j451  <|@  <|@
f <@~|@floating>@ <|@
tid a511 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
value: a511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v545 value: a511 stateAfter: - lastLocationAccess: - #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v344 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v344  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B36" "B35" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v355 v368 v386 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v355 v368 v386 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i10 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i59 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid j255 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j256 v535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j233 j240 j262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j232 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v524 
=== Succesors ===
next: j234 
=== Usages ===
j233 
=== Predecessor ===
v229 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v524 #next: j234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v524 
=== Succesors ===
next: v243 
=== Usages ===
j239 
=== Predecessor ===
j232 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v524 #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i32
=== Inputs ===
x: i59 
y: i235 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i235  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i236 
y: i169 
=== Succesors ===
=== Usages ===
j238 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i236 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid j238 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i237 
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i237  <|@  <|@
f <@~|@floating>@ <|@
tid j239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
=== Inputs ===
x: j234 
y: j238 
=== Succesors ===
=== Usages ===
j240 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j234 y: j238  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j239 
y: i231 
=== Succesors ===
=== Usages ===
j241 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j239 y: i231  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j232 
y: i231 
=== Succesors ===
=== Usages ===
j241 j256 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j232 y: i231  <|@  <|@
f <@~|@floating>@ <|@
tid j241 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j240 
y: j233 
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j240 y: j233  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j241 
y: j156 
=== Succesors ===
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j241 y: j156  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
j234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" 
    successors "B43" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v244 
values: j242 j247 
=== Succesors ===
=== Usages ===
j247 v248 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: j242 j247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v243 
=== Succesors ===
next: v251 
=== Usages ===
j245 v249 v254 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v243 #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j245 
y: j156 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j245 y: j156  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v244 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v244 #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v258 v259 
=== Succesors ===
next: a125 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v258 v259 #next: a125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a190 
=== Succesors ===
next: v58 
=== Usages ===
a57 
=== Predecessor ===
v257 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a190 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
op: Compress
stamp: n! -
=== Inputs ===
value: a125 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
value: a57 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j261 
=== Usages ===
=== Predecessor ===
a125 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v521 value: a57 stateAfter: - lastLocationAccess: - #next: j261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v265 
=== Usages ===
j262 
=== Predecessor ===
v58 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j261 
y: i231 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j261 y: i231  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j262 
index: j255 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j262 index: j255  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v535 
value: i266 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
j261 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v535 value: i266 stateAfter: - lastLocationAccess: - #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
=== Inputs ===
x: j245 
y: j246 
=== Succesors ===
=== Usages ===
j245 j252 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j245 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid j256 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j233 
y: j255 
=== Succesors ===
=== Usages ===
j252 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j233 y: j255  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
=== Inputs ===
x: j247 
y: j256 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j247 y: j256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
address: j252 
value: i10 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j252 value: i10 #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v244 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v244  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v289 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v289  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13843
stableDimension: 0
stamp: i32 [-13843] ⇊00000000ffffc9ed ⇈00000000ffffc9ed
stampKind: i32
value: int[-13843|0xffffffffffffc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
v68 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B2" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-22113 - -13843] ⇊00000000ffff8885 ⇈00000000ffffe9ff
valueDescription: i32
=== Inputs ===
merge: v139 
values: i146 i148 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v139 values: i146 i148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v145 v147 
=== Succesors ===
next: v144 
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v145 v147 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid a98 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i142 
speculation: a98 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i142 speculation: a98  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a514 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a514  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v521 j261 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a514 v58 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a514 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:258) [bci: 1]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
=== Succesors ===
next: i515 
=== Usages ===
v525 v523 v522 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v521 #next: i515  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i9 i59 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 258
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
v144 a186 i515 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
i515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i515 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:258) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v522 
=== Succesors ===
next: v69 
=== Usages ===
i7 i8 i119 v90 
=== Predecessor ===
a514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v522 #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i7 v23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i515 
y: i6 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i515 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
stamp: i32
=== Inputs ===
x: i7 
y: i515 
=== Succesors ===
=== Usages ===
i9 i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i7 y: i515  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
stamp: i32
=== Inputs ===
x: i8 
y: i2 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i8 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 v74 v253 a186 v227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i10 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v11 
trueValue: i2 
falseValue: i8 
=== Succesors ===
=== Usages ===
j270 i22 v74 v90 i119 a186 v215 i236 v227 i170 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v11 trueValue: i2 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[-2147483639|0xffffffff80000009] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
stamp: i32
=== Inputs ===
x: i59 
y: i21 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i22 
y: i6 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i22 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
i515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v66 #falseSuccessor: v68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d59321d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SHR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA [v7|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i10 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i59 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v79 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result int[-22113|0xffffffffffffa99f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22113
stableDimension: 0
stamp: i32 [-22113] ⇊00000000ffffa99f ⇈00000000ffffa99f
stampKind: i32
value: int[-22113|0xffffffffffffa99f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22113|0xffffffffffffa99f]] destination: B2 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j173 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j173 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j212 
=== Usages ===
v526 v527 
=== Predecessor ===
v75 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
j212 v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j212 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
=== Succesors ===
next: j213 
=== Usages ===
j177 v528 v529 a185 v534 v530 v531 v532 v533 
=== Predecessor ===
j173 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v526 #next: j213  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: - 
=== Succesors ===
=== Usages ===
j213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j213 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
=== Succesors ===
next: v516 
=== Usages ===
v178 
=== Predecessor ===
j212 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v527 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
result [v2|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
=== Succesors ===
next: v181 
=== Usages ===
v154 v219 
=== Predecessor ===
j213 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v525 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:403) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i170 i237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i59 
y: i169 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i59 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i170 
y: i193 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i170 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i194 
y: i171 
=== Succesors ===
=== Usages ===
j176 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i194 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j176 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i172 
=== Succesors ===
=== Usages ===
j177 v530 v531 v532 v533 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i172  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
=== Inputs ===
x: j176 
y: j212 
=== Succesors ===
=== Usages ===
v178 v214 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j176 y: j212  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j213 
y: j177 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j213 y: j177  <|@  <|@
f <@~|@floating>@ <|@
tid j156 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v216 j242 v248 v281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v179 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v2|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v7|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a186 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a186  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v516 
=== Succesors ===
=== Usages ===
a186 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a186 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v154 i59 i10 
=== Succesors ===
next: v189 
=== Usages ===
a190 
=== Predecessor ===
v179 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v154 i59 i10 #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
a186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
value: j177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v526 value: j177 stateAfter: - lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
result [v15|QWORD + v9|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: j212 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: j212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
address: v530 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v530 #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
result [v15|QWORD + v9|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: j212 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: j212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
address: v531 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v531 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
result [v15|QWORD + v9|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: j212 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: j212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
address: v532 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v532 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
result [v15|QWORD + v9|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j176 
index: j212 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j176 index: j212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
address: v533 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v533 #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
result [v9|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j212 
index: - 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j212 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v528 
value: i59 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v528 value: i59 stateAfter: - lastLocationAccess: - #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
result [v9|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j212 
index: - 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j212 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v529 
value: j156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v529 value: j156 stateAfter: - lastLocationAccess: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
result [v9|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j212 
index: - 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j212 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v534 
value: v516 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v534 value: v516 stateAfter: - lastLocationAccess: - #next: v184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a185 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a185 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j212 
=== Succesors ===
next: v187 
=== Usages ===
a190 
=== Predecessor ===
v184 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j212 #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
a185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 8], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a190 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v188 
values: a185 a186 
=== Succesors ===
=== Usages ===
v536 a125 v524 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v188 values: a185 a186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v187 v189 
=== Succesors ===
next: v392 
=== Usages ===
a190 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v187 v189 #next: v392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v284 
=== Usages ===
j393 j395 
=== Predecessor ===
v188 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
result [v20|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a190 
index: - 
=== Succesors ===
=== Usages ===
j395 j234 j232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a190 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i515 
y: i59 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i515 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v90 
trueValue: i515 
falseValue: i59 
=== Succesors ===
=== Usages ===
j271 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v90 trueValue: i515 falseValue: i59  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i119 
=== Succesors ===
=== Usages ===
j444 v536 j275 v281 v389 j431 j437 j441 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i119  <|@  <|@
f <@~|@floating>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j271 
y: j156 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j271 y: j156  <|@  <|@
f <@~|@floating>@ <|@
tid j246 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j247 j444 j486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j413 j462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j441 j483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j398 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j421 j468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j437 j480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j474 j429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j431 j475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j197 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j463 v476 j414 j422 v432 j469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v281 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v281 #trueSuccessor: v282 #falseSuccessor: v283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v22|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v392 
address: v524 
=== Succesors ===
=== Usages ===
v537 v539 v541 v543 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v392 address: v524  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
j393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@~|@floating>@ <|@
tid j393 <|@
result v24|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v392 
address: v523 
=== Succesors ===
=== Usages ===
v538 v540 v542 v544 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v392 address: v523  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j271 
y: j430 
=== Succesors ===
=== Usages ===
v432 v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j271 y: j430  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j431 
y: j197 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j431 y: j197  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v286 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v285 #falseSuccessor: v286  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v297  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
v286 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B46" 
    successors "B12" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j422 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v289 
values: j197 j429 
=== Succesors ===
=== Usages ===
v544 j429 v543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v289 values: j197 j429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v288 
=== Succesors ===
next: v517 
=== Usages ===
v517 v293 v294 j422 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v288 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result [v24|QWORD[*] + v26|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j393 
index: j422 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j393 index: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
result v27|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v289 
address: v544 
=== Succesors ===
next: v501 
=== Usages ===
v501 
=== Predecessor ===
v289 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v289 address: v544 #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result [v23|QWORD[.] + v26|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j395 
index: j422 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
value: v517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 value: v517 stateAfter: - lastLocationAccess: - #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid j429 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j422 
y: j151 
=== Succesors ===
=== Usages ===
j414 j422 v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j422 y: j151  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j431 
y: j429 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j431 y: j429  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v434 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v434 #trueSuccessor: v293 #falseSuccessor: v295  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V256_DWORD[........] = H [v24|QWORD[*] + v26|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v26|QWORD * 4], input: v27|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v26|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v289 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v289 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j414 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v298 
values: j197 j429 
=== Succesors ===
=== Usages ===
v542 j421 j405 v438 v541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v298 values: j197 j429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v297 v299 
=== Succesors ===
next: v317 
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v297 v299 #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid j437 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j271 
y: j436 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j271 y: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j437 
y: j414 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j437 y: j414  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v316 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v316 #falseSuccessor: v315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v22|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
v518 
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
result [v24|QWORD[*] + v29|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j393 
index: j414 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j393 index: j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
result v31|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v315 
address: v542 
=== Succesors ===
next: v499 
=== Usages ===
v499 
=== Predecessor ===
v315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v315 address: v542 #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
result [v23|QWORD[.] + v29|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j395 
index: j414 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
value: v518 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v541 value: v518 stateAfter: - lastLocationAccess: - #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j414 
y: j398 
=== Succesors ===
=== Usages ===
j405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j414 y: j398  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
v499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V128_DWORD[....] = H [v24|QWORD[*] + v29|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v29|QWORD * 4], input: v31|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j405 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v309 
values: j421 j414 
=== Succesors ===
=== Usages ===
v540 j413 j396 v442 v539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v309 values: j421 j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v308 v320 
=== Succesors ===
next: v323 
=== Usages ===
j405 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v308 v320 #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid j441 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j271 
y: j440 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j271 y: j440  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j441 
y: j405 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j441 y: j405  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v442 
=== Succesors ===
trueSuccessor: v322 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v442 #trueSuccessor: v322 #falseSuccessor: v321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v22|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
v519 
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result [v24|QWORD[*] + v33|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j393 
index: j405 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j393 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
result v35|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v321 
address: v540 
=== Succesors ===
next: v497 
=== Usages ===
v497 
=== Predecessor ===
v321 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v321 address: v540 #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
result [v23|QWORD[.] + v33|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j395 
index: j405 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
value: v519 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v539 value: v519 stateAfter: - lastLocationAccess: - #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid j413 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j405 
y: j412 
=== Succesors ===
=== Usages ===
j396 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j412  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V64_DWORD[..] = H [v24|QWORD[*] + v33|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v33|QWORD * 4], input: v35|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j396 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v312 
values: j413 j405 
=== Succesors ===
=== Usages ===
v538 v445 v537 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: j413 j405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v311 v326 
=== Succesors ===
next: v329 
=== Usages ===
j396 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v311 v326 #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j271 
y: j246 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j271 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j444 
y: j396 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j444 y: j396  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v328 #falseSuccessor: v327  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = DEC v22|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
v328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a520 
=== Usages ===
a520 
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a520  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
result [v24|QWORD[*] + v37|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j393 
index: j396 
=== Succesors ===
=== Usages ===
a520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j393 index: j396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a520 <|@
result v39|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v327 
address: v538 
=== Succesors ===
next: v495 
=== Usages ===
v495 
=== Predecessor ===
v327 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v327 address: v538 #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
result [v23|QWORD[.] + v37|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j395 
index: j396 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: j396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
value: a520 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
a520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v537 value: a520 stateAfter: - lastLocationAccess: - #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
v495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v24|QWORD[*] + v37|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + v37|QWORD * 4], y: v39|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B21" "B20" 
    successors "B23" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v301 v314 v332 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v301 v314 v332 #next: v448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v339 
=== Usages ===
j450 
=== Predecessor ===
v302 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i59 
=== Succesors ===
=== Usages ===
j275 v389 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i59  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j271 
y: j270 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j271 y: j270  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v337 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v338 #falseSuccessor: v337  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result [v20|QWORD[.] + v22|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a190 
index: j271 
=== Succesors ===
=== Usages ===
j450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a190 index: j271  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v448 
address: v536 
=== Succesors ===
=== Usages ===
v545 v546 v547 v548 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v448 address: v536  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j270 
y: j271 
=== Succesors ===
=== Usages ===
j486 j475 j480 j483 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j270 y: j271  <|@  <|@
f <@~|@floating>@ <|@
tid j475 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j275 
y: j430 
=== Succesors ===
=== Usages ===
v476 v478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j275 y: j430  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j475 
y: j197 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j475 y: j197  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v340 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v20|QWORD[.] + v22|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v40|QWORD, ~y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
result v44|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B37" 
    successors "B27" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j469 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v344 
values: j197 j474 
=== Succesors ===
=== Usages ===
v548 j474 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v344 values: j197 j474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v343 
=== Succesors ===
next: v509 
=== Usages ===
j469 v347 v348 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v343 #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result [v41|QWORD[.] + v45|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j450 
index: j469 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j450 index: j469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
value: v510 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 value: v510 stateAfter: - lastLocationAccess: - #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid j474 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j469 
y: j151 
=== Succesors ===
=== Usages ===
j463 j469 v478 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j151  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j475 
y: j474 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j475 y: j474  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v478 
=== Succesors ===
trueSuccessor: v347 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v478 #trueSuccessor: v347 #falseSuccessor: v349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.] + v45|QWORD * 4], input: v44|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v45|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v344 
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v344 #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j463 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v352 
values: j197 j474 
=== Succesors ===
=== Usages ===
v547 j468 j457 v481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v352 values: j197 j474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v351 v353 
=== Succesors ===
next: v371 
=== Usages ===
j463 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v351 v353 #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid j480 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j275 
y: j436 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j275 y: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j480 
y: j463 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j480 y: j463  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v369 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v370 #falseSuccessor: v369  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v42|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v374  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result [v41|QWORD[.] + v47|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j450 
index: j463 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j450 index: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
result v49|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
value: v513 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v547 value: v513 stateAfter: - lastLocationAccess: - #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j463 
y: j398 
=== Succesors ===
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j463 y: j398  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.] + v47|QWORD * 4], input: v49|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j457 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v363 
values: j468 j463 
=== Succesors ===
=== Usages ===
v546 j462 j451 v484 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v363 values: j468 j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v362 v374 
=== Succesors ===
next: v377 
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v362 v374 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j275 
y: j440 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j275 y: j440  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j483 
y: j457 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j483 y: j457  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v484 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v375 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v484 #trueSuccessor: v376 #falseSuccessor: v375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v42|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result [v41|QWORD[.] + v51|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j450 
index: j457 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j450 index: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
result v53|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
value: v512 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v546 value: v512 stateAfter: - lastLocationAccess: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j457 
y: j412 
=== Succesors ===
=== Usages ===
j451 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j457 y: j412  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
v506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.] + v51|QWORD * 4], input: v53|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j451 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v366 
values: j462 j457 
=== Succesors ===
=== Usages ===
v545 v487 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v366 values: j462 j457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v365 v380 
=== Succesors ===
next: v383 
=== Usages ===
j451 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v365 v380 #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j275 
y: j246 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j275 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j486 
y: j451 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j486 y: j451  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v382 #falseSuccessor: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = DEC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result [v41|QWORD[.] + v55|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j450 
index: j451 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j450 index: j451  <|@  <|@
f <@~|@floating>@ <|@
tid a511 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
value: a511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v545 value: a511 stateAfter: - lastLocationAccess: - #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[.] + v55|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v344 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v344  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B37 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B36" "B35" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v355 v368 v386 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v355 v368 v386 #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i10 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i59 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid j255 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j256 v535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j233 j240 j262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j232 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j232 <|@
result [v20|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v524 
=== Succesors ===
next: j234 
=== Usages ===
j233 
=== Predecessor ===
v229 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v524 #next: j234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j234 <|@
result [v20|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v524 
=== Succesors ===
next: v243 
=== Usages ===
j239 
=== Predecessor ===
j232 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v524 #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i32
=== Inputs ===
x: i59 
y: i235 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i235  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i236 
y: i169 
=== Succesors ===
=== Usages ===
j238 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i236 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid j238 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i237 
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i237  <|@  <|@
f <@~|@floating>@ <|@
tid j239 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
=== Inputs ===
x: j234 
y: j238 
=== Succesors ===
=== Usages ===
j240 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j234 y: j238  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
result v63|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j239 
y: i231 
=== Succesors ===
=== Usages ===
j241 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j239 y: i231  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
result v64|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j232 
y: i231 
=== Succesors ===
=== Usages ===
j241 j256 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j232 y: i231  <|@  <|@
f <@~|@floating>@ <|@
tid j241 <|@
result v66|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j240 
y: j233 
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j240 y: j233  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
result v67|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j241 
y: j156 
=== Succesors ===
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j241 y: j156  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
j234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = DEC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SHL v58|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = ADD (x: v61|QWORD[.], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = SUB (x: v63|QWORD[*], ~y: v64|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = INC v66|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[*]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" 
    successors "B43" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j245 <|@
result v68|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v244 
values: j242 j247 
=== Succesors ===
=== Usages ===
j247 v248 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v244 values: j242 j247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v243 
=== Succesors ===
next: v251 
=== Usages ===
j245 v249 v254 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v243 #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j245 
y: j156 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j245 y: j156  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v244 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v244 #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v258 v259 
=== Succesors ===
next: a125 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v258 v259 #next: a125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a190 
=== Succesors ===
next: v58 
=== Usages ===
a57 
=== Predecessor ===
v257 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a190 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
result v69|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
op: Compress
stamp: n! -
=== Inputs ===
value: a125 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v521 
value: a57 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j261 
=== Usages ===
=== Predecessor ===
a125 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v521 value: a57 stateAfter: - lastLocationAccess: - #next: j261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j261 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v265 
=== Usages ===
j262 
=== Predecessor ===
v58 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
result v70|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j261 
y: i231 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j261 y: i231  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
result [v70|QWORD[*] + v57|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j262 
index: j255 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j262 index: j255  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v535 
value: i266 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
j261 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v535 value: i266 stateAfter: - lastLocationAccess: - #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v70|QWORD[*] + v57|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
result v71|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
=== Inputs ===
x: j245 
y: j246 
=== Succesors ===
=== Usages ===
j245 j252 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j245 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid j256 <|@
result v72|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j233 
y: j255 
=== Succesors ===
=== Usages ===
j252 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j233 y: j255  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
result v73|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: i64
=== Inputs ===
x: j247 
y: j256 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j247 y: j256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
address: j252 
value: i10 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j252 value: i10 #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
stamp: void
=== Inputs ===
loopBegin: v244 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v244  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = DEC v68|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = ADD (x: v64|QWORD[*], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = ADD (x: v72|QWORD[*], y: v71|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v73|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[*]] destination: B45 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v289 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v289  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B46 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result int[-13843|0xffffffffffffc9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13843
stableDimension: 0
stamp: i32 [-13843] ⇊00000000ffffc9ed ⇈00000000ffffc9ed
stampKind: i32
value: int[-13843|0xffffffffffffc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
v68 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13843|0xffffffffffffc9ed]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B2" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i142 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-22113 - -13843] ⇊00000000ffff8885 ⇈00000000ffffe9ff
valueDescription: i32
=== Inputs ===
merge: v139 
values: i146 i148 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v139 values: i146 i148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v145 v147 
=== Succesors ===
next: v144 
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v145 v147 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid a98 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i142 
speculation: a98 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i142 speculation: a98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d59321d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SHR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA [v7|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v2|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v7|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 8], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v22|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v22|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V128_DWORD[....] = H [v24|QWORD[*] + v29|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v29|QWORD * 4], input: v31|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v22|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V64_DWORD[..] = H [v24|QWORD[*] + v33|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v33|QWORD * 4], input: v35|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = DEC v22|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v24|QWORD[*] + v37|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + v37|QWORD * 4], y: v39|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B21" "B20" 
    successors "B23" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B36" "B35" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = DEC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SHL v58|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = ADD (x: v61|QWORD[.], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = SHR v65|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = SUB (x: v63|QWORD[*], ~y: v64|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = INC v66|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[*]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[*] = DEC v68|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = ADD (x: v64|QWORD[*], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = ADD (x: v72|QWORD[*], y: v71|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v73|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[*]] destination: B45 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" 
    successors "B43" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v68|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v20|QWORD[.] + v22|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v40|QWORD, ~y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v42|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.] + v47|QWORD * 4], input: v49|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v47|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v42|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.] + v51|QWORD * 4], input: v53|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = DEC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[.] + v55|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v70|QWORD[*] + v57|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B37 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B37" 
    successors "B27" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.] + v45|QWORD * 4], input: v44|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v45|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B46 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B46" 
    successors "B12" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V256_DWORD[........] = H [v24|QWORD[*] + v26|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v26|QWORD * 4], input: v27|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v26|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22113|0xffffffffffffa99f]] destination: B2 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B2" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13843|0xffffffffffffc9ed]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: iload_2       
     8: iconst_1      
     9: ishr          
    10: iadd          
    11: istore_3      
    12: iload_3       
    13: iload_1       
    14: isub          
    15: ifge          20
    18: iload_1       
    19: istore_3      
    20: iload_3       
    21: ldc           #27         // 2147483639
    23: isub          
    24: ifle          32
    27: iload_1       
    28: invokestatic  #19         // hugeCapacity:(int)int
    31: istore_3      
    32: aload_0       
    33: aload_0       
    34: getfield      #2          // elementData:java.lang.Object[]
    37: iload_3       
    38: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    41: putfield      #2          // elementData:java.lang.Object[]
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d59321d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = SHR r11|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: < <|@ <|@
      nr   24  <|@ instruction rdx|DWORD = LEA [rsi|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   48  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   50  <|@ instruction r9|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  102  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [rdx|QWORD + 8], y: r8|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  122  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  140  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr  176  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction xmm0|V128_DWORD[....] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  188  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  190  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  192  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction xmm0|V64_DWORD[..] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  212  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  214  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  216  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[*] + r9|QWORD * 4] size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B21" "B20" 
    successors "B23" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B36" "B35" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  366  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  384  <|@ instruction r10|QWORD[.] = ADD (x: r10|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  392  <|@ instruction r10|QWORD[*] = SUB (x: r10|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[*] = INC r10|QWORD[*] size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  422  <|@ instruction r10|QWORD[*] = DEC r10|QWORD[*] size: QWORD <|@ <|@
      nr  424  <|@ instruction r11|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction MOVB (x: [r11|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B45 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" 
    successors "B43" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP r10|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  252  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  256  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  304  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  308  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  328  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  330  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction MOV (x: [r11|QWORD[.] + r8|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  414  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  416  <|@ instruction MOVB (x: [r13|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  418  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  270  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B37 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B37" 
    successors "B27" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  276  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  278  <|@ instruction r8|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B46 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B46" 
    successors "B12" "B46" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction xmm0|V256_DWORD[........] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  160  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  162  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  164  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-22113|0xffffffffffffa99f] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B2" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  448  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-13843|0xffffffffffffc9ed] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: iload_2       
     8: iconst_1      
     9: ishr          
    10: iadd          
    11: istore_3      
    12: iload_3       
    13: iload_1       
    14: isub          
    15: ifge          20
    18: iload_1       
    19: istore_3      
    20: iload_3       
    21: ldc           #27         // 2147483639
    23: isub          
    24: ifle          32
    27: iload_1       
    28: invokestatic  #19         // hugeCapacity:(int)int
    31: istore_3      
    32: aload_0       
    33: aload_0       
    34: getfield      #2          // elementData:java.lang.Object[]
    37: iload_3       
    38: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    41: putfield      #2          // elementData:java.lang.Object[]
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d59321d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = SHR r11|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: < <|@ <|@
      nr   24  <|@ instruction rdx|DWORD = LEA [rsi|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   26  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   46  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   48  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   50  <|@ instruction r9|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  102  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  106  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [rdx|QWORD + 8], y: r8|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B22" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  122  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B22 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  140  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B13 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B16" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr  176  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B16 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction xmm0|V128_DWORD[....] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  188  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  190  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  192  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors "B19" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction xmm0|V64_DWORD[..] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  212  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  214  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  216  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B16" 
    successors "B22" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r8|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[*] + r9|QWORD * 4] size: DWORD <|@ <|@
      nr  236  <|@ instruction MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B6" "B21" "B19" 
    successors "B23" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B22" "B36" "B34" 
    successors "B44" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  366  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  384  <|@ instruction r10|QWORD[.] = ADD (x: r10|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  392  <|@ instruction r10|QWORD[*] = SUB (x: r10|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  394  <|@ instruction r10|QWORD[*] = INC r10|QWORD[*] size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  422  <|@ instruction r10|QWORD[*] = DEC r10|QWORD[*] size: QWORD <|@ <|@
      nr  424  <|@ instruction r11|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction MOVB (x: [r11|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B45 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" 
    successors "B44" "B45" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP r10|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  252  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  256  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B31" "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  292  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  304  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  306  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  308  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B34" "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  328  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  330  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B39" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B39 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction MOV (x: [r11|QWORD[.] + r8|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  414  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  416  <|@ instruction MOVB (x: [r13|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  418  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  270  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B26" 
    successors "B28" "B26" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  276  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  278  <|@ instruction r8|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B28 falseDestination: B26 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  158  <|@ instruction xmm0|V256_DWORD[........] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  160  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  162  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  164  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-22113|0xffffffffffffa99f] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B2" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  448  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:258) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-13843|0xffffffffffffc9ed] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // elementData:java.lang.Object[]
     4: arraylength   
     5: istore_2      
     6: iload_2       
     7: iload_2       
     8: iconst_1      
     9: ishr          
    10: iadd          
    11: istore_3      
    12: iload_3       
    13: iload_1       
    14: isub          
    15: ifge          20
    18: iload_1       
    19: istore_3      
    20: iload_3       
    21: ldc           #27         // 2147483639
    23: isub          
    24: ifle          32
    27: iload_1       
    28: invokestatic  #19         // hugeCapacity:(int)int
    31: istore_3      
    32: aload_0       
    33: aload_0       
    34: getfield      #2          // elementData:java.lang.Object[]
    37: iload_3       
    38: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    41: putfield      #2          // elementData:java.lang.Object[]
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf2458b5514468b1cd50c000000418bf3d1ee4103f38bd6412bd685d2410f4cf68d960900008083fa010f8d9d02000085f60f8c7b020000498b5760498b4f70468b04d508000000448bce41c1e102458d49174183e1f84d63c9498bd94803da483bd90f870d02000049895f60410f188411c0000000410f18841100010000410f18841140010000410f1884118001000089720c48c7020100000044894208413bf38bce410f4fcb4863c94883f9010f8c770000004c8d5a104e8d14d5100000004c8d41f84d85c049c7c1000000000f8d870100004c8d41fc4d3bc80f8f13000000c4817a6f048ac4817a7f048b4d8d41044d8bc84c8d41fe4d3bc80f8f13000000c481f96e048ac481f97e048b4d8d41024d8bc84c8bc149ffc84d3bc80f8f08000000478b148a4789148b4c63d64c3bd10f8f5f00000048b900e01b170100000085f60f84ba000000ffcec1e6024863f64c8d52104c03d649c1ea09488d721048c1ee094c2bd649ffc2e91b000000660f1f440000660f1f44000049ffca4c8bde4c03d94d03da4588234983fa010f8c6f000000ebe54c8d5c8a104c2bd1498d4af84885c90f8d7c00000049c7c000000000498d4afc4c3bc10f8f11000000c5f9efc0c4817a7f0483498d48044c8bc1498d4afe4c3bc10f8f11000000c5f9efc0c481f97e0483498d48024c8bc149ffca4d3bc20f8f3dffffff47892483e934ffffff48c1ea034189551449c1ed094588640d00488b6c24204883c428850500000000c5f877c3c5f9efc049c7c000000000660f1f840000000000c4817e7f04834d8d40084c3bc17ef1e963ffffff660f1f440000660f1f440000c4817e6f048ac4817e7f048b4d8d49084d3bc87eebe95ffeffff44895c2414448954241049c1e003448bce498bf0418bd1b90000000044894c240ce80000000090488bd08b74240c448b5c2414448b542410e9ecfdffff41ba9fa9ffff4589979c0200004d89a7a8020000e8000000009041baedc9ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d59321d slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 58 12 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 58 [r10:0, r13:0]at java.util.ArrayList.grow(ArrayList.java:258) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 14 rsi|DWORD = SHR r11|DWORD size: DWORD  <||@
  Comment 71 16 rsi|DWORD = ADD (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 74 18 rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 79 20 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 81 22 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: <  <||@
  Comment 85 24 rdx|DWORD = LEA [rsi|DWORD - 2147483639] size: DWORD  <||@
  Comment 91 26 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 94 28 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B47  <||@
  Comment 100 block B1 null  <||@
  Comment 100 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 32 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 102 34 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 108 block B3 null  <||@
  Comment 108 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 44 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 112 46 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 116 48 r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 124 50 r9|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 131 52 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 135 54 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 139 56 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 142 58 rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 148 60 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 151 62 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 157 block B5 null  <||@
  Comment 157 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 96 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 161 98 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 170 100 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 179 102 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 188 104 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 197 106 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 200 108 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 207 110 MOV (x: [rdx|QWORD + 8], y: r8|DWORD) size: DWORD  <||@
  Comment 211 112 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 211 114 JUMP ~[] destination: B5 -> B6  <||@
  Comment 211 block B6 null  <||@
  Comment 211 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 211 118 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 214 120 rcx|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 220 122 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 223 124 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 227 126 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B22 falseDestination: B6 -> B8  <||@
  Comment 233 block B8 null  <||@
  Comment 233 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 134 r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 237 136 r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 245 138 r8|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 249 140 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 252 146 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 259 142 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B13 falseDestination: B8 -> B11  <||@
  Comment 265 block B13 null  <||@
  Comment 265 172 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 265 174 r8|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 269 176 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 272 178 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B16 falseDestination: B13 -> B15  <||@
  Comment 278 block B15 null  <||@
  Comment 278 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 186 xmm0|V128_DWORD[....] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 284 188 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 290 190 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 294 192 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 297 194 JUMP ~[] destination: B15 -> B16  <||@
  Comment 297 block B16 null  <||@
  Comment 297 196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 297 198 r8|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 301 200 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 304 202 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18  <||@
  Comment 310 block B18 null  <||@
  Comment 310 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 210 xmm0|V64_DWORD[..] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 316 212 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 322 214 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 326 216 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 329 218 JUMP ~[] destination: B18 -> B19  <||@
  Comment 329 block B19 null  <||@
  Comment 329 220 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 329 222 r8|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 335 224 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 338 226 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 344 block B21 null  <||@
  Comment 344 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 234 r10|DWORD[.] = MOV [r10|QWORD[*] + r9|QWORD * 4] size: DWORD  <||@
  Comment 348 236 MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 352 238 JUMP ~[] destination: B21 -> B22  <||@
  Comment 352 block B22 null  <||@
  Comment 352 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 242 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 355 244 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 358 246 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B39  <||@
  Comment 364 block B39 null  <||@
  Comment 364 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 364 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 374 366 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 376 368 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41  <||@
  Comment 382 block B41 null  <||@
  Comment 382 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 376 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 384 378 rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 387 380 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 390 382 r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 394 384 r10|QWORD[.] = ADD (x: r10|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 397 386 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 401 388 rsi|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 405 390 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 409 392 r10|QWORD[*] = SUB (x: r10|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 412 394 r10|QWORD[*] = INC r10|QWORD[*] size: QWORD  <||@
  Comment 415 396 JUMP ~[] destination: B41 -> B42  <||@
  Comment 420 block B45 loop 2 depth 1 header:244|LoopBegin  <||@
  Comment 420 420 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 432 422 r10|QWORD[*] = DEC r10|QWORD[*] size: QWORD  <||@
  Comment 435 424 r11|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 441 426 r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD[*]) size: QWORD  <||@
  Comment 444 428 MOVB (x: [r11|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 447 430 JUMP ~[] destination: B45 -> B42  <||@
  Comment 447 block B42 loop 2 depth 1 header:244|LoopBegin  <||@
  Comment 447 398 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 447 400 CMP r10|QWORD[*] y: 1 size: QWORD  <||@
  Comment 451 402 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B45  <||@
  Comment 459 block B23 null  <||@
  Comment 459 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 250 r11|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 464 252 r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 467 254 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 471 256 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 474 258 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 480 block B24 null  <||@
  Comment 480 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 480 262 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 487 264 JUMP ~[] destination: B24 -> B28  <||@
  Comment 487 block B28 null  <||@
  Comment 487 288 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 487 290 rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 491 292 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 494 294 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 500 block B30 null  <||@
  Comment 500 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 302 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 504 304 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 510 306 rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 514 308 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 517 310 JUMP ~[] destination: B30 -> B31  <||@
  Comment 517 block B31 null  <||@
  Comment 517 312 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 517 314 rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 521 316 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 524 318 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 530 block B33 null  <||@
  Comment 530 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 530 326 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 534 328 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 540 330 rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 544 332 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 547 334 JUMP ~[] destination: B33 -> B34  <||@
  Comment 547 block B34 null  <||@
  Comment 547 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 547 338 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 550 340 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 553 342 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B39 falseDestination: B34 -> B36  <||@
  Comment 559 block B36 null  <||@
  Comment 559 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 350 MOV (x: [r11|QWORD[.] + r8|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 563 352 JUMP ~[] destination: B36 -> B39  <||@
  Comment 568 block B44 null  <||@
  Comment 568 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 568 410 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3  <||@
  Comment 572 412 MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 576 414 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 580 416 MOVB (x: [r13|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 585 418 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 594 12  <||@
  Comment 604 block B25 null  <||@
  Comment 604 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 604 268 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 608 270 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 615 272 JUMP ~[] destination: B25 -> B26  <||@
  Comment 615 block B26 loop 1 depth 1 header:344|LoopBegin  <||@
  Comment 615 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 624 276 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 630 278 r8|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 634 280 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 637 282 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B28 falseDestination: B26 -> B26  <||@
  Comment 644 block B11 loop 0 depth 1 header:289|LoopBegin  <||@
  Comment 644 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 656 158 xmm0|V256_DWORD[........] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 662 160 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 668 162 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 672 164 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 675 166 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B11  <||@
  Comment 682 block B4 null  <||@
  Comment 682 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 682 66 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 687 68 stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 692 70 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3  <||@
  Comment 696 72 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 699 74 rsi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 702 76 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 705 78 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 710 80 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 715 82 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 715 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 720 [r13:0, stack:16]at java.util.ArrayList.grow(ArrayList.java:258) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 721 84 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 724 86 rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 728 88 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 733 90 r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 738 92 JUMP ~[] destination: B4 -> B6  <||@
  Comment 743 block B2 null  <||@
  Comment 743 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 743 38 r10|DWORD = MOVE input: int[-22113|0xffffffffffffa99f]  <||@
  Comment 749 40 JUMP ~[] destination: B2 -> B48  <||@
  Comment 749 block B48 null  <||@
  Comment 749 442 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 749 444 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 756 446 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 763 448 DEOPT info [bci:0]  <||@
  Comment 763 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 768 [r13:0]at java.util.ArrayList.grow(ArrayList.java:258) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 769 block B47 null  <||@
  Comment 769 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 769 438 r10|DWORD = MOVE input: int[-13843|0xffffffffffffc9ed]  <||@
  Comment 775 440 JUMP ~[] destination: B47 -> B48  <||@
  Comment 777 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 777 4  <||@
  Comment 783 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 783 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5121[java.util.ArrayList.grow(int)]"
  method "HotSpotCompilation-5121[java.util.ArrayList.grow(int)]"
  date 1527005171942
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1079e4560 448b560849c1e203493bc20f85ef18e2fe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf2458b5514468b1cd50c000000418bf3d1ee4103f38bd6412bd685d2410f4cf68d960900008083fa010f8d9d02000085f60f8c7b020000498b5760498b4f70468b04d508000000448bce41c1e102458d49174183e1f84d63c9498bd94803da483bd90f870d02000049895f60410f188411c0000000410f18841100010000410f18841140010000410f1884118001000089720c48c7020100000044894208413bf38bce410f4fcb4863c94883f9010f8c770000004c8d5a104e8d14d5100000004c8d41f84d85c049c7c1000000000f8d870100004c8d41fc4d3bc80f8f13000000c4817a6f048ac4817a7f048b4d8d41044d8bc84c8d41fe4d3bc80f8f13000000c481f96e048ac481f97e048b4d8d41024d8bc84c8bc149ffc84d3bc80f8f08000000478b148a4789148b4c63d64c3bd10f8f5f00000048b900e01b170100000085f60f84ba000000ffcec1e6024863f64c8d52104c03d649c1ea09488d721048c1ee094c2bd649ffc2e91b000000660f1f440000660f1f44000049ffca4c8bde4c03d94d03da4588234983fa010f8c6f000000ebe54c8d5c8a104c2bd1498d4af84885c90f8d7c00000049c7c000000000498d4afc4c3bc10f8f11000000c5f9efc0c4817a7f0483498d48044c8bc1498d4afe4c3bc10f8f11000000c5f9efc0c481f97e0483498d48024c8bc149ffca4d3bc20f8f3dffffff47892483e934ffffff48c1ea034189551449c1ed094588640d00488b6c24204883c42885054ea8eafcc5f877c3c5f9efc049c7c000000000660f1f840000000000c4817e7f04834d8d40084c3bc17ef1e963ffffff660f1f440000660f1f440000c4817e6f048ac4817e7f048b4d8d49084d3bc87eebe95ffeffff44895c2414448954241049c1e003448bce498bf0418bd1b90000000044894c240ce8b0255bff90488bd08b74240c448b5c2414448b542410e9ecfdffff41ba9fa9ffff4589979c0200004d89a7a8020000e89e2de2fe9041baedc9ffffebe4e8b25d26ff90e88c2ce2fe90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4d59321d slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 58 12 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 58 [r10:0, r13:0]at java.util.ArrayList.grow(ArrayList.java:258) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 14 rsi|DWORD = SHR r11|DWORD size: DWORD  <||@
  Comment 71 16 rsi|DWORD = ADD (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 74 18 rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 79 20 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 81 22 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: <  <||@
  Comment 85 24 rdx|DWORD = LEA [rsi|DWORD - 2147483639] size: DWORD  <||@
  Comment 91 26 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 94 28 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B47  <||@
  Comment 100 block B1 null  <||@
  Comment 100 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 32 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 102 34 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 108 block B3 null  <||@
  Comment 108 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 44 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 112 46 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 116 48 r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 124 50 r9|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 131 52 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 135 54 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 139 56 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 142 58 rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 148 60 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 151 62 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 157 block B5 null  <||@
  Comment 157 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 96 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 161 98 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 170 100 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 179 102 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 188 104 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 197 106 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 200 108 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 207 110 MOV (x: [rdx|QWORD + 8], y: r8|DWORD) size: DWORD  <||@
  Comment 211 112 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 211 114 JUMP ~[] destination: B5 -> B6  <||@
  Comment 211 block B6 null  <||@
  Comment 211 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 211 118 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 214 120 rcx|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 220 122 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 223 124 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 227 126 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B6 -> B22 falseDestination: B6 -> B8  <||@
  Comment 233 block B8 null  <||@
  Comment 233 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 134 r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 237 136 r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 245 138 r8|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 249 140 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 252 146 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 259 142 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B8 -> B13 falseDestination: B8 -> B11  <||@
  Comment 265 block B13 null  <||@
  Comment 265 172 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 265 174 r8|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 269 176 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 272 178 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B16 falseDestination: B13 -> B15  <||@
  Comment 278 block B15 null  <||@
  Comment 278 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 186 xmm0|V128_DWORD[....] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 284 188 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 290 190 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 294 192 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 297 194 JUMP ~[] destination: B15 -> B16  <||@
  Comment 297 block B16 null  <||@
  Comment 297 196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 297 198 r8|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 301 200 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 304 202 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18  <||@
  Comment 310 block B18 null  <||@
  Comment 310 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 210 xmm0|V64_DWORD[..] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 316 212 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 322 214 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 326 216 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 329 218 JUMP ~[] destination: B18 -> B19  <||@
  Comment 329 block B19 null  <||@
  Comment 329 220 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 329 222 r8|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 335 224 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 338 226 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 344 block B21 null  <||@
  Comment 344 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 234 r10|DWORD[.] = MOV [r10|QWORD[*] + r9|QWORD * 4] size: DWORD  <||@
  Comment 348 236 MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 352 238 JUMP ~[] destination: B21 -> B22  <||@
  Comment 352 block B22 null  <||@
  Comment 352 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 242 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 355 244 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 358 246 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B39  <||@
  Comment 364 block B39 null  <||@
  Comment 364 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 364 rcx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 374 366 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 376 368 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41  <||@
  Comment 382 block B41 null  <||@
  Comment 382 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 376 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 384 378 rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 387 380 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 390 382 r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 394 384 r10|QWORD[.] = ADD (x: r10|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 397 386 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 401 388 rsi|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 405 390 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 409 392 r10|QWORD[*] = SUB (x: r10|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 412 394 r10|QWORD[*] = INC r10|QWORD[*] size: QWORD  <||@
  Comment 415 396 JUMP ~[] destination: B41 -> B42  <||@
  Comment 420 block B45 loop 2 depth 1 header:244|LoopBegin  <||@
  Comment 420 420 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 432 422 r10|QWORD[*] = DEC r10|QWORD[*] size: QWORD  <||@
  Comment 435 424 r11|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 441 426 r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD[*]) size: QWORD  <||@
  Comment 444 428 MOVB (x: [r11|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 447 430 JUMP ~[] destination: B45 -> B42  <||@
  Comment 447 block B42 loop 2 depth 1 header:244|LoopBegin  <||@
  Comment 447 398 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 447 400 CMP r10|QWORD[*] y: 1 size: QWORD  <||@
  Comment 451 402 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B42 -> B44 falseDestination: B42 -> B45  <||@
  Comment 459 block B23 null  <||@
  Comment 459 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 250 r11|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 464 252 r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 467 254 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 471 256 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 474 258 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 480 block B24 null  <||@
  Comment 480 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 480 262 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 487 264 JUMP ~[] destination: B24 -> B28  <||@
  Comment 487 block B28 null  <||@
  Comment 487 288 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 487 290 rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 491 292 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 494 294 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 500 block B30 null  <||@
  Comment 500 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 302 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 504 304 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 510 306 rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 514 308 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 517 310 JUMP ~[] destination: B30 -> B31  <||@
  Comment 517 block B31 null  <||@
  Comment 517 312 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 517 314 rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 521 316 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 524 318 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 530 block B33 null  <||@
  Comment 530 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 530 326 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 534 328 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 540 330 rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 544 332 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 547 334 JUMP ~[] destination: B33 -> B34  <||@
  Comment 547 block B34 null  <||@
  Comment 547 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 547 338 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 550 340 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 553 342 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B39 falseDestination: B34 -> B36  <||@
  Comment 559 block B36 null  <||@
  Comment 559 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 350 MOV (x: [r11|QWORD[.] + r8|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 563 352 JUMP ~[] destination: B36 -> B39  <||@
  Comment 568 block B44 null  <||@
  Comment 568 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 568 410 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3  <||@
  Comment 572 412 MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 576 414 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 580 416 MOVB (x: [r13|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 585 418 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 594 12  <||@
  Comment 604 block B25 null  <||@
  Comment 604 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 604 268 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 608 270 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 615 272 JUMP ~[] destination: B25 -> B26  <||@
  Comment 615 block B26 loop 1 depth 1 header:344|LoopBegin  <||@
  Comment 615 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 624 276 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 630 278 r8|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 634 280 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 637 282 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B28 falseDestination: B26 -> B26  <||@
  Comment 644 block B11 loop 0 depth 1 header:289|LoopBegin  <||@
  Comment 644 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 656 158 xmm0|V256_DWORD[........] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 662 160 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 668 162 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 672 164 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 675 166 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B11  <||@
  Comment 682 block B4 null  <||@
  Comment 682 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 682 66 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 687 68 stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 692 70 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@578a0d24 encoding: base: 0 shift: 3  <||@
  Comment 696 72 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 699 74 rsi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 702 76 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 705 78 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 710 80 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 715 82 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 715 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 720 [r13:0, stack:16]at java.util.ArrayList.grow(ArrayList.java:258) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 721 84 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 724 86 rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 728 88 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 733 90 r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 738 92 JUMP ~[] destination: B4 -> B6  <||@
  Comment 743 block B2 null  <||@
  Comment 743 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 743 38 r10|DWORD = MOVE input: int[-22113|0xffffffffffffa99f]  <||@
  Comment 749 40 JUMP ~[] destination: B2 -> B48  <||@
  Comment 749 block B48 null  <||@
  Comment 749 442 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 749 444 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 756 446 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 763 448 DEOPT info [bci:0]  <||@
  Comment 763 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 768 [r13:0]at java.util.ArrayList.grow(ArrayList.java:258) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 769 block B47 null  <||@
  Comment 769 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 769 438 r10|DWORD = MOVE input: int[-13843|0xffffffffffffc9ed]  <||@
  Comment 775 440 JUMP ~[] destination: B47 -> B48  <||@
  Comment 777 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 777 4  <||@
  Comment 783 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 783 5  <||@
  HexCodeFile>>> <|@
end_nmethod
