begin_compilation
  name " HotSpotCompilation-9561[java.util.ArrayList$SubList.get(int)]"
  method "HotSpotCompilation-9561[java.util.ArrayList$SubList.get(int)]"
  date 1527005205798
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList$SubList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v135 v131 v132 v134 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v20 v23 i12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList$SubList.get(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 1042
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v112 i125 i128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i19 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v84 #falseSuccessor: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8211
stableDimension: 0
stamp: i32 [-8211] ⇊00000000ffffdfed ⇈00000000ffffdfed
stampKind: i32
value: int[-8211|0xffffffffffffdfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i123 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i123  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 6]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v131 
=== Succesors ===
next: v89 
=== Usages ===
v23 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v131 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 9]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i123 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 9]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
i123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v86 #falseSuccessor: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 9]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a124 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a124  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
=== Succesors ===
next: i125 
=== Usages ===
v136 v133 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 #next: i125  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a124 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v133 
=== Succesors ===
next: i126 
=== Usages ===
v29 
=== Predecessor ===
a124 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v133 #next: i126  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
=== Succesors ===
next: v97 
=== Usages ===
v29 
=== Predecessor ===
i125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i126 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i125 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
i126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v94 #falseSuccessor: v96  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a127 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a127  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a124 
=== Succesors ===
=== Usages ===
a127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
=== Succesors ===
next: i128 
=== Usages ===
a56 v137 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 #next: i128  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a127 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v137 
=== Succesors ===
next: i129 
=== Usages ===
v62 
=== Predecessor ===
a127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v137 #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.offset
nodeSourcePosition: at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
=== Succesors ===
next: v105 
=== Usages ===
i12 
=== Predecessor ===
i128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v135 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 18]
stamp: i32
=== Inputs ===
x: i2 
y: i129 
=== Succesors ===
=== Usages ===
v138 v62 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i12 
y: i128 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i12 y: i128  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
i129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v102 #falseSuccessor: v104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a130 
=== Usages ===
a130 
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a130  <|@  <|@
f <@~|@floating>@ <|@
tid a56 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a127 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a127  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a56 
index: i12 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a56 index: i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v102 
address: v138 
=== Succesors ===
next: v18 
=== Usages ===
a72 
=== Predecessor ===
v102 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v102 address: v138 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a130 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a130  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 22]
stamp: void
=== Inputs ===
result: a72 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a130 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a72 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16155
stableDimension: 0
stamp: i32 [-16155] ⇊00000000ffffc0e5 ⇈00000000ffffc0e5
stampKind: i32
value: int[-16155|0xffffffffffffc0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12563
stableDimension: 0
stamp: i32 [-12563] ⇊00000000ffffceed ⇈00000000ffffceed
stampKind: i32
value: int[-12563|0xffffffffffffceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 9]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9235
stableDimension: 0
stamp: i32 [-9235] ⇊00000000ffffdbed ⇈00000000ffffdbed
stampKind: i32
value: int[-9235|0xffffffffffffdbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16155 - -8211] ⇊00000000ffffc0e5 ⇈00000000ffffdffd
valueDescription: i32
=== Inputs ===
merge: v106 
values: i108 i116 i120 i122 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: i108 i116 i120 i122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v107 v115 v119 v121 
=== Succesors ===
next: v112 
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v107 v115 v119 v121 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a109 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i110 
speculation: a109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i110 speculation: a109  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList$SubList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v135 v131 v132 v134 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v20 v23 i12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList$SubList.get(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 1042
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v112 i125 i128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i19 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v84 #falseSuccessor: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@754a4833 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result int[-8211|0xffffffffffffdfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8211
stableDimension: 0
stamp: i32 [-8211] ⇊00000000ffffdfed ⇈00000000ffffdfed
stampKind: i32
value: int[-8211|0xffffffffffffdfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-8211|0xffffffffffffdfed]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i123 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i123  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i123 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 6]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v131 
=== Succesors ===
next: v89 
=== Usages ===
v23 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v131 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 9]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i123 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 9]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
i123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v86 #falseSuccessor: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v0|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 9]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a124 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a124  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a124 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
=== Succesors ===
next: i125 
=== Usages ===
v136 v133 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 #next: i125  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a124 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i125 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v133 
=== Succesors ===
next: i126 
=== Usages ===
v29 
=== Predecessor ===
a124 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v133 #next: i126  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
=== Succesors ===
next: v97 
=== Usages ===
v29 
=== Predecessor ===
i125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i126 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i125 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
i126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v94 #falseSuccessor: v96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a127 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a127  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
result [v2|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a124 
=== Succesors ===
=== Usages ===
a127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a127 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
=== Succesors ===
next: i128 
=== Usages ===
a56 v137 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 #next: i128  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a127 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i128 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v137 
=== Succesors ===
next: i129 
=== Usages ===
v62 
=== Predecessor ===
a127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v137 #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.offset
nodeSourcePosition: at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
=== Succesors ===
next: v105 
=== Usages ===
i12 
=== Predecessor ===
i128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v135 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 18]
stamp: i32
=== Inputs ===
x: i2 
y: i129 
=== Succesors ===
=== Usages ===
v138 v62 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i12 
y: i128 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i12 y: i128  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
i129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v102 #falseSuccessor: v104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v2|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v1|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a130 
=== Usages ===
a130 
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a130  <|@  <|@
f <@~|@floating>@ <|@
tid a56 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 1]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a127 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a127  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
result [v7|QWORD[.] + v6|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a56 
index: i12 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a56 index: i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a130 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v102 
address: v138 
=== Succesors ===
next: v18 
=== Usages ===
a72 
=== Predecessor ===
v102 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v102 address: v138 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a130 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a130  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 22]
stamp: void
=== Inputs ===
result: a72 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a130 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a72 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.elementData(ArrayList.java:422) [bci: 5]
at java.util.ArrayList$SubList.get(ArrayList.java:1044) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
result int[-16155|0xffffffffffffc0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16155
stableDimension: 0
stamp: i32 [-16155] ⇊00000000ffffc0e5 ⇈00000000ffffc0e5
stampKind: i32
value: int[-16155|0xffffffffffffc0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16155|0xffffffffffffc0e5]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.get(ArrayList.java:1043) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result int[-12563|0xffffffffffffceed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12563
stableDimension: 0
stamp: i32 [-12563] ⇊00000000ffffceed ⇈00000000ffffceed
stampKind: i32
value: int[-12563|0xffffffffffffceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12563|0xffffffffffffceed]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheck(ArrayList.java:1224) [bci: 9]
at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result int[-9235|0xffffffffffffdbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9235
stableDimension: 0
stamp: i32 [-9235] ⇊00000000ffffdbed ⇈00000000ffffdbed
stampKind: i32
value: int[-9235|0xffffffffffffdbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9235|0xffffffffffffdbed]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i110 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16155 - -8211] ⇊00000000ffffc0e5 ⇈00000000ffffdffd
valueDescription: i32
=== Inputs ===
merge: v106 
values: i108 i116 i120 i122 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: i108 i116 i120 i122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v107 v115 v119 v121 
=== Succesors ===
next: v112 
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v107 v115 v119 v121 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a109 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i110 
speculation: a109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i110 speculation: a109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@754a4833 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v0|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v2|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v1|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-8211|0xffffffffffffdfed]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12563|0xffffffffffffceed]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9235|0xffffffffffffdbed]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16155|0xffffffffffffc0e5]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #8          // rangeCheck:(int)void
     5: aload_0       
     6: invokespecial #9          // checkForComodification:()void
     9: aload_0       
    10: getfield      #0          // this$0:java.util.ArrayList
    13: aload_0       
    14: getfield      #4          // offset:int
    17: iload_1       
    18: iadd          
    19: invokevirtual #10         // java.util.ArrayList.elementData:(int)java.lang.Object
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@754a4833 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8211|0xffffffffffffdfed] // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12563|0xffffffffffffceed] // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-9235|0xffffffffffffdbed] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #8          // rangeCheck:(int)void
     5: aload_0       
     6: invokespecial #9          // checkForComodification:()void
     9: aload_0       
    10: getfield      #0          // this$0:java.util.ArrayList
    13: aload_0       
    14: getfield      #4          // offset:int
    17: iload_1       
    18: iadd          
    19: invokevirtual #10         // java.util.ArrayList.elementData:(int)java.lang.Object
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@754a4833 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-8211|0xffffffffffffdfed] // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12563|0xffffffffffffceed] // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-9235|0xffffffffffffdbed] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #8          // rangeCheck:(int)void
     5: aload_0       
     6: invokespecial #9          // checkForComodification:()void
     9: aload_0       
    10: getfield      #0          // this$0:java.util.ArrayList
    13: aload_0       
    14: getfield      #4          // offset:int
    17: iload_1       
    18: iadd          
    19: invokevirtual #10         // java.util.ArrayList.elementData:(int)java.lang.Object
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241085d20f8c5d0000003b56180f8d760000008b4620448b14c50c000000443b560c0f85590000008b04c514000000448b14c50c000000448bda44035e14453bd30f864a00000048c1e003428b44981048c1e003488b6c24104883c418850500000000c5f877c341baeddfffff4589979c0200004d89a7a8020000e8000000009041baedceffffebe441baeddbffffebdc41bae5c0ffffebd4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@754a4833 slotKind: QWORD  <||@
  Comment 48 10 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 50 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 56 block B2 null  <||@
  Comment 56 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 56 16 CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 24]) size: DWORD  <||@
  Comment 59 18 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8  <||@
  Comment 65 block B3 null  <||@
  Comment 65 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 22 rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 68 24 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [rax:0, rsi:0]at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 26 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 80 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 86 block B4 null  <||@
  Comment 86 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 32 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 93 34 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 93 [rax:0, rsi:0]at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 93 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 101 36 r11|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 108 38 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 111 40 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 117 block B5 null  <||@
  Comment 117 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 44 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3  <||@
  Comment 121 46 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 126 48 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3  <||@
  Comment 130 52 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 139 12  <||@
  Comment 149 block B1 null  <||@
  Comment 149 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 -1 r10|DWORD = MOVE input: int[-8211|0xffffffffffffdfed]  <||@
  Comment 155 56 JUMP ~[] destination: B1 -> B9  <||@
  Comment 155 block B9 null  <||@
  Comment 155 70 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 155 72 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 162 74 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 169 76 DEOPT info [bci:0]  <||@
  Comment 169 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 174 [rsi:0]at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 175 block B7 null  <||@
  Comment 175 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 175 -1 r10|DWORD = MOVE input: int[-12563|0xffffffffffffceed]  <||@
  Comment 181 60 JUMP ~[] destination: B7 -> B9  <||@
  Comment 183 block B8 null  <||@
  Comment 183 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 -1 r10|DWORD = MOVE input: int[-9235|0xffffffffffffdbed]  <||@
  Comment 189 64 JUMP ~[] destination: B8 -> B9  <||@
  Comment 191 block B6 null  <||@
  Comment 191 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 -1 r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5]  <||@
  Comment 197 68 JUMP ~[] destination: B6 -> B9  <||@
  Comment 199 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 199 4  <||@
  Comment 205 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 205 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9561[java.util.ArrayList$SubList.get(int)]"
  method "HotSpotCompilation-9561[java.util.ArrayList$SubList.get(int)]"
  date 1527005205847
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b9c260 448b560849c1e203493bc20f85ef9bc6fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241085d20f8c5d0000003b56180f8d760000008b4620448b14c50c000000443b560c0f85590000008b04c514000000448b14c50c000000448bda44035e14453bd30f864a00000048c1e003428b44981048c1e003488b6c24104883c4188505152dcffcc5f877c341baeddfffff4589979c0200004d89a7a8020000e8f0b2c6fe9041baedceffffebe441baeddbffffebdc41bae5c0ffffebd4e8f4e20aff90e8ceb1c6fe90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@754a4833 slotKind: QWORD  <||@
  Comment 48 10 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 50 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 56 block B2 null  <||@
  Comment 56 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 56 16 CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 24]) size: DWORD  <||@
  Comment 59 18 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B8  <||@
  Comment 65 block B3 null  <||@
  Comment 65 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 22 rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 68 24 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [rax:0, rsi:0]at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 26 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 80 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 86 block B4 null  <||@
  Comment 86 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 32 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 93 34 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 93 [rax:0, rsi:0]at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 93 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 101 36 r11|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 108 38 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 111 40 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 117 block B5 null  <||@
  Comment 117 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 44 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3  <||@
  Comment 121 46 rax|DWORD[.] = MOV [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 126 48 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@722cbcec encoding: base: 0 shift: 3  <||@
  Comment 130 52 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 139 12  <||@
  Comment 149 block B1 null  <||@
  Comment 149 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 -1 r10|DWORD = MOVE input: int[-8211|0xffffffffffffdfed]  <||@
  Comment 155 56 JUMP ~[] destination: B1 -> B9  <||@
  Comment 155 block B9 null  <||@
  Comment 155 70 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 155 72 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 162 74 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 169 76 DEOPT info [bci:0]  <||@
  Comment 169 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 174 [rsi:0]at java.util.ArrayList$SubList.get(ArrayList.java:1042) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 175 block B7 null  <||@
  Comment 175 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 175 -1 r10|DWORD = MOVE input: int[-12563|0xffffffffffffceed]  <||@
  Comment 181 60 JUMP ~[] destination: B7 -> B9  <||@
  Comment 183 block B8 null  <||@
  Comment 183 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 -1 r10|DWORD = MOVE input: int[-9235|0xffffffffffffdbed]  <||@
  Comment 189 64 JUMP ~[] destination: B8 -> B9  <||@
  Comment 191 block B6 null  <||@
  Comment 191 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 -1 r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5]  <||@
  Comment 197 68 JUMP ~[] destination: B6 -> B9  <||@
  Comment 199 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 199 4  <||@
  Comment 205 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 205 5  <||@
  HexCodeFile>>> <|@
end_nmethod
