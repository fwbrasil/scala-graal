begin_compilation
  name " HotSpotCompilation-4585[java.lang.Integer.getChars(int, int, char[])]"
  method "HotSpotCompilation-4585[java.lang.Integer.getChars(int, int, char[])]"
  date 1527005058768
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v6 i11 i15 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i21 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a240 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v243 v253 ?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 a240 - - - - 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 a240 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v263 ?59 ?22 v271 v262 ?53 ?74 v265 v266 v268 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a3 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a3 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:436) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 i16 v84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i5 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
stamp: void
trueSuccessorProbability: 0.021938671650905905
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v7 #falseSuccessor: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4581980612990633440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:440) [bci: 15]
stamp: i32
=== Inputs ===
value: i1 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v7 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606984812813073361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v8 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i1 i11 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i1 i11  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v13 
values: i5 i10 
=== Succesors ===
=== Usages ===
v84 ?22 ?59 ?74 ?53 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i5 i10  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v13 
values: i232 i233 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i232 i233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v12 v14 
=== Succesors ===
next: i256 
=== Usages ===
i15 i16 i234 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v12 v14 #next: i256  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i256 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v265 
=== Succesors ===
next: v18 
=== Usages ===
v157 v170 v124 v134 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v265 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 i197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 18]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
i256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B21" 
    successors "B5" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607292172482917523
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v19 
values: i15 i102 
=== Succesors ===
=== Usages ===
?22 v24 i57 i106 i42 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v19 values: i15 i102  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v19 
values: i2 i97 
=== Succesors ===
=== Usages ===
?22 i58 i44 i97 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v19 values: i2 i97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0243702131586232
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v18 
=== Succesors ===
next: v31 
=== Usages ===
i20 i21 v26 v54 v229 v219 v224 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v18 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i20 
y: i23 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i20 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
stamp: void
trueSuccessorProbability: 0.9762095648179009
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v26 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v19 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v19 #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 100]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 85]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 76]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 79]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
i63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 88]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B14" 
    successors "B7" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v56 
values: i20 i63 
=== Succesors ===
=== Usages ===
?59 i61 i69 ?74 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v56 values: i20 i63  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v56 
values: i21 i70 
=== Succesors ===
=== Usages ===
?59 i70 i197 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v56 values: i21 i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.276877286423826
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v55 
=== Succesors ===
next: v206 
=== Usages ===
i57 i58 v78 v81 v210 v205 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v55 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 78]
stamp: i32
=== Inputs ===
x: i57 
y: i60 
=== Succesors ===
=== Usages ===
i63 v76 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i57 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 81]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i61 
y: i62 
=== Succesors ===
=== Usages ===
i65 i67 ?74 i57 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i61 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 86]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i63 
y: i64 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i63 y: i64  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 89]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i63 
y: i66 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i63 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 90]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i65 
y: i67 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i65 y: i67  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 91]
stamp: i32
=== Inputs ===
x: i57 
y: i68 
=== Succesors ===
=== Usages ===
v261 ?74 v108 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i57 y: i68  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i107 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i69 y: i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v202 #falseSuccessor: v205  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v211 
=== Usages ===
i257 
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 95]
stamp: i32
=== Inputs ===
x: i58 
y: i43 
=== Succesors ===
=== Usages ===
v262 ?74 v124 i58 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i58 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i256 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v207 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v207 #falseSuccessor: v210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: i257 
=== Usages ===
v132 
=== Predecessor ===
v211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i257  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a71 
index: i69 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a71 index: i69  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v202 
address: v261 
=== Succesors ===
next: v132 
=== Usages ===
v132 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v202 address: v261 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3 
index: i70 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v207 
address: v262 
value: i257 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
i257 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v207 address: v262 value: i257 stateAfter: - lastLocationAccess: - #next: v83  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
rethrowException: false
sourceFile: Integer.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i57 - a3 i63 i69 i70 i16 
=== Succesors ===
=== Usages ===
v195 v213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i57 - a3 i63 i69 i70 i16  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
stamp: void
=== Inputs ===
x: i61 
y: i75 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i61 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
stamp: void
trueSuccessorProbability: 0.43919802176543676
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v78 #falseSuccessor: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 113]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v56 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v56 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i16 
y: i5 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i16 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
stamp: void
trueSuccessorProbability: 0.9781142298973442
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4606985289307859333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4581965365157482303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
stamp: i32
=== Inputs ===
x: i58 
y: i96 
=== Succesors ===
=== Usages ===
v263 v134 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i58 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i256 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i197 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v214 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v212 #falseSuccessor: v214  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581965365157482303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
v142 
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3 
index: i197 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v212 
address: v263 
value: i234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v212 address: v263 value: i234 stateAfter: - lastLocationAccess: - #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 135
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608429363243983103
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?74 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?74 #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
stamp: void
=== Inputs ===
loopBegin: v56 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v56  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v56 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v56 #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32027
stableDimension: 0
stamp: i32 [-32027] ⇊00000000ffff82e5 ⇈00000000ffff82e5
stampKind: i32
value: int[-32027|0xffffffffffff82e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v56 
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v56 #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -27931
stableDimension: 0
stamp: i32 [-27931] ⇊00000000ffff92e5 ⇈00000000ffff92e5
stampKind: i32
value: int[-27931|0xffffffffffff92e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-32027 - -27931] ⇊00000000ffff82e5 ⇈00000000ffff92e5
valueDescription: i32
=== Inputs ===
merge: v248 
values: i250 i255 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v248 values: i250 i255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v249 v254 
=== Succesors ===
next: v253 
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v249 v254 #next: v253  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 456
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i57 - a3 - - i58 i16 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i57 - a3 - - i58 i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?59 
actionAndReason: i251 
speculation: a240 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?59 actionAndReason: i251 speculation: a240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B19" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:445) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i20 
y: i100 
=== Succesors ===
=== Usages ===
i102 i270 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i20 y: i100  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 34]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i106 
y: i36 
=== Succesors ===
=== Usages ===
?53 i35 i20 i40 ?53 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i106 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 30]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 32]
stamp: i32 [-2147483648 - 2147483584] ⇈00000000ffffffc0
=== Inputs ===
x: i102 
y: i34 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i102 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32] ⇊00000000ffffffe0 ⇈00000000ffffffe0
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i106 
y: i269 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i106 y: i269  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 36]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i35 
y: i270 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i35 y: i270  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 38]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 39]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i102 
y: i39 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i102 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 40]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i38 
y: i40 
=== Succesors ===
=== Usages ===
i42 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i38 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 41]
stamp: i32
=== Inputs ===
x: i20 
y: i41 
=== Succesors ===
=== Usages ===
v267 ?53 v144 v264 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i20 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i143 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v144 
=== Succesors ===
trueSuccessor: v216 
falseSuccessor: v219 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v144 #trueSuccessor: v216 #falseSuccessor: v219  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
i259 i258 
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
stamp: i32
=== Inputs ===
x: i21 
y: i43 
=== Succesors ===
=== Usages ===
v266 v157 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i21 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i44 
y: i256 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i44 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v221 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v221 #falseSuccessor: v224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
v165 
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
stamp: i32
=== Inputs ===
x: i21 
y: i96 
=== Succesors ===
=== Usages ===
v268 ?53 i21 v170 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i21 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i97 
y: i256 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i97 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v226 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v226 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
stamp: void
=== Inputs ===
=== Succesors ===
next: i258 
=== Usages ===
v178 
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i258  <|@  <|@
f <@~|@floating>@ <|@
tid a45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 52]
rawvalue: char[100]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a45 
index: i42 
=== Succesors ===
=== Usages ===
i258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a45 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v216 
address: v264 
=== Succesors ===
next: v165 
=== Usages ===
v165 
=== Predecessor ===
v226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v216 address: v264 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3 
index: i44 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i44  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v221 
address: v266 
value: i258 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i259 
=== Usages ===
=== Predecessor ===
i258 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v266 value: i258 stateAfter: - lastLocationAccess: - #next: i259  <|@  <|@
f <@~|@floating>@ <|@
tid a50 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 65]
rawvalue: char[100]{0, 0, 0, 0, 0, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 0, 0, 0, 0, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a50 
index: i42 
=== Succesors ===
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a50 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i259 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 70]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v216 
address: v267 
=== Succesors ===
next: v178 
=== Usages ===
v178 
=== Predecessor ===
v165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v216 address: v267 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3 
index: i97 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v226 
address: v268 
value: i259 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
i259 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v226 address: v268 value: i259 stateAfter: - lastLocationAccess: - #next: v194  <|@  <|@
tid ?53 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
rethrowException: false
sourceFile: Integer.java
sourceLine: 450
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i102 - a3 i102 i42 i97 i16 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i102 - a3 i102 i42 i97 i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?53 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?53 #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v19 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v19 
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v19 #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43803
stableDimension: 0
stamp: i32 [-43803] ⇊00000000ffff54e5 ⇈00000000ffff54e5
stampKind: i32
value: int[-43803|0xffffffffffff54e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v19 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v19 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid i245 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40475
stableDimension: 0
stamp: i32 [-40475] ⇊00000000ffff61e5 ⇈00000000ffff61e5
stampKind: i32
value: int[-40475|0xffffffffffff61e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v19 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v19 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -37147
stableDimension: 0
stamp: i32 [-37147] ⇊00000000ffff6ee5 ⇈00000000ffff6ee5
stampKind: i32
value: int[-37147|0xffffffffffff6ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
v219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-43803 - -37147] ⇊00000000ffff40e5 ⇈00000000ffff7fe5
valueDescription: i32
=== Inputs ===
merge: v237 
values: i239 i245 i247 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v237 values: i239 i245 i247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v238 v244 v246 
=== Succesors ===
next: v243 
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v238 v244 v246 #next: v243  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 444
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i20 - a3 - - i21 i16 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i20 - a3 - - i21 i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?22 
actionAndReason: i241 
speculation: a240 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?22 actionAndReason: i241 speculation: a240  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v6 i11 i15 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i21 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a240 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v243 v253 ?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 a240 - - - - 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 a240 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v263 ?59 ?22 v271 v262 ?53 ?74 v265 v266 v268 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a3 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a3 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:436) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 i16 v84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i5 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
stamp: void
trueSuccessorProbability: 0.021938671650905905
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v7 #falseSuccessor: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e3587b0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:435) [bci: 0]
locals: v0|DWORD v1|DWORD Object[null] - - - - 
>@ <|@ instruction NULLCHECK [v2|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.021938671650905905 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4581980612990633440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:440) [bci: 15]
stamp: i32
=== Inputs ===
value: i1 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v7 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = NEG v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, int[45|0x2d], short[45|0x2d]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606984812813073361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v8 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|DWORD, int[0|0x0], short[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i15 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i1 i11 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i1 i11  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v13 
values: i5 i10 
=== Succesors ===
=== Usages ===
v84 ?22 ?59 ?74 ?53 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i5 i10  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v13 
values: i232 i233 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v13 values: i232 i233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v12 v14 
=== Succesors ===
next: i256 
=== Usages ===
i15 i16 i234 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v12 v14 #next: i256  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i256 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v265 
=== Succesors ===
next: v18 
=== Usages ===
v157 v170 v124 v134 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v265 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 i197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[65536|0x10000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 18]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
i256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD, v5|DWORD, v6|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD, v1|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B21" 
    successors "B5" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607292172482917523
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i20 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v19 
values: i15 i102 
=== Succesors ===
=== Usages ===
?22 v24 i57 i106 i42 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v19 values: i15 i102  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v19 
values: i2 i97 
=== Succesors ===
=== Usages ===
?22 i58 i44 i97 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v19 values: i2 i97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0243702131586232
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v18 
=== Succesors ===
next: v31 
=== Usages ===
i20 i21 v26 v54 v229 v219 v224 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v18 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i20 
y: i23 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i20 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
stamp: void
trueSuccessorProbability: 0.9762095648179009
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v26 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9762095648179009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v19 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v19 #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result int[-524288|0xfffffffffff80000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 100]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 85]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result int[52429|0xcccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 76]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result int[19|0x13] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 79]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
i63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 88]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result int[36|0x24] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v9|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B14" 
    successors "B7" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i57 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v56 
values: i20 i63 
=== Succesors ===
=== Usages ===
?59 i61 i69 ?74 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v56 values: i20 i63  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v56 
values: i21 i70 
=== Succesors ===
=== Usages ===
?59 i70 i197 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v56 values: i21 i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.276877286423826
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v55 
=== Succesors ===
next: v206 
=== Usages ===
i57 i58 v78 v81 v210 v205 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v55 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 78]
stamp: i32
=== Inputs ===
x: i57 
y: i60 
=== Succesors ===
=== Usages ===
i63 v76 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i57 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 81]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i61 
y: i62 
=== Succesors ===
=== Usages ===
i65 i67 ?74 i57 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i61 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 86]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i63 
y: i64 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i63 y: i64  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 89]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i63 
y: i66 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i63 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 90]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i65 
y: i67 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i65 y: i67  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 91]
stamp: i32
=== Inputs ===
x: i57 
y: i68 
=== Succesors ===
=== Usages ===
v261 ?74 v108 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i57 y: i68  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i107 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i69 y: i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v202 #falseSuccessor: v205  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = IMUL v11|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHR v13|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SHL v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v15|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v11|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v211 
=== Usages ===
i257 
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 95]
stamp: i32
=== Inputs ===
x: i58 
y: i43 
=== Succesors ===
=== Usages ===
v262 ?74 v124 i58 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i58 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i256 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v207 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v207 #falseSuccessor: v210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: i257 
=== Usages ===
v132 
=== Predecessor ===
v211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i257  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
result [v10|QWORD[.] + v18|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a71 
index: i69 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a71 index: i69  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i257 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v202 
address: v261 
=== Succesors ===
next: v132 
=== Usages ===
v132 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v202 address: v261 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
result [v2|QWORD[.] + v19|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3 
index: i70 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v207 
address: v262 
value: i257 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
i257 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v207 address: v262 value: i257 stateAfter: - lastLocationAccess: - #next: v83  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
rethrowException: false
sourceFile: Integer.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i57 - a3 i63 i69 i70 i16 
=== Succesors ===
=== Usages ===
v195 v213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i57 - a3 i63 i69 i70 i16  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
stamp: void
=== Inputs ===
x: i61 
y: i75 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i61 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
stamp: void
trueSuccessorProbability: 0.43919802176543676
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v78 #falseSuccessor: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVSX [v10|QWORD[.] + v18|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v19|DWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v13|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43919802176543676 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 113]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v56 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v56 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i16 
y: i5 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i16 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
stamp: void
trueSuccessorProbability: 0.9781142298973442
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9781142298973442 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4606985289307859333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4581965365157482303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
stamp: i32
=== Inputs ===
x: i58 
y: i96 
=== Succesors ===
=== Usages ===
v263 v134 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i58 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i256 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i197 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v214 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v212 #falseSuccessor: v214  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA [v12|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581965365157482303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
v142 
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
result [v2|QWORD[.] + v21|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3 
index: i197 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v212 
address: v263 
value: i234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v212 address: v263 value: i234 stateAfter: - lastLocationAccess: - #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v6|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 135
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -34587 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v11|DWORD - v2|QWORD[.] v14|DWORD v18|DWORD v19|DWORD v5|DWORD 
>@ <|@ instruction DEOPT info [bci:107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608429363243983103
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?74 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?74 #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
stamp: void
=== Inputs ===
loopBegin: v56 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v56  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v11|DWORD - v2|QWORD[.] v14|DWORD v18|DWORD v19|DWORD v5|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD, v19|DWORD] destination: B14 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v56 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v56 #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
result int[-32027|0xffffffffffff82e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32027
stableDimension: 0
stamp: i32 [-32027] ⇊00000000ffff82e5 ⇈00000000ffff82e5
stampKind: i32
value: int[-32027|0xffffffffffff82e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-32027|0xffffffffffff82e5]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v56 
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v56 #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
result int[-27931|0xffffffffffff92e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -27931
stableDimension: 0
stamp: i32 [-27931] ⇊00000000ffff92e5 ⇈00000000ffff92e5
stampKind: i32
value: int[-27931|0xffffffffffff92e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27931|0xffffffffffff92e5]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i251 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-32027 - -27931] ⇊00000000ffff82e5 ⇈00000000ffff92e5
valueDescription: i32
=== Inputs ===
merge: v248 
values: i250 i255 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v248 values: i250 i255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v249 v254 
=== Succesors ===
next: v253 
=== Usages ===
i251 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v249 v254 #next: v253  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 456
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i57 - a3 - - i58 i16 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i57 - a3 - - i58 i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?59 
actionAndReason: i251 
speculation: a240 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?59 actionAndReason: i251 speculation: a240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: v11|DWORD - v2|QWORD[.] - - v12|DWORD v5|DWORD 
>@ <|@ instruction DEOPT info [bci:75] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B19" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:445) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result int[1374389535|0x51eb851f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i20 
y: i100 
=== Succesors ===
=== Usages ===
i102 i270 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i20 y: i100  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 34]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i106 
y: i36 
=== Succesors ===
=== Usages ===
?53 i35 i20 i40 ?53 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i106 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 30]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 32]
stamp: i32 [-2147483648 - 2147483584] ⇈00000000ffffffc0
=== Inputs ===
x: i102 
y: i34 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i102 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
result int[-32|0xffffffffffffffe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32] ⇊00000000ffffffe0 ⇈00000000ffffffe0
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i106 
y: i269 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i106 y: i269  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 36]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i35 
y: i270 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i35 y: i270  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 38]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 39]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i102 
y: i39 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i102 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 40]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i38 
y: i40 
=== Succesors ===
=== Usages ===
i42 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i38 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 41]
stamp: i32
=== Inputs ===
x: i20 
y: i41 
=== Succesors ===
=== Usages ===
v267 ?53 v144 v264 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i20 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
result int[100|0x64] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i143 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v144 
=== Succesors ===
trueSuccessor: v216 
falseSuccessor: v219 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v144 #trueSuccessor: v216 #falseSuccessor: v219  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR v24|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL v25|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = AND v24|DWORD y: -32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL v25|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v8|DWORD, ~y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
i259 i258 
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
stamp: i32
=== Inputs ===
x: i21 
y: i43 
=== Succesors ===
=== Usages ===
v266 v157 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i21 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i44 
y: i256 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i44 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v221 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v221 #falseSuccessor: v224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
v165 
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
stamp: i32
=== Inputs ===
x: i21 
y: i96 
=== Succesors ===
=== Usages ===
v268 ?53 i21 v170 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i21 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i97 
y: i256 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i97 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v226 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v226 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = LEA [v9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
stamp: void
=== Inputs ===
=== Succesors ===
next: i258 
=== Usages ===
v178 
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i258  <|@  <|@
f <@~|@floating>@ <|@
tid a45 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 52]
rawvalue: char[100]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result [v34|QWORD[.] + v31|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a45 
index: i42 
=== Succesors ===
=== Usages ===
i258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a45 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i258 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v216 
address: v264 
=== Succesors ===
next: v165 
=== Usages ===
v165 
=== Predecessor ===
v226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v216 address: v264 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
result [v2|QWORD[.] + v32|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3 
index: i44 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i44  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v221 
address: v266 
value: i258 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i259 
=== Usages ===
=== Predecessor ===
i258 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v221 address: v266 value: i258 stateAfter: - lastLocationAccess: - #next: i259  <|@  <|@
f <@~|@floating>@ <|@
tid a50 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 65]
rawvalue: char[100]{0, 0, 0, 0, 0, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 0, 0, 0, 0, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
result [v36|QWORD[.] + v31|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a50 
index: i42 
=== Succesors ===
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a50 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i259 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 70]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v216 
address: v267 
=== Succesors ===
next: v178 
=== Usages ===
v178 
=== Predecessor ===
v165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v216 address: v267 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
result [v2|QWORD[.] + v33|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3 
index: i97 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v226 
address: v268 
value: i259 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
i259 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v226 address: v268 value: i259 stateAfter: - lastLocationAccess: - #next: v194  <|@  <|@
tid ?53 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
rethrowException: false
sourceFile: Integer.java
sourceLine: 450
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i102 - a3 i102 i42 i97 i16 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i102 - a3 i102 i42 i97 i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?53 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?53 #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v19 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSX [v34|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v32|DWORD * 2 + 16], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVSX [v36|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|DWORD * 2 + 16], y: v37|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: v25|DWORD - v2|QWORD[.] v25|DWORD v31|DWORD v33|DWORD v5|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v33|DWORD] destination: B21 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v19 
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v19 #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
result int[-43803|0xffffffffffff54e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43803
stableDimension: 0
stamp: i32 [-43803] ⇊00000000ffff54e5 ⇈00000000ffff54e5
stampKind: i32
value: int[-43803|0xffffffffffff54e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43803|0xffffffffffff54e5]] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v19 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v19 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid i245 <|@
result int[-40475|0xffffffffffff61e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40475
stableDimension: 0
stamp: i32 [-40475] ⇊00000000ffff61e5 ⇈00000000ffff61e5
stampKind: i32
value: int[-40475|0xffffffffffff61e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40475|0xffffffffffff61e5]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v19 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v19 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result int[-37147|0xffffffffffff6ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -37147
stableDimension: 0
stamp: i32 [-37147] ⇊00000000ffff6ee5 ⇈00000000ffff6ee5
stampKind: i32
value: int[-37147|0xffffffffffff6ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
v219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-37147|0xffffffffffff6ee5]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i241 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-43803 - -37147] ⇊00000000ffff40e5 ⇈00000000ffff7fe5
valueDescription: i32
=== Inputs ===
merge: v237 
values: i239 i245 i247 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v237 values: i239 i245 i247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v238 v244 v246 
=== Succesors ===
next: v243 
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v238 v244 v246 #next: v243  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 444
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i20 - a3 - - i21 i16 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i20 - a3 - - i21 i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?22 
actionAndReason: i241 
speculation: a240 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?22 actionAndReason: i241 speculation: a240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: v8|DWORD - v2|QWORD[.] - - v9|DWORD v5|DWORD 
>@ <|@ instruction DEOPT info [bci:17] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e3587b0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:435) [bci: 0]
locals: v0|DWORD v1|DWORD Object[null] - - - - 
>@ <|@ instruction NULLCHECK [v2|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.021938671650905905 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606984812813073361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|DWORD, int[0|0x0], short[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD, v5|DWORD, v6|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD, v1|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B19" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SAR v24|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL v25|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = AND v24|DWORD y: -32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL v25|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v8|DWORD, ~y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = LEA [v9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSX [v34|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v32|DWORD * 2 + 16], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVSX [v36|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v33|DWORD * 2 + 16], y: v37|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: v25|DWORD - v2|QWORD[.] v25|DWORD v31|DWORD v33|DWORD v5|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v33|DWORD] destination: B21 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B21" 
    successors "B5" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607292172482917523
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9762095648179009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v9|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVSX [v10|QWORD[.] + v18|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v19|DWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v13|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43919802176543676 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608429363243983103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v11|DWORD - v2|QWORD[.] v14|DWORD v18|DWORD v19|DWORD v5|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD, v19|DWORD] destination: B14 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B14" 
    successors "B7" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = IMUL v11|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHR v13|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SHL v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v15|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v11|DWORD, ~y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9781142298973442 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4606985289307859333
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4581980612990633440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = NEG v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, int[45|0x2d], short[45|0x2d]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4581965365157482303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA [v12|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581965365157482303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v21|DWORD * 2 + 16], y: v6|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-37147|0xffffffffffff6ee5]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: v8|DWORD - v2|QWORD[.] - - v9|DWORD v5|DWORD 
>@ <|@ instruction DEOPT info [bci:17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-32027|0xffffffffffff82e5]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: v11|DWORD - v2|QWORD[.] - - v12|DWORD v5|DWORD 
>@ <|@ instruction DEOPT info [bci:75] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -34587 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v11|DWORD - v2|QWORD[.] v14|DWORD v18|DWORD v19|DWORD v5|DWORD 
>@ <|@ instruction DEOPT info [bci:107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27931|0xffffffffffff92e5]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40475|0xffffffffffff61e5]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43803|0xffffffffffff54e5]] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iconst_0      
     4: istore        6
     6: iload_0       
     7: ifge          17
    10: bipush        45
    12: istore        6
    14: iload_0       
    15: ineg          
    16: istore_0      
    17: iload_0       
    18: ldc           #20         // 65536
    20: if_icmplt     75
    23: iload_0       
    24: bipush        100
    26: idiv          
    27: istore_3      
    28: iload_0       
    29: iload_3       
    30: bipush        6
    32: ishl          
    33: iload_3       
    34: iconst_5      
    35: ishl          
    36: iadd          
    37: iload_3       
    38: iconst_2      
    39: ishl          
    40: iadd          
    41: isub          
    42: istore        4
    44: iload_3       
    45: istore_0      
    46: aload_2       
    47: iinc          
    50: iload         5
    52: getstatic     #13         // DigitOnes:char[]
    55: iload         4
    57: caload        
    58: castore       
    59: aload_2       
    60: iinc          
    63: iload         5
    65: getstatic     #14         // DigitTens:char[]
    68: iload         4
    70: caload        
    71: castore       
    72: goto          17
    75: iload_0       
    76: ldc           #23         // 52429
    78: imul          
    79: bipush        19
    81: iushr         
    82: istore_3      
    83: iload_0       
    84: iload_3       
    85: iconst_3      
    86: ishl          
    87: iload_3       
    88: iconst_1      
    89: ishl          
    90: iadd          
    91: isub          
    92: istore        4
    94: aload_2       
    95: iinc          
    98: iload         5
   100: getstatic     #1          // digits:char[]
   103: iload         4
   105: caload        
   106: castore       
   107: iload_3       
   108: istore_0      
   109: iload_0       
   110: ifne          75
   113: goto          116
   116: iload         6
   118: ifeq          130
   121: aload_2       
   122: iinc          
   125: iload         5
   127: iload         6
   129: castore       
   130: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e3587b0 slotKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:435) [bci: 0]
locals: rsi|DWORD rdx|DWORD Object[null] - - - - 
>@ <|@ instruction NULLCHECK [rcx|QWORD[.]] state [bci:0] <|@ <|@
      nr   14  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.021938671650905905 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606984812813073361
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: short[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B19" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   40  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr   46  <|@ instruction rsi|DWORD = SHL rdi|DWORD y: 6 size: DWORD <|@ <|@
      nr   48  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD <|@ <|@
      nr   50  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = SHL rdi|DWORD y: 2 size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|DWORD = LEA [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   82  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   88  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: rdi|DWORD - rcx|QWORD[.] rdi|DWORD rdx|DWORD rax|DWORD r10|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B21 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B21" 
    successors "B5" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607292172482917523
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP r9|DWORD y: 65536 size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.9762095648179009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  122  <|@ instruction rax|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r13|DWORD = MOVSX [rdi|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: r13|DWORD) size: WORD <|@ <|@
      nr  134  <|@ instruction TEST rdx|DWORD y: -524288 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.43919802176543676 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608429363243983103
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [rcx:0, rdi:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r9|DWORD - rcx|QWORD[.] rsi|DWORD rbp|DWORD rax|DWORD r10|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B14 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B14" 
    successors "B7" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = IMUL r9|DWORD y: 52429 size: DWORD <|@ <|@
      nr  106  <|@ instruction rsi|DWORD = SHR rdx|DWORD y: 19 size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = SHL rsi|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rbp|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rbp|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction CMP rbp|DWORD y: 36 size: DWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.9781142298973442 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4606985289307859333
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4581980612990633440
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rsi|DWORD = NEG rsi|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: short[45|0x2d] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[45|0x2d] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4581965365157482303
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rbx|DWORD = LEA [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581965365157482303
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rcx|QWORD[.] + rbx|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr  172  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37147|0xffffffffffff6ee5] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  212  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: r9|DWORD - rcx|QWORD[.] - - rbx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32027|0xffffffffffff82e5] // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: r9|DWORD - rcx|QWORD[.] - - rbx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:75] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 668] y: -34587 size: DWORD <|@ <|@
      nr  186  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  188  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r9|DWORD - rcx|QWORD[.] rsi|DWORD rbp|DWORD rax|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-27931|0xffffffffffff92e5] // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40475|0xffffffffffff61e5] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-43803|0xffffffffffff54e5] // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iconst_0      
     4: istore        6
     6: iload_0       
     7: ifge          17
    10: bipush        45
    12: istore        6
    14: iload_0       
    15: ineg          
    16: istore_0      
    17: iload_0       
    18: ldc           #20         // 65536
    20: if_icmplt     75
    23: iload_0       
    24: bipush        100
    26: idiv          
    27: istore_3      
    28: iload_0       
    29: iload_3       
    30: bipush        6
    32: ishl          
    33: iload_3       
    34: iconst_5      
    35: ishl          
    36: iadd          
    37: iload_3       
    38: iconst_2      
    39: ishl          
    40: iadd          
    41: isub          
    42: istore        4
    44: iload_3       
    45: istore_0      
    46: aload_2       
    47: iinc          
    50: iload         5
    52: getstatic     #13         // DigitOnes:char[]
    55: iload         4
    57: caload        
    58: castore       
    59: aload_2       
    60: iinc          
    63: iload         5
    65: getstatic     #14         // DigitTens:char[]
    68: iload         4
    70: caload        
    71: castore       
    72: goto          17
    75: iload_0       
    76: ldc           #23         // 52429
    78: imul          
    79: bipush        19
    81: iushr         
    82: istore_3      
    83: iload_0       
    84: iload_3       
    85: iconst_3      
    86: ishl          
    87: iload_3       
    88: iconst_1      
    89: ishl          
    90: iadd          
    91: isub          
    92: istore        4
    94: aload_2       
    95: iinc          
    98: iload         5
   100: getstatic     #1          // digits:char[]
   103: iload         4
   105: caload        
   106: castore       
   107: iload_3       
   108: istore_0      
   109: iload_0       
   110: ifne          75
   113: goto          116
   116: iload         6
   118: ifeq          130
   121: aload_2       
   122: iinc          
   125: iload         5
   127: iload         6
   129: castore       
   130: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e3587b0 slotKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:435) [bci: 0]
locals: rsi|DWORD rdx|DWORD Object[null] - - - - 
>@ <|@ instruction NULLCHECK [rcx|QWORD[.]] state [bci:0] <|@ <|@
      nr   14  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.021938671650905905 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606984812813073361
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: short[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   24  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B19" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   40  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr   46  <|@ instruction rsi|DWORD = SHL rdi|DWORD y: 6 size: DWORD <|@ <|@
      nr   48  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD <|@ <|@
      nr   50  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = SHL rdi|DWORD y: 2 size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|DWORD = LEA [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582681457114031318
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   82  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD[.] + rsi|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr   86  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   88  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: rdi|DWORD - rcx|QWORD[.] rdi|DWORD rdx|DWORD rax|DWORD r10|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B21 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B21" 
    successors "B5" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607292172482917523
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP r9|DWORD y: 65536 size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.9762095648179009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  122  <|@ instruction rax|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r13|DWORD = MOVSX [rdi|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: r13|DWORD) size: WORD <|@ <|@
      nr  134  <|@ instruction TEST rdx|DWORD y: -524288 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.43919802176543676 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4608429363243983103
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [rcx:0, rdi:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r9|DWORD - rcx|QWORD[.] rsi|DWORD rbp|DWORD rax|DWORD r10|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B14 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B14" 
    successors "B7" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612309490649370751
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = IMUL r9|DWORD y: 52429 size: DWORD <|@ <|@
      nr  106  <|@ instruction rsi|DWORD = SHR rdx|DWORD y: 19 size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|DWORD = SHL rsi|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rbp|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction rbp|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction CMP rbp|DWORD y: 36 size: DWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.9781142298973442 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4606985289307859333
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4581980612990633440
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rsi|DWORD = NEG rsi|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: short[45|0x2d] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[45|0x2d] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4581965365157482303
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rbx|DWORD = LEA [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581965365157482303
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [rcx|QWORD[.] + rbx|DWORD * 2 + 16], y: r11|DWORD) size: WORD <|@ <|@
      nr  172  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-37147|0xffffffffffff6ee5] // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  212  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: r9|DWORD - rcx|QWORD[.] - - rbx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32027|0xffffffffffff82e5] // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: r9|DWORD - rcx|QWORD[.] - - rbx|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:75] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 668] y: -34587 size: DWORD <|@ <|@
      nr  186  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  188  <|@ st <@st|@reference-map: [rcx:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r9|DWORD - rcx|QWORD[.] rsi|DWORD rbp|DWORD rax|DWORD r10|DWORD 
>@ <|@ instruction DEOPT info [bci:107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-27931|0xffffffffffff92e5] // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-40475|0xffffffffffff61e5] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-43803|0xffffffffffff54e5] // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: istore        5
     3: iconst_0      
     4: istore        6
     6: iload_0       
     7: ifge          17
    10: bipush        45
    12: istore        6
    14: iload_0       
    15: ineg          
    16: istore_0      
    17: iload_0       
    18: ldc           #20         // 65536
    20: if_icmplt     75
    23: iload_0       
    24: bipush        100
    26: idiv          
    27: istore_3      
    28: iload_0       
    29: iload_3       
    30: bipush        6
    32: ishl          
    33: iload_3       
    34: iconst_5      
    35: ishl          
    36: iadd          
    37: iload_3       
    38: iconst_2      
    39: ishl          
    40: iadd          
    41: isub          
    42: istore        4
    44: iload_3       
    45: istore_0      
    46: aload_2       
    47: iinc          
    50: iload         5
    52: getstatic     #13         // DigitOnes:char[]
    55: iload         4
    57: caload        
    58: castore       
    59: aload_2       
    60: iinc          
    63: iload         5
    65: getstatic     #14         // DigitTens:char[]
    68: iload         4
    70: caload        
    71: castore       
    72: goto          17
    75: iload_0       
    76: ldc           #23         // 52429
    78: imul          
    79: bipush        19
    81: iushr         
    82: istore_3      
    83: iload_0       
    84: iload_3       
    85: iconst_3      
    86: ishl          
    87: iload_3       
    88: iconst_1      
    89: ishl          
    90: iadd          
    91: isub          
    92: istore        4
    94: aload_2       
    95: iinc          
    98: iload         5
   100: getstatic     #1          // digits:char[]
   103: iload         4
   105: caload        
   106: castore       
   107: iload_3       
   108: istore_0      
   109: iload_0       
   110: ifne          75
   113: goto          116
   116: iload         6
   118: ifeq          130
   121: aload_2       
   122: iinc          
   125: iload         5
   127: iload         6
   129: castore       
   130: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410850185f60f8c3801000041bb0000000041ba000000008bc6448b410c8bda448bc8e98800000066660f1f840000000000418bc1ba1f85eb51f7ea8bfac1ff058bf7c1e60683e2e003f28bd7c1e20203f2418bd12bd683fa640f831c0100008bf3ffce443bc60f86630100008d43fe443bc00f865f01000049b9addeaddeaddeadde450fbf4c51106644894c711049b9addeaddeaddeadde450fbf4c51106644894c41108505000000008bd8448bcf4181f9000001000f8d75ffffff48bfaddeaddeaddeaddee936000000660f1f4400008bc3ffc8443bc00f86b7000000440fbf6c6f106644896c4110f7c20000f8ff0f84310000008505000000008bd8448bce4169d1cdcc00008bf2c1ee138bc6c1e0038beed1e503c5418be92be883fd2472afe9a00000004585d20f8526000000488b6c24104883c418850500000000c5f877c3f7de41bb2d00000041ba2d000000e9c1feffff8d5bfe443bc30f864d0000006644895c5910488b6c24104883c418850500000000c5f877c341bbe56effff45899f9c0200004d89a7a8020000e8000000009041bbe582ffff45899f9c0200004d89a7a8020000e8000000009041c7879c020000e578ffff4d89a7a8020000e8000000009041bbe592ffffebcc41bbe561ffffebaa41bbe554ffffeba2e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e3587b0 slotKind: QWORD  <||@
  Comment 16 12 NULLCHECK [rcx|QWORD[.]] state [bci:0]  <||@
  Comment 16 [rcx:0]at java.lang.Integer.getChars(Integer.java:435) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2             |3  |4  |5  |6 
     locals:  |rsi|DWORD  |rdx|DWORD  |Object[null]  |-  |-  |-  |-   <||@
  Comment 16 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 18 14 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 20 16 BRANCH trueDestinationProbability: 0.021938671650905905 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 26 block B2 null  <||@
  Comment 26 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 26 -1 r11|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 32 -1 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 38 20 JUMP ~[] destination: B2 -> B3  <||@
  Comment 38 block B3 null  <||@
  Comment 38 22 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 38 -1 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 40 24 r8|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 44 -1 rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 46 -1 r9|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 49 26 JUMP ~[] destination: B3 -> B4  <||@
  Comment 54 block B18 loop 0 depth 1 header:19|LoopBegin  <||@
  Comment 54 34 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 64 36 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 67 38 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 72 40 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 74 44 rdi|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 79 46 rsi|DWORD = SHL rdi|DWORD y: 6 size: DWORD  <||@
  Comment 84 48 rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD  <||@
  Comment 87 50 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 89 52 rdx|DWORD = SHL rdi|DWORD y: 2 size: DWORD  <||@
  Comment 94 54 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 96 56 rdx|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 101 58 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 104 60 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24  <||@
  Comment 110 block B19 loop 0 depth 1 header:19|LoopBegin  <||@
  Comment 110 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 64 rsi|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 114 66 CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 117 68 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 123 block B20 loop 0 depth 1 header:19|LoopBegin  <||@
  Comment 123 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 72 rax|DWORD = LEA [rbx|DWORD - 2] size: DWORD  <||@
  Comment 126 74 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 129 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 135 block B21 loop 0 depth 1 header:19|LoopBegin  <||@
  Comment 135 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 80 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 135 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 145 82 r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 151 84 MOV (x: [rcx|QWORD[.] + rsi|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 157 86 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 157 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 167 88 r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 173 90 MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 179 92 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72]  <||@
  Comment 179 [rcx:0]at java.lang.Integer.getChars(Integer.java:450) [bci: 72, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4          |5          |6         
     locals:  |rdi|DWORD  |-  |rcx|QWORD[.]  |rdi|DWORD  |rdx|DWORD  |rax|DWORD  |r10|DWORD   <||@
  Comment 179 {infopoint: SAFEPOINT}  <||@
  Comment 179 11  <||@
  Comment 185 -1 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 187 -1 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 190 94 JUMP ~[] destination: B21 -> B4  <||@
  Comment 190 block B4 loop 0 depth 1 header:19|LoopBegin  <||@
  Comment 190 28 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 190 30 CMP r9|DWORD y: 65536 size: DWORD  <||@
  Comment 197 32 BRANCH trueDestinationProbability: 0.9762095648179009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B18  <||@
  Comment 203 block B5 null  <||@
  Comment 203 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 98 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 203 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 213 100 JUMP ~[] destination: B5 -> B6  <||@
  Comment 218 block B7 loop 1 depth 1 header:56|LoopBegin  <||@
  Comment 218 120 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 224 122 rax|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 228 124 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 231 126 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15  <||@
  Comment 237 block B8 loop 1 depth 1 header:56|LoopBegin  <||@
  Comment 237 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 130 r13|DWORD = MOVSX [rdi|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD  <||@
  Comment 243 132 MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: r13|DWORD) size: WORD  <||@
  Comment 249 134 TEST rdx|DWORD y: -524288 size: DWORD  <||@
  Comment 255 136 BRANCH trueDestinationProbability: 0.43919802176543676 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14  <||@
  Comment 261 block B14 loop 1 depth 1 header:56|LoopBegin  <||@
  Comment 261 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 140 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107]  <||@
  Comment 261 [rcx:0, rdi:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0         |1  |2             |3          |4          |5          |6         
     locals:  |r9|DWORD  |-  |rcx|QWORD[.]  |rsi|DWORD  |rbp|DWORD  |rax|DWORD  |r10|DWORD   <||@
  Comment 261 {infopoint: SAFEPOINT}  <||@
  Comment 261 11  <||@
  Comment 267 -1 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 269 -1 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 272 142 JUMP ~[] destination: B14 -> B6  <||@
  Comment 272 block B6 loop 1 depth 1 header:56|LoopBegin  <||@
  Comment 272 102 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 272 104 rdx|DWORD = IMUL r9|DWORD y: 52429 size: DWORD  <||@
  Comment 279 106 rsi|DWORD = SHR rdx|DWORD y: 19 size: DWORD  <||@
  Comment 284 108 rax|DWORD = SHL rsi|DWORD y: 3 size: DWORD  <||@
  Comment 289 110 rbp|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 293 112 rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 295 114 rbp|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 300 116 CMP rbp|DWORD y: 36 size: DWORD  <||@
  Comment 303 118 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16  <||@
  Comment 310 block B9 null  <||@
  Comment 310 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 146 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 313 148 BRANCH trueDestinationProbability: 0.9781142298973442 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 319 block B10 null  <||@
  Comment 319 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 319 152 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 328 12  <||@
  Comment 338 block B1 null  <||@
  Comment 338 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 338 156 rsi|DWORD = NEG rsi|DWORD size: DWORD  <||@
  Comment 340 -1 r11|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 346 -1 r10|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 352 158 JUMP ~[] destination: B1 -> B3  <||@
  Comment 357 block B11 null  <||@
  Comment 357 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 162 rbx|DWORD = LEA [rbx|DWORD - 2] size: DWORD  <||@
  Comment 360 164 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 363 166 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 369 block B12 null  <||@
  Comment 369 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 369 170 MOV (x: [rcx|QWORD[.] + rbx|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 375 172 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 384 12  <||@
  Comment 394 block B24 null  <||@
  Comment 394 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 394 -1 r11|DWORD = MOVE input: int[-37147|0xffffffffffff6ee5]  <||@
  Comment 400 176 JUMP ~[] destination: B24 -> B25  <||@
  Comment 400 block B25 null  <||@
  Comment 400 210 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 400 212 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 407 214 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 414 216 DEOPT info [bci:17]  <||@
  Comment 414 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 419 [rcx:0]at java.lang.Integer.getChars(Integer.java:444) [bci: 17, duringCall: false, rethrow: false]
              |0         |1  |2             |3  |4  |5          |6         
     locals:  |r9|DWORD  |-  |rcx|QWORD[.]  |-  |-  |rbx|DWORD  |r10|DWORD   <||@
  Comment 420 block B15 null  <||@
  Comment 420 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 -1 r11|DWORD = MOVE input: int[-32027|0xffffffffffff82e5]  <||@
  Comment 426 180 JUMP ~[] destination: B15 -> B17  <||@
  Comment 426 block B17 null  <||@
  Comment 426 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 426 196 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 433 198 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 440 200 DEOPT info [bci:75]  <||@
  Comment 440 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 445 [rcx:0]at java.lang.Integer.getChars(Integer.java:456) [bci: 75, duringCall: false, rethrow: false]
              |0         |1  |2             |3  |4  |5          |6         
     locals:  |r9|DWORD  |-  |rcx|QWORD[.]  |-  |-  |rbx|DWORD  |r10|DWORD   <||@
  Comment 446 block B13 null  <||@
  Comment 446 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 446 184 MOV [r15|QWORD + 668] y: -34587 size: DWORD  <||@
  Comment 457 186 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 464 188 DEOPT info [bci:107]  <||@
  Comment 464 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 469 [rcx:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0         |1  |2             |3          |4          |5          |6         
     locals:  |r9|DWORD  |-  |rcx|QWORD[.]  |rsi|DWORD  |rbp|DWORD  |rax|DWORD  |r10|DWORD   <||@
  Comment 470 block B16 null  <||@
  Comment 470 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 -1 r11|DWORD = MOVE input: int[-27931|0xffffffffffff92e5]  <||@
  Comment 476 192 JUMP ~[] destination: B16 -> B17  <||@
  Comment 478 block B23 null  <||@
  Comment 478 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 478 -1 r11|DWORD = MOVE input: int[-40475|0xffffffffffff61e5]  <||@
  Comment 484 204 JUMP ~[] destination: B23 -> B25  <||@
  Comment 486 block B22 null  <||@
  Comment 486 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 486 -1 r11|DWORD = MOVE input: int[-43803|0xffffffffffff54e5]  <||@
  Comment 492 208 JUMP ~[] destination: B22 -> B25  <||@
  Comment 494 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 494 4  <||@
  Comment 500 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 500 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4585[java.lang.Integer.getChars(int, int, char[])]"
  method "HotSpotCompilation-4585[java.lang.Integer.getChars(int, int, char[])]"
  date 1527005058997
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107207aa0 89842400c0feff4883ec1848896c2410850185f60f8c3801000041bb0000000041ba000000008bc6448b410c8bda448bc8e98800000066660f1f840000000000418bc1ba1f85eb51f7ea8bfac1ff058bf7c1e60683e2e003f28bd7c1e20203f2418bd12bd683fa640f831c0100008bf3ffce443bc60f86630100008d43fe443bc00f865f01000049b930320ac006000000450fbf4c51106644894c711049b908330ac006000000450fbf4c51106644894c41108505ad7468fd8bd8448bcf4181f9000001000f8d75ffffff48bfe0330ac006000000e936000000660f1f4400008bc3ffc8443bc00f86b7000000440fbf6c6f106644896c4110f7c20000f8ff0f843100000085055b7468fd8bd8448bce4169d1cdcc00008bf2c1ee138bc6c1e0038beed1e503c5418be92be883fd2472afe9a00000004585d20f8526000000488b6c24104883c4188505187468fdc5f877c3f7de41bb2d00000041ba2d000000e9c1feffff8d5bfe443bc30f864d0000006644895c5910488b6c24104883c4188505e07368fdc5f877c341bbe56effff45899f9c0200004d89a7a8020000e8bbf95fff9041bbe582ffff45899f9c0200004d89a7a8020000e8a1f95fff9041c7879c020000e578ffff4d89a7a8020000e889f95fff9041bbe592ffffebcc41bbe561ffffebaa41bbe554ffffeba2e88d29a4ff90e867f85fff90f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2e3587b0 slotKind: QWORD  <||@
  Comment 16 12 NULLCHECK [rcx|QWORD[.]] state [bci:0]  <||@
  Comment 16 [rcx:0]at java.lang.Integer.getChars(Integer.java:435) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2             |3  |4  |5  |6 
     locals:  |rsi|DWORD  |rdx|DWORD  |Object[null]  |-  |-  |-  |-   <||@
  Comment 16 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 18 14 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 20 16 BRANCH trueDestinationProbability: 0.021938671650905905 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 26 block B2 null  <||@
  Comment 26 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 26 -1 r11|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 32 -1 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 38 20 JUMP ~[] destination: B2 -> B3  <||@
  Comment 38 block B3 null  <||@
  Comment 38 22 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 38 -1 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 40 24 r8|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 44 -1 rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 46 -1 r9|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 49 26 JUMP ~[] destination: B3 -> B4  <||@
  Comment 54 block B18 loop 0 depth 1 header:19|LoopBegin  <||@
  Comment 54 34 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 64 36 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 67 38 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 72 40 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 74 44 rdi|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 79 46 rsi|DWORD = SHL rdi|DWORD y: 6 size: DWORD  <||@
  Comment 84 48 rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD  <||@
  Comment 87 50 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 89 52 rdx|DWORD = SHL rdi|DWORD y: 2 size: DWORD  <||@
  Comment 94 54 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 96 56 rdx|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 101 58 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 104 60 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24  <||@
  Comment 110 block B19 loop 0 depth 1 header:19|LoopBegin  <||@
  Comment 110 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 64 rsi|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 114 66 CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 117 68 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 123 block B20 loop 0 depth 1 header:19|LoopBegin  <||@
  Comment 123 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 72 rax|DWORD = LEA [rbx|DWORD - 2] size: DWORD  <||@
  Comment 126 74 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 129 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 135 block B21 loop 0 depth 1 header:19|LoopBegin  <||@
  Comment 135 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 80 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 135 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 145 82 r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 151 84 MOV (x: [rcx|QWORD[.] + rsi|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 157 86 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 157 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 167 88 r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 173 90 MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 179 92 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:72]  <||@
  Comment 179 [rcx:0]at java.lang.Integer.getChars(Integer.java:450) [bci: 72, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4          |5          |6         
     locals:  |rdi|DWORD  |-  |rcx|QWORD[.]  |rdi|DWORD  |rdx|DWORD  |rax|DWORD  |r10|DWORD   <||@
  Comment 179 {infopoint: SAFEPOINT}  <||@
  Comment 179 11  <||@
  Comment 185 -1 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 187 -1 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 190 94 JUMP ~[] destination: B21 -> B4  <||@
  Comment 190 block B4 loop 0 depth 1 header:19|LoopBegin  <||@
  Comment 190 28 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 190 30 CMP r9|DWORD y: 65536 size: DWORD  <||@
  Comment 197 32 BRANCH trueDestinationProbability: 0.9762095648179009 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B18  <||@
  Comment 203 block B5 null  <||@
  Comment 203 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 98 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 203 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 213 100 JUMP ~[] destination: B5 -> B6  <||@
  Comment 218 block B7 loop 1 depth 1 header:56|LoopBegin  <||@
  Comment 218 120 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 224 122 rax|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 228 124 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 231 126 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15  <||@
  Comment 237 block B8 loop 1 depth 1 header:56|LoopBegin  <||@
  Comment 237 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 130 r13|DWORD = MOVSX [rdi|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD  <||@
  Comment 243 132 MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: r13|DWORD) size: WORD  <||@
  Comment 249 134 TEST rdx|DWORD y: -524288 size: DWORD  <||@
  Comment 255 136 BRANCH trueDestinationProbability: 0.43919802176543676 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14  <||@
  Comment 261 block B14 loop 1 depth 1 header:56|LoopBegin  <||@
  Comment 261 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 140 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:107]  <||@
  Comment 261 [rcx:0, rdi:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0         |1  |2             |3          |4          |5          |6         
     locals:  |r9|DWORD  |-  |rcx|QWORD[.]  |rsi|DWORD  |rbp|DWORD  |rax|DWORD  |r10|DWORD   <||@
  Comment 261 {infopoint: SAFEPOINT}  <||@
  Comment 261 11  <||@
  Comment 267 -1 rbx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 269 -1 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 272 142 JUMP ~[] destination: B14 -> B6  <||@
  Comment 272 block B6 loop 1 depth 1 header:56|LoopBegin  <||@
  Comment 272 102 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 272 104 rdx|DWORD = IMUL r9|DWORD y: 52429 size: DWORD  <||@
  Comment 279 106 rsi|DWORD = SHR rdx|DWORD y: 19 size: DWORD  <||@
  Comment 284 108 rax|DWORD = SHL rsi|DWORD y: 3 size: DWORD  <||@
  Comment 289 110 rbp|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 293 112 rax|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 295 114 rbp|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 300 116 CMP rbp|DWORD y: 36 size: DWORD  <||@
  Comment 303 118 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16  <||@
  Comment 310 block B9 null  <||@
  Comment 310 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 146 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 313 148 BRANCH trueDestinationProbability: 0.9781142298973442 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 319 block B10 null  <||@
  Comment 319 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 319 152 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 328 12  <||@
  Comment 338 block B1 null  <||@
  Comment 338 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 338 156 rsi|DWORD = NEG rsi|DWORD size: DWORD  <||@
  Comment 340 -1 r11|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 346 -1 r10|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 352 158 JUMP ~[] destination: B1 -> B3  <||@
  Comment 357 block B11 null  <||@
  Comment 357 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 162 rbx|DWORD = LEA [rbx|DWORD - 2] size: DWORD  <||@
  Comment 360 164 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 363 166 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 369 block B12 null  <||@
  Comment 369 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 369 170 MOV (x: [rcx|QWORD[.] + rbx|DWORD * 2 + 16], y: r11|DWORD) size: WORD  <||@
  Comment 375 172 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 384 12  <||@
  Comment 394 block B24 null  <||@
  Comment 394 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 394 -1 r11|DWORD = MOVE input: int[-37147|0xffffffffffff6ee5]  <||@
  Comment 400 176 JUMP ~[] destination: B24 -> B25  <||@
  Comment 400 block B25 null  <||@
  Comment 400 210 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 400 212 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 407 214 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 414 216 DEOPT info [bci:17]  <||@
  Comment 414 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 419 [rcx:0]at java.lang.Integer.getChars(Integer.java:444) [bci: 17, duringCall: false, rethrow: false]
              |0         |1  |2             |3  |4  |5          |6         
     locals:  |r9|DWORD  |-  |rcx|QWORD[.]  |-  |-  |rbx|DWORD  |r10|DWORD   <||@
  Comment 420 block B15 null  <||@
  Comment 420 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 -1 r11|DWORD = MOVE input: int[-32027|0xffffffffffff82e5]  <||@
  Comment 426 180 JUMP ~[] destination: B15 -> B17  <||@
  Comment 426 block B17 null  <||@
  Comment 426 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 426 196 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 433 198 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 440 200 DEOPT info [bci:75]  <||@
  Comment 440 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 445 [rcx:0]at java.lang.Integer.getChars(Integer.java:456) [bci: 75, duringCall: false, rethrow: false]
              |0         |1  |2             |3  |4  |5          |6         
     locals:  |r9|DWORD  |-  |rcx|QWORD[.]  |-  |-  |rbx|DWORD  |r10|DWORD   <||@
  Comment 446 block B13 null  <||@
  Comment 446 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 446 184 MOV [r15|QWORD + 668] y: -34587 size: DWORD  <||@
  Comment 457 186 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 464 188 DEOPT info [bci:107]  <||@
  Comment 464 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 469 [rcx:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0         |1  |2             |3          |4          |5          |6         
     locals:  |r9|DWORD  |-  |rcx|QWORD[.]  |rsi|DWORD  |rbp|DWORD  |rax|DWORD  |r10|DWORD   <||@
  Comment 470 block B16 null  <||@
  Comment 470 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 -1 r11|DWORD = MOVE input: int[-27931|0xffffffffffff92e5]  <||@
  Comment 476 192 JUMP ~[] destination: B16 -> B17  <||@
  Comment 478 block B23 null  <||@
  Comment 478 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 478 -1 r11|DWORD = MOVE input: int[-40475|0xffffffffffff61e5]  <||@
  Comment 484 204 JUMP ~[] destination: B23 -> B25  <||@
  Comment 486 block B22 null  <||@
  Comment 486 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 486 -1 r11|DWORD = MOVE input: int[-43803|0xffffffffffff54e5]  <||@
  Comment 492 208 JUMP ~[] destination: B22 -> B25  <||@
  Comment 494 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 494 4  <||@
  Comment 500 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 500 5  <||@
  HexCodeFile>>> <|@
end_nmethod
