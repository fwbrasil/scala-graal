begin_compilation
  name " HotSpotCompilation-8922[java.util.BitSet.recalculateWordsInUse()]"
  method "HotSpotCompilation-8922[java.util.BitSet.recalculateWordsInUse()]"
  date 1527005178223
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a146 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a146  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v151 v152 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 12]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v152 
=== Succesors ===
next: v111 
=== Usages ===
a57 v58 v153 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v152 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
value: a146 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a146  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 i145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
a146 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v110 #falseSuccessor: v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid a122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@967784637
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@967784637]
=== Inputs ===
=== Succesors ===
=== Usages ===
a124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15115
stableDimension: 0
stamp: i32 [-15115] ⇊00000000ffffc4f5 ⇈00000000ffffc4f5
stampKind: i32
value: int[-15115|0xffffffffffffc4f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i147 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i147  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i147 v53 v73 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v151 
=== Succesors ===
next: v136 
=== Usages ===
i6 j91 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v151 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 5]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6 i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 5]
stamp: i32
=== Inputs ===
x: i147 
y: i5 
=== Succesors ===
=== Usages ===
i10 j89 v101 v98 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i147 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 v101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i12 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
i147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v132 #falseSuccessor: v135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i148 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i148  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a146 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v153 
=== Succesors ===
next: v144 
=== Usages ===
v98 j87 
=== Predecessor ===
v135 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v153 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid j89 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i6 
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i6  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i147 
=== Succesors ===
=== Usages ===
j93 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i147  <|@  <|@
f <@~|@floating>@ <|@
tid j88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j93 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j91 
y: j88 
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j91 y: j88  <|@  <|@
f <@~|@floating>@ <|@
tid j106 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967294 - 4294967296]
=== Inputs ===
x: j89 
y: j93 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j89 y: j93  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i148 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i148  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j106 
y: j87 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j106 y: j87  <|@  <|@
f <@~|@floating>@ <|@
tid a128 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@21937966
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@21937966]
=== Inputs ===
=== Succesors ===
=== Usages ===
a124 a124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16411
stableDimension: 0
stamp: i32 [-16411] ⇊00000000ffffbfe5 ⇈00000000ffffbfe5
stampKind: i32
value: int[-16411|0xffffffffffffbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i123 i123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
i148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v143 #falseSuccessor: v140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i148 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6 y: i148  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v133 #falseSuccessor: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v131 
=== Succesors ===
next: v8 
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v131 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 12]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a146 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a146  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
v129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B11" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607446994463938469
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i6 i31 
=== Succesors ===
=== Usages ===
i31 v13 i44 v154 i145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i6 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0587475987681298
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 7]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v8 
=== Succesors ===
next: v19 
=== Usages ===
i10 v15 v27 v32 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v8 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i12 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 8]
stamp: void
trueSuccessorProbability: 0.049996640010751964
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v15 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4587789388829294155
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:136) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:136) [bci: 34]
stamp: i32
=== Inputs ===
x: i10 
y: i4 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:136) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v151 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v151 value: i145 stateAfter: - lastLocationAccess: - #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:137) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607208601720391603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j149 
=== Usages ===
v103 
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j149  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v129 v18 
=== Succesors ===
=== Usages ===
j149 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v129 v18  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a57 
index: i10 
=== Succesors ===
=== Usages ===
j149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a57 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v103 
address: v154 
=== Succesors ===
next: v30 
=== Usages ===
v24 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v103 address: v154 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j149 
y: j22 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j149 y: j22  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 19]
stamp: void
trueSuccessorProbability: 0.05840802756697218
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
j149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v25 #falseSuccessor: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588627242281268396
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 25]
stamp: i32
=== Inputs ===
x: i10 
y: i5 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 7]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4606705633312923675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:134) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:136) [bci: 34]
stamp: i32
=== Inputs ===
x: i10 
y: i4 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:136) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v151 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v151 value: i44 stateAfter: - lastLocationAccess: - #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:137) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16411 - -15115] ⇊00000000ffff84e5 ⇈00000000fffffff5
valueDescription: i32
=== Inputs ===
merge: v119 
values: i121 i127 i127 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v119 values: i121 i127 i127  <|@  <|@
f <@~|@floating>@ <|@
tid a124 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v119 
values: a122 a128 a128 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v119 values: a122 a128 a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v120 v126 v155 
=== Succesors ===
next: v125 
=== Usages ===
i123 a124 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v120 v126 v155 #next: v125  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.recalculateWordsInUse()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 132
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i123 
speculation: a124 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i123 speculation: a124  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a146 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a146  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v151 v152 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v152 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a146 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 12]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v152 
=== Succesors ===
next: v111 
=== Usages ===
a57 v58 v153 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v152 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
value: a146 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a146  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 i145 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
a146 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v110 #falseSuccessor: v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c682dd0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid a122 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@967784637
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@967784637]
=== Inputs ===
=== Succesors ===
=== Usages ===
a124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
result int[-15115|0xffffffffffffc4f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15115
stableDimension: 0
stamp: i32 [-15115] ⇊00000000ffffc4f5 ⇈00000000ffffc4f5
stampKind: i32
value: int[-15115|0xffffffffffffc4f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@967784637] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15115|0xffffffffffffc4f5], v2|QWORD[.]] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i147 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i147  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i147 v53 v73 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i147 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v151 
=== Succesors ===
next: v136 
=== Usages ===
i6 j91 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v151 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 5]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6 i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 5]
stamp: i32
=== Inputs ===
x: i147 
y: i5 
=== Succesors ===
=== Usages ===
i10 j89 v101 v98 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i147 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 v101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i12 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
i147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v132 #falseSuccessor: v135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
v132 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i148 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i148  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a146 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i148 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v153 
=== Succesors ===
next: v144 
=== Usages ===
v98 j87 
=== Predecessor ===
v135 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v153 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid j89 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i6 
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i6  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i147 
=== Succesors ===
=== Usages ===
j93 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i147  <|@  <|@
f <@~|@floating>@ <|@
tid j88 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j93 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j91 
y: j88 
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j91 y: j88  <|@  <|@
f <@~|@floating>@ <|@
tid j106 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967294 - 4294967296]
=== Inputs ===
x: j89 
y: j93 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j89 y: j93  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i148 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i148  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j106 
y: j87 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j106 y: j87  <|@  <|@
f <@~|@floating>@ <|@
tid a128 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@21937966
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@21937966]
=== Inputs ===
=== Succesors ===
=== Usages ===
a124 a124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result int[-16411|0xffffffffffffbfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16411
stableDimension: 0
stamp: i32 [-16411] ⇊00000000ffffbfe5 ⇈00000000ffffbfe5
stampKind: i32
value: int[-16411|0xffffffffffffbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i123 i123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
i148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v143 #falseSuccessor: v140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = DEC v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SUB (x: v6|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@21937966] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i148 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6 y: i148  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v133 #falseSuccessor: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v131 
=== Succesors ===
next: v8 
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v131 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 12]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a146 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a146  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
v129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6098fefe encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B11" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607446994463938469
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i10 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i6 i31 
=== Succesors ===
=== Usages ===
i31 v13 i44 v154 i145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i6 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0587475987681298
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 7]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v8 
=== Succesors ===
next: v19 
=== Usages ===
i10 v15 v27 v32 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v8 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i12 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 8]
stamp: void
trueSuccessorProbability: 0.049996640010751964
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v15 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.049996640010751964 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4587789388829294155
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:136) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:136) [bci: 34]
stamp: i32
=== Inputs ===
x: i10 
y: i4 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:136) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v151 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v151 value: i145 stateAfter: - lastLocationAccess: - #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:137) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607208601720391603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j149 
=== Usages ===
v103 
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j149  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v129 v18 
=== Succesors ===
=== Usages ===
j149 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v129 v18  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
result [v12|QWORD[.] + v13|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a57 
index: i10 
=== Succesors ===
=== Usages ===
j149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a57 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j149 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v103 
address: v154 
=== Succesors ===
next: v30 
=== Usages ===
v24 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v103 address: v154 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j149 
y: j22 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j149 y: j22  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 19]
stamp: void
trueSuccessorProbability: 0.05840802756697218
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
j149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v25 #falseSuccessor: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v12|QWORD[.] + v13|DWORD * 8 + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05840802756697218 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588627242281268396
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 25]
stamp: i32
=== Inputs ===
x: i10 
y: i5 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 7]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4606705633312923675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:134) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:136) [bci: 34]
stamp: i32
=== Inputs ===
x: i10 
y: i4 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:136) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v151 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v151 value: i44 stateAfter: - lastLocationAccess: - #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:137) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], v11|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.recalculateWordsInUse(BitSet.java:133) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], v11|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i123 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16411 - -15115] ⇊00000000ffff84e5 ⇈00000000fffffff5
valueDescription: i32
=== Inputs ===
merge: v119 
values: i121 i127 i127 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v119 values: i121 i127 i127  <|@  <|@
f <@~|@floating>@ <|@
tid a124 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v119 
values: a122 a128 a128 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v119 values: a122 a128 a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v120 v126 v155 
=== Succesors ===
next: v125 
=== Usages ===
i123 a124 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v120 v126 v155 #next: v125  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.recalculateWordsInUse()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 132
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i123 
speculation: a124 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i123 speculation: a124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD, v18|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c682dd0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = DEC v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SUB (x: v6|QWORD, ~y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6098fefe encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607208601720391603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v12|QWORD[.] + v13|DWORD * 8 + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05840802756697218 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588627242281268396
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B11" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607446994463938469
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.049996640010751964 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4606705633312923675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4587789388829294155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@21937966] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], v19|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD, v18|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@21937966] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16411|0xffffffffffffbfe5], v20|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@967784637] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15115|0xffffffffffffc4f5], v2|QWORD[.]] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // wordsInUse:int
     4: iconst_1      
     5: isub          
     6: istore_1      
     7: iload_1       
     8: iflt          31
    11: aload_0       
    12: getfield      #2          // words:long[]
    15: iload_1       
    16: laload        
    17: lconst_0      
    18: lcmp          
    19: ifeq          25
    22: goto          31
    25: iinc          
    28: goto          7
    31: aload_0       
    32: iload_1       
    33: iconst_1      
    34: iadd          
    35: putfield      #1          // wordsInUse:int
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c682dd0 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r9|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction rcx|QWORD = SUB (x: rcx|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6098fefe encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607208601720391603
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   70  <|@ instruction CMP [r10|QWORD[.] + r11|DWORD * 8 + 16] y: 0 size: QWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.05840802756697218 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588627242281268396
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B11" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607446994463938469
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   64  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.049996640010751964 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4606705633312923675
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4587789388829294155
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@21937966] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@21937966] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@967784637] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15115|0xffffffffffffc4f5] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // wordsInUse:int
     4: iconst_1      
     5: isub          
     6: istore_1      
     7: iload_1       
     8: iflt          31
    11: aload_0       
    12: getfield      #2          // words:long[]
    15: iload_1       
    16: laload        
    17: lconst_0      
    18: lcmp          
    19: ifeq          25
    22: goto          31
    25: iinc          
    28: goto          7
    31: aload_0       
    32: iload_1       
    33: iconst_1      
    34: iadd          
    35: putfield      #1          // wordsInUse:int
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c682dd0 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r9|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction rcx|QWORD = SUB (x: rcx|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction r11|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6098fefe encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607208601720391603
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   70  <|@ instruction CMP [r10|QWORD[.] + r11|DWORD * 8 + 16] y: 0 size: QWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.05840802756697218 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588627242281268396
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B11" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607446994463938469
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   64  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.049996640010751964 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4606705633312923675
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4587789388829294155
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@21937966] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@21937966] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@967784637] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15115|0xffffffffffffc4f5] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // wordsInUse:int
     4: iconst_1      
     5: isub          
     6: istore_1      
     7: iload_1       
     8: iflt          31
    11: aload_0       
    12: getfield      #2          // words:long[]
    15: iload_1       
    16: laload        
    17: lconst_0      
    18: lcmp          
    19: ifeq          25
    22: goto          31
    25: iinc          
    28: goto          7
    31: aload_0       
    32: iload_1       
    33: iconst_1      
    34: iadd          
    35: putfield      #1          // wordsInUse:int
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b56144585d20f84dc000000448b5e0c458bc341ffc84585c00f8c29000000468b0cd50c0000004963c84d63db49ffcb492bcb458bd94c3bd90f866d000000453bc80f868b00000049c1e203458bd8e91a0000006666660f1f8400000000004b837cda10000f850d00000041ffcb4585db7dece91a00000041ffc344895e0c488b6c24104883c418850500000000c5f877c341ffc344895e0c488b6c24104883c418850500000000c5f877c349baaddeaddeaddeadde4d8bda41bae5bfffff4589979c0200004d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41bae5bfffffebd749baaddeaddeaddeadde4d8bda41baf5c4ffffebc2e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c682dd0 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 52 10 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 55 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 61 block B2 null  <||@
  Comment 61 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 16 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 65 18 r8|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 71 20 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 74 22 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 80 block B4 null  <||@
  Comment 80 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 80 26 r9|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 88 28 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 91 30 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 94 32 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 97 34 rcx|QWORD = SUB (x: rcx|QWORD, ~y: r11|QWORD) size: QWORD  <||@
  Comment 100 36 r11|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 103 38 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 106 40 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B14  <||@
  Comment 112 block B5 null  <||@
  Comment 112 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 112 44 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 115 46 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B13  <||@
  Comment 121 block B7 null  <||@
  Comment 121 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 58 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6098fefe encoding: base: 0 shift: 3  <||@
  Comment 125 -1 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 128 60 JUMP ~[] destination: B7 -> B8  <||@
  Comment 133 block B10 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 133 68 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 144 70 CMP [r10|QWORD[.] + r11|DWORD * 8 + 16] y: 0 size: QWORD  <||@
  Comment 150 72 BRANCH trueDestinationProbability: 0.05840802756697218 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 156 block B11 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 156 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 76 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 159 78 JUMP ~[] destination: B11 -> B8  <||@
  Comment 159 block B8 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 159 62 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 159 64 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 162 66 BRANCH trueDestinationProbability: 0.049996640010751964 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 169 block B12 null  <||@
  Comment 169 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 82 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 172 84 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 176 86 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 185 12  <||@
  Comment 195 block B9 null  <||@
  Comment 195 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 90 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 198 92 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 202 94 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 211 12  <||@
  Comment 221 block B14 null  <||@
  Comment 221 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 221 110 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@21937966]  <||@
  Comment 221 {Object[d.a@21937966]}  <||@
  Comment 231 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 234 -1 r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5]  <||@
  Comment 240 112 JUMP ~[] destination: B14 -> B15  <||@
  Comment 240 block B15 null  <||@
  Comment 240 114 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 240 116 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 247 118 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 254 120 DEOPT info [bci:0]  <||@
  Comment 254 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 259 [rsi:0]at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 260 block B13 null  <||@
  Comment 260 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 260 98 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@21937966]  <||@
  Comment 260 {Object[d.a@21937966]}  <||@
  Comment 270 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 273 -1 r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5]  <||@
  Comment 279 100 JUMP ~[] destination: B13 -> B15  <||@
  Comment 281 block B1 null  <||@
  Comment 281 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 104 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@967784637]  <||@
  Comment 281 {Object[d.a@967784637]}  <||@
  Comment 291 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 294 -1 r10|DWORD = MOVE input: int[-15115|0xffffffffffffc4f5]  <||@
  Comment 300 106 JUMP ~[] destination: B1 -> B15  <||@
  Comment 302 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 302 4  <||@
  Comment 308 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 308 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8922[java.util.BitSet.recalculateWordsInUse()]"
  method "HotSpotCompilation-8922[java.util.BitSet.recalculateWordsInUse()]"
  date 1527005178295
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107a53fe0 448b560849c1e203493bc20f856f1edbfe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b56144585d20f84dc000000448b5e0c458bc341ffc84585c00f8c29000000468b0cd50c0000004963c84d63db49ffcb492bcb458bd94c3bd90f866d000000453bc80f868b00000049c1e203458bd8e91a0000006666660f1f8400000000004b837cda10000f850d00000041ffcb4585db7dece91a00000041ffc344895e0c488b6c24104883c418850567afe3fcc5f877c341ffc344895e0c488b6c24104883c41885054dafe3fcc5f877c349ba683ab29b070000004d8bda41bae5bfffff4589979c0200004d899fa8020000e81b35dbfe9049ba683ab29b070000004d8bda41bae5bfffffebd749bac038b29b070000004d8bda41baf5c4ffffebc2e80d651fff90e8e733dbfe90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c682dd0 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 52 10 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 55 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 61 block B2 null  <||@
  Comment 61 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 16 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 65 18 r8|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 71 20 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 74 22 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 80 block B4 null  <||@
  Comment 80 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 80 26 r9|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 88 28 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 91 30 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 94 32 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 97 34 rcx|QWORD = SUB (x: rcx|QWORD, ~y: r11|QWORD) size: QWORD  <||@
  Comment 100 36 r11|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 103 38 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 106 40 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B14  <||@
  Comment 112 block B5 null  <||@
  Comment 112 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 112 44 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 115 46 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B13  <||@
  Comment 121 block B7 null  <||@
  Comment 121 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 58 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6098fefe encoding: base: 0 shift: 3  <||@
  Comment 125 -1 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 128 60 JUMP ~[] destination: B7 -> B8  <||@
  Comment 133 block B10 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 133 68 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 144 70 CMP [r10|QWORD[.] + r11|DWORD * 8 + 16] y: 0 size: QWORD  <||@
  Comment 150 72 BRANCH trueDestinationProbability: 0.05840802756697218 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 156 block B11 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 156 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 76 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 159 78 JUMP ~[] destination: B11 -> B8  <||@
  Comment 159 block B8 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 159 62 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 159 64 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 162 66 BRANCH trueDestinationProbability: 0.049996640010751964 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 169 block B12 null  <||@
  Comment 169 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 82 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 172 84 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 176 86 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 185 12  <||@
  Comment 195 block B9 null  <||@
  Comment 195 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 90 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 198 92 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 202 94 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 211 12  <||@
  Comment 221 block B14 null  <||@
  Comment 221 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 221 110 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@21937966]  <||@
  Comment 221 {Object[d.a@21937966]}  <||@
  Comment 231 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 234 -1 r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5]  <||@
  Comment 240 112 JUMP ~[] destination: B14 -> B15  <||@
  Comment 240 block B15 null  <||@
  Comment 240 114 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 240 116 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 247 118 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 254 120 DEOPT info [bci:0]  <||@
  Comment 254 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 259 [rsi:0]at java.util.BitSet.recalculateWordsInUse(BitSet.java:132) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 260 block B13 null  <||@
  Comment 260 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 260 98 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@21937966]  <||@
  Comment 260 {Object[d.a@21937966]}  <||@
  Comment 270 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 273 -1 r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5]  <||@
  Comment 279 100 JUMP ~[] destination: B13 -> B15  <||@
  Comment 281 block B1 null  <||@
  Comment 281 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 104 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@967784637]  <||@
  Comment 281 {Object[d.a@967784637]}  <||@
  Comment 291 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 294 -1 r10|DWORD = MOVE input: int[-15115|0xffffffffffffc4f5]  <||@
  Comment 300 106 JUMP ~[] destination: B1 -> B15  <||@
  Comment 302 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 302 4  <||@
  Comment 308 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 308 5  <||@
  HexCodeFile>>> <|@
end_nmethod
