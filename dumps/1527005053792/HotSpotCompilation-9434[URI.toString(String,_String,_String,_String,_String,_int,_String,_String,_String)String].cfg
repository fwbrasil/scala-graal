begin_compilation
  name " HotSpotCompilation-9434[java.net.URI.toString(String, String, String, String, String, int, String, String, String)]"
  method "HotSpotCompilation-9434[java.net.URI.toString(String, String, String, String, String, int, String, String, String)]"
  date 1527005211119
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B125" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid a733 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1765933899
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1765933899]
=== Inputs ===
=== Succesors ===
=== Usages ===
a729 a729 a729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/net/URI;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 ?53 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v16 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v36 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v56 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v54 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
index: 6
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a8 <|@
d <@d|@=== Debug Properties ===
index: 7
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 ?68 ?231 v1517 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
d <@d|@=== Debug Properties ===
index: 8
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v50 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a10 <|@
d <@d|@=== Debug Properties ===
index: 9
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v27 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<URI.toString(String, String, String, String, String, int, String, String, String)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1936
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 a5 a6 i7 a8 a9 a10 - 
=== Succesors ===
=== Usages ===
v730 a1508 i1509 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 a5 a6 i7 a8 a9 a10 -  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
value: a9 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a9  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v512 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v512 #falseSuccessor: v514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B124" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendFragment(URI.java:1920) [bci: 1]
at java.net.URI.toString(URI.java:1944) [bci: 51]
stamp: void
=== Inputs ===
value: a10 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a10  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendFragment(URI.java:1920) [bci: 1]
at java.net.URI.toString(URI.java:1944) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v516 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v516 #falseSuccessor: v518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendFragment(URI.java:1920) [bci: 1]
at java.net.URI.toString(URI.java:1944) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1508 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1508  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a8 
index: - 
=== Succesors ===
=== Usages ===
a1508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a8 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1517 
=== Succesors ===
next: i1509 
=== Usages ===
a344 v1518 
=== Predecessor ===
v516 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1517 #next: i1509  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1508 
=== Succesors ===
=== Usages ===
i1509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1518 
=== Succesors ===
next: v1499 
=== Usages ===
v99 i274 j485 v296 ?245 i303 v968 ?231 ?260 v934 v470 v507 v467 a949 v690 i687 i927 
=== Predecessor ===
a1508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1518 #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1509 
=== Succesors ===
=== Usages ===
j487 v496 v926 j1050 v1264 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1509  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j487 j1329 j1380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j487 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j485 
y: j486 
=== Succesors ===
=== Usages ===
v496 v489 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j485 y: j486  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a885 i67 v104 v507 v1024 a949 v1590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1509 
y: i30 
=== Succesors ===
=== Usages ===
v1499 v1505 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1509 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1508 
=== Succesors ===
=== Usages ===
j920 v1519 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1508  <|@  <|@
f <@~|@floating>@ <|@
tid j484 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 j1360 j1304 j1354 v1313 v1367 j1296 j1418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v1495 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
i1509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v1495 #falseSuccessor: v1498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1493  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j487 
y: j484 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j487 y: j484  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v489 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v1496 
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v489 #trueSuccessor: v530 #falseSuccessor: v1496  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid i739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89619
stableDimension: 0
stamp: i32 [-89619] â‡Š00000000fffea1ed â‡ˆ00000000fffea1ed
stampKind: i32
value: int[-89619|0xfffffffffffea1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1494 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1494  <|@  <|@
f <@*|@fixed>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1496 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1493 v1494 
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1493 v1494 #next: v1507  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j487 
y: j485 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j487 y: j485  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v1503 
falseSuccessor: v1506 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v1503 #falseSuccessor: v1506  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1501 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1501  <|@  <|@
f <@*|@fixed>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
v1503 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B123" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1505  <|@  <|@
f <@*|@fixed>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v1504 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v1506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v1504 #falseSuccessor: v534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1502 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1502  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
v1504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B122" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1501 v1502 
=== Succesors ===
next: v539 
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1501 v1502 #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?68 ?190 a729 a729 a729 a729 ?92 v770 v756 ?53 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.toString(URI.java:1937) [bci: 10]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.toString(URI.java:1937) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v1500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v536 #falseSuccessor: v538  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.toString(URI.java:1937) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v540 
falseSuccessor: v542 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v540 #falseSuccessor: v542  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B120" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
value: a6 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a6  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v544 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v544 #falseSuccessor: v546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B119" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v548 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v548 #falseSuccessor: v550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
tid a32 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@35d2d4d9
hasIdentity: true
objectId: -1
stamp: a!# Ljava/lang/StringBuffer;
type: HotSpotType<Ljava/lang/StringBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?268 ?327 ?213 ?35 ?53 ?92 ?92 ?35 ?169 ?231 ?213 ?245 ?260 ?190 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a32 
materializedValue: a32 
=== Succesors ===
=== Usages ===
?53 ?190 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a32 materializedValue: a32  <|@  <|@
tid ?53 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<URI.toString(String, String, String, String, String, int, String, String, String)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1941
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - a31 a32 
virtualObjectMappings: ?35 
=== Succesors ===
=== Usages ===
?190 ?92 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - a31 a32 virtualObjectMappings: ?35  <|@  <|@
tid ?92 <|@
d <@d|@=== Debug Properties ===
bci: 147
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1911
stackSize: 1
=== Inputs ===
outerFrameState: ?53 
values: - a32 - - - - - - a31 - - - a32 
=== Succesors ===
=== Usages ===
?68 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?53 values: - a32 - - - - - - a31 - - - a32  <|@  <|@
tid a168 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<char>
hasIdentity: true
length: 16
objectId: 0
stamp: a!# [C
=== Inputs ===
=== Succesors ===
=== Usages ===
?169 ?170 ?268 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a32 
values: - a168 - 
=== Succesors ===
=== Usages ===
?68 ?260 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a32 values: - a168 -  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a168 
values: - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?68 ?260 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a168 values: - - - - - - - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2677) [bci: 17]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?68 i89 v217 i927 a788 a833 i861 a992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 39]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: -64
stableDimension: 0
stamp: i32 [-64] â‡Š00000000ffffffc0 â‡ˆ00000000ffffffc0
stampKind: i32
value: int[-64|0xffffffffffffffc0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 144]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 5188146764422578175
stableDimension: 0
stamp: i64 [5188146764422578175] â‡Š47fffffe87ffffff â‡ˆ47fffffe87ffffff
stampKind: i64
value: long[5188146764422578175|0x47fffffe87ffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 ?68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 12]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j112 j120 v812 v853 v909 v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 141]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 3458764316252045313
stableDimension: 0
stamp: i64 [3458764316252045313] â‡Š2fffffd200000001 â‡ˆ2fffffd200000001
stampKind: i64
value: long[3458764316252045313|0x2fffffd200000001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 ?68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 7]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] â‡Š0000000000000040 â‡ˆ0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 46]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B23" "B26" 
    successors "B17" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4626207576643344515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v66 
values: i30 i89 i89 
=== Succesors ===
=== Usages ===
?68 i89 v99 v1519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v66 values: i30 i89 i89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 19.59093851132685
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v65 
=== Succesors ===
next: v77 
=== Usages ===
i67 v75 v90 v128 v555 v560 v565 v570 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v65 #next: v77  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<URI.quote(String, long, long)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 2678
stackSize: 0
=== Inputs ===
outerFrameState: ?92 
values: a8 j43 - j44 - - a31 i64 i67 - 
virtualObjectMappings: ?169 ?170 
=== Succesors ===
=== Usages ===
a788 v756 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?92 values: a8 j43 - j44 - - a31 i64 i67 - virtualObjectMappings: ?169 ?170  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i1509 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i67 y: i1509  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 33]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.948955993128056
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v74 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2679) [bci: 36]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1510 
=== Usages ===
v501 
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1510  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1500 v74 
=== Succesors ===
=== Usages ===
i1510 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1500 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a344 
index: i67 
=== Succesors ===
=== Usages ===
i1510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v501 
address: v1519 
=== Succesors ===
next: v556 
=== Usages ===
i362 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v501 address: v1519 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i1510 
=== Succesors ===
=== Usages ===
j112 i119 v116 v104 v107 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1510  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.net.URI.match(URI.java:2519) [bci: 32]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i362 
y: i81 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i362 y: i81  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v552 
falseSuccessor: v555 
=== Usages ===
=== Predecessor ===
i1510 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v552 #falseSuccessor: v555  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i362 
y: i30 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i362 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v560 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v560 #falseSuccessor: v557  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v66 
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v66 #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93203
stableDimension: 0
stamp: i32 [-93203] â‡Š00000000fffe93ed â‡ˆ00000000fffe93ed
stampKind: i32
value: int[-93203|0xfffffffffffe93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 9]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i362 
y: i106 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i362 y: i106  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 187]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32
=== Inputs ===
x: i67 
y: i64 
=== Succesors ===
=== Usages ===
i67 i67 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i67 y: i64  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 9]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.053955085675688075
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v108 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v108 #falseSuccessor: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 12]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 14]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i64
=== Inputs ===
x: j111 
y: i362 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j111 y: i362  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
x: j112 
y: j43 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j112 y: j43  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v565 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v565 #falseSuccessor: v562  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v66 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v66 #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid i760 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93459
stableDimension: 0
stamp: i32 [-93459] â‡Š00000000fffe92ed â‡ˆ00000000fffe92ed
stampKind: i32
value: int[-93459|0xfffffffffffe92ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
loopBegin: v66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2519) [bci: 28]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 39]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32 [-64 - 65471]
=== Inputs ===
x: i362 
y: i118 
=== Succesors ===
=== Usages ===
j120 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i362 y: i118  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 40]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i64
=== Inputs ===
x: j111 
y: i119 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j111 y: i119  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
x: j120 
y: j44 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j120 y: j44  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v567 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v570 #falseSuccessor: v567  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v66 
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v66 #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid i762 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93715
stableDimension: 0
stamp: i32 [-93715] â‡Š00000000fffe91ed â‡ˆ00000000fffe91ed
stampKind: i32
value: int[-93715|0xfffffffffffe91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v66 
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v66 #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid i753 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -92947
stableDimension: 0
stamp: i32 [-92947] â‡Š00000000fffe94ed â‡ˆ00000000fffe94ed
stampKind: i32
value: int[-92947|0xfffffffffffe94ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B29" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2704) [bci: 193]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v66 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v66 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16] â‡Š00000000fffffff0 â‡ˆ00000000fffffff0
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i1509 
y: i273 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1509 y: i273  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i274 
y: i64 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i274 y: i64  <|@  <|@
f <@~|@floating>@ <|@
tid i1488 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] â‡ˆ0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1472 v1482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1272 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1286 j1347 j1405 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1474 v1483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1294 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] â‡Š0000000000000004 â‡ˆ0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1295 j1353 j1411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1476 v1484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1037 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] â‡Š0000000000000018 â‡ˆ0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1038 j1452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1478 v1485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] â‡Š0000000000000010 â‡ˆ0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1365 j1311 j1423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1479 v1486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a885 a949 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i892 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] â‡Š0000000000000017 â‡ˆ0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i893 i956 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i862 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] â‡Š00000000fffffff8 â‡ˆ00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 i928 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] â‡Š0000000000ffffff â‡ˆ0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v870 v934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 150
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1911
stackSize: 0
=== Inputs ===
outerFrameState: ?53 
values: - a32 - - - - - - a31 - - - 
virtualObjectMappings: ?35 
=== Succesors ===
=== Usages ===
?213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?53 values: - a32 - - - - - - a31 - - - virtualObjectMappings: ?35  <|@  <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?213 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?190 
values: a32 - a32 
monitorIds: v179 
=== Succesors ===
=== Usages ===
?231 ?245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?190 values: a32 - a32 monitorIds: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 v860 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 v856 v912 v972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16] â‡Š0000000000000010 â‡ˆ0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
v852 i325 v811 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1028 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a788 a833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a788 a833 a992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1025 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] â‡Š0000000000000030 â‡ˆ0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1026 j1033 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9530051944349821
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v218 
falseSuccessor: v219 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v218 #falseSuccessor: v219  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j776 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j795 
=== Usages ===
v1524 v1525 
=== Predecessor ===
v218 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j795  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
j795 v797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j795 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1524 
=== Succesors ===
next: j796 
=== Usages ===
j1026 j801 v1559 
=== Predecessor ===
j776 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1524 #next: j796  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
j796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1525 
=== Succesors ===
next: v784 
=== Usages ===
v781 
=== Predecessor ===
j795 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1525 #next: v784  <|@  <|@
f <@~|@floating>@ <|@
tid j1026 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j795 
y: j1025 
=== Succesors ===
=== Usages ===
v781 v797 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j795 y: j1025  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j796 
y: j1026 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j796 y: j1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v781 
=== Succesors ===
trueSuccessor: v782 
falseSuccessor: v783 
=== Usages ===
=== Predecessor ===
j796 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v781 #trueSuccessor: v782 #falseSuccessor: v783  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576647322694384046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a788 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a788 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?68 
arguments: v774 i1028 i64 
=== Succesors ===
next: j789 
=== Usages ===
j789 
=== Predecessor ===
v782 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?68 arguments: v774 i1028 i64 #next: j789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j789 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a788 
=== Succesors ===
next: v802 
=== Usages ===
j801 
=== Predecessor ===
a788 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a788 #next: v802  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
j789 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606673288145584690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1524 
value: j1026 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v793 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1524 value: j1026 stateAfter: - lastLocationAccess: - #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j795 
index: - 
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j795 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1559 
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v797 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1559 #next: v800  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
v793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v799 
values: j795 j789 
=== Succesors ===
=== Usages ===
v1528 v1527 a578 v1526 v1560 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v799 values: j795 j789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v800 v802 
=== Succesors ===
next: a578 
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v800 v802 #next: a578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a578 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j801 
=== Succesors ===
next: v811 
=== Usages ===
a584 
=== Predecessor ===
v799 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j801 #next: v811  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: - 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1526 
value: i269 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
a578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1526 value: i269 stateAfter: - lastLocationAccess: - #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: - 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1527 
value: j111 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1527 value: j111 stateAfter: - lastLocationAccess: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: - 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1528 
value: v1031 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1528 value: v1031 stateAfter: - lastLocationAccess: - #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: - 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1560 
value: v819 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a584 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1560 value: v819 stateAfter: - lastLocationAccess: - #next: a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a578 
=== Succesors ===
next: v585 
=== Usages ===
a328 
=== Predecessor ===
v821 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a578 #next: v585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
a584 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 17
stableDimension: 0
stamp: i32 [17] â‡Š0000000000000011 â‡ˆ0000000000000011
stampKind: i32
value: int[17|0x11]
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1509 
y: i466 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1509 y: i466  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v467 
=== Succesors ===
trueSuccessor: v395 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v467 #trueSuccessor: v395 #falseSuccessor: v397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
v395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -102241
stableDimension: 0
stamp: i32 [-102241] â‡Š00000000fffe709f â‡ˆ00000000fffe709f
stampKind: i32
value: int[-102241|0xfffffffffffe709f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B27" "B19" "B22" "B25" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i754 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-102241 - -92947] â‡Š00000000fffe108d â‡ˆ00000000fffef7ff
valueDescription: i32
=== Inputs ===
merge: v751 
values: i753 i758 i760 i762 i764 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v751 values: i753 i758 i760 i762 i764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v752 v757 v759 v761 v763 
=== Succesors ===
next: v756 
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v752 v757 v759 v761 v763 #next: v756  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?68 
actionAndReason: i754 
speculation: a31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?68 actionAndReason: i754 speculation: a31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 35
stableDimension: 0
stamp: i32 [35] â‡Š0000000000000023 â‡ˆ0000000000000023
stampKind: i32
value: int[35|0x23]
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1509 
y: i295 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1509 y: i295  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9145699900595734
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v254 
falseSuccessor: v253 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v254 #falseSuccessor: v253  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4586354897419387547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 34
stableDimension: 0
stamp: i32 [34] â‡Š0000000000000022 â‡ˆ0000000000000022
stampKind: i32
value: int[34|0x22]
=== Inputs ===
=== Succesors ===
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v254 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4571278733025664676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:152) [bci: 16]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B38" 
    successors "B40" "B117" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32 [34 - 2147483647] â‡ˆ000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v257 
values: i280 i1509 
=== Succesors ===
=== Usages ===
?260 j1052 v305 i325 v470 a885 v908 i861 v870 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v257 values: i280 i1509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v256 v258 
=== Succesors ===
next: v575 
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v256 v258 #next: v575  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a32 a8 i1509 
=== Succesors ===
=== Usages ===
?268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a32 a8 i1509  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?231 
values: - - a32 a168 
=== Succesors ===
=== Usages ===
?260 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: - - a32 a168  <|@  <|@
tid ?260 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.newCapacity(int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 154
stackSize: 0
=== Inputs ===
outerFrameState: ?268 
values: a32 i1509 i303 
virtualObjectMappings: ?169 ?170 
=== Succesors ===
=== Usages ===
a833 a885 v770 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?268 values: a32 i1509 i303 virtualObjectMappings: ?169 ?170  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 2147483640
stableDimension: 0
stamp: i32 [2147483640] â‡Š000000007ffffff8 â‡ˆ000000007ffffff8
stampKind: i32
value: int[2147483640|0x7ffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i300 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i300  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v572 
falseSuccessor: v574 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v572 #falseSuccessor: v574  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j822 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j822 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j837 
=== Usages ===
v1529 v1530 
=== Predecessor ===
v572 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j837  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j837 v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
=== Succesors ===
next: j838 
=== Usages ===
j1033 j843 v1561 
=== Predecessor ===
j822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1529 #next: j838  <|@  <|@
f <@~|@floating>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
=== Succesors ===
next: v830 
=== Usages ===
v827 
=== Predecessor ===
j837 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1530 #next: v830  <|@  <|@
f <@~|@floating>@ <|@
tid j1033 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j837 
y: j1025 
=== Succesors ===
=== Usages ===
v827 v839 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j837 y: j1025  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j1033 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j838 y: j1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v827 
=== Succesors ===
trueSuccessor: v828 
falseSuccessor: v829 
=== Usages ===
=== Predecessor ===
j838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v827 #trueSuccessor: v828 #falseSuccessor: v829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4557304635154717233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a833 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a833 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?260 
arguments: v774 i1028 i64 
=== Succesors ===
next: j834 
=== Usages ===
j834 
=== Predecessor ===
v828 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?260 arguments: v774 i1028 i64 #next: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j834 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a833 
=== Succesors ===
next: v844 
=== Usages ===
j843 
=== Predecessor ===
a833 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a833 #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
j834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4586865759625959356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
value: j1033 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1529 value: j1033 stateAfter: - lastLocationAccess: - #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j837 
index: - 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j837 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1561 
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1561 #next: v842  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j843 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v841 
values: j837 j834 
=== Succesors ===
=== Usages ===
v1533 v1532 a588 v1531 v1562 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v841 values: j837 j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v842 v844 
=== Succesors ===
next: a588 
=== Usages ===
j843 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v842 v844 #next: a588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a588 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j843 
=== Succesors ===
next: v852 
=== Usages ===
a593 
=== Predecessor ===
v841 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j843 #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1531 
value: i269 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
a588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1531 value: i269 stateAfter: - lastLocationAccess: - #next: v853  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1532 
value: j111 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1532 value: j111 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1533 
value: v1031 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1533 value: v1031 stateAfter: - lastLocationAccess: - #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1562 
value: v819 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a593 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1562 value: v819 stateAfter: - lastLocationAccess: - #next: a593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a593 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a588 
=== Succesors ===
next: v594 
=== Usages ===
v1521 
=== Predecessor ===
v860 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a588 #next: v594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
a593 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i1509 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i1509  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v470 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v441 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v470 #trueSuccessor: v443 #falseSuccessor: v441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114017
stableDimension: 0
stamp: i32 [-114017] â‡Š00000000fffe429f â‡ˆ00000000fffe429f
stampKind: i32
value: int[-114017|0xfffffffffffe429f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j864 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j864 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j905 
=== Usages ===
v1534 v1535 
=== Predecessor ===
v441 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j905  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
j905 v907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
=== Succesors ===
next: j906 
=== Usages ===
j868 v1536 v1537 a884 v1542 v1538 v1539 v1540 v1541 
=== Predecessor ===
j864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1534 #next: j906  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
j906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1535 
=== Succesors ===
next: v873 
=== Usages ===
v874 
=== Predecessor ===
j905 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1535 #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i869 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i869  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v870 
=== Succesors ===
trueSuccessor: v872 
falseSuccessor: v871 
=== Usages ===
=== Predecessor ===
j906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v870 #trueSuccessor: v872 #falseSuccessor: v871  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4586256219754126181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v880 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid i861 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] â‡ˆ00000000fffffffe
=== Inputs ===
x: i303 
y: i64 
=== Succesors ===
=== Usages ===
i893 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i303 y: i64  <|@  <|@
f <@~|@floating>@ <|@
tid i893 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32 [-2147483647 - 2147483647] â‡Š0000000000000001
=== Inputs ===
x: i861 
y: i892 
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i861 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid i863 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i893 
y: i862 
=== Succesors ===
=== Usages ===
j867 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i893 y: i862  <|@  <|@
f <@~|@floating>@ <|@
tid j867 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i863 
=== Succesors ===
=== Usages ===
j868 v1538 v1539 v1540 v1541 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i863  <|@  <|@
f <@~|@floating>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i64
=== Inputs ===
x: j867 
y: j905 
=== Succesors ===
=== Usages ===
v874 v907 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j867 y: j905  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j906 
y: j868 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j906 y: j868  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v874 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v874 #trueSuccessor: v879 #falseSuccessor: v878  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" 
    xhandlers
    flags 
    probability 4556437734003665606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4586195265766942863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
value: j868 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1534 value: j868 stateAfter: - lastLocationAccess: - #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j867 
index: j905 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
address: v1538 
=== Succesors ===
next: v897 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1538 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j867 
index: j905 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
address: v1539 
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1539 #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j867 
index: j905 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
address: v1540 
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1540 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j867 
index: j905 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
address: v1541 
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1541 #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j905 
index: - 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j905 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1536 
value: i303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1536 value: i303 stateAfter: - lastLocationAccess: - #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j905 
index: - 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j905 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1537 
value: j111 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1537 value: j111 stateAfter: - lastLocationAccess: - #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j905 
index: - 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j905 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1542 
value: v1031 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1542 value: v1031 stateAfter: - lastLocationAccess: - #next: v883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a884 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j905 
=== Succesors ===
next: v886 
=== Usages ===
a889 
=== Predecessor ===
v883 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j905 #next: v886  <|@  <|@
f <@*|@fixed>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
a884 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4572068154347755608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v871 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572555786245222148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v875 v877 
=== Succesors ===
next: a885 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v875 v877 #next: a885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a885 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?260 
arguments: v807 i303 i30 
=== Succesors ===
next: v888 
=== Usages ===
a889 
=== Predecessor ===
v876 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?260 arguments: v807 i303 i30 #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
a885 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v887 
values: a884 a885 
=== Succesors ===
=== Usages ===
v1567 a701 v1523 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v887 values: a884 a885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v886 v888 
=== Succesors ===
next: v1383 
=== Usages ===
a889 v1511 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v886 v888 #next: v1383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1511 
=== Usages ===
j1384 j1385 
=== Predecessor ===
v887 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a593 
index: - 
=== Succesors ===
=== Usages ===
j1384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a593 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1384 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1383 
address: v1521 
=== Succesors ===
=== Usages ===
v1584 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1383 address: v1521  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1384 
index: - 
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v887 
address: v1584 
=== Succesors ===
next: v1481 
=== Usages ===
v1481 
=== Predecessor ===
v1383 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v887 address: v1584 #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a889 
index: - 
=== Succesors ===
=== Usages ===
j1385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a889 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1385 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1383 
address: v1523 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1383 address: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1385 
index: - 
=== Succesors ===
=== Usages ===
v1481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1583 
value: v1511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1583 value: v1511 stateAfter: - lastLocationAccess: - #next: v1391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1202 
=== Usages ===
j1393 
=== Predecessor ===
v1481 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1202  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a889 
index: - 
=== Succesors ===
=== Usages ===
j1393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a889 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1393 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1391 
address: v1567 
=== Succesors ===
=== Usages ===
v1585 v1586 v1587 v1588 v1589 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1391 address: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid j1052 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [34 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
j1451 j1442 j1445 j1447 j1449 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i303  <|@  <|@
f <@~|@floating>@ <|@
tid j1441 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32
stableDimension: 0
stamp: i64 [-32] â‡Šffffffffffffffe0 â‡ˆffffffffffffffe0
stampKind: i64
value: long[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1442 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [2 - 2147483615] â‡ˆ000000007fffffff
=== Inputs ===
x: j1052 
y: j1441 
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1052 y: j1441  <|@  <|@
f <@*|@fixed>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
v1391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B116" 
    successors "B53" "B116" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595940685533126256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1418 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1203 
values: j484 j1423 
=== Succesors ===
=== Usages ===
v1589 j1423 j1452 v1588 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1203 values: j484 j1423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1202 
=== Succesors ===
next: v1486 
=== Usages ===
j1418 v1206 v1207 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1202 #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1393 
index: j1418 
=== Succesors ===
=== Usages ===
v1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: j1418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1589 
value: v1487 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1209 
=== Usages ===
=== Predecessor ===
v1203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1589 value: v1487 stateAfter: - lastLocationAccess: - #next: v1209  <|@  <|@
f <@~|@floating>@ <|@
tid j1423 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1418 
y: j358 
=== Succesors ===
=== Usages ===
v1430 j1418 v1427 j1406 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1418 y: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1442 
y: j1423 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1442 y: j1423  <|@  <|@
f <@*|@fixed>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1427 
=== Succesors ===
trueSuccessor: v1206 
falseSuccessor: v1208 
=== Usages ===
=== Predecessor ===
v1486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1427 #trueSuccessor: v1206 #falseSuccessor: v1208  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1203 
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v1209 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1203 #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid j1444 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24
stableDimension: 0
stamp: i64 [-24] â‡Šffffffffffffffe8 â‡ˆffffffffffffffe8
stampKind: i64
value: long[-24|0xffffffffffffffe8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1445 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [10 - 2147483623] â‡ˆ000000007fffffff
=== Inputs ===
x: j1052 
y: j1444 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1052 y: j1444  <|@  <|@
f <@~|@floating>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1445 
y: j1423 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1445 y: j1423  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1430 
=== Succesors ===
trueSuccessor: v1232 
falseSuccessor: v1231 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1430 #trueSuccessor: v1232 #falseSuccessor: v1231  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1236 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1236  <|@  <|@
f <@*|@fixed>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1232 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1485 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times2
stamp: void*
=== Inputs ===
base: j1393 
index: j1418 
=== Succesors ===
=== Usages ===
v1485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: j1418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1588 
value: v1491 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1221 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1588 value: v1491 stateAfter: - lastLocationAccess: - #next: v1221  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1418 
y: j1037 
=== Succesors ===
=== Usages ===
j1406 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1418 y: j1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1406 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1222 
values: j1452 j1423 
=== Succesors ===
=== Usages ===
v1587 j1411 j1400 v1433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1222 values: j1452 j1423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1221 v1236 
=== Succesors ===
next: v1239 
=== Usages ===
j1406 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1221 v1236 #next: v1239  <|@  <|@
f <@~|@floating>@ <|@
tid j1446 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20
stableDimension: 0
stamp: i64 [-20] â‡Šffffffffffffffec â‡ˆffffffffffffffec
stampKind: i64
value: long[-20|0xffffffffffffffec]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1447 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [14 - 2147483627] â‡ˆ000000007fffffff
=== Inputs ===
x: j1052 
y: j1446 
=== Succesors ===
=== Usages ===
v1433 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1052 y: j1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1447 
y: j1406 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1447 y: j1406  <|@  <|@
f <@*|@fixed>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1433 
=== Succesors ===
trueSuccessor: v1238 
falseSuccessor: v1237 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1433 #trueSuccessor: v1238 #falseSuccessor: v1237  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1242  <|@  <|@
f <@*|@fixed>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1225 
=== Predecessor ===
v1238 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1393 
index: j1406 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: j1406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1587 
value: v1490 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1587 value: v1490 stateAfter: - lastLocationAccess: - #next: v1224  <|@  <|@
f <@~|@floating>@ <|@
tid j1411 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1406 
y: j1294 
=== Succesors ===
=== Usages ===
j1400 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1406 y: j1294  <|@  <|@
f <@*|@fixed>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1225 
=== Predecessor ===
v1484 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1400 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1225 
values: j1411 j1406 
=== Succesors ===
=== Usages ===
v1586 j1405 j1394 v1436 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1225 values: j1411 j1406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1224 v1242 
=== Succesors ===
next: v1245 
=== Usages ===
j1400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1224 v1242 #next: v1245  <|@  <|@
f <@~|@floating>@ <|@
tid j1448 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -18
stableDimension: 0
stamp: i64 [-18] â‡Šffffffffffffffee â‡ˆffffffffffffffee
stampKind: i64
value: long[-18|0xffffffffffffffee]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1449 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [16 - 2147483629] â‡ˆ000000007fffffff
=== Inputs ===
x: j1052 
y: j1448 
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1052 y: j1448  <|@  <|@
f <@~|@floating>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1449 
y: j1400 
=== Succesors ===
=== Usages ===
v1245 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1449 y: j1400  <|@  <|@
f <@*|@fixed>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1436 
=== Succesors ===
trueSuccessor: v1244 
falseSuccessor: v1243 
=== Usages ===
=== Predecessor ===
v1225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1436 #trueSuccessor: v1244 #falseSuccessor: v1243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1248 
=== Usages ===
=== Predecessor ===
v1245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1248  <|@  <|@
f <@*|@fixed>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
v1244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1483 
=== Usages ===
=== Predecessor ===
v1245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1393 
index: j1400 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: j1400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1586 
value: v1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1227 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1586 value: v1489 stateAfter: - lastLocationAccess: - #next: v1227  <|@  <|@
f <@~|@floating>@ <|@
tid j1405 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1400 
y: j1272 
=== Succesors ===
=== Usages ===
j1394 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1400 y: j1272  <|@  <|@
f <@*|@fixed>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
v1483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1394 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1228 
values: j1405 j1400 
=== Succesors ===
=== Usages ===
v1585 v1439 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1228 values: j1405 j1400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1227 v1248 
=== Succesors ===
next: v1251 
=== Usages ===
j1394 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1227 v1248 #next: v1251  <|@  <|@
f <@~|@floating>@ <|@
tid j1450 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17
stableDimension: 0
stamp: i64 [-17] â‡Šffffffffffffffef â‡ˆffffffffffffffef
stampKind: i64
value: long[-17|0xffffffffffffffef]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1451 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [17 - 2147483630] â‡ˆ000000007fffffff
=== Inputs ===
x: j1052 
y: j1450 
=== Succesors ===
=== Usages ===
v1439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1052 y: j1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1451 
y: j1394 
=== Succesors ===
=== Usages ===
v1251 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1451 y: j1394  <|@  <|@
f <@*|@fixed>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1439 
=== Succesors ===
trueSuccessor: v1250 
falseSuccessor: v1249 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1439 #trueSuccessor: v1250 #falseSuccessor: v1249  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1254 
=== Usages ===
=== Predecessor ===
v1251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1254  <|@  <|@
f <@*|@fixed>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
v1250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1482 
=== Usages ===
=== Predecessor ===
v1251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1482  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1393 
index: j1394 
=== Succesors ===
=== Usages ===
v1482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: j1394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
value: i1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1230 
=== Usages ===
=== Predecessor ===
v1249 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1585 value: i1488 stateAfter: - lastLocationAccess: - #next: v1230  <|@  <|@
f <@*|@fixed>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
v1482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1230 v1254 
=== Succesors ===
next: a701 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1230 v1254 #next: a701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a889 
=== Succesors ===
next: v321 
=== Usages ===
a328 
=== Predecessor ===
v1215 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a889 #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
a701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B33" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [16 - 2147483647] â‡ˆ000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v322 
values: i303 i269 
=== Succesors ===
=== Usages ===
i687 v690 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v322 values: i303 i269  <|@  <|@
f <@~|@floating>@ <|@
tid a328 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v322 
values: a701 a584 
=== Succesors ===
=== Usages ===
v1520 ?327 j924 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v322 values: a701 a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v321 v324 
=== Succesors ===
next: j920 
=== Usages ===
i325 a328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v321 v324 #next: j920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i64
=== Inputs ===
object: a344 
=== Succesors ===
next: j924 
=== Usages ===
v1543 
=== Predecessor ===
v322 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a344 #next: j924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i64
=== Inputs ===
object: a328 
=== Succesors ===
next: v926 
=== Usages ===
v1544 
=== Predecessor ===
j920 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a328 #next: v926  <|@  <|@
f <@~|@floating>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j924 
index: - 
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j924 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1543 v1544 j485 
=== Succesors ===
next: j929 
=== Usages ===
=== Predecessor ===
j924 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1543 v1544 j485 #next: j929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j929 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j965 
=== Usages ===
v1545 v1546 
=== Predecessor ===
v926 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j965  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j929 
index: - 
=== Succesors ===
=== Usages ===
j965 v967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j965 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1545 
=== Succesors ===
next: j966 
=== Usages ===
j933 v1547 v1548 a948 v1553 v1549 v1550 v1551 v1552 
=== Predecessor ===
j929 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1545 #next: j966  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j929 
index: - 
=== Succesors ===
=== Usages ===
j966 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j966 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1546 
=== Succesors ===
next: v937 
=== Usages ===
v938 
=== Predecessor ===
j965 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1546 #next: v937  <|@  <|@
tid ?245 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a32 - i1509 
=== Succesors ===
=== Usages ===
?323 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a32 - i1509  <|@  <|@
tid ?327 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a32 
values: - a328 - 
=== Succesors ===
=== Usages ===
?323 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a32 values: - a328 -  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?245 
values: - - - - - 
virtualObjectMappings: ?327 
=== Succesors ===
=== Usages ===
a949 a992 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?245 values: - - - - - virtualObjectMappings: ?327  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1509 
y: i869 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1509 y: i869  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v934 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
j966 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v934 #trueSuccessor: v936 #falseSuccessor: v935  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v944 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid i927 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: i32 [-2147483648 - 2147483646] â‡ˆ00000000fffffffe
=== Inputs ===
x: i1509 
y: i64 
=== Succesors ===
=== Usages ===
i956 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1509 y: i64  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: i32 [-2147483647 - 2147483647] â‡Š0000000000000001
=== Inputs ===
x: i927 
y: i892 
=== Succesors ===
=== Usages ===
i928 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i927 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid i928 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i956 
y: i862 
=== Succesors ===
=== Usages ===
j932 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i956 y: i862  <|@  <|@
f <@~|@floating>@ <|@
tid j932 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i928 
=== Succesors ===
=== Usages ===
j933 v1549 v1550 v1551 v1552 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i928  <|@  <|@
f <@~|@floating>@ <|@
tid j933 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: i64
=== Inputs ===
x: j932 
y: j965 
=== Succesors ===
=== Usages ===
v938 v967 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j932 y: j965  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j966 
y: j933 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j966 y: j933  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v938 
=== Succesors ===
trueSuccessor: v943 
falseSuccessor: v942 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v938 #trueSuccessor: v943 #falseSuccessor: v942  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1545 
value: j933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1545 value: j933 stateAfter: - lastLocationAccess: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j932 
index: j965 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: j965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
address: v1549 
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v967 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1549 #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j932 
index: j965 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: j965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
address: v1550 
=== Succesors ===
next: v962 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1550 #next: v962  <|@  <|@
f <@~|@floating>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j932 
index: j965 
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: j965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
address: v1551 
=== Succesors ===
next: v964 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1551 #next: v964  <|@  <|@
f <@~|@floating>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j932 
index: j965 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: j965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
address: v1552 
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v962 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1552 #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j965 
index: - 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j965 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1547 
value: i1509 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1547 value: i1509 stateAfter: - lastLocationAccess: - #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j965 
index: - 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j965 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1548 
value: j111 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1548 value: j111 stateAfter: - lastLocationAccess: - #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j965 
index: - 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j965 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1553 
value: v1031 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1553 value: v1031 stateAfter: - lastLocationAccess: - #next: v947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a948 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j965 
=== Succesors ===
next: v950 
=== Usages ===
a953 
=== Predecessor ===
v947 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j965 #next: v950  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
a948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B68" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v939 v941 
=== Succesors ===
next: a949 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v939 v941 #next: a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a949 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?323 
arguments: v807 i1509 i30 
=== Succesors ===
next: v952 
=== Usages ===
a953 
=== Predecessor ===
v940 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?323 arguments: v807 i1509 i30 #next: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
a949 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v951 
values: a948 a949 
=== Succesors ===
=== Usages ===
v1566 a697 v1522 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v951 values: a948 a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v950 v952 
=== Succesors ===
next: v1266 
=== Usages ===
a953 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v950 v952 #next: v1266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1065 
=== Usages ===
j1267 j1269 
=== Predecessor ===
v951 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1065  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i325 
y: i1509 
=== Succesors ===
=== Usages ===
i687 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i325 y: i1509  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
condition: v690 
trueValue: i325 
falseValue: i1509 
=== Succesors ===
=== Usages ===
j1046 v1566 v1590 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v690 trueValue: i325 falseValue: i1509  <|@  <|@
f <@~|@floating>@ <|@
tid j1046 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i687 
=== Succesors ===
=== Usages ===
j1329 j1326 j1050 j1322 v1264 j1312 j1318 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i687  <|@  <|@
f <@~|@floating>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i687 
y: i30 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i687 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid j1325 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] â‡Šfffffffffffffffe â‡ˆfffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1326 j1377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1321 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] â‡Šfffffffffffffffc â‡ˆfffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1322 j1374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1359 j1303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1317 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] â‡Šfffffffffffffff8 â‡ˆfffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1318 j1371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1056 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] â‡Šfffffffffffffff0 â‡ˆfffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1366 j1312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1590 
=== Succesors ===
trueSuccessor: v1063 
falseSuccessor: v1064 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1590 #trueSuccessor: v1063 #falseSuccessor: v1064  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1081  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
v1063 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a953 
index: - 
=== Succesors ===
=== Usages ===
j1269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a953 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1269 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1266 
address: v1522 
=== Succesors ===
=== Usages ===
v1568 v1570 v1572 v1574 v1576 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1266 address: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a328 
index: - 
=== Succesors ===
=== Usages ===
j1267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a328 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1267 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1266 
address: v1520 
=== Succesors ===
=== Usages ===
v1569 v1571 v1573 v1575 v1577 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1266 address: v1520  <|@  <|@
f <@~|@floating>@ <|@
tid j1312 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-16 - 2147483631]
=== Inputs ===
x: j1046 
y: j1056 
=== Succesors ===
=== Usages ===
v1313 v1315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1046 y: j1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1312 
y: j484 
=== Succesors ===
=== Usages ===
v1068 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1312 y: j484  <|@  <|@
f <@*|@fixed>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1313 
=== Succesors ===
trueSuccessor: v1066 
falseSuccessor: v1067 
=== Usages ===
=== Predecessor ===
v1064 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1313 #trueSuccessor: v1066 #falseSuccessor: v1067  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
v1066 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1069 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1069  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
v1067 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B115" 
    successors "B78" "B115" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1304 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1070 
values: j484 j1311 
=== Succesors ===
=== Usages ===
v1577 j1311 v1576 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1070 values: j484 j1311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1069 
=== Succesors ===
next: v1512 
=== Usages ===
v1512 v1073 v1074 j1304 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1069 #next: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1267 
index: j1304 
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1267 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1070 
address: v1577 
=== Succesors ===
next: v1469 
=== Usages ===
v1469 
=== Predecessor ===
v1070 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1070 address: v1577 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1269 
index: j1304 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1576 
value: v1512 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1576 value: v1512 stateAfter: - lastLocationAccess: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid j1311 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1304 
y: j358 
=== Succesors ===
=== Usages ===
j1296 j1304 v1315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1304 y: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1312 
y: j1311 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1312 y: j1311  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1315 
=== Succesors ===
trueSuccessor: v1073 
falseSuccessor: v1075 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1315 #trueSuccessor: v1073 #falseSuccessor: v1075  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1070 
=== Succesors ===
next: v1079 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1070 #next: v1079  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
v1073 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1296 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1078 
values: j484 j1311 
=== Succesors ===
=== Usages ===
v1575 j1303 j1287 v1319 v1574 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1078 values: j484 j1311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1077 v1079 
=== Succesors ===
next: v1101 
=== Usages ===
j1296 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1077 v1079 #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid j1318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j1046 
y: j1317 
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1046 y: j1317  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1318 
y: j1296 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1318 y: j1296  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1319 
=== Succesors ===
trueSuccessor: v1100 
falseSuccessor: v1099 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1319 #trueSuccessor: v1100 #falseSuccessor: v1099  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1089 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1513 
=== Usages ===
v1513 
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1513  <|@  <|@
f <@~|@floating>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1267 
index: j1296 
=== Succesors ===
=== Usages ===
v1513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1267 index: j1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1099 
address: v1575 
=== Succesors ===
next: v1467 
=== Usages ===
v1467 
=== Predecessor ===
v1099 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1099 address: v1575 #next: v1467  <|@  <|@
f <@~|@floating>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1269 
index: j1296 
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1574 
value: v1513 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1513 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1574 value: v1513 stateAfter: - lastLocationAccess: - #next: v1088  <|@  <|@
f <@~|@floating>@ <|@
tid j1303 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1296 
y: j814 
=== Succesors ===
=== Usages ===
j1287 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1296 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1089 
=== Predecessor ===
v1467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1287 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1089 
values: j1303 j1296 
=== Succesors ===
=== Usages ===
v1573 j1295 j1279 v1323 v1572 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1089 values: j1303 j1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1088 v1104 
=== Succesors ===
next: v1107 
=== Usages ===
j1287 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1088 v1104 #next: v1107  <|@  <|@
f <@~|@floating>@ <|@
tid j1322 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j1046 
y: j1321 
=== Succesors ===
=== Usages ===
v1323 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1046 y: j1321  <|@  <|@
f <@~|@floating>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1322 
y: j1287 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1322 y: j1287  <|@  <|@
f <@*|@fixed>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1323 
=== Succesors ===
trueSuccessor: v1106 
falseSuccessor: v1105 
=== Usages ===
=== Predecessor ===
v1089 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1323 #trueSuccessor: v1106 #falseSuccessor: v1105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1110 
=== Usages ===
=== Predecessor ===
v1107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
v1106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1514 
=== Usages ===
v1514 
=== Predecessor ===
v1107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1514  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1267 
index: j1287 
=== Succesors ===
=== Usages ===
v1514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1267 index: j1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1105 
address: v1573 
=== Succesors ===
next: v1465 
=== Usages ===
v1465 
=== Predecessor ===
v1105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1105 address: v1573 #next: v1465  <|@  <|@
f <@~|@floating>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1269 
index: j1287 
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1572 
value: v1514 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1092 
=== Usages ===
=== Predecessor ===
v1514 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1572 value: v1514 stateAfter: - lastLocationAccess: - #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid j1295 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1287 
y: j1294 
=== Succesors ===
=== Usages ===
j1279 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1287 y: j1294  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
v1465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1279 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1093 
values: j1295 j1287 
=== Succesors ===
=== Usages ===
v1571 j1286 j1270 v1327 v1570 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1093 values: j1295 j1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1092 v1110 
=== Succesors ===
next: v1113 
=== Usages ===
j1279 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1092 v1110 #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid j1326 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j1046 
y: j1325 
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1046 y: j1325  <|@  <|@
f <@~|@floating>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1326 
y: j1279 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1326 y: j1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1327 
=== Succesors ===
trueSuccessor: v1112 
falseSuccessor: v1111 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1327 #trueSuccessor: v1112 #falseSuccessor: v1111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1116 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1116  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
v1112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1515 
=== Usages ===
v1515 
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1515  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1267 
index: j1279 
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1267 index: j1279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1111 
address: v1571 
=== Succesors ===
next: v1463 
=== Usages ===
v1463 
=== Predecessor ===
v1111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1111 address: v1571 #next: v1463  <|@  <|@
f <@~|@floating>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1269 
index: j1279 
=== Succesors ===
=== Usages ===
v1463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1570 
value: v1515 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1095 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1570 value: v1515 stateAfter: - lastLocationAccess: - #next: v1095  <|@  <|@
f <@~|@floating>@ <|@
tid j1286 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1279 
y: j1272 
=== Succesors ===
=== Usages ===
j1270 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1279 y: j1272  <|@  <|@
f <@*|@fixed>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
v1463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1270 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1096 
values: j1286 j1279 
=== Succesors ===
=== Usages ===
v1569 v1330 v1568 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1096 values: j1286 j1279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1095 v1116 
=== Succesors ===
next: v1119 
=== Usages ===
j1270 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1095 v1116 #next: v1119  <|@  <|@
f <@~|@floating>@ <|@
tid j1329 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j1046 
y: j486 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1046 y: j486  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1329 
y: j1270 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1329 y: j1270  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1330 
=== Succesors ===
trueSuccessor: v1118 
falseSuccessor: v1117 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1330 #trueSuccessor: v1118 #falseSuccessor: v1117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1122 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1122  <|@  <|@
f <@*|@fixed>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
v1118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1516 
=== Usages ===
i1516 
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1516  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1267 
index: j1270 
=== Succesors ===
=== Usages ===
i1516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1267 index: j1270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1516 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1117 
address: v1569 
=== Succesors ===
next: v1461 
=== Usages ===
v1461 
=== Predecessor ===
v1117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1117 address: v1569 #next: v1461  <|@  <|@
f <@~|@floating>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1269 
index: j1270 
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1568 
value: i1516 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
i1516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1568 value: i1516 stateAfter: - lastLocationAccess: - #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
v1461 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B73" "B90" "B89" 
    successors "B92" "B110" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1081 v1098 v1122 
=== Succesors ===
next: v1333 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1081 v1098 v1122 #next: v1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1129 
=== Usages ===
j1335 
=== Predecessor ===
v1082 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1046 
y: j485 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1046 y: j485  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1264 
=== Succesors ===
trueSuccessor: v1128 
falseSuccessor: v1127 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1264 #trueSuccessor: v1128 #falseSuccessor: v1127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a953 
index: i687 
=== Succesors ===
=== Usages ===
j1335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a953 index: i687  <|@  <|@
f <@~|@floating>@ <|@
tid j1335 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1333 
address: v1566 
=== Succesors ===
=== Usages ===
v1578 v1579 v1580 v1581 v1582 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1333 address: v1566  <|@  <|@
f <@~|@floating>@ <|@
tid j1050 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-2147483647 - 2147483647]
=== Inputs ===
x: j485 
y: j1046 
=== Succesors ===
=== Usages ===
j1380 j1366 j1371 j1374 j1377 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j485 y: j1046  <|@  <|@
f <@~|@floating>@ <|@
tid j1366 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483663 - 2147483631]
=== Inputs ===
x: j1050 
y: j1056 
=== Succesors ===
=== Usages ===
v1367 v1369 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1050 y: j1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1366 
y: j484 
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1366 y: j484  <|@  <|@
f <@*|@fixed>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1367 
=== Succesors ===
trueSuccessor: v1130 
falseSuccessor: v1131 
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1367 #trueSuccessor: v1130 #falseSuccessor: v1131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1141 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1141  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1133 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1133  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B109" 
    successors "B96" "B109" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1360 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1134 
values: j484 j1365 
=== Succesors ===
=== Usages ===
v1582 j1365 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1134 values: j484 j1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1133 
=== Succesors ===
next: v1479 
=== Usages ===
j1360 v1137 v1138 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1133 #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1335 
index: j1360 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1335 index: j1360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1582 
value: v1487 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1140 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1582 value: v1487 stateAfter: - lastLocationAccess: - #next: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid j1365 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1360 
y: j358 
=== Succesors ===
=== Usages ===
j1354 j1360 v1369 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1360 y: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1366 
y: j1365 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1366 y: j1365  <|@  <|@
f <@*|@fixed>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1369 
=== Succesors ===
trueSuccessor: v1137 
falseSuccessor: v1139 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1369 #trueSuccessor: v1137 #falseSuccessor: v1139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1134 
=== Succesors ===
next: v1143 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1134 #next: v1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
v1137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1354 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1142 
values: j484 j1365 
=== Succesors ===
=== Usages ===
v1581 j1359 j1348 v1372 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1142 values: j484 j1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1141 v1143 
=== Succesors ===
next: v1164 
=== Usages ===
j1354 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1141 v1143 #next: v1164  <|@  <|@
f <@~|@floating>@ <|@
tid j1371 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483655 - 2147483639]
=== Inputs ===
x: j1050 
y: j1317 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1050 y: j1317  <|@  <|@
f <@~|@floating>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1371 
y: j1354 
=== Succesors ===
=== Usages ===
v1164 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1371 y: j1354  <|@  <|@
f <@*|@fixed>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1372 
=== Succesors ===
trueSuccessor: v1163 
falseSuccessor: v1162 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1372 #trueSuccessor: v1163 #falseSuccessor: v1162  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1167  <|@  <|@
f <@*|@fixed>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v1163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1478 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1478  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1335 
index: j1354 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1335 index: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1581 
value: v1491 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1152 
=== Usages ===
=== Predecessor ===
v1162 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1581 value: v1491 stateAfter: - lastLocationAccess: - #next: v1152  <|@  <|@
f <@~|@floating>@ <|@
tid j1359 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1354 
y: j814 
=== Succesors ===
=== Usages ===
j1348 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1354 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v1478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1348 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1153 
values: j1359 j1354 
=== Succesors ===
=== Usages ===
v1580 j1353 j1342 v1375 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1153 values: j1359 j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1152 v1167 
=== Succesors ===
next: v1170 
=== Usages ===
j1348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1152 v1167 #next: v1170  <|@  <|@
f <@~|@floating>@ <|@
tid j1374 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483651 - 2147483643]
=== Inputs ===
x: j1050 
y: j1321 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1050 y: j1321  <|@  <|@
f <@~|@floating>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1374 
y: j1348 
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1374 y: j1348  <|@  <|@
f <@*|@fixed>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1375 
=== Succesors ===
trueSuccessor: v1169 
falseSuccessor: v1168 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1375 #trueSuccessor: v1169 #falseSuccessor: v1168  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1173  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
v1169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1476 
=== Usages ===
=== Predecessor ===
v1170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1335 
index: j1348 
=== Succesors ===
=== Usages ===
v1476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1335 index: j1348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1580 
value: v1490 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1155 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1580 value: v1490 stateAfter: - lastLocationAccess: - #next: v1155  <|@  <|@
f <@~|@floating>@ <|@
tid j1353 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1348 
y: j1294 
=== Succesors ===
=== Usages ===
j1342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1348 y: j1294  <|@  <|@
f <@*|@fixed>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
v1476 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1342 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1156 
values: j1353 j1348 
=== Succesors ===
=== Usages ===
v1579 j1347 j1336 v1378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1156 values: j1353 j1348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1155 v1173 
=== Succesors ===
next: v1176 
=== Usages ===
j1342 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1155 v1173 #next: v1176  <|@  <|@
f <@~|@floating>@ <|@
tid j1377 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645]
=== Inputs ===
x: j1050 
y: j1325 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1050 y: j1325  <|@  <|@
f <@~|@floating>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1377 
y: j1342 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1377 y: j1342  <|@  <|@
f <@*|@fixed>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1378 
=== Succesors ===
trueSuccessor: v1175 
falseSuccessor: v1174 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1378 #trueSuccessor: v1175 #falseSuccessor: v1174  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1179 
=== Usages ===
=== Predecessor ===
v1176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1179  <|@  <|@
f <@*|@fixed>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1175 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v1176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1335 
index: j1342 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1335 index: j1342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1579 
value: v1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1158 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1579 value: v1489 stateAfter: - lastLocationAccess: - #next: v1158  <|@  <|@
f <@~|@floating>@ <|@
tid j1347 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1342 
y: j1272 
=== Succesors ===
=== Usages ===
j1336 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1342 y: j1272  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1336 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1159 
values: j1347 j1342 
=== Succesors ===
=== Usages ===
v1578 v1381 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1159 values: j1347 j1342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1158 v1179 
=== Succesors ===
next: v1182 
=== Usages ===
j1336 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1158 v1179 #next: v1182  <|@  <|@
f <@~|@floating>@ <|@
tid j1380 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483648 - 2147483646]
=== Inputs ===
x: j1050 
y: j486 
=== Succesors ===
=== Usages ===
v1381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1050 y: j486  <|@  <|@
f <@~|@floating>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1380 
y: j1336 
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1380 y: j1336  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1381 
=== Succesors ===
trueSuccessor: v1181 
falseSuccessor: v1180 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1381 #trueSuccessor: v1181 #falseSuccessor: v1180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
v1181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1472 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1472  <|@  <|@
f <@~|@floating>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1335 
index: j1336 
=== Succesors ===
=== Usages ===
v1472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1335 index: j1336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1578 
value: i1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1161 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1578 value: i1488 stateAfter: - lastLocationAccess: - #next: v1161  <|@  <|@
f <@*|@fixed>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
v1472 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B95" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1138 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1138  <|@  <|@
f <@*|@fixed>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1134 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1139 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1134  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B111" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
v1127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B108" "B107" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1145 v1161 v1185 
=== Succesors ===
next: a697 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1145 v1161 v1185 #next: a697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a953 
=== Succesors ===
next: j981 
=== Usages ===
a600 
=== Predecessor ===
v1146 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a953 #next: j981  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j981 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j996 
=== Usages ===
v1554 v1555 
=== Predecessor ===
a697 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j996  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j981 
index: - 
=== Succesors ===
=== Usages ===
j996 v998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j981 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j996 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1554 
=== Succesors ===
next: j997 
=== Usages ===
j1038 j1002 v1563 
=== Predecessor ===
j981 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1554 #next: j997  <|@  <|@
f <@~|@floating>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j981 
index: - 
=== Succesors ===
=== Usages ===
j997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j981 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j997 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1555 
=== Succesors ===
next: v989 
=== Usages ===
v986 
=== Predecessor ===
j996 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1555 #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid j1038 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j996 
y: j1037 
=== Succesors ===
=== Usages ===
v986 v998 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j996 y: j1037  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j997 
y: j1038 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j997 y: j1038  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v986 
=== Succesors ===
trueSuccessor: v987 
falseSuccessor: v988 
=== Usages ===
=== Predecessor ===
j997 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v986 #trueSuccessor: v987 #falseSuccessor: v988  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a992 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a992  <|@  <|@
f <@~|@floating>@ <|@
tid i786 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a992 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?323 
arguments: v774 i786 i64 
=== Succesors ===
next: j993 
=== Usages ===
j993 
=== Predecessor ===
v987 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?323 arguments: v774 i786 i64 #next: j993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j993 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a992 
=== Succesors ===
next: v1003 
=== Usages ===
j1002 
=== Predecessor ===
a992 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a992 #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
j993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1554 
value: j1038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1554 value: j1038 stateAfter: - lastLocationAccess: - #next: v995  <|@  <|@
f <@~|@floating>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j996 
index: - 
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j996 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1563 
=== Succesors ===
next: v1001 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1563 #next: v1001  <|@  <|@
f <@*|@fixed>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1002 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1000 
values: j996 j993 
=== Succesors ===
=== Usages ===
v1558 v1557 a597 v1564 v1565 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1000 values: j996 j993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1001 v1003 
=== Succesors ===
next: a597 
=== Usages ===
j1002 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1001 v1003 #next: a597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a597 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1002 
=== Succesors ===
next: j1014 
=== Usages ===
a603 
=== Predecessor ===
v1000 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1002 #next: j1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1009 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1009 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1008 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1008  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1009 
index: - 
=== Succesors ===
=== Usages ===
j1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1556 
=== Succesors ===
next: v1015 
=== Usages ===
v1015 
=== Predecessor ===
a597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1556 #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1002 
index: - 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1002 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1557 
value: j1014 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
j1014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1557 value: j1014 stateAfter: - lastLocationAccess: - #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1002 
index: - 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1002 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1558 
value: v1041 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1022 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1558 value: v1041 stateAfter: - lastLocationAccess: - #next: v1022  <|@  <|@
f <@~|@floating>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1002 
index: - 
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1002 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a600 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a697 
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1564 
value: a600 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1564 value: a600 stateAfter: - lastLocationAccess: - #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1002 
index: - 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1002 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1565 
value: i30 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a603 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1565 value: i30 stateAfter: - lastLocationAccess: - #next: a603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a603 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a597 
=== Succesors ===
next: v604 
=== Usages ===
v26 
=== Predecessor ===
v1024 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a597 #next: v604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
a603 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.toString(URI.java:1945) [bci: 59]
stamp: void
=== Inputs ===
result: a603 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a603 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1074 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1074  <|@  <|@
f <@*|@fixed>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1070 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1070  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594247519222478548
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
v1209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1203 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1208 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid i772 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105491
stableDimension: 0
stamp: i32 [-105491] â‡Š00000000fffe63ed â‡ˆ00000000fffe63ed
stampKind: i32
value: int[-105491|0xfffffffffffe63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B44" "B117" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i768 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-114017 - -105491] â‡Š00000000fffe428d â‡ˆ00000000fffe63ff
valueDescription: i32
=== Inputs ===
merge: v765 
values: i767 i772 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v765 values: i767 i772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v766 v771 
=== Succesors ===
next: v770 
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v766 v771 #next: v770  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?260 
actionAndReason: i768 
speculation: a31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?260 actionAndReason: i768 speculation: a31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid i750 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86803
stableDimension: 0
stamp: i32 [-86803] â‡Š00000000fffeaced â‡ˆ00000000fffeaced
stampKind: i32
value: int[-86803|0xfffffffffffeaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid i748 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86547
stableDimension: 0
stamp: i32 [-86547] â‡Š00000000fffeaded â‡ˆ00000000fffeaded
stampKind: i32
value: int[-86547|0xfffffffffffeaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid i746 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86291
stableDimension: 0
stamp: i32 [-86291] â‡Š00000000fffeaeed â‡ˆ00000000fffeaeed
stampKind: i32
value: int[-86291|0xfffffffffffeaeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.toString(URI.java:1937) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86035
stableDimension: 0
stamp: i32 [-86035] â‡Š00000000fffeafed â‡ˆ00000000fffeafed
stampKind: i32
value: int[-86035|0xfffffffffffeafed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid a742 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@830940833
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@830940833]
=== Inputs ===
=== Succesors ===
=== Usages ===
a729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i741 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90651
stableDimension: 0
stamp: i32 [-90651] â‡Š00000000fffe9de5 â‡ˆ00000000fffe9de5
stampKind: i32
value: int[-90651|0xfffffffffffe9de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendFragment(URI.java:1920) [bci: 1]
at java.net.URI.toString(URI.java:1944) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid i735 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121875
stableDimension: 0
stamp: i32 [-121875] â‡Š00000000fffe23ed â‡ˆ00000000fffe23ed
stampKind: i32
value: int[-121875|0xfffffffffffe23ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121619
stableDimension: 0
stamp: i32 [-121619] â‡Š00000000fffe24ed â‡ˆ00000000fffe24ed
stampKind: i32
value: int[-121619|0xfffffffffffe24ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" "B5" "B123" "B122" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i728 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-121875 - -86035] â‡Š00000000fffe00e5 â‡ˆ00000000fffebffd
valueDescription: i32
=== Inputs ===
merge: v725 
values: i732 i735 i739 i741 i744 i746 i748 i750 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v725 values: i732 i735 i739 i741 i744 i746 i748 i750  <|@  <|@
f <@~|@floating>@ <|@
tid a729 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v725 
values: a733 a733 a733 a742 a31 a31 a31 a31 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v725 values: a733 a733 a733 a742 a31 a31 a31 a31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v731 v734 v738 v740 v743 v745 v747 v749 
=== Succesors ===
next: v730 
=== Usages ===
i728 a729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v731 v734 v738 v740 v743 v745 v747 v749 #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i728 
speculation: a729 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i728 speculation: a729  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B125" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid a733 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1765933899
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1765933899]
=== Inputs ===
=== Succesors ===
=== Usages ===
a729 a729 a729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/net/URI;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 ?53 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v16 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v36 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v56 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v54 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
index: 6
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a8 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 7
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 ?68 ?231 v1517 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 8
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v50 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a10 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 9
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?11 v27 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<URI.toString(String, String, String, String, String, int, String, String, String)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1936
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 a5 a6 i7 a8 a9 a10 - 
=== Succesors ===
=== Usages ===
v730 a1508 i1509 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 a5 a6 i7 a8 a9 a10 -  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
value: a9 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a9  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v512 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v512 #falseSuccessor: v514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], in:24|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@722923fd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE in:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|QWORD[.], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B124" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendFragment(URI.java:1920) [bci: 1]
at java.net.URI.toString(URI.java:1944) [bci: 51]
stamp: void
=== Inputs ===
value: a10 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a10  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendFragment(URI.java:1920) [bci: 1]
at java.net.URI.toString(URI.java:1944) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v516 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v516 #falseSuccessor: v518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|QWORD[.], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendFragment(URI.java:1920) [bci: 1]
at java.net.URI.toString(URI.java:1944) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1508 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1508  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
result [v7|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a8 
index: - 
=== Succesors ===
=== Usages ===
a1508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a8 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1508 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1517 
=== Succesors ===
next: i1509 
=== Usages ===
a344 v1518 
=== Predecessor ===
v516 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1517 #next: i1509  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
result [v11|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1508 
=== Succesors ===
=== Usages ===
i1509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1509 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1518 
=== Succesors ===
next: v1499 
=== Usages ===
v99 i274 j485 v296 ?245 i303 v968 ?231 ?260 v934 v470 v507 v467 a949 v690 i687 i927 
=== Predecessor ===
a1508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1518 #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i1509 
=== Succesors ===
=== Usages ===
j487 v496 v926 j1050 v1264 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1509  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j487 j1329 j1380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j487 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j485 
y: j486 
=== Succesors ===
=== Usages ===
v496 v489 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j485 y: j486  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a885 i67 v104 v507 v1024 a949 v1590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1509 
y: i30 
=== Succesors ===
=== Usages ===
v1499 v1505 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1509 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.net.URI.quote(URI.java:2675) [bci: 1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1508 
=== Succesors ===
=== Usages ===
j920 v1519 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1508  <|@  <|@
f <@~|@floating>@ <|@
tid j484 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 j1360 j1304 j1354 v1313 v1367 j1296 j1418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v1495 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
i1509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v1495 #falseSuccessor: v1498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.toString(URI.java:1936) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] v9|QWORD[.] - 
>@ <|@ instruction v11|DWORD[.] = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.toString(URI.java:1936) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] v9|QWORD[.] - 
>@ <|@ instruction v12|DWORD = MOV [v11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = DEC v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1493  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j487 
y: j484 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j487 y: j484  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v489 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v1496 
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v489 #trueSuccessor: v530 #falseSuccessor: v1496  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid i739 <|@
result int[-89619|0xfffffffffffea1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89619
stableDimension: 0
stamp: i32 [-89619] â‡Š00000000fffea1ed â‡ˆ00000000fffea1ed
stampKind: i32
value: int[-89619|0xfffffffffffea1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89619|0xfffffffffffea1ed], v10|QWORD[.]] destination: B5 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1494 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1494  <|@  <|@
f <@*|@fixed>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
v1496 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1493 v1494 
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1493 v1494 #next: v1507  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j487 
y: j485 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j487 y: j485  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v1503 
falseSuccessor: v1506 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v1503 #falseSuccessor: v1506  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1501 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1501  <|@  <|@
f <@*|@fixed>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
v1503 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B123" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1505  <|@  <|@
f <@*|@fixed>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v1504 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v1506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v1504 #falseSuccessor: v534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1502 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1502  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
v1504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B122" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1501 v1502 
=== Succesors ===
next: v539 
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1501 v1502 #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?68 ?190 a729 a729 a729 a729 ?92 v770 v756 ?53 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.toString(URI.java:1937) [bci: 10]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.toString(URI.java:1937) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v1500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v536 #falseSuccessor: v538  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.toString(URI.java:1937) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v540 
falseSuccessor: v542 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v540 #falseSuccessor: v542  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B120" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
value: a6 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a6  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v544 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v544 #falseSuccessor: v546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B119" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v548 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v548 #falseSuccessor: v550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
tid a32 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@35d2d4d9
hasIdentity: true
objectId: -1
stamp: a!# Ljava/lang/StringBuffer;
type: HotSpotType<Ljava/lang/StringBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?268 ?327 ?213 ?35 ?53 ?92 ?92 ?35 ?169 ?231 ?213 ?245 ?260 ?190 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a32 
materializedValue: a32 
=== Succesors ===
=== Usages ===
?53 ?190 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a32 materializedValue: a32  <|@  <|@
tid ?53 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<URI.toString(String, String, String, String, String, int, String, String, String)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1941
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - a31 a32 
virtualObjectMappings: ?35 
=== Succesors ===
=== Usages ===
?190 ?92 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - a31 a32 virtualObjectMappings: ?35  <|@  <|@
tid ?92 <|@
d <@d|@=== Debug Properties ===
bci: 147
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1911
stackSize: 1
=== Inputs ===
outerFrameState: ?53 
values: - a32 - - - - - - a31 - - - a32 
=== Succesors ===
=== Usages ===
?68 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?53 values: - a32 - - - - - - a31 - - - a32  <|@  <|@
tid a168 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<char>
hasIdentity: true
length: 16
objectId: 0
stamp: a!# [C
=== Inputs ===
=== Succesors ===
=== Usages ===
?169 ?170 ?268 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a32 
values: - a168 - 
=== Succesors ===
=== Usages ===
?68 ?260 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a32 values: - a168 -  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a168 
values: - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?68 ?260 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a168 values: - - - - - - - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2677) [bci: 17]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
?68 i89 v217 i927 a788 a833 i861 a992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result int[-64|0xffffffffffffffc0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 39]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: -64
stableDimension: 0
stamp: i32 [-64] â‡Š00000000ffffffc0 â‡ˆ00000000ffffffc0
stampKind: i32
value: int[-64|0xffffffffffffffc0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 144]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 5188146764422578175
stableDimension: 0
stamp: i64 [5188146764422578175] â‡Š47fffffe87ffffff â‡ˆ47fffffe87ffffff
stampKind: i64
value: long[5188146764422578175|0x47fffffe87ffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 ?68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j111 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 12]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j112 j120 v812 v853 v909 v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j43 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 141]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 3458764316252045313
stableDimension: 0
stamp: i64 [3458764316252045313] â‡Š2fffffd200000001 â‡ˆ2fffffd200000001
stampKind: i64
value: long[3458764316252045313|0x2fffffd200000001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 ?68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result int[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 7]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] â‡Š0000000000000040 â‡ˆ0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 46]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B23" "B26" 
    successors "B17" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4626207576643344515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i67 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v66 
values: i30 i89 i89 
=== Succesors ===
=== Usages ===
?68 i89 v99 v1519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v66 values: i30 i89 i89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 19.59093851132685
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v65 
=== Succesors ===
next: v77 
=== Usages ===
i67 v75 v90 v128 v555 v560 v565 v570 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v65 #next: v77  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<URI.quote(String, long, long)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 2678
stackSize: 0
=== Inputs ===
outerFrameState: ?92 
values: a8 j43 - j44 - - a31 i64 i67 - 
virtualObjectMappings: ?169 ?170 
=== Succesors ===
=== Usages ===
a788 v756 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?92 values: a8 j43 - j44 - - a31 i64 i67 - virtualObjectMappings: ?169 ?170  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i1509 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i67 y: i1509  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 33]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.948955993128056
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v74 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2679) [bci: 36]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1510 
=== Usages ===
v501 
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1510  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1500 v74 
=== Succesors ===
=== Usages ===
i1510 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1500 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
result [v15|QWORD[.] + v18|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a344 
index: i67 
=== Succesors ===
=== Usages ===
i1510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1510 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v501 
address: v1519 
=== Succesors ===
next: v556 
=== Usages ===
i362 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v501 address: v1519 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i1510 
=== Succesors ===
=== Usages ===
j112 i119 v116 v104 v107 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1510  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.net.URI.match(URI.java:2519) [bci: 32]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i362 
y: i81 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i362 y: i81  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v552 
falseSuccessor: v555 
=== Usages ===
=== Predecessor ===
i1510 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v552 #falseSuccessor: v555  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZX [v15|QWORD[.] + v18|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i362 
y: i30 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i362 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v560 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v560 #falseSuccessor: v557  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v66 
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v66 #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
result int[-93203|0xfffffffffffe93ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93203
stableDimension: 0
stamp: i32 [-93203] â‡Š00000000fffe93ed â‡ˆ00000000fffe93ed
stampKind: i32
value: int[-93203|0xfffffffffffe93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed]] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2515) [bci: 1]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 9]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i362 
y: i106 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i362 y: i106  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 187]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32
=== Inputs ===
x: i67 
y: i64 
=== Succesors ===
=== Usages ===
i67 i67 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i67 y: i64  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2517) [bci: 9]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.053955085675688075
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v108 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v108 #falseSuccessor: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 12]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 14]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i64
=== Inputs ===
x: j111 
y: i362 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j111 y: i362  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
x: j112 
y: j43 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j112 y: j43  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v565 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v565 #falseSuccessor: v562  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL (x: v22|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v66 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v66 #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid i760 <|@
result int[-93459|0xfffffffffffe92ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93459
stableDimension: 0
stamp: i32 [-93459] â‡Š00000000fffe92ed â‡ˆ00000000fffe92ed
stampKind: i32
value: int[-93459|0xfffffffffffe92ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93459|0xfffffffffffe92ed]] destination: B22 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2518) [bci: 19]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.net.URI.quote(URI.java:2678) [bci: 27]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
loopBegin: v66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B23 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2519) [bci: 28]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 39]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32 [-64 - 65471]
=== Inputs ===
x: i362 
y: i118 
=== Succesors ===
=== Usages ===
j120 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i362 y: i118  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 40]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i64
=== Inputs ===
x: j111 
y: i119 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j111 y: i119  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
x: j120 
y: j44 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j120 y: j44  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v567 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v570 #falseSuccessor: v567  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA [v19|DWORD - 64] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHL (x: v25|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v66 
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v66 #next: v761  <|@  <|@
f <@~|@floating>@ <|@
tid i762 <|@
result int[-93715|0xfffffffffffe91ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93715
stableDimension: 0
stamp: i32 [-93715] â‡Š00000000fffe91ed â‡ˆ00000000fffe91ed
stampKind: i32
value: int[-93715|0xfffffffffffe91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93715|0xfffffffffffe91ed]] destination: B25 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.match(URI.java:2520) [bci: 45]
at java.net.URI.quote(URI.java:2681) [bci: 56]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B26 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2680) [bci: 49]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v66 
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v66 #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid i753 <|@
result int[-92947|0xfffffffffffe94ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -92947
stableDimension: 0
stamp: i32 [-92947] â‡Š00000000fffe94ed â‡ˆ00000000fffe94ed
stampKind: i32
value: int[-92947|0xfffffffffffe94ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-92947|0xfffffffffffe94ed]] destination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B29" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.quote(URI.java:2704) [bci: 193]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v66 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v66 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16] â‡Š00000000fffffff0 â‡ˆ00000000fffffff0
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i1509 
y: i273 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1509 y: i273  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i274 
y: i64 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i274 y: i64  <|@  <|@
f <@~|@floating>@ <|@
tid i1488 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] â‡ˆ0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1472 v1482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1272 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1286 j1347 j1405 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
result v27|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1474 v1483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1294 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] â‡Š0000000000000004 â‡ˆ0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1295 j1353 j1411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
result v28|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1476 v1484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1037 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] â‡Š0000000000000018 â‡ˆ0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1038 j1452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1491 <|@
result v29|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1478 v1485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] â‡Š0000000000000010 â‡ˆ0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1365 j1311 j1423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
result v30|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1479 v1486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a885 a949 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i892 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] â‡Š0000000000000017 â‡ˆ0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i893 i956 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i862 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] â‡Š00000000fffffff8 â‡ˆ00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 i928 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] â‡Š0000000000ffffff â‡ˆ0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v870 v934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 150
code: ResolvedJavaMethodBytecode<URI.appendSchemeSpecificPart(StringBuffer, String, String, String, String, int, String, String)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: URI.java
sourceLine: 1911
stackSize: 0
=== Inputs ===
outerFrameState: ?53 
values: - a32 - - - - - - a31 - - - 
virtualObjectMappings: ?35 
=== Succesors ===
=== Usages ===
?213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?53 values: - a32 - - - - - - a31 - - - virtualObjectMappings: ?35  <|@  <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
nodeSourcePosition: at java.lang.StringBuffer.append(StringBuffer.java:269) [bci: 0]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?213 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?190 
values: a32 - a32 
monitorIds: v179 
=== Succesors ===
=== Usages ===
?231 ?245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?190 values: a32 - a32 monitorIds: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
result v32|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 v860 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 v856 v912 v972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16] â‡Š0000000000000010 â‡ˆ0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
v852 i325 v811 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1028 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a788 a833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a788 a833 a992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1025 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] â‡Š0000000000000030 â‡ˆ0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1026 j1033 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9530051944349821
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v218 
falseSuccessor: v219 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v218 #falseSuccessor: v219  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA [v12|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction v28|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v29|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v30|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction v32|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9530051944349821 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j776 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j795 
=== Usages ===
v1524 v1525 
=== Predecessor ===
v218 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j795  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
j795 v797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j795 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1524 
=== Succesors ===
next: j796 
=== Usages ===
j1026 j801 v1559 
=== Predecessor ===
j776 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1524 #next: j796  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
j796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j796 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1525 
=== Succesors ===
next: v784 
=== Usages ===
v781 
=== Predecessor ===
j795 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1525 #next: v784  <|@  <|@
f <@~|@floating>@ <|@
tid j1026 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j795 
y: j1025 
=== Succesors ===
=== Usages ===
v781 v797 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j795 y: j1025  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j796 
y: j1026 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j796 y: j1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v781 
=== Succesors ===
trueSuccessor: v782 
falseSuccessor: v783 
=== Usages ===
=== Predecessor ===
j796 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v781 #trueSuccessor: v782 #falseSuccessor: v783  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v34|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576647322694384046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a788 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a788 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?68 
arguments: v774 i1028 i64 
=== Succesors ===
next: j789 
=== Usages ===
j789 
=== Predecessor ===
v782 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?68 arguments: v774 i1028 i64 #next: j789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j789 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a788 
=== Succesors ===
next: v802 
=== Usages ===
j801 
=== Predecessor ===
a788 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a788 #next: v802  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
j789 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.quote(URI.java:2678) [bci: 27]
locals: v7|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] v18|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27, 147, 43] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606673288145584690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1524 
value: j1026 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v793 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1524 value: j1026 stateAfter: - lastLocationAccess: - #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid v1559 <|@
result [v34|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j795 
index: - 
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j795 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1559 
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v797 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1559 #next: v800  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
v793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v34|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j801 <|@
result v37|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v799 
values: j795 j789 
=== Succesors ===
=== Usages ===
v1528 v1527 a578 v1526 v1560 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v799 values: j795 j789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v800 v802 
=== Succesors ===
next: a578 
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v800 v802 #next: a578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a578 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j801 
=== Succesors ===
next: v811 
=== Usages ===
a584 
=== Predecessor ===
v799 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j801 #next: v811  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
result [v37|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: - 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1526 
value: i269 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
a578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1526 value: i269 stateAfter: - lastLocationAccess: - #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
result [v37|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: - 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1527 
value: j111 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1527 value: j111 stateAfter: - lastLocationAccess: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
result [v37|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: - 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1528 
value: v1031 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1528 value: v1031 stateAfter: - lastLocationAccess: - #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid v1560 <|@
result [v37|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j801 
index: - 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1560 
value: v819 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a584 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1560 value: v819 stateAfter: - lastLocationAccess: - #next: a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a578 
=== Succesors ===
next: v585 
=== Usages ===
a328 
=== Predecessor ===
v821 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a578 #next: v585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
a584 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid i466 <|@
result int[17|0x11] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 17
stableDimension: 0
stamp: i32 [17] â‡Š0000000000000011 â‡ˆ0000000000000011
stampKind: i32
value: int[17|0x11]
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1509 
y: i466 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1509 y: i466  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v467 
=== Succesors ===
trueSuccessor: v395 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v467 #trueSuccessor: v395 #falseSuccessor: v397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE v37|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v37|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v37|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v37|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[*] + 16], input: v32|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 17 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
v395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[16|0x10], v38|QWORD[.]] destination: B33 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
result int[-102241|0xfffffffffffe709f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -102241
stableDimension: 0
stamp: i32 [-102241] â‡Š00000000fffe709f â‡ˆ00000000fffe709f
stampKind: i32
value: int[-102241|0xfffffffffffe709f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102241|0xfffffffffffe709f]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B27" "B19" "B22" "B25" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i754 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-102241 - -92947] â‡Š00000000fffe108d â‡ˆ00000000fffef7ff
valueDescription: i32
=== Inputs ===
merge: v751 
values: i753 i758 i760 i762 i764 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v751 values: i753 i758 i760 i762 i764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v752 v757 v759 v761 v763 
=== Succesors ===
next: v756 
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v752 v757 v759 v761 v763 #next: v756  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?68 
actionAndReason: i754 
speculation: a31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?68 actionAndReason: i754 speculation: a31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.quote(URI.java:2678) [bci: 27]
locals: v7|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] v18|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:27, 147, 43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result int[35|0x23] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 35
stableDimension: 0
stamp: i32 [35] â‡Š0000000000000023 â‡ˆ0000000000000023
stampKind: i32
value: int[35|0x23]
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1509 
y: i295 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1509 y: i295  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9145699900595734
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v254 
falseSuccessor: v253 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v254 #falseSuccessor: v253  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 35 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9145699900595734 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4586354897419387547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
result int[34|0x22] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 34
stableDimension: 0
stamp: i32 [34] â‡Š0000000000000022 â‡ˆ0000000000000022
stampKind: i32
value: int[34|0x22]
=== Inputs ===
=== Succesors ===
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v254 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[34|0x22]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4571278733025664676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:152) [bci: 16]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B38" 
    successors "B40" "B117" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i303 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32 [34 - 2147483647] â‡ˆ000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v257 
values: i280 i1509 
=== Succesors ===
=== Usages ===
?260 j1052 v305 i325 v470 a885 v908 i861 v870 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v257 values: i280 i1509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v256 v258 
=== Succesors ===
next: v575 
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v256 v258 #next: v575  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a32 a8 i1509 
=== Succesors ===
=== Usages ===
?268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a32 a8 i1509  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?231 
values: - - a32 a168 
=== Succesors ===
=== Usages ===
?260 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: - - a32 a168  <|@  <|@
tid ?260 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.newCapacity(int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 154
stackSize: 0
=== Inputs ===
outerFrameState: ?268 
values: a32 i1509 i303 
virtualObjectMappings: ?169 ?170 
=== Succesors ===
=== Usages ===
a833 a885 v770 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?268 values: a32 i1509 i303 virtualObjectMappings: ?169 ?170  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result int[2147483640|0x7ffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rawvalue: 2147483640
stableDimension: 0
stamp: i32 [2147483640] â‡Š000000007ffffff8 â‡ˆ000000007ffffff8
stampKind: i32
value: int[2147483640|0x7ffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i300 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i300  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v572 
falseSuccessor: v574 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v572 #falseSuccessor: v574  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v40|DWORD y: 2147483640 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j822 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j822 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j837 
=== Usages ===
v1529 v1530 
=== Predecessor ===
v572 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j837  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j837 v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j837 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
=== Succesors ===
next: j838 
=== Usages ===
j1033 j843 v1561 
=== Predecessor ===
j822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1529 #next: j838  <|@  <|@
f <@~|@floating>@ <|@
tid v1530 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j838 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
=== Succesors ===
next: v830 
=== Usages ===
v827 
=== Predecessor ===
j837 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1530 #next: v830  <|@  <|@
f <@~|@floating>@ <|@
tid j1033 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j837 
y: j1025 
=== Succesors ===
=== Usages ===
v827 v839 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j837 y: j1025  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j1033 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j838 y: j1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v827 
=== Succesors ===
trueSuccessor: v828 
falseSuccessor: v829 
=== Usages ===
=== Predecessor ===
j838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v827 #trueSuccessor: v828 #falseSuccessor: v829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4557304635154717233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a833 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a833 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?260 
arguments: v774 i1028 i64 
=== Succesors ===
next: j834 
=== Usages ===
j834 
=== Predecessor ===
v828 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?260 arguments: v774 i1028 i64 #next: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j834 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a833 
=== Succesors ===
next: v844 
=== Usages ===
j843 
=== Predecessor ===
a833 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a833 #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
j834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v12|DWORD v40|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v7|QWORD[.] v12|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4586865759625959356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
value: j1033 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1529 value: j1033 stateAfter: - lastLocationAccess: - #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid v1561 <|@
result [v41|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j837 
index: - 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j837 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1561 
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1561 #next: v842  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j843 <|@
result v44|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v841 
values: j837 j834 
=== Succesors ===
=== Usages ===
v1533 v1532 a588 v1531 v1562 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v841 values: j837 j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v842 v844 
=== Succesors ===
next: a588 
=== Usages ===
j843 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v842 v844 #next: a588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a588 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j843 
=== Succesors ===
next: v852 
=== Usages ===
a593 
=== Predecessor ===
v841 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j843 #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
result [v44|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1531 
value: i269 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
a588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1531 value: i269 stateAfter: - lastLocationAccess: - #next: v853  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
result [v44|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1532 
value: j111 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1532 value: j111 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1533 <|@
result [v44|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1533 
value: v1031 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1533 value: v1031 stateAfter: - lastLocationAccess: - #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
result [v44|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1562 
value: v819 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a593 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1562 value: v819 stateAfter: - lastLocationAccess: - #next: a593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a593 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a588 
=== Succesors ===
next: v594 
=== Usages ===
v1521 
=== Predecessor ===
v860 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a588 #next: v594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
a593 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i1509 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i1509  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v470 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v441 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v470 #trueSuccessor: v443 #falseSuccessor: v441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[*] + 16], input: v32|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
result int[-114017|0xfffffffffffe429f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114017
stableDimension: 0
stamp: i32 [-114017] â‡Š00000000fffe429f â‡ˆ00000000fffe429f
stampKind: i32
value: int[-114017|0xfffffffffffe429f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114017|0xfffffffffffe429f]] destination: B44 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j864 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j864 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j905 
=== Usages ===
v1534 v1535 
=== Predecessor ===
v441 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j905  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
j905 v907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j905 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
=== Succesors ===
next: j906 
=== Usages ===
j868 v1536 v1537 a884 v1542 v1538 v1539 v1540 v1541 
=== Predecessor ===
j864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1534 #next: j906  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
j906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j906 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1535 
=== Succesors ===
next: v873 
=== Usages ===
v874 
=== Predecessor ===
j905 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1535 #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i869 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i869  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v870 
=== Succesors ===
trueSuccessor: v872 
falseSuccessor: v871 
=== Usages ===
=== Predecessor ===
j906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v870 #trueSuccessor: v872 #falseSuccessor: v871  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v40|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4586256219754126181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v880 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid i861 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] â‡ˆ00000000fffffffe
=== Inputs ===
x: i303 
y: i64 
=== Succesors ===
=== Usages ===
i893 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i303 y: i64  <|@  <|@
f <@~|@floating>@ <|@
tid i893 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32 [-2147483647 - 2147483647] â‡Š0000000000000001
=== Inputs ===
x: i861 
y: i892 
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i861 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid i863 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i893 
y: i862 
=== Succesors ===
=== Usages ===
j867 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i893 y: i862  <|@  <|@
f <@~|@floating>@ <|@
tid j867 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i863 
=== Succesors ===
=== Usages ===
j868 v1538 v1539 v1540 v1541 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i863  <|@  <|@
f <@~|@floating>@ <|@
tid j868 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i64
=== Inputs ===
x: j867 
y: j905 
=== Succesors ===
=== Usages ===
v874 v907 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j867 y: j905  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j906 
y: j868 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j906 y: j868  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v874 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v874 #trueSuccessor: v879 #falseSuccessor: v878  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SHL v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA [v48|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND v49|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" 
    xhandlers
    flags 
    probability 4556437734003665606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4586195265766942863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
value: j868 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1534 value: j868 stateAfter: - lastLocationAccess: - #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
result [v51|QWORD + v46|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j867 
index: j905 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
address: v1538 
=== Succesors ===
next: v897 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1538 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
result [v51|QWORD + v46|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j867 
index: j905 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
address: v1539 
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1539 #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
result [v51|QWORD + v46|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j867 
index: j905 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
address: v1540 
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1540 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
result [v51|QWORD + v46|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j867 
index: j905 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
address: v1541 
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1541 #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
result [v46|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j905 
index: - 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j905 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1536 
value: i303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1536 value: i303 stateAfter: - lastLocationAccess: - #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1537 <|@
result [v46|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j905 
index: - 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j905 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1537 
value: j111 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1537 value: j111 stateAfter: - lastLocationAccess: - #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1542 <|@
result [v46|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j905 
index: - 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j905 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1542 
value: v1031 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1542 value: v1031 stateAfter: - lastLocationAccess: - #next: v883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a884 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a884 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j905 
=== Succesors ===
next: v886 
=== Usages ===
a889 
=== Predecessor ===
v883 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j905 #next: v886  <|@  <|@
f <@*|@fixed>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
a884 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v51|QWORD + v46|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v51|QWORD + v46|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v51|QWORD + v46|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v51|QWORD + v46|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD + 12], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v46|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v46|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4572068154347755608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v871 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572555786245222148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v875 v877 
=== Succesors ===
next: a885 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v875 v877 #next: a885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a885 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?260 
arguments: v807 i303 i30 
=== Succesors ===
next: v888 
=== Usages ===
a889 
=== Predecessor ===
v876 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?260 arguments: v807 i303 i30 #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
a885 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v12|DWORD v40|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v7|QWORD[.] v12|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a889 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v887 
values: a884 a885 
=== Succesors ===
=== Usages ===
v1567 a701 v1523 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v887 values: a884 a885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v886 v888 
=== Succesors ===
next: v1383 
=== Usages ===
a889 v1511 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v886 v888 #next: v1383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1511 
=== Usages ===
j1384 j1385 
=== Predecessor ===
v887 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
result [v45|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a593 
index: - 
=== Succesors ===
=== Usages ===
j1384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a593 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1384 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1383 
address: v1521 
=== Succesors ===
=== Usages ===
v1584 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1383 address: v1521  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
result [v56|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1384 
index: - 
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1511 <|@
result v57|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v887 
address: v1584 
=== Succesors ===
next: v1481 
=== Usages ===
v1481 
=== Predecessor ===
v1383 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v887 address: v1584 #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
result [v55|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a889 
index: - 
=== Succesors ===
=== Usages ===
j1385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a889 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1385 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1383 
address: v1523 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1383 address: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
result [v58|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1385 
index: - 
=== Succesors ===
=== Usages ===
v1481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1385 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1583 
value: v1511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1583 value: v1511 stateAfter: - lastLocationAccess: - #next: v1391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1202 
=== Usages ===
j1393 
=== Predecessor ===
v1481 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1202  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
result [v55|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a889 
index: - 
=== Succesors ===
=== Usages ===
j1393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a889 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1393 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1391 
address: v1567 
=== Succesors ===
=== Usages ===
v1585 v1586 v1587 v1588 v1589 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1391 address: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid j1052 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [34 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
j1451 j1442 j1445 j1447 j1449 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i303  <|@  <|@
f <@~|@floating>@ <|@
tid j1441 <|@
result long[-32|0xffffffffffffffe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32
stableDimension: 0
stamp: i64 [-32] â‡Šffffffffffffffe0 â‡ˆffffffffffffffe0
stampKind: i64
value: long[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1442 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [2 - 2147483615] â‡ˆ000000007fffffff
=== Inputs ===
x: j1052 
y: j1441 
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1052 y: j1441  <|@  <|@
f <@*|@fixed>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
v1391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = LEA [v45|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|V256_WORD = H [v56|QWORD[.]] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v55|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.]], input: v57|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = LEA [v55|QWORD[.] + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v60|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B116" 
    successors "B53" "B116" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595940685533126256
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1418 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1203 
values: j484 j1423 
=== Succesors ===
=== Usages ===
v1589 j1423 j1452 v1588 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1203 values: j484 j1423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1202 
=== Succesors ===
next: v1486 
=== Usages ===
j1418 v1206 v1207 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1202 #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1589 <|@
result [v59|QWORD[.] + v62|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1393 
index: j1418 
=== Succesors ===
=== Usages ===
v1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: j1418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1589 
value: v1487 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1209 
=== Usages ===
=== Predecessor ===
v1203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1589 value: v1487 stateAfter: - lastLocationAccess: - #next: v1209  <|@  <|@
f <@~|@floating>@ <|@
tid j1423 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1418 
y: j358 
=== Succesors ===
=== Usages ===
v1430 j1418 v1427 j1406 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1418 y: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1442 
y: j1423 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1442 y: j1423  <|@  <|@
f <@*|@fixed>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1427 
=== Succesors ===
trueSuccessor: v1206 
falseSuccessor: v1208 
=== Usages ===
=== Predecessor ===
v1486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1427 #trueSuccessor: v1206 #falseSuccessor: v1208  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v59|QWORD[.] + v62|QWORD * 2], input: v30|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v62|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1203 
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v1209 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1203 #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid j1444 <|@
result long[-24|0xffffffffffffffe8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24
stableDimension: 0
stamp: i64 [-24] â‡Šffffffffffffffe8 â‡ˆffffffffffffffe8
stampKind: i64
value: long[-24|0xffffffffffffffe8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1445 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [10 - 2147483623] â‡ˆ000000007fffffff
=== Inputs ===
x: j1052 
y: j1444 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1052 y: j1444  <|@  <|@
f <@~|@floating>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1445 
y: j1423 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1445 y: j1423  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1430 
=== Succesors ===
trueSuccessor: v1232 
falseSuccessor: v1231 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1430 #trueSuccessor: v1232 #falseSuccessor: v1231  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v60|QWORD - 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1236 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1236  <|@  <|@
f <@*|@fixed>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1232 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1485 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
result [v59|QWORD[.] + v62|QWORD * 2 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times2
stamp: void*
=== Inputs ===
base: j1393 
index: j1418 
=== Succesors ===
=== Usages ===
v1485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: j1418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1588 
value: v1491 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1221 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1588 value: v1491 stateAfter: - lastLocationAccess: - #next: v1221  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1418 
y: j1037 
=== Succesors ===
=== Usages ===
j1406 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1418 y: j1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
v1485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v59|QWORD[.] + v62|QWORD * 2 + 32], input: v29|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v62|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1406 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1222 
values: j1452 j1423 
=== Succesors ===
=== Usages ===
v1587 j1411 j1400 v1433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1222 values: j1452 j1423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1221 v1236 
=== Succesors ===
next: v1239 
=== Usages ===
j1406 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1221 v1236 #next: v1239  <|@  <|@
f <@~|@floating>@ <|@
tid j1446 <|@
result long[-20|0xffffffffffffffec] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20
stableDimension: 0
stamp: i64 [-20] â‡Šffffffffffffffec â‡ˆffffffffffffffec
stampKind: i64
value: long[-20|0xffffffffffffffec]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1447 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [14 - 2147483627] â‡ˆ000000007fffffff
=== Inputs ===
x: j1052 
y: j1446 
=== Succesors ===
=== Usages ===
v1433 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1052 y: j1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1447 
y: j1406 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1447 y: j1406  <|@  <|@
f <@*|@fixed>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1433 
=== Succesors ===
trueSuccessor: v1238 
falseSuccessor: v1237 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1433 #trueSuccessor: v1238 #falseSuccessor: v1237  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v60|QWORD - 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1242  <|@  <|@
f <@*|@fixed>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1225 
=== Predecessor ===
v1238 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
result [v59|QWORD[.] + v66|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1393 
index: j1406 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: j1406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1587 
value: v1490 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1587 value: v1490 stateAfter: - lastLocationAccess: - #next: v1224  <|@  <|@
f <@~|@floating>@ <|@
tid j1411 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1406 
y: j1294 
=== Succesors ===
=== Usages ===
j1400 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1406 y: j1294  <|@  <|@
f <@*|@fixed>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1225 
=== Predecessor ===
v1484 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v59|QWORD[.] + v66|QWORD * 2], input: v28|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v66|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1400 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1225 
values: j1411 j1406 
=== Succesors ===
=== Usages ===
v1586 j1405 j1394 v1436 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1225 values: j1411 j1406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1224 v1242 
=== Succesors ===
next: v1245 
=== Usages ===
j1400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1224 v1242 #next: v1245  <|@  <|@
f <@~|@floating>@ <|@
tid j1448 <|@
result long[-18|0xffffffffffffffee] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -18
stableDimension: 0
stamp: i64 [-18] â‡Šffffffffffffffee â‡ˆffffffffffffffee
stampKind: i64
value: long[-18|0xffffffffffffffee]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1449 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [16 - 2147483629] â‡ˆ000000007fffffff
=== Inputs ===
x: j1052 
y: j1448 
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1052 y: j1448  <|@  <|@
f <@~|@floating>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1449 
y: j1400 
=== Succesors ===
=== Usages ===
v1245 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1449 y: j1400  <|@  <|@
f <@*|@fixed>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1436 
=== Succesors ===
trueSuccessor: v1244 
falseSuccessor: v1243 
=== Usages ===
=== Predecessor ===
v1225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1436 #trueSuccessor: v1244 #falseSuccessor: v1243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v60|QWORD - 18] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1248 
=== Usages ===
=== Predecessor ===
v1245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1248  <|@  <|@
f <@*|@fixed>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
v1244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1483 
=== Usages ===
=== Predecessor ===
v1245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
result [v59|QWORD[.] + v69|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1393 
index: j1400 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: j1400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1586 
value: v1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1227 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1586 value: v1489 stateAfter: - lastLocationAccess: - #next: v1227  <|@  <|@
f <@~|@floating>@ <|@
tid j1405 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1400 
y: j1272 
=== Succesors ===
=== Usages ===
j1394 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1400 y: j1272  <|@  <|@
f <@*|@fixed>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
v1483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v59|QWORD[.] + v69|QWORD * 2], input: v27|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v69|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1394 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1228 
values: j1405 j1400 
=== Succesors ===
=== Usages ===
v1585 v1439 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1228 values: j1405 j1400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1227 v1248 
=== Succesors ===
next: v1251 
=== Usages ===
j1394 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1227 v1248 #next: v1251  <|@  <|@
f <@~|@floating>@ <|@
tid j1450 <|@
result long[-17|0xffffffffffffffef] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17
stableDimension: 0
stamp: i64 [-17] â‡Šffffffffffffffef â‡ˆffffffffffffffef
stampKind: i64
value: long[-17|0xffffffffffffffef]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1451 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [17 - 2147483630] â‡ˆ000000007fffffff
=== Inputs ===
x: j1052 
y: j1450 
=== Succesors ===
=== Usages ===
v1439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1052 y: j1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1451 
y: j1394 
=== Succesors ===
=== Usages ===
v1251 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1451 y: j1394  <|@  <|@
f <@*|@fixed>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1439 
=== Succesors ===
trueSuccessor: v1250 
falseSuccessor: v1249 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1439 #trueSuccessor: v1250 #falseSuccessor: v1249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v60|QWORD - 17] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1254 
=== Usages ===
=== Predecessor ===
v1251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1254  <|@  <|@
f <@*|@fixed>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
v1250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1482 
=== Usages ===
=== Predecessor ===
v1251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1482  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
result [v59|QWORD[.] + v72|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1393 
index: j1394 
=== Succesors ===
=== Usages ===
v1482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: j1394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
value: i1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1230 
=== Usages ===
=== Predecessor ===
v1249 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1585 value: i1488 stateAfter: - lastLocationAccess: - #next: v1230  <|@  <|@
f <@*|@fixed>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
v1482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + v72|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1230 v1254 
=== Succesors ===
next: a701 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1230 v1254 #next: a701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a701 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a889 
=== Succesors ===
next: v321 
=== Usages ===
a328 
=== Predecessor ===
v1215 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a889 #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
a701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v55|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B33" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i325 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [16 - 2147483647] â‡ˆ000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v322 
values: i303 i269 
=== Succesors ===
=== Usages ===
i687 v690 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v322 values: i303 i269  <|@  <|@
f <@~|@floating>@ <|@
tid a328 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v322 
values: a701 a584 
=== Succesors ===
=== Usages ===
v1520 ?327 j924 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v322 values: a701 a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v321 v324 
=== Succesors ===
next: j920 
=== Usages ===
i325 a328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v321 v324 #next: j920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j920 <|@
result v76|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i64
=== Inputs ===
object: a344 
=== Succesors ===
next: j924 
=== Usages ===
v1543 
=== Predecessor ===
v322 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a344 #next: j924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j924 <|@
result v77|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: i64
=== Inputs ===
object: a328 
=== Succesors ===
next: v926 
=== Usages ===
v1544 
=== Predecessor ===
j920 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a328 #next: v926  <|@  <|@
f <@~|@floating>@ <|@
tid v1543 <|@
result [v76|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j920 
index: - 
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j920 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
result [v77|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j924 
index: - 
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j924 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1543 v1544 j485 
=== Succesors ===
next: j929 
=== Usages ===
=== Predecessor ===
j924 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1543 v1544 j485 #next: j929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j929 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j965 
=== Usages ===
v1545 v1546 
=== Predecessor ===
v926 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j965  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j929 
index: - 
=== Succesors ===
=== Usages ===
j965 v967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j965 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1545 
=== Succesors ===
next: j966 
=== Usages ===
j933 v1547 v1548 a948 v1553 v1549 v1550 v1551 v1552 
=== Predecessor ===
j929 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1545 #next: j966  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j929 
index: - 
=== Succesors ===
=== Usages ===
j966 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j966 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1546 
=== Succesors ===
next: v937 
=== Usages ===
v938 
=== Predecessor ===
j965 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1546 #next: v937  <|@  <|@
tid ?245 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?213 
values: a32 - i1509 
=== Succesors ===
=== Usages ===
?323 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?213 values: a32 - i1509  <|@  <|@
tid ?327 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a32 
values: - a328 - 
=== Succesors ===
=== Usages ===
?323 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a32 values: - a328 -  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?245 
values: - - - - - 
virtualObjectMappings: ?327 
=== Succesors ===
=== Usages ===
a949 a992 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?245 values: - - - - - virtualObjectMappings: ?327  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1509 
y: i869 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1509 y: i869  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v934 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
j966 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v934 #trueSuccessor: v936 #falseSuccessor: v935  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD, v75|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v76|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v944 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid i927 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: i32 [-2147483648 - 2147483646] â‡ˆ00000000fffffffe
=== Inputs ===
x: i1509 
y: i64 
=== Succesors ===
=== Usages ===
i956 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1509 y: i64  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: i32 [-2147483647 - 2147483647] â‡Š0000000000000001
=== Inputs ===
x: i927 
y: i892 
=== Succesors ===
=== Usages ===
i928 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i927 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid i928 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i956 
y: i862 
=== Succesors ===
=== Usages ===
j932 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i956 y: i862  <|@  <|@
f <@~|@floating>@ <|@
tid j932 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i928 
=== Succesors ===
=== Usages ===
j933 v1549 v1550 v1551 v1552 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i928  <|@  <|@
f <@~|@floating>@ <|@
tid j933 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: i64
=== Inputs ===
x: j932 
y: j965 
=== Succesors ===
=== Usages ===
v938 v967 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j932 y: j965  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j966 
y: j933 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j966 y: j933  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v938 
=== Succesors ===
trueSuccessor: v943 
falseSuccessor: v942 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v938 #trueSuccessor: v943 #falseSuccessor: v942  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SHL v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = LEA [v80|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = AND v81|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVSXD v82|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = ADD (x: v83|QWORD, y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1545 
value: j933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1545 value: j933 stateAfter: - lastLocationAccess: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1549 <|@
result [v83|QWORD + v78|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j932 
index: j965 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: j965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
address: v1549 
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v967 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1549 #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid v1550 <|@
result [v83|QWORD + v78|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j932 
index: j965 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: j965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
address: v1550 
=== Succesors ===
next: v962 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1550 #next: v962  <|@  <|@
f <@~|@floating>@ <|@
tid v1551 <|@
result [v83|QWORD + v78|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j932 
index: j965 
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: j965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
address: v1551 
=== Succesors ===
next: v964 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1551 #next: v964  <|@  <|@
f <@~|@floating>@ <|@
tid v1552 <|@
result [v83|QWORD + v78|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j932 
index: j965 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: j965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
address: v1552 
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v962 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1552 #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid v1547 <|@
result [v78|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j965 
index: - 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j965 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1547 
value: i1509 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1547 value: i1509 stateAfter: - lastLocationAccess: - #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v1548 <|@
result [v78|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j965 
index: - 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j965 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1548 
value: j111 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1548 value: j111 stateAfter: - lastLocationAccess: - #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
result [v78|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j965 
index: - 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j965 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1553 
value: v1031 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1553 value: v1031 stateAfter: - lastLocationAccess: - #next: v947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a948 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a948 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j965 
=== Succesors ===
next: v950 
=== Usages ===
a953 
=== Predecessor ===
v947 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j965 #next: v950  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
a948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v83|QWORD + v78|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v83|QWORD + v78|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v83|QWORD + v78|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v83|QWORD + v78|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v78|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v78|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v78|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v78|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[.]] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
v935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B68" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v939 v941 
=== Succesors ===
next: a949 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v939 v941 #next: a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a949 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?323 
arguments: v807 i1509 i30 
=== Succesors ===
next: v952 
=== Usages ===
a953 
=== Predecessor ===
v940 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?323 arguments: v807 i1509 i30 #next: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
a949 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - v12|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] v75|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43] <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD[.]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a953 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v951 
values: a948 a949 
=== Succesors ===
=== Usages ===
v1566 a697 v1522 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v951 values: a948 a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v950 v952 
=== Succesors ===
next: v1266 
=== Usages ===
a953 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v950 v952 #next: v1266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1065 
=== Usages ===
j1267 j1269 
=== Predecessor ===
v951 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1065  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i325 
y: i1509 
=== Succesors ===
=== Usages ===
i687 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i325 y: i1509  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
condition: v690 
trueValue: i325 
falseValue: i1509 
=== Succesors ===
=== Usages ===
j1046 v1566 v1590 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v690 trueValue: i325 falseValue: i1509  <|@  <|@
f <@~|@floating>@ <|@
tid j1046 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i687 
=== Succesors ===
=== Usages ===
j1329 j1326 j1050 j1322 v1264 j1312 j1318 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i687  <|@  <|@
f <@~|@floating>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i687 
y: i30 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i687 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid j1325 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] â‡Šfffffffffffffffe â‡ˆfffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1326 j1377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1321 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] â‡Šfffffffffffffffc â‡ˆfffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1322 j1374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1359 j1303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1317 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] â‡Šfffffffffffffff8 â‡ˆfffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1318 j1371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1056 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] â‡Šfffffffffffffff0 â‡ˆfffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1366 j1312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1590 
=== Succesors ===
trueSuccessor: v1063 
falseSuccessor: v1064 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1590 #trueSuccessor: v1063 #falseSuccessor: v1064  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v74|DWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV v88|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1081  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
v1063 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
result [v87|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a953 
index: - 
=== Succesors ===
=== Usages ===
j1269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a953 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1269 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1266 
address: v1522 
=== Succesors ===
=== Usages ===
v1568 v1570 v1572 v1574 v1576 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1266 address: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
result [v75|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a328 
index: - 
=== Succesors ===
=== Usages ===
j1267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a328 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1267 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1266 
address: v1520 
=== Succesors ===
=== Usages ===
v1569 v1571 v1573 v1575 v1577 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1266 address: v1520  <|@  <|@
f <@~|@floating>@ <|@
tid j1312 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-16 - 2147483631]
=== Inputs ===
x: j1046 
y: j1056 
=== Succesors ===
=== Usages ===
v1313 v1315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1046 y: j1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1312 
y: j484 
=== Succesors ===
=== Usages ===
v1068 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1312 y: j484  <|@  <|@
f <@*|@fixed>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1313 
=== Succesors ===
trueSuccessor: v1066 
falseSuccessor: v1067 
=== Usages ===
=== Predecessor ===
v1064 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1313 #trueSuccessor: v1066 #falseSuccessor: v1067  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = LEA [v87|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = LEA [v75|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|QWORD, y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
v1066 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1069 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1069  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
v1067 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B115" 
    successors "B78" "B115" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1304 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1070 
values: j484 j1311 
=== Succesors ===
=== Usages ===
v1577 j1311 v1576 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1070 values: j484 j1311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1069 
=== Succesors ===
next: v1512 
=== Usages ===
v1512 v1073 v1074 j1304 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1069 #next: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
result [v91|QWORD[.] + v93|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1267 
index: j1304 
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1267 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1512 <|@
result v94|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1070 
address: v1577 
=== Succesors ===
next: v1469 
=== Usages ===
v1469 
=== Predecessor ===
v1070 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1070 address: v1577 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
result [v90|QWORD[.] + v93|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1269 
index: j1304 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1576 
value: v1512 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1576 value: v1512 stateAfter: - lastLocationAccess: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid j1311 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1304 
y: j358 
=== Succesors ===
=== Usages ===
j1296 j1304 v1315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1304 y: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1312 
y: j1311 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1312 y: j1311  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1315 
=== Succesors ===
trueSuccessor: v1073 
falseSuccessor: v1075 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1315 #trueSuccessor: v1073 #falseSuccessor: v1075  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|V256_WORD = H [v91|QWORD[.] + v93|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v90|QWORD[.] + v93|QWORD * 2], input: v94|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA [v93|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v95|QWORD, y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1070 
=== Succesors ===
next: v1079 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1070 #next: v1079  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
v1073 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1296 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1078 
values: j484 j1311 
=== Succesors ===
=== Usages ===
v1575 j1303 j1287 v1319 v1574 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1078 values: j484 j1311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1077 v1079 
=== Succesors ===
next: v1101 
=== Usages ===
j1296 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1077 v1079 #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid j1318 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j1046 
y: j1317 
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1046 y: j1317  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1318 
y: j1296 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1318 y: j1296  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1319 
=== Succesors ===
trueSuccessor: v1100 
falseSuccessor: v1099 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1319 #trueSuccessor: v1100 #falseSuccessor: v1099  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1089 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|QWORD] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1513 
=== Usages ===
v1513 
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1513  <|@  <|@
f <@~|@floating>@ <|@
tid v1575 <|@
result [v91|QWORD[.] + v96|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1267 
index: j1296 
=== Succesors ===
=== Usages ===
v1513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1267 index: j1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1513 <|@
result v98|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1099 
address: v1575 
=== Succesors ===
next: v1467 
=== Usages ===
v1467 
=== Predecessor ===
v1099 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1099 address: v1575 #next: v1467  <|@  <|@
f <@~|@floating>@ <|@
tid v1574 <|@
result [v90|QWORD[.] + v96|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1269 
index: j1296 
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1574 
value: v1513 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1513 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1574 value: v1513 stateAfter: - lastLocationAccess: - #next: v1088  <|@  <|@
f <@~|@floating>@ <|@
tid j1303 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1296 
y: j814 
=== Succesors ===
=== Usages ===
j1287 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1296 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1089 
=== Predecessor ===
v1467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|V128_WORD = H [v91|QWORD[.] + v96|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v90|QWORD[.] + v96|QWORD * 2], input: v98|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = LEA [v96|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1287 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1089 
values: j1303 j1296 
=== Succesors ===
=== Usages ===
v1573 j1295 j1279 v1323 v1572 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1089 values: j1303 j1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1088 v1104 
=== Succesors ===
next: v1107 
=== Usages ===
j1287 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1088 v1104 #next: v1107  <|@  <|@
f <@~|@floating>@ <|@
tid j1322 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j1046 
y: j1321 
=== Succesors ===
=== Usages ===
v1323 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1046 y: j1321  <|@  <|@
f <@~|@floating>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1322 
y: j1287 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1322 y: j1287  <|@  <|@
f <@*|@fixed>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1323 
=== Succesors ===
trueSuccessor: v1106 
falseSuccessor: v1105 
=== Usages ===
=== Predecessor ===
v1089 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1323 #trueSuccessor: v1106 #falseSuccessor: v1105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = LEA [v89|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v100|QWORD, y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1110 
=== Usages ===
=== Predecessor ===
v1107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
v1106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|QWORD] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1514 
=== Usages ===
v1514 
=== Predecessor ===
v1107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1514  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
result [v91|QWORD[.] + v100|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1267 
index: j1287 
=== Succesors ===
=== Usages ===
v1514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1267 index: j1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1514 <|@
result v102|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1105 
address: v1573 
=== Succesors ===
next: v1465 
=== Usages ===
v1465 
=== Predecessor ===
v1105 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1105 address: v1573 #next: v1465  <|@  <|@
f <@~|@floating>@ <|@
tid v1572 <|@
result [v90|QWORD[.] + v100|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1269 
index: j1287 
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1572 
value: v1514 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1092 
=== Usages ===
=== Predecessor ===
v1514 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1572 value: v1514 stateAfter: - lastLocationAccess: - #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid j1295 <|@
result v103|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1287 
y: j1294 
=== Succesors ===
=== Usages ===
j1279 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1287 y: j1294  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
v1465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|V64_WORD = H [v91|QWORD[.] + v100|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v90|QWORD[.] + v100|QWORD * 2], input: v102|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = LEA [v100|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|QWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1279 <|@
result v104|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1093 
values: j1295 j1287 
=== Succesors ===
=== Usages ===
v1571 j1286 j1270 v1327 v1570 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1093 values: j1295 j1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1092 v1110 
=== Succesors ===
next: v1113 
=== Usages ===
j1279 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1092 v1110 #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid j1326 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j1046 
y: j1325 
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1046 y: j1325  <|@  <|@
f <@~|@floating>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1326 
y: j1279 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1326 y: j1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1327 
=== Succesors ===
trueSuccessor: v1112 
falseSuccessor: v1111 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1327 #trueSuccessor: v1112 #falseSuccessor: v1111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = LEA [v89|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v104|QWORD, y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1116 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1116  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
v1112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|QWORD] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1515 
=== Usages ===
v1515 
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1515  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
result [v91|QWORD[.] + v104|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1267 
index: j1279 
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1267 index: j1279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1515 <|@
result v106|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1111 
address: v1571 
=== Succesors ===
next: v1463 
=== Usages ===
v1463 
=== Predecessor ===
v1111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1111 address: v1571 #next: v1463  <|@  <|@
f <@~|@floating>@ <|@
tid v1570 <|@
result [v90|QWORD[.] + v104|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1269 
index: j1279 
=== Succesors ===
=== Usages ===
v1463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1570 
value: v1515 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1095 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1570 value: v1515 stateAfter: - lastLocationAccess: - #next: v1095  <|@  <|@
f <@~|@floating>@ <|@
tid j1286 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1279 
y: j1272 
=== Succesors ===
=== Usages ===
j1270 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1279 y: j1272  <|@  <|@
f <@*|@fixed>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
v1463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|V32_WORD = H [v91|QWORD[.] + v104|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v90|QWORD[.] + v104|QWORD * 2], input: v106|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = LEA [v104|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|QWORD] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1270 <|@
result v108|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1096 
values: j1286 j1279 
=== Succesors ===
=== Usages ===
v1569 v1330 v1568 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1096 values: j1286 j1279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1095 v1116 
=== Succesors ===
next: v1119 
=== Usages ===
j1270 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1095 v1116 #next: v1119  <|@  <|@
f <@~|@floating>@ <|@
tid j1329 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j1046 
y: j486 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1046 y: j486  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1329 
y: j1270 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1329 y: j1270  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1330 
=== Succesors ===
trueSuccessor: v1118 
falseSuccessor: v1117 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1330 #trueSuccessor: v1118 #falseSuccessor: v1117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = DEC v89|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v108|QWORD, y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1122 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1122  <|@  <|@
f <@*|@fixed>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
v1118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1516 
=== Usages ===
i1516 
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1516  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
result [v91|QWORD[.] + v108|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1267 
index: j1270 
=== Succesors ===
=== Usages ===
i1516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1267 index: j1270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1516 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1117 
address: v1569 
=== Succesors ===
next: v1461 
=== Usages ===
v1461 
=== Predecessor ===
v1117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1117 address: v1569 #next: v1461  <|@  <|@
f <@~|@floating>@ <|@
tid v1568 <|@
result [v90|QWORD[.] + v108|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1269 
index: j1270 
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1568 
value: i1516 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
i1516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1568 value: i1516 stateAfter: - lastLocationAccess: - #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
v1461 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVSX [v91|QWORD[.] + v108|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[.] + v108|QWORD * 2], y: v110|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B73" "B90" "B89" 
    successors "B92" "B110" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1081 v1098 v1122 
=== Succesors ===
next: v1333 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1081 v1098 v1122 #next: v1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1129 
=== Usages ===
j1335 
=== Predecessor ===
v1082 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1046 
y: j485 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1046 y: j485  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1264 
=== Succesors ===
trueSuccessor: v1128 
falseSuccessor: v1127 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1264 #trueSuccessor: v1128 #falseSuccessor: v1127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1566 <|@
result [v87|QWORD[.] + v88|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a953 
index: i687 
=== Succesors ===
=== Usages ===
j1335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a953 index: i687  <|@  <|@
f <@~|@floating>@ <|@
tid j1335 <|@
result v111|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1333 
address: v1566 
=== Succesors ===
=== Usages ===
v1578 v1579 v1580 v1581 v1582 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1333 address: v1566  <|@  <|@
f <@~|@floating>@ <|@
tid j1050 <|@
result v112|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-2147483647 - 2147483647]
=== Inputs ===
x: j485 
y: j1046 
=== Succesors ===
=== Usages ===
j1380 j1366 j1371 j1374 j1377 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j485 y: j1046  <|@  <|@
f <@~|@floating>@ <|@
tid j1366 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483663 - 2147483631]
=== Inputs ===
x: j1050 
y: j1056 
=== Succesors ===
=== Usages ===
v1367 v1369 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1050 y: j1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1366 
y: j484 
=== Succesors ===
=== Usages ===
v1132 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1366 y: j484  <|@  <|@
f <@*|@fixed>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1367 
=== Succesors ===
trueSuccessor: v1130 
falseSuccessor: v1131 
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1367 #trueSuccessor: v1130 #falseSuccessor: v1131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = LEA [v87|QWORD[.] + v88|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = SUB (x: v13|QWORD, ~y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = LEA [v112|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v113|QWORD, y: v113|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1141 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1141  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1133 
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1133  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B109" 
    successors "B96" "B109" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1360 <|@
result v114|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1134 
values: j484 j1365 
=== Succesors ===
=== Usages ===
v1582 j1365 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1134 values: j484 j1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1133 
=== Succesors ===
next: v1479 
=== Usages ===
j1360 v1137 v1138 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1133 #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
result [v111|QWORD[.] + v114|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1335 
index: j1360 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1335 index: j1360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1582 
value: v1487 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1140 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1582 value: v1487 stateAfter: - lastLocationAccess: - #next: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid j1365 <|@
result v115|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1360 
y: j358 
=== Succesors ===
=== Usages ===
j1354 j1360 v1369 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1360 y: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1366 
y: j1365 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1366 y: j1365  <|@  <|@
f <@*|@fixed>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1369 
=== Succesors ===
trueSuccessor: v1137 
falseSuccessor: v1139 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1369 #trueSuccessor: v1137 #falseSuccessor: v1139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v111|QWORD[.] + v114|QWORD * 2], input: v30|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = LEA [v114|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|QWORD, y: v113|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1134 
=== Succesors ===
next: v1143 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1134 #next: v1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
v1137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1354 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1142 
values: j484 j1365 
=== Succesors ===
=== Usages ===
v1581 j1359 j1348 v1372 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1142 values: j484 j1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1141 v1143 
=== Succesors ===
next: v1164 
=== Usages ===
j1354 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1141 v1143 #next: v1164  <|@  <|@
f <@~|@floating>@ <|@
tid j1371 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483655 - 2147483639]
=== Inputs ===
x: j1050 
y: j1317 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1050 y: j1317  <|@  <|@
f <@~|@floating>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1371 
y: j1354 
=== Succesors ===
=== Usages ===
v1164 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1371 y: j1354  <|@  <|@
f <@*|@fixed>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1372 
=== Succesors ===
trueSuccessor: v1163 
falseSuccessor: v1162 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1372 #trueSuccessor: v1163 #falseSuccessor: v1162  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = LEA [v112|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v116|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1167  <|@  <|@
f <@*|@fixed>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v1163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v116|QWORD] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1478 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1478  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
result [v111|QWORD[.] + v116|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1335 
index: j1354 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1335 index: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1581 
value: v1491 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1152 
=== Usages ===
=== Predecessor ===
v1162 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1581 value: v1491 stateAfter: - lastLocationAccess: - #next: v1152  <|@  <|@
f <@~|@floating>@ <|@
tid j1359 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1354 
y: j814 
=== Succesors ===
=== Usages ===
j1348 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1354 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v1478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v111|QWORD[.] + v116|QWORD * 2], input: v29|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = LEA [v116|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v118|QWORD] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1348 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1153 
values: j1359 j1354 
=== Succesors ===
=== Usages ===
v1580 j1353 j1342 v1375 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1153 values: j1359 j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1152 v1167 
=== Succesors ===
next: v1170 
=== Usages ===
j1348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1152 v1167 #next: v1170  <|@  <|@
f <@~|@floating>@ <|@
tid j1374 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483651 - 2147483643]
=== Inputs ===
x: j1050 
y: j1321 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1050 y: j1321  <|@  <|@
f <@~|@floating>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1374 
y: j1348 
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1374 y: j1348  <|@  <|@
f <@*|@fixed>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1375 
=== Succesors ===
trueSuccessor: v1169 
falseSuccessor: v1168 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1375 #trueSuccessor: v1169 #falseSuccessor: v1168  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v112|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v119|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1173  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
v1169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v119|QWORD] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1476 
=== Usages ===
=== Predecessor ===
v1170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1580 <|@
result [v111|QWORD[.] + v119|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1335 
index: j1348 
=== Succesors ===
=== Usages ===
v1476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1335 index: j1348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1580 
value: v1490 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1155 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1580 value: v1490 stateAfter: - lastLocationAccess: - #next: v1155  <|@  <|@
f <@~|@floating>@ <|@
tid j1353 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1348 
y: j1294 
=== Succesors ===
=== Usages ===
j1342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1348 y: j1294  <|@  <|@
f <@*|@fixed>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
v1476 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v111|QWORD[.] + v119|QWORD * 2], input: v28|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = LEA [v119|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|QWORD] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1342 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1156 
values: j1353 j1348 
=== Succesors ===
=== Usages ===
v1579 j1347 j1336 v1378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1156 values: j1353 j1348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1155 v1173 
=== Succesors ===
next: v1176 
=== Usages ===
j1342 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1155 v1173 #next: v1176  <|@  <|@
f <@~|@floating>@ <|@
tid j1377 <|@
result v123|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645]
=== Inputs ===
x: j1050 
y: j1325 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1050 y: j1325  <|@  <|@
f <@~|@floating>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1377 
y: j1342 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1377 y: j1342  <|@  <|@
f <@*|@fixed>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1378 
=== Succesors ===
trueSuccessor: v1175 
falseSuccessor: v1174 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1378 #trueSuccessor: v1175 #falseSuccessor: v1174  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = LEA [v112|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: v123|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1179 
=== Usages ===
=== Predecessor ===
v1176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1179  <|@  <|@
f <@*|@fixed>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1175 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD] destination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v1176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
result [v111|QWORD[.] + v122|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1335 
index: j1342 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1335 index: j1342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1579 
value: v1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1158 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1579 value: v1489 stateAfter: - lastLocationAccess: - #next: v1158  <|@  <|@
f <@~|@floating>@ <|@
tid j1347 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1342 
y: j1272 
=== Succesors ===
=== Usages ===
j1336 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1342 y: j1272  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v1474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v111|QWORD[.] + v122|QWORD * 2], input: v27|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = LEA [v122|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1336 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1159 
values: j1347 j1342 
=== Succesors ===
=== Usages ===
v1578 v1381 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1159 values: j1347 j1342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1158 v1179 
=== Succesors ===
next: v1182 
=== Usages ===
j1336 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1158 v1179 #next: v1182  <|@  <|@
f <@~|@floating>@ <|@
tid j1380 <|@
result v126|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483648 - 2147483646]
=== Inputs ===
x: j1050 
y: j486 
=== Succesors ===
=== Usages ===
v1381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1050 y: j486  <|@  <|@
f <@~|@floating>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1380 
y: j1336 
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1380 y: j1336  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1381 
=== Succesors ===
trueSuccessor: v1181 
falseSuccessor: v1180 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1381 #trueSuccessor: v1181 #falseSuccessor: v1180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = DEC v112|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v125|QWORD, y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
v1181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1472 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1472  <|@  <|@
f <@~|@floating>@ <|@
tid v1578 <|@
result [v111|QWORD[.] + v125|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1335 
index: j1336 
=== Succesors ===
=== Usages ===
v1472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1335 index: j1336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1578 
value: i1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1161 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1578 value: i1488 stateAfter: - lastLocationAccess: - #next: v1161  <|@  <|@
f <@*|@fixed>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
v1472 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v111|QWORD[.] + v125|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B108 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B95" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1138 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1138  <|@  <|@
f <@*|@fixed>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1134 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1139 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1134  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD] destination: B109 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B111" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1146 
=== Predecessor ===
v1127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B108" "B107" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1145 v1161 v1185 
=== Succesors ===
next: a697 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1145 v1161 v1185 #next: a697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a697 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.StringBuffer.toString(StringBuffer.java:669) [bci: 17]
at java.lang.StringBuffer.toString() [bci: -1]
at java.net.URI.toString(URI.java:1945) [bci: 56]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a953 
=== Succesors ===
next: j981 
=== Usages ===
a600 
=== Predecessor ===
v1146 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a953 #next: j981  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j981 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j996 
=== Usages ===
v1554 v1555 
=== Predecessor ===
a697 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j996  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j981 
index: - 
=== Succesors ===
=== Usages ===
j996 v998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j981 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j996 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1554 
=== Succesors ===
next: j997 
=== Usages ===
j1038 j1002 v1563 
=== Predecessor ===
j981 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1554 #next: j997  <|@  <|@
f <@~|@floating>@ <|@
tid v1555 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j981 
index: - 
=== Succesors ===
=== Usages ===
j997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j981 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j997 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1555 
=== Succesors ===
next: v989 
=== Usages ===
v986 
=== Predecessor ===
j996 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1555 #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid j1038 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j996 
y: j1037 
=== Succesors ===
=== Usages ===
v986 v998 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j996 y: j1037  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j997 
y: j1038 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j997 y: j1038  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v986 
=== Succesors ===
trueSuccessor: v987 
falseSuccessor: v988 
=== Usages ===
=== Predecessor ===
j997 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v986 #trueSuccessor: v987 #falseSuccessor: v988  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v127|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a992 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a992  <|@  <|@
f <@~|@floating>@ <|@
tid i786 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a992 <|@
result v129|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?323 
arguments: v774 i786 i64 
=== Succesors ===
next: j993 
=== Usages ===
j993 
=== Predecessor ===
v987 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?323 arguments: v774 i786 i64 #next: j993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j993 <|@
result v129|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a992 
=== Succesors ===
next: v1003 
=== Usages ===
j1002 
=== Predecessor ===
a992 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a992 #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
j993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - v12|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] v75|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43] <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD[.]] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1554 
value: j1038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v988 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1554 value: j1038 stateAfter: - lastLocationAccess: - #next: v995  <|@  <|@
f <@~|@floating>@ <|@
tid v1563 <|@
result [v127|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j996 
index: - 
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j996 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1563 
=== Succesors ===
next: v1001 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1563 #next: v1001  <|@  <|@
f <@*|@fixed>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v127|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|QWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1002 <|@
result v130|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1000 
values: j996 j993 
=== Succesors ===
=== Usages ===
v1558 v1557 a597 v1564 v1565 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1000 values: j996 j993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1001 v1003 
=== Succesors ===
next: a597 
=== Usages ===
j1002 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1001 v1003 #next: a597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a597 <|@
result v131|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1002 
=== Succesors ===
next: j1014 
=== Usages ===
a603 
=== Predecessor ===
v1000 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1002 #next: j1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1009 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1009 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1008 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1008  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
result [v132|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1009 
index: - 
=== Succesors ===
=== Usages ===
j1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1014 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1556 
=== Succesors ===
next: v1015 
=== Usages ===
v1015 
=== Predecessor ===
a597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1556 #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
result [v130|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1002 
index: - 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1002 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1557 
value: j1014 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
j1014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1557 value: j1014 stateAfter: - lastLocationAccess: - #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1558 <|@
result [v130|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1002 
index: - 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1002 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1558 
value: v1041 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1022 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1558 value: v1041 stateAfter: - lastLocationAccess: - #next: v1022  <|@  <|@
f <@~|@floating>@ <|@
tid v1564 <|@
result [v130|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1002 
index: - 
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1002 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a600 <|@
result v134|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a697 
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1564 
value: a600 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1564 value: a600 stateAfter: - lastLocationAccess: - #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1565 <|@
result [v130|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1002 
index: - 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1002 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1565 
value: i30 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a603 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1565 value: i30 stateAfter: - lastLocationAccess: - #next: a603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a603 <|@
result v131|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a597 
=== Succesors ===
next: v604 
=== Usages ===
v26 
=== Predecessor ===
v1024 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a597 #next: v604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
a603 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.toString(URI.java:1945) [bci: 59]
stamp: void
=== Inputs ===
result: a603 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a603 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE v130|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [v132|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v130|QWORD[*]], y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v130|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v134|DWORD[.] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v130|QWORD[*] + 12], y: v134|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v130|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v131|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1074 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1074  <|@  <|@
f <@*|@fixed>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1070 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1070  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B115 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594247519222478548
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
v1209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1203 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1208 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B116 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
at java.lang.StringBuffer.append(String) [bci: -1]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid i772 <|@
result int[-105491|0xfffffffffffe63ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105491
stableDimension: 0
stamp: i32 [-105491] â‡Š00000000fffe63ed â‡ˆ00000000fffe63ed
stampKind: i32
value: int[-105491|0xfffffffffffe63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105491|0xfffffffffffe63ed]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B44" "B117" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i768 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-114017 - -105491] â‡Š00000000fffe428d â‡ˆ00000000fffe63ff
valueDescription: i32
=== Inputs ===
merge: v765 
values: i767 i772 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v765 values: i767 i772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v766 v771 
=== Succesors ===
next: v770 
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v766 v771 #next: v770  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?260 
actionAndReason: i768 
speculation: a31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?260 actionAndReason: i768 speculation: a31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v135|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v12|DWORD v40|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v7|QWORD[.] v12|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:18, 17, 21, 7, 150, 43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1850) [bci: 130]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid i750 <|@
result int[-86803|0xfffffffffffeaced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86803
stableDimension: 0
stamp: i32 [-86803] â‡Š00000000fffeaced â‡ˆ00000000fffeaced
stampKind: i32
value: int[-86803|0xfffffffffffeaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86803|0xfffffffffffeaced], Object[null]] destination: B119 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendAuthority(URI.java:1834) [bci: 2]
at java.net.URI.appendSchemeSpecificPart(URI.java:1909) [bci: 130]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid i748 <|@
result int[-86547|0xfffffffffffeaded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86547
stableDimension: 0
stamp: i32 [-86547] â‡Š00000000fffeaded â‡ˆ00000000fffeaded
stampKind: i32
value: int[-86547|0xfffffffffffeaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86547|0xfffffffffffeaded], Object[null]] destination: B120 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1887) [bci: 1]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid i746 <|@
result int[-86291|0xfffffffffffeaeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86291
stableDimension: 0
stamp: i32 [-86291] â‡Š00000000fffeaeed â‡ˆ00000000fffeaeed
stampKind: i32
value: int[-86291|0xfffffffffffeaeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86291|0xfffffffffffeaeed], Object[null]] destination: B121 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.toString(URI.java:1937) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid i744 <|@
result int[-86035|0xfffffffffffeafed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86035
stableDimension: 0
stamp: i32 [-86035] â‡Š00000000fffeafed â‡ˆ00000000fffeafed
stampKind: i32
value: int[-86035|0xfffffffffffeafed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86035|0xfffffffffffeafed], Object[null]] destination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.net.URI.quote(URI.java:2679) [bci: 39]
at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid a742 <|@
result v136|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@830940833
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@830940833]
=== Inputs ===
=== Succesors ===
=== Usages ===
a729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i741 <|@
result int[-90651|0xfffffffffffe9de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90651
stableDimension: 0
stamp: i32 [-90651] â‡Š00000000fffe9de5 â‡ˆ00000000fffe9de5
stampKind: i32
value: int[-90651|0xfffffffffffe9de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@830940833] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90651|0xfffffffffffe9de5], v136|QWORD[.]] destination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendFragment(URI.java:1920) [bci: 1]
at java.net.URI.toString(URI.java:1944) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid i735 <|@
result int[-121875|0xfffffffffffe23ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121875
stableDimension: 0
stamp: i32 [-121875] â‡Š00000000fffe23ed â‡ˆ00000000fffe23ed
stampKind: i32
value: int[-121875|0xfffffffffffe23ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121875|0xfffffffffffe23ed], v10|QWORD[.]] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.net.URI.appendSchemeSpecificPart(URI.java:1912) [bci: 156]
at java.net.URI.toString(URI.java:1941) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
result int[-121619|0xfffffffffffe24ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121619
stableDimension: 0
stamp: i32 [-121619] â‡Š00000000fffe24ed â‡ˆ00000000fffe24ed
stampKind: i32
value: int[-121619|0xfffffffffffe24ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121619|0xfffffffffffe24ed], v10|QWORD[.]] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" "B5" "B123" "B122" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i728 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-121875 - -86035] â‡Š00000000fffe00e5 â‡ˆ00000000fffebffd
valueDescription: i32
=== Inputs ===
merge: v725 
values: i732 i735 i739 i741 i744 i746 i748 i750 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v725 values: i732 i735 i739 i741 i744 i746 i748 i750  <|@  <|@
f <@~|@floating>@ <|@
tid a729 <|@
result v138|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v725 
values: a733 a733 a733 a742 a31 a31 a31 a31 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v725 values: a733 a733 a733 a742 a31 a31 a31 a31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v731 v734 v738 v740 v743 v745 v747 v749 
=== Succesors ===
next: v730 
=== Usages ===
i728 a729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v731 v734 v738 v740 v743 v745 v747 v749 #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i728 
speculation: a729 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i728 speculation: a729  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v137|DWORD, v138|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v138|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.toString(URI.java:1936) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] v9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B125" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], in:24|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@722923fd slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE in:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|QWORD[.], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B124" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|QWORD[.], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.toString(URI.java:1936) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] v9|QWORD[.] - 
>@ <|@ instruction v11|DWORD[.] = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.toString(URI.java:1936) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] v9|QWORD[.] - 
>@ <|@ instruction v12|DWORD = MOV [v11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = DEC v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B123" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B122" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B120" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B119" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B23" "B26" 
    successors "B17" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4626207576643344515
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZX [v15|QWORD[.] + v18|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA [v19|DWORD - 64] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHL (x: v25|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B26 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL (x: v22|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B23 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B29" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA [v12|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9530051944349821 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v34|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606673288145584690
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v34|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE v37|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v37|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v37|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v37|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[*] + 16], input: v32|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 17 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[16|0x10], v38|QWORD[.]] destination: B33 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B33" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD, v75|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v76|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SHL v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = LEA [v80|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = AND v81|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVSXD v82|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = ADD (x: v83|QWORD, y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v83|QWORD + v78|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v83|QWORD + v78|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v83|QWORD + v78|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v83|QWORD + v78|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v78|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v78|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v78|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v78|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[.]] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v74|DWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV v88|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = LEA [v87|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = LEA [v75|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|QWORD, y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = LEA [v89|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|V128_WORD = H [v91|QWORD[.] + v96|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v90|QWORD[.] + v96|QWORD * 2], input: v98|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = LEA [v96|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = LEA [v89|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v100|QWORD, y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|V64_WORD = H [v91|QWORD[.] + v100|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v90|QWORD[.] + v100|QWORD * 2], input: v102|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = LEA [v100|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|QWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = LEA [v89|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v104|QWORD, y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|V32_WORD = H [v91|QWORD[.] + v104|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v90|QWORD[.] + v104|QWORD * 2], input: v106|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = LEA [v104|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|QWORD] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = DEC v89|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v108|QWORD, y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVSX [v91|QWORD[.] + v108|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[.] + v108|QWORD * 2], y: v110|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B73" "B90" "B89" 
    successors "B92" "B110" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B111" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B108" "B107" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v127|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v127|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|QWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE v130|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOV [v132|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v130|QWORD[*]], y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v130|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v134|DWORD[.] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v130|QWORD[*] + 12], y: v134|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v130|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v131|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = LEA [v87|QWORD[.] + v88|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = SUB (x: v13|QWORD, ~y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = LEA [v112|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v113|QWORD, y: v113|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v116|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = LEA [v112|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v116|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v111|QWORD[.] + v116|QWORD * 2], input: v146|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = LEA [v116|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v118|QWORD] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v112|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v119|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v111|QWORD[.] + v119|QWORD * 2], input: v144|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = LEA [v119|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|QWORD] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = LEA [v112|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: v123|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v111|QWORD[.] + v122|QWORD * 2], input: v142|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = LEA [v122|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = DEC v112|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v125|QWORD, y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v111|QWORD[.] + v125|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B108 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|QWORD] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v119|QWORD] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD] destination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v116|QWORD] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B95" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD] destination: B109 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B109" 
    successors "B96" "B109" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v111|QWORD[.] + v114|QWORD * 2], input: v148|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = LEA [v114|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|QWORD, y: v113|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|QWORD] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|QWORD] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B115 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B115" 
    successors "B78" "B115" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|V256_WORD = H [v91|QWORD[.] + v93|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v90|QWORD[.] + v93|QWORD * 2], input: v94|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA [v93|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v95|QWORD, y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B68" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v150|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - v12|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] v75|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43] <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD[.]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 35 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9145699900595734 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4586354897419387547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[34|0x22]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B38" 
    successors "B40" "B117" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v40|DWORD y: 2147483640 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4586865759625959356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v44|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[*] + 16], input: v32|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v40|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4586256219754126181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SHL v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA [v48|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND v49|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4586195265766942863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v51|QWORD + v46|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v51|QWORD + v46|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v51|QWORD + v46|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v51|QWORD + v46|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v46|QWORD + 12], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v46|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v46|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = LEA [v45|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|V256_WORD = H [v56|QWORD[.]] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v55|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v58|QWORD[.]], input: v57|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = LEA [v55|QWORD[.] + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v60|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594247519222478548
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B116 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B116" 
    successors "B53" "B116" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595940685533126256
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v59|QWORD[.] + v62|QWORD * 2], input: v149|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v62|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v60|QWORD - 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v59|QWORD[.] + v62|QWORD * 2 + 32], input: v147|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v62|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v60|QWORD - 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v59|QWORD[.] + v66|QWORD * 2], input: v145|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v66|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v60|QWORD - 18] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v59|QWORD[.] + v69|QWORD * 2], input: v143|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v69|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v60|QWORD - 17] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + v72|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v55|QWORD[.]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v152|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - v12|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=v75|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] v75|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43] <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD[.]] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576647322694384046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v154|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.quote(URI.java:2678) [bci: 27]
locals: v7|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] v18|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27, 147, 43] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4572068154347755608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572555786245222148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v151|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v12|DWORD v40|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v7|QWORD[.] v12|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4571278733025664676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4557304635154717233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v153|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v12|DWORD v40|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v7|QWORD[.] v12|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" 
    xhandlers
    flags 
    probability 4556437734003665606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86803|0xfffffffffffeaced], Object[null]] destination: B119 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" "B5" "B123" "B122" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v137|DWORD, v138|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v138|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.toString(URI.java:1936) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|QWORD[.] v6|DWORD v7|QWORD[.] v8|QWORD[.] v9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102241|0xfffffffffffe709f]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B27" "B19" "B22" "B25" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.net.URI.quote(URI.java:2678) [bci: 27]
locals: v7|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] v18|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:27, 147, 43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-92947|0xfffffffffffe94ed]] destination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93715|0xfffffffffffe91ed]] destination: B25 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86291|0xfffffffffffeaeed], Object[null]] destination: B121 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@830940833] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90651|0xfffffffffffe9de5], v136|QWORD[.]] destination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121619|0xfffffffffffe24ed], v139|QWORD[.]] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121875|0xfffffffffffe23ed], v140|QWORD[.]] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93459|0xfffffffffffe92ed]] destination: B22 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105491|0xfffffffffffe63ed]] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B44" "B117" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v135|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v12|DWORD v40|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} v7|QWORD[.] v12|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: v0|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:18, 17, 21, 7, 150, 43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86035|0xfffffffffffeafed], Object[null]] destination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89619|0xfffffffffffea1ed], v141|QWORD[.]] destination: B5 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114017|0xfffffffffffe429f]] destination: B44 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed]] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86547|0xfffffffffffeaded], Object[null]] destination: B120 -> B126 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #112        // java.lang.StringBuffer
     3: dup           
     4: invokespecial #96         // java.lang.StringBuffer.<init>:()void
     7: astore        10
     9: aload_1       
    10: ifnull        28
    13: aload         10
    15: aload_1       
    16: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    19: pop           
    20: aload         10
    22: bipush        58
    24: invokevirtual #88         // java.lang.StringBuffer.append:(char)java.lang.StringBuffer
    27: pop           
    28: aload_0       
    29: aload         10
    31: aload_2       
    32: aload_3       
    33: aload         4
    35: aload         5
    37: iload         6
    39: aload         7
    41: aload         8
    43: invokespecial #97         // appendSchemeSpecificPart:(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)void
    46: aload_0       
    47: aload         10
    49: aload         9
    51: invokespecial #98         // appendFragment:(java.lang.StringBuffer, java.lang.String)void
    54: aload         10
    56: invokevirtual #99         // java.lang.StringBuffer.toString:()java.lang.String
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B125" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], in:24|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@722923fd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD[.] = MOVE in:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B124" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]
live-base-pointers: []
java.net.URI.toString(URI.java:1936) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] in:0|DWORD r13|QWORD[.] r10|QWORD[.] r11|QWORD[.] - 
>@ <|@ instruction rbx|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]
live-base-pointers: []
java.net.URI.toString(URI.java:1936) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] in:0|DWORD r13|QWORD[.] r10|QWORD[.] r11|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   28  <|@ instruction stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|QWORD = DEC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TEST (x: r14|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP (x: rbp|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B123" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B122" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B120" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B119" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff] <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001] <|@ <|@
      nr  126  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B23" "B26" 
    successors "B17" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4626207576643344515
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  132  <|@ instruction CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction r10|DWORD = MOVZX [rbx|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction CMP r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r11|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  164  <|@ instruction CMP r10|DWORD y: 64 size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = LEA [r10|DWORD - 64] size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  202  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction TEST (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B26 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r8|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction TEST (x: rdx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B23 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B29" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  240  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.9530051944349821 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD <|@ <|@
      nr  250  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606673288145584690
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0 <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV [rdi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  304  <|@ instruction MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  306  <|@ instruction J (address: [rdi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  308  <|@ instruction CMP rax|DWORD y: 17 size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction stack:76|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  316  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B33 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B33" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  672  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r11|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD = LEA [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  688  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  690  <|@ instruction CMP stack:36|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rax|DWORD = SHL stack:36|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rcx|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  700  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  702  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  722  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  724  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  726  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  728  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  736  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  772  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r10|DWORD) condition: |>| <|@ <|@
      nr  776  <|@ instruction rsi|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  796  <|@ instruction r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  800  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  802  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  834  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  836  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  848  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  850  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  852  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  860  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  862  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  870  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  872  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  874  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  876  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  882  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  884  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  886  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  896  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  898  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  900  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  906  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  908  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr  924  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B73" "B90" "B89" 
    successors "B92" "B110" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction CMP (x: rbp|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B111" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B108" "B107" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1074  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1076  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1078  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1112  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1114  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1116  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1118  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1120  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1124  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rax|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rbp|QWORD = SUB (x: rbp|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 16] size: QWORD <|@ <|@
      nr  942  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  948  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  978  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  990  <|@ instruction J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  994  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 4] size: QWORD <|@ <|@
      nr 1002  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1012  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1014  <|@ instruction J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 2] size: QWORD <|@ <|@
      nr 1026  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1038  <|@ instruction J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr 1042  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction JUMP ~[] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1048  <|@ instruction rbp|QWORD = DEC rbp|QWORD size: QWORD <|@ <|@
      nr 1050  <|@ instruction CMP (x: rcx|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 1052  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~[] destination: B108 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B91" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B73 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction JUMP ~[] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  956  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  958  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B95" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B109 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B109" 
    successors "B96" "B109" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  962  <|@ instruction J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  964  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  966  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  968  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1130  <|@ instruction JUMP ~[] destination: B115 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B115" 
    successors "B78" "B115" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  818  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  820  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  822  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  824  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B68" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  760  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [stack:8, stack:32]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - r14|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] stack:88|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43] <|@ <|@
      nr  764  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction CMP r14|DWORD y: 35 size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.9145699900595734 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4586354897419387547
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rax|DWORD = MOVE input: int[34|0x22] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B38" 
    successors "B40" "B117" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  362  <|@ instruction CMP rax|DWORD y: 2147483640 size: DWORD <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr  372  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4586865759625959356
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 240] instr: 0 <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction MOV [rsi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  424  <|@ instruction MOV [rsi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction J (address: [rsi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  430  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  452  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4586256219754126181
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4586195265766942863
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  538  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  542  <|@ instruction xmm1|V256_WORD = H [rsi|QWORD[.]] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  546  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm1|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 48] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD <|@ <|@
      nr  554  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594247519222478548
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1134  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B116 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B116" 
    successors "B53" "B116" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595940685533126256
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  560  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  562  <|@ instruction r11|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  564  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 24] size: QWORD <|@ <|@
      nr  572  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  584  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 2 + 32], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  586  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 24] size: QWORD <|@ <|@
      nr  588  <|@ instruction r11|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 20] size: QWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  608  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  610  <|@ instruction rcx|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  612  <|@ instruction r11|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 18] size: QWORD <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  632  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  634  <|@ instruction rcx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  636  <|@ instruction r11|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  642  <|@ instruction rdx|QWORD = LEA [rdx|QWORD - 17] size: QWORD <|@ <|@
      nr  644  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4577926287023644272
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1086  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1088  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1090  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:32]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - r14|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] stack:88|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43] <|@ <|@
      nr 1092  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1094  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576647322694384046
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  268  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40]
live-base-pointers: []
java.net.URI.quote(URI.java:2678) [bci: 27]
locals: stack:56|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] r14|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27, 147, 43] <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  274  <|@ instruction rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4572068154347755608
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572555786245222148
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  526  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  530  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [r14:0, stack:24, stack:32, stack:40]
live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} stack:36|DWORD r13|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} stack:56|QWORD[.] stack:36|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4571278733025664676
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4557304635154717233
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  390  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40]
live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} stack:36|DWORD r13|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} stack:56|QWORD[.] stack:36|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43] <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  398  <|@ instruction rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r14|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" 
    xhandlers
    flags 
    probability 4556437734003665606
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction rbx|DWORD = MOVE input: int[-86803|0xfffffffffffeaced] <|@ <|@
      nr 1162  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1168  <|@ instruction JUMP ~[] destination: B119 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" "B5" "B123" "B122" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction MOV (x: [r15|QWORD + 668], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]
live-base-pointers: []
java.net.URI.toString(URI.java:1936) [bci: 0]
locals: rax|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] rbp|DWORD r13|QWORD[.] r10|QWORD[.] r11|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r10|DWORD = MOVE input: int[-102241|0xfffffffffffe709f] <|@ <|@
      nr  324  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B27" "B19" "B22" "B25" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  332  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  336  <|@ st <@st|@reference-map: [stack:32, stack:40]
live-base-pointers: []
java.net.URI.quote(URI.java:2678) [bci: 27]
locals: stack:56|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] r14|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:27, 147, 43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[-92947|0xfffffffffffe94ed] <|@ <|@
      nr  228  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVE input: int[-93715|0xfffffffffffe91ed] <|@ <|@
      nr  212  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B25 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction rbx|DWORD = MOVE input: int[-86291|0xfffffffffffeaeed] <|@ <|@
      nr 1186  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1192  <|@ instruction JUMP ~[] destination: B121 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1208  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@830940833] <|@ <|@
      nr 1214  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rbx|DWORD = MOVE input: int[-90651|0xfffffffffffe9de5] <|@ <|@
      nr 1218  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1222  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~[] destination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1248  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899] <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rbx|DWORD = MOVE input: int[-121619|0xfffffffffffe24ed] <|@ <|@
      nr 1258  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899] <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rbx|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr 1238  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~[] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction r10|DWORD = MOVE input: int[-93459|0xfffffffffffe92ed] <|@ <|@
      nr  184  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B22 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1142  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1144  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction rax|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B44" "B117" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1156  <|@ st <@st|@reference-map: [stack:32, stack:40]
live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} rax|DWORD r13|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} stack:56|QWORD[.] rax|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:18, 17, 21, 7, 150, 43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1196  <|@ instruction rbx|DWORD = MOVE input: int[-86035|0xfffffffffffeafed] <|@ <|@
      nr 1198  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1204  <|@ instruction JUMP ~[] destination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899] <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr   64  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction r10|DWORD = MOVE input: int[-114017|0xfffffffffffe429f] <|@ <|@
      nr  438  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B44 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] <|@ <|@
      nr  154  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction rbx|DWORD = MOVE input: int[-86547|0xfffffffffffeaded] <|@ <|@
      nr 1174  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1176  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1180  <|@ instruction JUMP ~[] destination: B120 -> B126 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #112        // java.lang.StringBuffer
     3: dup           
     4: invokespecial #96         // java.lang.StringBuffer.<init>:()void
     7: astore        10
     9: aload_1       
    10: ifnull        28
    13: aload         10
    15: aload_1       
    16: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    19: pop           
    20: aload         10
    22: bipush        58
    24: invokevirtual #88         // java.lang.StringBuffer.append:(char)java.lang.StringBuffer
    27: pop           
    28: aload_0       
    29: aload         10
    31: aload_2       
    32: aload_3       
    33: aload         4
    35: aload         5
    37: iload         6
    39: aload         7
    41: aload         8
    43: invokespecial #97         // appendSchemeSpecificPart:(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)void
    46: aload_0       
    47: aload         10
    49: aload         9
    51: invokespecial #98         // appendFragment:(java.lang.StringBuffer, java.lang.String)void
    54: aload         10
    56: invokevirtual #99         // java.lang.StringBuffer.toString:()java.lang.String
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B125" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], in:24|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@722923fd slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD[.] = MOVE in:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B124" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]
live-base-pointers: []
java.net.URI.toString(URI.java:1936) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] in:0|DWORD r13|QWORD[.] r10|QWORD[.] r11|QWORD[.] - 
>@ <|@ instruction rbx|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]
live-base-pointers: []
java.net.URI.toString(URI.java:1936) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] in:0|DWORD r13|QWORD[.] r10|QWORD[.] r11|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   28  <|@ instruction stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rbp|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction r14|QWORD = DEC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TEST (x: r14|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B11" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP (x: rbp|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" "B123" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B11 falseDestination: B9 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B12" "B122" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B121" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B120" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B119" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff] <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001] <|@ <|@
      nr  126  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B23" "B26" 
    successors "B17" "B28" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4626207576643344515
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  132  <|@ instruction CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction r10|DWORD = MOVZX [rbx|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction CMP r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625926101666633859
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r11|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  164  <|@ instruction CMP r10|DWORD y: 64 size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = LEA [r10|DWORD - 64] size: DWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  202  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction TEST (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4625643760962918958
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B26 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r8|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction TEST (x: rdx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607196270432085332
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B23 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B29" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = LEA [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  238  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  240  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.9530051944349821 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD <|@ <|@
      nr  250  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606673288145584690
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0 <|@ <|@
      nr  292  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV [rdi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  304  <|@ instruction MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  306  <|@ instruction J (address: [rdi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  308  <|@ instruction CMP rax|DWORD y: 17 size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B66" 
    xhandlers
    flags 
    probability 4606759127222355481
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction stack:76|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  316  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B33 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B33" 
    successors "B67" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  672  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r11|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD = LEA [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  688  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  690  <|@ instruction CMP stack:36|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B66 -> B67 falseDestination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B69" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rax|DWORD = SHL stack:36|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction rcx|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  700  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  702  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B67 -> B71 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  722  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  724  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  726  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  728  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  736  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B91" "B74" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  772  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction rax|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r10|DWORD) condition: |>| <|@ <|@
      nr  776  <|@ instruction rsi|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B91 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B79" "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  796  <|@ instruction r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  798  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  800  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  806  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  802  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B74 -> B79 falseDestination: B74 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B74" "B77" 
    successors "B82" "B81" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  834  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  836  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B82 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  848  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  850  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  852  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B79" 
    successors "B85" "B84" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  858  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  860  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  862  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B85 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  870  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  872  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  874  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  876  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B82" 
    successors "B88" "B87" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  882  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  884  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  886  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B88 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  896  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  898  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  900  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B85" 
    successors "B91" "B90" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  906  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  908  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B88 -> B91 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B72" "B90" "B88" 
    successors "B92" "B111" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction CMP (x: rbp|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B91" "B108" "B106" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1074  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1076  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1078  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1080  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1112  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1114  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1116  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1118  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1120  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1124  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rax|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rbp|QWORD = SUB (x: rbp|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 16] size: QWORD <|@ <|@
      nr  942  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  948  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" "B95" 
    successors "B100" "B99" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  978  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B100 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  990  <|@ instruction J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  994  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B97" 
    successors "B103" "B102" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 4] size: QWORD <|@ <|@
      nr 1002  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B103 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1012  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1014  <|@ instruction J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B100" 
    successors "B106" "B105" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 2] size: QWORD <|@ <|@
      nr 1026  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B106 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1038  <|@ instruction J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr 1042  <|@ instruction rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction JUMP ~[] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B103" 
    successors "B111" "B108" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1048  <|@ instruction rbp|QWORD = DEC rbp|QWORD size: QWORD <|@ <|@
      nr 1050  <|@ instruction CMP (x: rcx|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 1052  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B111 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~[] destination: B108 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  956  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  958  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B95" 
    successors "B97" "B95" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  962  <|@ instruction J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  964  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  966  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  968  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B97 falseDestination: B95 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B74" "B77" 
    successors "B79" "B77" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  818  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  820  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  822  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  824  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B79 falseDestination: B77 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B66" "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  760  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [stack:8, stack:32]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - r14|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] stack:88|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43] <|@ <|@
      nr  764  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction CMP r14|DWORD y: 35 size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.9145699900595734 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4586354897419387547
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rax|DWORD = MOVE input: int[34|0x22] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B38" 
    successors "B40" "B117" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  362  <|@ instruction CMP rax|DWORD y: 2147483640 size: DWORD <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  370  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr  372  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4586865759625959356
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 240] instr: 0 <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction MOV [rsi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  424  <|@ instruction MOV [rsi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction J (address: [rsi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  430  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B50" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  450  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  452  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" "B48" 
    xhandlers
    flags 
    probability 4586256219754126181
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B50 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4586195265766942863
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  496  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  538  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  542  <|@ instruction xmm1|V256_WORD = H [rsi|QWORD[.]] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  546  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm1|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  548  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 48] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD <|@ <|@
      nr  554  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594247519222478548
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1134  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B116 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B116" 
    successors "B53" "B116" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595940685533126256
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  560  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  562  <|@ instruction r11|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  564  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B56" "B55" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 24] size: QWORD <|@ <|@
      nr  572  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  584  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 2 + 32], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  586  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 24] size: QWORD <|@ <|@
      nr  588  <|@ instruction r11|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B53" 
    successors "B59" "B58" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 20] size: QWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  608  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  610  <|@ instruction rcx|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  612  <|@ instruction r11|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B62" "B61" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 18] size: QWORD <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  632  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  634  <|@ instruction rcx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  636  <|@ instruction r11|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B59" 
    successors "B65" "B64" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  642  <|@ instruction rdx|QWORD = LEA [rdx|QWORD - 17] size: QWORD <|@ <|@
      nr  644  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4585240319967737556
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4586933486278385264
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1086  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1088  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1090  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:32]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - r14|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] stack:88|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43] <|@ <|@
      nr 1092  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1094  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576647322694384046
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  268  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40]
live-base-pointers: []
java.net.URI.quote(URI.java:2678) [bci: 27]
locals: stack:56|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] r14|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27, 147, 43] <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  274  <|@ instruction rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572555786245222148
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  526  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  530  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [r14:0, stack:24, stack:32, stack:40]
live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} stack:36|DWORD r13|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} stack:56|QWORD[.] stack:36|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4571278733025664676
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4557304635154717233
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  390  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40]
live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} stack:36|DWORD r13|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} stack:56|QWORD[.] stack:36|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43] <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  398  <|@ instruction rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction rbx|DWORD = MOVE input: int[-86803|0xfffffffffffeaced] <|@ <|@
      nr 1162  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1168  <|@ instruction JUMP ~[] destination: B119 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" "B5" "B123" "B122" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction MOV (x: [r15|QWORD + 668], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]
live-base-pointers: []
java.net.URI.toString(URI.java:1936) [bci: 0]
locals: rax|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|QWORD[.] rdi|QWORD[.] rbp|DWORD r13|QWORD[.] r10|QWORD[.] r11|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r10|DWORD = MOVE input: int[-102241|0xfffffffffffe709f] <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B27" "B19" "B22" "B25" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  228  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  336  <|@ st <@st|@reference-map: [stack:32, stack:40]
live-base-pointers: []
java.net.URI.quote(URI.java:2678) [bci: 27]
locals: stack:56|QWORD[.] long[3458764316252045313|0x2fffffd200000001] - long[5188146764422578175|0x47fffffe87ffffff] - - Object[null] int[1|0x1] r14|DWORD - 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:27, 147, 43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[-92947|0xfffffffffffe94ed] <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r10|DWORD = MOVE input: int[-93715|0xfffffffffffe91ed] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B25 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1184  <|@ instruction rbx|DWORD = MOVE input: int[-86291|0xfffffffffffeaeed] <|@ <|@
      nr 1186  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1192  <|@ instruction JUMP ~[] destination: B121 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1208  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@830940833] <|@ <|@
      nr 1214  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rbx|DWORD = MOVE input: int[-90651|0xfffffffffffe9de5] <|@ <|@
      nr 1220  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1222  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction JUMP ~[] destination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1248  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899] <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction rbx|DWORD = MOVE input: int[-121619|0xfffffffffffe24ed] <|@ <|@
      nr 1260  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899] <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rbx|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed] <|@ <|@
      nr 1240  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~[] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction r10|DWORD = MOVE input: int[-93459|0xfffffffffffe92ed] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B22 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1148  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B44" "B117" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  438  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1156  <|@ st <@st|@reference-map: [stack:32, stack:40]
live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} rax|DWORD r13|DWORD 
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} stack:56|QWORD[.] rax|DWORD 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150]
locals: - vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} - - - - - - Object[null] - - - 
java.net.URI.toString(URI.java:1941) [bci: 43]
locals: stack:64|QWORD[.] - - - - - - - - Object[null] vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} 
vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]} Ljava/lang/StringBuffer; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} Object[null] 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:18, 17, 21, 7, 150, 43] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1196  <|@ instruction rbx|DWORD = MOVE input: int[-86035|0xfffffffffffeafed] <|@ <|@
      nr 1198  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1204  <|@ instruction JUMP ~[] destination: B122 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899] <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction r10|DWORD = MOVE input: int[-114017|0xfffffffffffe429f] <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B44 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction rbx|DWORD = MOVE input: int[-86547|0xfffffffffffeaded] <|@ <|@
      nr 1174  <|@ instruction rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr 1176  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1180  <|@ instruction JUMP ~[] destination: B120 -> B126 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #112        // java.lang.StringBuffer
     3: dup           
     4: invokespecial #96         // java.lang.StringBuffer.<init>:()void
     7: astore        10
     9: aload_1       
    10: ifnull        28
    13: aload         10
    15: aload_1       
    16: invokevirtual #86         // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    19: pop           
    20: aload         10
    22: bipush        58
    24: invokevirtual #88         // java.lang.StringBuffer.append:(char)java.lang.StringBuffer
    27: pop           
    28: aload_0       
    29: aload         10
    31: aload_2       
    32: aload_3       
    33: aload         4
    35: aload         5
    37: iload         6
    39: aload         7
    41: aload         8
    43: invokespecial #97         // appendSchemeSpecificPart:(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)void
    46: aload_0       
    47: aload         10
    49: aload         9
    51: invokespecial #98         // appendFragment:(java.lang.StringBuffer, java.lang.String)void
    54: aload         10
    56: invokevirtual #99         // java.lang.StringBuffer.toString:()java.lang.String
    59: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8b6c24684c8b5424704c8b5c24784d85d20f85300700004d85db0f8551070000418b5d0c8b04dd0c0000008944243c8be848896c24304c8bf549ffce48c1e30385c00f84090000004d85f60f8c95070000493bee0f870800000085c00f85bb0600004885d20f85600700004885c90f85910600004885ff0f85a60700004d85c00f852106000048bfffffff87feffff4748ba01000000d2ffff2f41be000000000f1f8400000000000f1f8000000000413bc60f8e63000000460fb75473104181fa800000000f832a0600004585d20f8444070000458bde41ffc34183fa400f821c000000418d4ac049c7c20100000049d3e24985fa0f8402060000458bf3ebaf49c7c001000000418bca49d3e04985d00f8485060000458bf3eb948d78f0c5f9efc083ff010f8df9020000498b7f60488d5730493b57700f87a7040000498957600f1887f0000000488bd7c7470c1000000048c70701000000c74708addeaddec5fe7f471083f8110f8363050000c744241410000000488974242048895424084c8bda488d7b10498d7310488bd5e80000000090498b7760498b5770817c243cffffff000f834f0200008b44243cd1e08d481783e1f84863c94c8bd14c03d64c3bd20f87310200008b44243c4d8957600f188431c00000000f188431000100000f188431400100000f1884318001000089460c48c70601000000c74608addeadde4c8bee448b542414448bf0453bf2418bc6410f47c28bf085c0488b5424080f8495000000498d4d104c8d52104c8d5ef04d85db49c7c0000000000f8d9e0100004c8d5ef84d3bc30f8f13000000c4817a6f0442c4a17a7f04414d8d58084d8bc34c8d5efc4d3bc30f8f13000000c481f96e0442c4a1f97e04414d8d58044d8bc34c8d5efe4d3bc30f8f13000000c481796e0442c4a1797e04414d8d58024d8bc34c8bde49ffcb4d3bc30f8f0a000000470fbf14426646891441488b6c2430483bee0f875d000000498b4760488d7018493b77700f87eb020000498977600f1880d8000000488bf048baaddeaddeaddeadde488b92a8000000488910c74008addeadde49c1ed034489680c44896010488bc6488b6c24504883c458850500000000c5f877c3498d444510482bee488d75f04885f60f8d7500000048c7c100000000488d75f8483bce0f8f10000000c5f9efc0c5fa7f0448488d7108488bce488d75fc483bce0f8f11000000c5f9efc0c4e1f97e0448488d7104488bce488d75fe483bce0f8f10000000c5f9efc0c5f97e0448488d7102488bce48ffcd483bcd0f8f23ffffff6644892448e919ffffffc5f9efc048c7c1000000000f1f440000c5fe7f0448488d4910483bce7ef2e96fffffff0f1f8000000000660f1f440000c4817e6f0442c4a17e7f04414d8d40104d3bc37eebe948feffff8b44243c48beaddeaddeaddeadde8bd0b900000000448bf0e800000000904c8be8448b542414e9e8fdffff448bf048897424204183fe230f8327020000b82200000081f8f8ffff7f0f835f030000498b7760488d5630493b57700f8709020000498957600f1886f00000004c8bd6c7460c1000000048c70601000000c74608addeaddec5fe7f4610443bf00f8786030000498b7760498b577081f8ffffff000f83930100008bc8d1e18d491783e1f84863c94c8bd94c03de4c3bda0f87770100004d895f600f188431c00000000f188431000100000f188431400100000f1884318001000089460c48c70601000000c74608addeadde448be848895c2418488bc64d8bf2c5f9efc0498d7610c5fe6f0e488d7010c5fe7f0e488d7030418bd5488d4ae049c7c200000000e90a0000000f1f80000000004d8bd3c4a17e7f04564d8d5a104c3bd97eee488d4ae84c3bd90f8f12000000c5f9efc0c4a17a7f445620498d4a184c8bd9488d4aec4c3bd90f8f11000000c5f9efc0c4a1f97e045e498d4b044c8bd9488d4aee4c3bd90f8f11000000c5f9efc0c4a1797e045e498d4b024c8bd9488d52ef4c3bda0f8f05000000664689245e488bd044896c2414488b5c2418488b6c2430e9b6fbffff48beaddeaddeaddeaddeba02000000b901000000e80000000090e901fdffff48895c24184c896c2428488974242048beaddeaddeaddeaddeba08000000b901000000e80000000090488bf8c5f9efc0488b5c2418488b6c24308b44243c4c8b6c2428488b742420e917fbffff48895c24184c896c24284d8bf248beaddeaddeaddeadde8bd0b900000000448be8e80000000090e9a0feffffe9d9fdffff48895c24184c896c2428448be848beaddeaddeaddeaddeba08000000b901000000e80000000090488bf0418bc5c5f9efc0488b5c2418488b6c24304c8b6c2428e9bdfdffffbbedacfeff8b6c2460488bc648be000000000000000041899f9c0200004989b7a8020000e8000000009041ba9f70feff4c896c242848897424204589979c0200004d89a7a8020000e8000000009041baed94feffebda41baed91feffebd2bbedaefeff8b6c2460488bc648be0000000000000000eba04c896c2428488974242048bbaddeaddeaddeadde488bf3bbe59dfeff8b6c2460488b442420e976ffffff4c896c2428488974242048bbaddeaddeaddeadde488bf3bbed24feff8b6c2460488b442420e94cffffff4c896c2428488974242048bbaddeaddeaddeadde488bf3bbed23feff8b6c2460488b442420e922ffffff41baed92feffe931ffffff41baed63feff4c896c2428448be8418bc64589979c0200004d89a7a8020000e80000000090bbedaffeff8b6c2460488bc648be0000000000000000e9d7feffff4c896c2428488974242048bbaddeaddeaddeadde488bf3bbeda1feff8b6c2460488b442420e9adfeffff41ba9f42feffeb9441baed93feffe9b4feffffbbedadfeff8b6c2460488bc648be0000000000000000e97ffeffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], in:24|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@722923fd slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r11|QWORD[.] = MOVE in:24|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 66 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B125  <||@
  Comment 72 block B1 null  <||@
  Comment 72 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 18 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 75 20 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B124  <||@
  Comment 81 block B2 null  <||@
  Comment 81 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 24 rbx|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]at java.net.URI.toString(URI.java:1936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6           |7             |8             |9             |10 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |in:0|DWORD  |r13|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |-    <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 26 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 85 [rcx:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]at java.net.URI.toString(URI.java:1936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6           |7             |8             |9             |10 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |in:0|DWORD  |r13|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |-    <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 92 28 stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 96 30 rbp|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 98 32 stack:48|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 103 34 r14|QWORD = DEC rbp|QWORD size: QWORD  <||@
  Comment 109 36 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3  <||@
  Comment 113 38 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 115 40 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 121 block B4 null  <||@
  Comment 121 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 48 TEST (x: r14|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 124 50 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 130 block B7 null  <||@
  Comment 130 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 78 CMP (x: rbp|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 133 80 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9  <||@
  Comment 139 block B9 null  <||@
  Comment 139 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 88 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 141 90 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B11 falseDestination: B9 -> B123  <||@
  Comment 147 block B11 null  <||@
  Comment 147 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 98 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 150 100 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B122  <||@
  Comment 156 block B12 null  <||@
  Comment 156 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 104 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 159 106 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B121  <||@
  Comment 165 block B13 null  <||@
  Comment 165 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 110 TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 168 112 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B120  <||@
  Comment 174 block B14 null  <||@
  Comment 174 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 116 TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 177 118 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B119  <||@
  Comment 183 block B15 null  <||@
  Comment 183 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 122 rdi|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff]  <||@
  Comment 193 124 rdx|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001]  <||@
  Comment 203 126 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 209 128 JUMP ~[] destination: B15 -> B16  <||@
  Comment 209 block B16 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 209 130 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 224 132 CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 227 134 BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B28  <||@
  Comment 233 block B17 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 233 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 138 r10|DWORD = MOVZX [rbx|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD  <||@
  Comment 239 140 CMP r10|DWORD y: 128 size: DWORD  <||@
  Comment 246 142 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B27  <||@
  Comment 252 block B18 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 252 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 252 146 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 255 148 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 261 block B20 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 261 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 162 r11|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 267 164 CMP r10|DWORD y: 64 size: DWORD  <||@
  Comment 271 166 BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B24  <||@
  Comment 277 block B24 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 277 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 198 rcx|DWORD = LEA [r10|DWORD - 64] size: DWORD  <||@
  Comment 281 200 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 288 202 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 291 204 TEST (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 294 206 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 300 block B26 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 300 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 300 220 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 303 222 JUMP ~[] destination: B26 -> B16  <||@
  Comment 305 block B21 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 305 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 305 170 r8|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 312 172 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 315 174 r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 318 176 TEST (x: rdx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 321 178 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 327 block B23 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 327 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 192 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 330 194 JUMP ~[] destination: B23 -> B16  <||@
  Comment 332 block B28 null  <||@
  Comment 332 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 332 236 rdi|DWORD = LEA [rax|DWORD - 16] size: DWORD  <||@
  Comment 335 238 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 339 240 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 342 242 BRANCH trueDestinationProbability: 0.9530051944349821 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B36  <||@
  Comment 348 block B29 null  <||@
  Comment 348 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 348 246 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 352 248 rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD  <||@
  Comment 356 250 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 360 252 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 366 block B31 null  <||@
  Comment 366 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 366 288 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 370 290 AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0  <||@
  Comment 377 292 rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 377 294 JUMP ~[] destination: B31 -> B32  <||@
  Comment 377 block B32 null  <||@
  Comment 377 296 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 377 298 rdx|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 380 300 MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 387 302 MOV [rdi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 394 304 MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 394 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 401 306 J (address: [rdi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 406 308 CMP rax|DWORD y: 17 size: DWORD  <||@
  Comment 409 310 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 415 block B33 null  <||@
  Comment 415 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 314 stack:76|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 423 316 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 428 318 JUMP ~[] destination: B33 -> B66  <||@
  Comment 428 block B66 null  <||@
  Comment 428 670 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 428 672 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 433 674 rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 433 676 r11|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 436 678 rdi|QWORD = LEA [rbx|QWORD[*] + 16] size: QWORD  <||@
  Comment 440 680 rsi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 444 682 rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 447 684 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 447 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 453 686 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 457 688 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 461 690 CMP stack:36|DWORD y: 16777215 size: DWORD  <||@
  Comment 469 692 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B66 -> B67 falseDestination: B66 -> B71  <||@
  Comment 475 block B67 null  <||@
  Comment 475 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 475 696 rax|DWORD = SHL stack:36|DWORD size: DWORD  <||@
  Comment 481 698 rcx|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 484 700 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 487 702 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 490 704 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 496 706 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 499 708 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B67 -> B71 falseDestination: B67 -> B69  <||@
  Comment 505 block B69 null  <||@
  Comment 505 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 505 718 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 509 720 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 513 722 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 521 724 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 529 726 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 537 728 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 545 730 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 548 732 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 555 734 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 555 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 562 736 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 562 738 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 565 740 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 570 742 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 573 744 JUMP ~[] destination: B69 -> B72  <||@
  Comment 573 block B72 null  <||@
  Comment 573 770 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 573 772 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 576 774 rax|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r10|DWORD) condition: |>|  <||@
  Comment 583 776 rsi|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 585 778 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 587 784 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 592 780 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B91 falseDestination: B72 -> B74  <||@
  Comment 598 block B74 null  <||@
  Comment 598 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 598 794 rcx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD  <||@
  Comment 602 796 r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 606 798 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 610 800 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 613 806 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 620 802 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B74 -> B79 falseDestination: B74 -> B77  <||@
  Comment 626 block B79 null  <||@
  Comment 626 832 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 626 834 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 630 836 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 633 838 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B82 falseDestination: B79 -> B81  <||@
  Comment 639 block B81 null  <||@
  Comment 639 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 639 846 xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 645 848 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 651 850 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 655 852 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 658 854 JUMP ~[] destination: B81 -> B82  <||@
  Comment 658 block B82 null  <||@
  Comment 658 856 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 658 858 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 662 860 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 665 862 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B85 falseDestination: B82 -> B84  <||@
  Comment 671 block B84 null  <||@
  Comment 671 868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 671 870 xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 677 872 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 683 874 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 687 876 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 690 878 JUMP ~[] destination: B84 -> B85  <||@
  Comment 690 block B85 null  <||@
  Comment 690 880 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 690 882 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 694 884 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 697 886 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B88 falseDestination: B85 -> B87  <||@
  Comment 703 block B87 null  <||@
  Comment 703 892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 703 894 xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 709 896 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 715 898 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 719 900 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 722 902 JUMP ~[] destination: B87 -> B88  <||@
  Comment 722 block B88 null  <||@
  Comment 722 904 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 722 906 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 728 908 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 731 910 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B88 -> B91 falseDestination: B88 -> B90  <||@
  Comment 737 block B90 null  <||@
  Comment 737 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 920 r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD  <||@
  Comment 742 922 MOV (x: [rcx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 747 926 JUMP ~[] destination: B90 -> B91  <||@
  Comment 747 block B91 null  <||@
  Comment 747 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 747 786 rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 752 930 CMP (x: rbp|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 755 932 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B111  <||@
  Comment 761 block B111 null  <||@
  Comment 761 1072 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 761 1074 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 765 1076 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 769 1078 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 773 1080 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 779 block B113 null  <||@
  Comment 779 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 1098 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 783 1100 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 790 1102 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 790 1104 JUMP ~[] destination: B113 -> B114  <||@
  Comment 790 block B114 null  <||@
  Comment 790 1106 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 790 1108 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 793 1110 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 793 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 803 1112 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 810 1114 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 813 1116 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 813 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 820 1118 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3  <||@
  Comment 824 1120 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 828 1122 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 832 1124 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 835 1126 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 844 12  <||@
  Comment 854 block B92 null  <||@
  Comment 854 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 854 936 rax|QWORD[.] = LEA [r13|QWORD[.] + rax|DWORD * 2 + 16] size: QWORD  <||@
  Comment 859 938 rbp|QWORD = SUB (x: rbp|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 862 940 rsi|QWORD = LEA [rbp|QWORD - 16] size: QWORD  <||@
  Comment 866 942 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 869 944 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 875 block B93 null  <||@
  Comment 875 946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 875 948 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 882 950 JUMP ~[] destination: B93 -> B97  <||@
  Comment 882 block B97 null  <||@
  Comment 882 974 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 882 976 rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD  <||@
  Comment 886 978 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 889 980 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B100 falseDestination: B97 -> B99  <||@
  Comment 895 block B99 null  <||@
  Comment 895 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 895 988 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 899 990 J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 904 992 rsi|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 908 994 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 911 996 JUMP ~[] destination: B99 -> B100  <||@
  Comment 911 block B100 null  <||@
  Comment 911 998 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 911 1000 rsi|QWORD = LEA [rbp|QWORD - 4] size: QWORD  <||@
  Comment 915 1002 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 918 1004 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B103 falseDestination: B100 -> B102  <||@
  Comment 924 block B102 null  <||@
  Comment 924 1010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 924 1012 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 928 1014 J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 934 1016 rsi|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 938 1018 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 941 1020 JUMP ~[] destination: B102 -> B103  <||@
  Comment 941 block B103 null  <||@
  Comment 941 1022 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 941 1024 rsi|QWORD = LEA [rbp|QWORD - 2] size: QWORD  <||@
  Comment 945 1026 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 948 1028 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B106 falseDestination: B103 -> B105  <||@
  Comment 954 block B105 null  <||@
  Comment 954 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 954 1036 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 958 1038 J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 963 1040 rsi|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 967 1042 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 970 1044 JUMP ~[] destination: B105 -> B106  <||@
  Comment 970 block B106 null  <||@
  Comment 970 1046 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 970 1048 rbp|QWORD = DEC rbp|QWORD size: QWORD  <||@
  Comment 973 1050 CMP (x: rcx|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 976 1052 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B111 falseDestination: B106 -> B108  <||@
  Comment 982 block B108 null  <||@
  Comment 982 1058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 982 1060 MOV (x: [rax|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 987 1062 JUMP ~[] destination: B108 -> B111  <||@
  Comment 992 block B94 null  <||@
  Comment 992 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 992 954 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 996 956 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1003 958 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1003 block B95 loop 3 depth 1 header:1134|LoopBegin  <||@
  Comment 1003 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1008 962 J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1013 964 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1017 966 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1020 968 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B97 falseDestination: B95 -> B95  <||@
  Comment 1027 block B77 loop 2 depth 1 header:1070|LoopBegin  <||@
  Comment 1027 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1040 818 xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1046 820 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1052 822 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1056 824 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1059 826 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B79 falseDestination: B77 -> B77  <||@
  Comment 1066 block B71 null  <||@
  Comment 1066 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1066 748 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1070 754 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1070 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1080 756 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1082 758 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1087 760 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1090 762 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43]  <||@
  Comment 1090 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1095 [stack:8, stack:32]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                                            |1  |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}  |-  |r14|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                                 |1 
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                                                                                            |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                          
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}   <||@
  Comment 1096 764 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1099 766 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1104 768 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1109 block B36 null  <||@
  Comment 1109 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1109 340 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1112 342 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1117 344 CMP r14|DWORD y: 35 size: DWORD  <||@
  Comment 1121 346 BRANCH trueDestinationProbability: 0.9145699900595734 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 1127 block B37 null  <||@
  Comment 1127 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1127 350 rax|DWORD = MOVE input: int[34|0x22]  <||@
  Comment 1132 352 JUMP ~[] destination: B37 -> B39  <||@
  Comment 1132 block B39 null  <||@
  Comment 1132 360 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1132 362 CMP rax|DWORD y: 2147483640 size: DWORD  <||@
  Comment 1138 364 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B117  <||@
  Comment 1144 block B40 null  <||@
  Comment 1144 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1144 368 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1148 370 rdx|QWORD = LEA [rsi|QWORD + 48] size: QWORD  <||@
  Comment 1152 372 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1156 374 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1162 block B42 null  <||@
  Comment 1162 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1162 410 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1166 412 AMD64PREFETCH ~[rsi|QWORD + 240] instr: 0  <||@
  Comment 1173 414 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1173 416 JUMP ~[] destination: B42 -> B43  <||@
  Comment 1173 block B43 null  <||@
  Comment 1173 418 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1173 420 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1176 422 MOV [rsi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 1183 424 MOV [rsi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 1190 426 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1190 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1197 428 J (address: [rsi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1202 430 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1205 432 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45  <||@
  Comment 1211 block B45 null  <||@
  Comment 1211 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1211 448 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1215 450 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1219 452 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 1225 454 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B50  <||@
  Comment 1231 block B46 null  <||@
  Comment 1231 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1231 458 rcx|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 1235 460 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 1238 462 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 1241 464 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1244 466 r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1250 468 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1253 470 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B50 falseDestination: B46 -> B48  <||@
  Comment 1259 block B48 null  <||@
  Comment 1259 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1259 484 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 1263 486 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 1271 488 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1279 490 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1287 492 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1295 494 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1298 496 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1305 498 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1305 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1312 500 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1312 502 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1315 504 stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1320 506 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1323 508 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1326 510 JUMP ~[] destination: B48 -> B51  <||@
  Comment 1326 block B51 null  <||@
  Comment 1326 536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1326 538 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1330 540 rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 1334 542 xmm1|V256_WORD = H [rsi|QWORD[.]] nZ: YMM oh: VMOVDQU  <||@
  Comment 1338 544 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1342 546 J (address: [rsi|QWORD[.]], input: xmm1|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1346 548 rsi|QWORD[.] = LEA [rax|QWORD[.] + 48] size: QWORD  <||@
  Comment 1350 550 rdx|QWORD = MOV r13|DWORD size: DWORD  <||@
  Comment 1353 552 rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD  <||@
  Comment 1357 554 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1364 556 JUMP ~[] destination: B51 -> B52  <||@
  Comment 1369 block B116 loop 1 depth 1 header:1203|LoopBegin  <||@
  Comment 1369 1132 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1376 1134 r10|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1379 1136 JUMP ~[] destination: B116 -> B52  <||@
  Comment 1379 block B52 loop 1 depth 1 header:1203|LoopBegin  <||@
  Comment 1379 558 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1379 560 J (address: [rsi|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1385 562 r11|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1389 564 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1392 566 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B116  <||@
  Comment 1394 block B53 null  <||@
  Comment 1394 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 570 rcx|QWORD = LEA [rdx|QWORD - 24] size: QWORD  <||@
  Comment 1398 572 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1401 574 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55  <||@
  Comment 1407 block B55 null  <||@
  Comment 1407 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 582 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1411 584 J (address: [rsi|QWORD[.] + r10|QWORD * 2 + 32], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1418 586 rcx|QWORD = LEA [r10|QWORD + 24] size: QWORD  <||@
  Comment 1422 588 r11|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1425 590 JUMP ~[] destination: B55 -> B56  <||@
  Comment 1425 block B56 null  <||@
  Comment 1425 592 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1425 594 rcx|QWORD = LEA [rdx|QWORD - 20] size: QWORD  <||@
  Comment 1429 596 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1432 598 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 1438 block B58 null  <||@
  Comment 1438 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1438 606 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1442 608 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1448 610 rcx|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1452 612 r11|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1455 614 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1455 block B59 null  <||@
  Comment 1455 616 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1455 618 rcx|QWORD = LEA [rdx|QWORD - 18] size: QWORD  <||@
  Comment 1459 620 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1462 622 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 1468 block B61 null  <||@
  Comment 1468 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1468 630 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1472 632 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1478 634 rcx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1482 636 r11|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1485 638 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1485 block B62 null  <||@
  Comment 1485 640 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1485 642 rdx|QWORD = LEA [rdx|QWORD - 17] size: QWORD  <||@
  Comment 1489 644 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1492 646 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 1498 block B64 null  <||@
  Comment 1498 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1498 654 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1503 656 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1503 block B65 null  <||@
  Comment 1503 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1503 660 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1506 662 stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1511 664 rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1516 666 rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 1521 668 JUMP ~[] destination: B65 -> B66  <||@
  Comment 1526 block B112 null  <||@
  Comment 1526 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1526 1084 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1526 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1536 1086 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1541 1088 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1546 1090 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43]  <||@
  Comment 1546 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1551 [r13:0, stack:8, stack:32]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                                            |1  |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}  |-  |r14|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                                 |1 
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                                                                                            |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                          
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}   <||@
  Comment 1552 1092 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1552 1094 JUMP ~[] destination: B112 -> B114  <||@
  Comment 1557 block B30 null  <||@
  Comment 1557 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1557 256 stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1562 258 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 260 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1572 262 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1572 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1582 264 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1587 266 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1592 268 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27, 147, 43]  <||@
  Comment 1592 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1597 [stack:24, stack:32, stack:40]at java.net.URI.quote(URI.java:2678) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                                             |2  |3                                             |4  |5  |6             |7           |8          |9 
     locals:  |stack:56|QWORD[.]  |long[3458764316252045313|0x2fffffd200000001]  |-  |long[5188146764422578175|0x47fffffe87ffffff]  |-  |-  |Object[null]  |int[1|0x1]  |r14|DWORD  |- 
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                                                                                                                                                                                                                                                                                                                  |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-                                                                                                                                                                                                                                                                                                                  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
     stack:   |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |                                                                                                                                                                                                                                                                                                                   |   |   |   |   |   |   |              |   |    |   
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                                                                                                                                                                                                                                                
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}   <||@
  Comment 1598 270 rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1601 272 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1605 274 rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 276 rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 1615 278 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1619 280 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1624 282 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1629 284 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1634 block B50 null  <||@
  Comment 1634 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1634 514 stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 516 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1644 518 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1647 524 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1647 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1657 526 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1659 528 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1664 530 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1667 532 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43]  <||@
  Comment 1667 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1672 [r14:0, stack:24, stack:32, stack:40]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1               |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |stack:36|DWORD  |r13|DWORD 
  at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                                                                                                                                                                                                                                       
     locals:  |-                                                                                                                                                                                                                                                                                                                  |-                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                  |2              
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |stack:56|QWORD[.]  |stack:36|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                       |1 
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                                                                                                                                                                                                                                                                                                                  |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                                                                                                                                                                                                                                                
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}   <||@
  Comment 1673 534 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1678 block B38 null  <||@
  Comment 1678 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1678 358 JUMP ~[] destination: B38 -> B39  <||@
  Comment 1683 block B41 null  <||@
  Comment 1683 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1683 378 stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1688 380 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1693 382 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1696 384 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1696 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1706 386 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1711 388 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1716 390 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43]  <||@
  Comment 1716 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1721 [stack:24, stack:32, stack:40]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1               |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |stack:36|DWORD  |r13|DWORD 
  at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                                                                                                                                                                                                                                       
     locals:  |-                                                                                                                                                                                                                                                                                                                  |-                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                  |2              
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |stack:56|QWORD[.]  |stack:36|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                       |1 
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                                                                                                                                                                                                                                                                                                                  |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                                                                                                                                                                                                                                                
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}   <||@
  Comment 1722 392 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1725 394 rax|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1728 396 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1732 398 rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1737 400 rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 1742 404 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1747 406 JUMP ~[] destination: B41 -> B43  <||@
  Comment 1752 block B119 null  <||@
  Comment 1752 1158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1752 1160 rbx|DWORD = MOVE input: int[-86803|0xfffffffffffeaced]  <||@
  Comment 1757 1162 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1761 1164 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1764 1166 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1774 1168 JUMP ~[] destination: B119 -> B126  <||@
  Comment 1774 block B126 null  <||@
  Comment 1774 1266 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1774 1268 MOV (x: [r15|QWORD + 668], y: rbx|DWORD) size: DWORD  <||@
  Comment 1781 1270 MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1788 1272 DEOPT info [bci:0]  <||@
  Comment 1788 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1793 [rax:0, rcx:0, rdx:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]at java.net.URI.toString(URI.java:1936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6          |7             |8             |9             |10 
     locals:  |rax|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |-    <||@
  Comment 1794 block B34 null  <||@
  Comment 1794 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1794 322 r10|DWORD = MOVE input: int[-102241|0xfffffffffffe709f]  <||@
  Comment 1800 328 JUMP ~[] destination: B34 -> B35  <||@
  Comment 1800 block B35 null  <||@
  Comment 1800 330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1800 228 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1805 230 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1810 332 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1817 334 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1824 336 DEOPT info [bci:27, 147, 43]  <||@
  Comment 1824 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1829 [stack:32, stack:40]at java.net.URI.quote(URI.java:2678) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                                             |2  |3                                             |4  |5  |6             |7           |8          |9 
     locals:  |stack:56|QWORD[.]  |long[3458764316252045313|0x2fffffd200000001]  |-  |long[5188146764422578175|0x47fffffe87ffffff]  |-  |-  |Object[null]  |int[1|0x1]  |r14|DWORD  |- 
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                                                                                                                                                                                                                                                                                                                  |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-                                                                                                                                                                                                                                                                                                                  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
     stack:   |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |                                                                                                                                                                                                                                                                                                                   |   |   |   |   |   |   |              |   |    |   
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                                                                                                                                                                                                                                                
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}   <||@
  Comment 1830 block B27 null  <||@
  Comment 1830 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1830 226 r10|DWORD = MOVE input: int[-92947|0xfffffffffffe94ed]  <||@
  Comment 1836 232 JUMP ~[] destination: B27 -> B35  <||@
  Comment 1838 block B25 null  <||@
  Comment 1838 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1838 210 r10|DWORD = MOVE input: int[-93715|0xfffffffffffe91ed]  <||@
  Comment 1844 216 JUMP ~[] destination: B25 -> B35  <||@
  Comment 1846 block B121 null  <||@
  Comment 1846 1182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1846 1184 rbx|DWORD = MOVE input: int[-86291|0xfffffffffffeaeed]  <||@
  Comment 1851 1186 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1855 1188 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1858 1190 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1868 1192 JUMP ~[] destination: B121 -> B126  <||@
  Comment 1870 block B123 null  <||@
  Comment 1870 1206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1870 1208 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1875 1210 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1880 1212 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@830940833]  <||@
  Comment 1880 {Object[d.a@830940833]}  <||@
  Comment 1890 1214 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1893 1216 rbx|DWORD = MOVE input: int[-90651|0xfffffffffffe9de5]  <||@
  Comment 1898 1220 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1902 1222 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1907 1224 JUMP ~[] destination: B123 -> B126  <||@
  Comment 1912 block B125 null  <||@
  Comment 1912 1246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1912 1248 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1917 1250 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1922 1252 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899]  <||@
  Comment 1922 {Object[d.a@1765933899]}  <||@
  Comment 1932 1254 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1935 1256 rbx|DWORD = MOVE input: int[-121619|0xfffffffffffe24ed]  <||@
  Comment 1940 1260 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1944 1262 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1949 1264 JUMP ~[] destination: B125 -> B126  <||@
  Comment 1954 block B124 null  <||@
  Comment 1954 1226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1954 1228 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1959 1230 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1964 1232 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899]  <||@
  Comment 1964 {Object[d.a@1765933899]}  <||@
  Comment 1974 1234 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1977 1236 rbx|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed]  <||@
  Comment 1982 1240 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1986 1242 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1991 1244 JUMP ~[] destination: B124 -> B126  <||@
  Comment 1996 block B22 null  <||@
  Comment 1996 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1996 182 r10|DWORD = MOVE input: int[-93459|0xfffffffffffe92ed]  <||@
  Comment 2002 188 JUMP ~[] destination: B22 -> B35  <||@
  Comment 2007 block B117 null  <||@
  Comment 2007 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2007 1140 r10|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed]  <||@
  Comment 2013 1148 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2013 block B118 null  <||@
  Comment 2013 1150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2013 438 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2018 440 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2021 442 rax|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2024 1152 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2031 1154 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2038 1156 DEOPT info [bci:18, 17, 21, 7, 150, 43]  <||@
  Comment 2038 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2043 [stack:32, stack:40]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1          |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |rax|DWORD  |r13|DWORD 
  at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                                                                                                                                                                                                                                       
     locals:  |-                                                                                                                                                                                                                                                                                                                  |-                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                  |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |stack:56|QWORD[.]  |rax|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                       |1 
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                                                                                                                                                                                                                                                                                                                  |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                                                                                                                                                                                                                                                
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}   <||@
  Comment 2044 block B122 null  <||@
  Comment 2044 1194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2044 1196 rbx|DWORD = MOVE input: int[-86035|0xfffffffffffeafed]  <||@
  Comment 2049 1198 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2053 1200 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2056 1202 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2066 1204 JUMP ~[] destination: B122 -> B126  <||@
  Comment 2071 block B5 null  <||@
  Comment 2071 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2071 54 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2076 56 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2081 58 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899]  <||@
  Comment 2081 {Object[d.a@1765933899]}  <||@
  Comment 2091 60 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2094 62 rbx|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed]  <||@
  Comment 2099 66 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2103 68 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2108 70 JUMP ~[] destination: B5 -> B126  <||@
  Comment 2113 block B44 null  <||@
  Comment 2113 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2113 436 r10|DWORD = MOVE input: int[-114017|0xfffffffffffe429f]  <||@
  Comment 2119 444 JUMP ~[] destination: B44 -> B118  <||@
  Comment 2121 block B19 null  <||@
  Comment 2121 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2121 152 r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed]  <||@
  Comment 2127 158 JUMP ~[] destination: B19 -> B35  <||@
  Comment 2132 block B120 null  <||@
  Comment 2132 1170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2132 1172 rbx|DWORD = MOVE input: int[-86547|0xfffffffffffeaded]  <||@
  Comment 2137 1174 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2141 1176 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2144 1178 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2154 1180 JUMP ~[] destination: B120 -> B126  <||@
  Comment 2159 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2159 4  <||@
  Comment 2165 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2165 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9434[java.net.URI.toString(String, String, String, String, String, int, String, String, String)]"
  method "HotSpotCompilation-9434[java.net.URI.toString(String, String, String, String, String, int, String, String, String)]"
  date 1527005211615
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106acdca0 448b560849c1e203493bc20f85af81d3ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8b6c24684c8b5424704c8b5c24784d85d20f85300700004d85db0f8551070000418b5d0c8b04dd0c0000008944243c8be848896c24304c8bf549ffce48c1e30385c00f84090000004d85f60f8c95070000493bee0f870800000085c00f85bb0600004885d20f85600700004885c90f85910600004885ff0f85a60700004d85c00f852106000048bfffffff87feffff4748ba01000000d2ffff2f41be000000000f1f8400000000000f1f8000000000413bc60f8e63000000460fb75473104181fa800000000f832a0600004585d20f8444070000458bde41ffc34183fa400f821c000000418d4ac049c7c20100000049d3e24985fa0f8402060000458bf3ebaf49c7c001000000418bca49d3e04985d00f8485060000458bf3eb948d78f0c5f9efc083ff010f8df9020000498b7f60488d5730493b57700f87a7040000498957600f1887f0000000488bd7c7470c1000000048c70701000000c74708410000f8c5fe7f471083f8110f8363050000c744241410000000488974242048895424084c8bda488d7b10498d7310488bd5e81c4ed4ff90498b7760498b5770817c243cffffff000f834f0200008b44243cd1e08d481783e1f84863c94c8bd14c03d64c3bd20f87310200008b44243c4d8957600f188431c00000000f188431000100000f188431400100000f1884318001000089460c48c70601000000c74608410000f84c8bee448b542414448bf0453bf2418bc6410f47c28bf085c0488b5424080f8495000000498d4d104c8d52104c8d5ef04d85db49c7c0000000000f8d9e0100004c8d5ef84d3bc30f8f13000000c4817a6f0442c4a17a7f04414d8d58084d8bc34c8d5efc4d3bc30f8f13000000c481f96e0442c4a1f97e04414d8d58044d8bc34c8d5efe4d3bc30f8f13000000c481796e0442c4a1797e04414d8d58024d8bc34c8bde49ffcb4d3bc30f8f0a000000470fbf14426646891441488b6c2430483bee0f875d000000498b4760488d7018493b77700f87eb020000498977600f1880d8000000488bf048bad01600c007000000488b92a8000000488910c74008da0200f849c1ed034489680c44896010488bc6488b6c24504883c45885051410dcfdc5f877c3498d444510482bee488d75f04885f60f8d7500000048c7c100000000488d75f8483bce0f8f10000000c5f9efc0c5fa7f0448488d7108488bce488d75fc483bce0f8f11000000c5f9efc0c4e1f97e0448488d7104488bce488d75fe483bce0f8f10000000c5f9efc0c5f97e0448488d7102488bce48ffcd483bcd0f8f23ffffff6644892448e919ffffffc5f9efc048c7c1000000000f1f440000c5fe7f0448488d4910483bce7ef2e96fffffff0f1f8000000000660f1f440000c4817e6f0442c4a17e7f04414d8d40104d3bc37eebe948feffff8b44243c48be080200c0070000008bd0b900000000448bf0e8f98c4c00904c8be8448b542414e9e8fdffff448bf048897424204183fe230f8327020000b82200000081f8f8ffff7f0f835f030000498b7760488d5630493b57700f8709020000498957600f1886f00000004c8bd6c7460c1000000048c70601000000c74608410000f8c5fe7f4610443bf00f8786030000498b7760498b577081f8ffffff000f83930100008bc8d1e18d491783e1f84863c94c8bd94c03de4c3bda0f87770100004d895f600f188431c00000000f188431000100000f188431400100000f1884318001000089460c48c70601000000c74608410000f8448be848895c2418488bc64d8bf2c5f9efc0498d7610c5fe6f0e488d7010c5fe7f0e488d7030418bd5488d4ae049c7c200000000e90a0000000f1f80000000004d8bd3c4a17e7f04564d8d5a104c3bd97eee488d4ae84c3bd90f8f12000000c5f9efc0c4a17a7f445620498d4a184c8bd9488d4aec4c3bd90f8f11000000c5f9efc0c4a1f97e045e498d4b044c8bd9488d4aee4c3bd90f8f11000000c5f9efc0c4a1797e045e498d4b024c8bd9488d52ef4c3bda0f8f05000000664689245e488bd044896c2414488b5c2418488b6c2430e9b6fbffff48be680b00c007000000ba02000000b901000000e8318b4c0090e901fdffff48895c24184c896c2428488974242048be680b00c007000000ba08000000b901000000e8038b4c0090488bf8c5f9efc0488b5c2418488b6c24308b44243c4c8b6c2428488b742420e917fbffff48895c24184c896c24284d8bf248be080200c0070000008bd0b900000000448be8e8b88a4c0090e9a0feffffe9d9fdffff48895c24184c896c2428448be848be680b00c007000000ba08000000b901000000e8878a4c0090488bf0418bc5c5f9efc0488b5c2418488b6c24304c8b6c2428e9bdfdffffbbedacfeff8b6c2460488bc648be000000000000000041899f9c0200004989b7a8020000e85d92d3ff9041ba9f70feff4c896c242848897424204589979c0200004d89a7a8020000e83992d3ff9041baed94feffebda41baed91feffebd2bbedaefeff8b6c2460488bc648be0000000000000000eba04c896c2428488974242048bb883dc8b907000000488bf3bbe59dfeff8b6c2460488b442420e976ffffff4c896c2428488974242048bb583dc8b907000000488bf3bbed24feff8b6c2460488b442420e94cffffff4c896c2428488974242048bb583dc8b907000000488bf3bbed23feff8b6c2460488b442420e922ffffff41baed92feffe931ffffff41baed63feff4c896c2428448be8418bc64589979c0200004d89a7a8020000e86391d3ff90bbedaffeff8b6c2460488bc648be0000000000000000e9d7feffff4c896c2428488974242048bb583dc8b907000000488bf3bbeda1feff8b6c2460488b442420e9adfeffff41ba9f42feffeb9441baed93feffe9b4feffffbbedadfeff8b6c2460488bc648be0000000000000000e97ffeffffe80cc1170090e8e68fd3ff90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rdi|QWORD[.], in:0|DWORD, in:8|QWORD[.], in:16|QWORD[.], in:24|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@722923fd slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE in:8|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|QWORD[.] = MOVE in:16|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r11|QWORD[.] = MOVE in:24|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 66 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B125  <||@
  Comment 72 block B1 null  <||@
  Comment 72 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 18 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 75 20 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B124  <||@
  Comment 81 block B2 null  <||@
  Comment 81 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 24 rbx|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]at java.net.URI.toString(URI.java:1936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6           |7             |8             |9             |10 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |in:0|DWORD  |r13|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |-    <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 26 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 85 [rcx:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]at java.net.URI.toString(URI.java:1936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6           |7             |8             |9             |10 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |in:0|DWORD  |r13|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |-    <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 92 28 stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 96 30 rbp|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 98 32 stack:48|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 103 34 r14|QWORD = DEC rbp|QWORD size: QWORD  <||@
  Comment 109 36 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3  <||@
  Comment 113 38 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 115 40 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 121 block B4 null  <||@
  Comment 121 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 48 TEST (x: r14|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 124 50 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 130 block B7 null  <||@
  Comment 130 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 78 CMP (x: rbp|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 133 80 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B7 -> B11 falseDestination: B7 -> B9  <||@
  Comment 139 block B9 null  <||@
  Comment 139 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 88 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 141 90 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B11 falseDestination: B9 -> B123  <||@
  Comment 147 block B11 null  <||@
  Comment 147 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 98 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 150 100 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B122  <||@
  Comment 156 block B12 null  <||@
  Comment 156 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 104 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 159 106 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B121  <||@
  Comment 165 block B13 null  <||@
  Comment 165 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 110 TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 168 112 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B120  <||@
  Comment 174 block B14 null  <||@
  Comment 174 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 116 TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 177 118 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B119  <||@
  Comment 183 block B15 null  <||@
  Comment 183 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 122 rdi|QWORD = MOVE input: long[5188146764422578175|0x47fffffe87ffffff]  <||@
  Comment 193 124 rdx|QWORD = MOVE input: long[3458764316252045313|0x2fffffd200000001]  <||@
  Comment 203 126 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 209 128 JUMP ~[] destination: B15 -> B16  <||@
  Comment 209 block B16 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 209 130 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 224 132 CMP (x: rax|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 227 134 BRANCH trueDestinationProbability: 0.948955993128056 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B28  <||@
  Comment 233 block B17 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 233 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 138 r10|DWORD = MOVZX [rbx|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD  <||@
  Comment 239 140 CMP r10|DWORD y: 128 size: DWORD  <||@
  Comment 246 142 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B27  <||@
  Comment 252 block B18 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 252 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 252 146 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 255 148 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 261 block B20 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 261 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 162 r11|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 267 164 CMP r10|DWORD y: 64 size: DWORD  <||@
  Comment 271 166 BRANCH trueDestinationProbability: 0.053955085675688075 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B24  <||@
  Comment 277 block B24 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 277 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 198 rcx|DWORD = LEA [r10|DWORD - 64] size: DWORD  <||@
  Comment 281 200 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 288 202 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 291 204 TEST (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 294 206 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 300 block B26 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 300 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 300 220 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 303 222 JUMP ~[] destination: B26 -> B16  <||@
  Comment 305 block B21 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 305 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 305 170 r8|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 312 172 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 315 174 r8|QWORD = SHL (x: r8|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 318 176 TEST (x: rdx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 321 178 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 327 block B23 loop 0 depth 1 header:66|LoopBegin  <||@
  Comment 327 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 192 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 330 194 JUMP ~[] destination: B23 -> B16  <||@
  Comment 332 block B28 null  <||@
  Comment 332 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 332 236 rdi|DWORD = LEA [rax|DWORD - 16] size: DWORD  <||@
  Comment 335 238 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 339 240 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 342 242 BRANCH trueDestinationProbability: 0.9530051944349821 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B36  <||@
  Comment 348 block B29 null  <||@
  Comment 348 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 348 246 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 352 248 rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD  <||@
  Comment 356 250 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 360 252 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 366 block B31 null  <||@
  Comment 366 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 366 288 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 370 290 AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0  <||@
  Comment 377 292 rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 377 294 JUMP ~[] destination: B31 -> B32  <||@
  Comment 377 block B32 null  <||@
  Comment 377 296 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 377 298 rdx|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 380 300 MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 387 302 MOV [rdi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 394 304 MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 394 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 401 306 J (address: [rdi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 406 308 CMP rax|DWORD y: 17 size: DWORD  <||@
  Comment 409 310 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 415 block B33 null  <||@
  Comment 415 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 314 stack:76|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 423 316 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 428 318 JUMP ~[] destination: B33 -> B66  <||@
  Comment 428 block B66 null  <||@
  Comment 428 670 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 428 672 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 433 674 rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 433 676 r11|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 436 678 rdi|QWORD = LEA [rbx|QWORD[*] + 16] size: QWORD  <||@
  Comment 440 680 rsi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 444 682 rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 447 684 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 447 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 453 686 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 457 688 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 461 690 CMP stack:36|DWORD y: 16777215 size: DWORD  <||@
  Comment 469 692 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B66 -> B67 falseDestination: B66 -> B71  <||@
  Comment 475 block B67 null  <||@
  Comment 475 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 475 696 rax|DWORD = SHL stack:36|DWORD size: DWORD  <||@
  Comment 481 698 rcx|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 484 700 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 487 702 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 490 704 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 496 706 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 499 708 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B67 -> B71 falseDestination: B67 -> B69  <||@
  Comment 505 block B69 null  <||@
  Comment 505 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 505 718 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 509 720 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 513 722 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 521 724 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 529 726 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 537 728 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 545 730 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 548 732 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 555 734 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 555 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 562 736 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 562 738 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 565 740 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 570 742 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 573 744 JUMP ~[] destination: B69 -> B72  <||@
  Comment 573 block B72 null  <||@
  Comment 573 770 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 573 772 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 576 774 rax|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r10|DWORD) condition: |>|  <||@
  Comment 583 776 rsi|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 585 778 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 587 784 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 592 780 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B91 falseDestination: B72 -> B74  <||@
  Comment 598 block B74 null  <||@
  Comment 598 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 598 794 rcx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD  <||@
  Comment 602 796 r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 606 798 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 610 800 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 613 806 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 620 802 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B74 -> B79 falseDestination: B74 -> B77  <||@
  Comment 626 block B79 null  <||@
  Comment 626 832 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 626 834 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 630 836 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 633 838 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B82 falseDestination: B79 -> B81  <||@
  Comment 639 block B81 null  <||@
  Comment 639 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 639 846 xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 645 848 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 651 850 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 655 852 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 658 854 JUMP ~[] destination: B81 -> B82  <||@
  Comment 658 block B82 null  <||@
  Comment 658 856 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 658 858 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 662 860 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 665 862 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B85 falseDestination: B82 -> B84  <||@
  Comment 671 block B84 null  <||@
  Comment 671 868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 671 870 xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 677 872 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 683 874 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 687 876 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 690 878 JUMP ~[] destination: B84 -> B85  <||@
  Comment 690 block B85 null  <||@
  Comment 690 880 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 690 882 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 694 884 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 697 886 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B88 falseDestination: B85 -> B87  <||@
  Comment 703 block B87 null  <||@
  Comment 703 892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 703 894 xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 709 896 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 715 898 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 719 900 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 722 902 JUMP ~[] destination: B87 -> B88  <||@
  Comment 722 block B88 null  <||@
  Comment 722 904 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 722 906 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 728 908 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 731 910 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B88 -> B91 falseDestination: B88 -> B90  <||@
  Comment 737 block B90 null  <||@
  Comment 737 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 920 r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD  <||@
  Comment 742 922 MOV (x: [rcx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 747 926 JUMP ~[] destination: B90 -> B91  <||@
  Comment 747 block B91 null  <||@
  Comment 747 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 747 786 rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 752 930 CMP (x: rbp|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 755 932 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B111  <||@
  Comment 761 block B111 null  <||@
  Comment 761 1072 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 761 1074 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 765 1076 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 769 1078 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 773 1080 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 779 block B113 null  <||@
  Comment 779 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 1098 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 783 1100 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 790 1102 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 790 1104 JUMP ~[] destination: B113 -> B114  <||@
  Comment 790 block B114 null  <||@
  Comment 790 1106 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 790 1108 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 793 1110 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 793 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 803 1112 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 810 1114 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 813 1116 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 813 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 820 1118 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@b883ea8 encoding: base: 0 shift: 3  <||@
  Comment 824 1120 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 828 1122 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 832 1124 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 835 1126 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 844 12  <||@
  Comment 854 block B92 null  <||@
  Comment 854 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 854 936 rax|QWORD[.] = LEA [r13|QWORD[.] + rax|DWORD * 2 + 16] size: QWORD  <||@
  Comment 859 938 rbp|QWORD = SUB (x: rbp|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 862 940 rsi|QWORD = LEA [rbp|QWORD - 16] size: QWORD  <||@
  Comment 866 942 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 869 944 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 875 block B93 null  <||@
  Comment 875 946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 875 948 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 882 950 JUMP ~[] destination: B93 -> B97  <||@
  Comment 882 block B97 null  <||@
  Comment 882 974 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 882 976 rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD  <||@
  Comment 886 978 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 889 980 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B97 -> B100 falseDestination: B97 -> B99  <||@
  Comment 895 block B99 null  <||@
  Comment 895 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 895 988 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 899 990 J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 904 992 rsi|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 908 994 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 911 996 JUMP ~[] destination: B99 -> B100  <||@
  Comment 911 block B100 null  <||@
  Comment 911 998 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 911 1000 rsi|QWORD = LEA [rbp|QWORD - 4] size: QWORD  <||@
  Comment 915 1002 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 918 1004 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B100 -> B103 falseDestination: B100 -> B102  <||@
  Comment 924 block B102 null  <||@
  Comment 924 1010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 924 1012 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 928 1014 J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 934 1016 rsi|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 938 1018 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 941 1020 JUMP ~[] destination: B102 -> B103  <||@
  Comment 941 block B103 null  <||@
  Comment 941 1022 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 941 1024 rsi|QWORD = LEA [rbp|QWORD - 2] size: QWORD  <||@
  Comment 945 1026 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 948 1028 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B106 falseDestination: B103 -> B105  <||@
  Comment 954 block B105 null  <||@
  Comment 954 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 954 1036 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 958 1038 J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 963 1040 rsi|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 967 1042 rcx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 970 1044 JUMP ~[] destination: B105 -> B106  <||@
  Comment 970 block B106 null  <||@
  Comment 970 1046 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 970 1048 rbp|QWORD = DEC rbp|QWORD size: QWORD  <||@
  Comment 973 1050 CMP (x: rcx|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 976 1052 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B111 falseDestination: B106 -> B108  <||@
  Comment 982 block B108 null  <||@
  Comment 982 1058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 982 1060 MOV (x: [rax|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 987 1062 JUMP ~[] destination: B108 -> B111  <||@
  Comment 992 block B94 null  <||@
  Comment 992 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 992 954 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 996 956 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1003 958 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1003 block B95 loop 3 depth 1 header:1134|LoopBegin  <||@
  Comment 1003 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1008 962 J (address: [rax|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1013 964 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1017 966 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1020 968 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B95 -> B97 falseDestination: B95 -> B95  <||@
  Comment 1027 block B77 loop 2 depth 1 header:1070|LoopBegin  <||@
  Comment 1027 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1040 818 xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1046 820 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1052 822 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1056 824 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1059 826 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B79 falseDestination: B77 -> B77  <||@
  Comment 1066 block B71 null  <||@
  Comment 1066 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1066 748 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1070 754 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1070 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1080 756 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1082 758 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1087 760 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1090 762 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43]  <||@
  Comment 1090 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1095 [stack:8, stack:32]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                                            |1  |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}  |-  |r14|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                                 |1 
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                                                                                            |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                          
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}   <||@
  Comment 1096 764 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1099 766 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1104 768 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1109 block B36 null  <||@
  Comment 1109 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1109 340 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1112 342 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1117 344 CMP r14|DWORD y: 35 size: DWORD  <||@
  Comment 1121 346 BRANCH trueDestinationProbability: 0.9145699900595734 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 1127 block B37 null  <||@
  Comment 1127 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1127 350 rax|DWORD = MOVE input: int[34|0x22]  <||@
  Comment 1132 352 JUMP ~[] destination: B37 -> B39  <||@
  Comment 1132 block B39 null  <||@
  Comment 1132 360 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1132 362 CMP rax|DWORD y: 2147483640 size: DWORD  <||@
  Comment 1138 364 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B117  <||@
  Comment 1144 block B40 null  <||@
  Comment 1144 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1144 368 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1148 370 rdx|QWORD = LEA [rsi|QWORD + 48] size: QWORD  <||@
  Comment 1152 372 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1156 374 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1162 block B42 null  <||@
  Comment 1162 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1162 410 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1166 412 AMD64PREFETCH ~[rsi|QWORD + 240] instr: 0  <||@
  Comment 1173 414 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1173 416 JUMP ~[] destination: B42 -> B43  <||@
  Comment 1173 block B43 null  <||@
  Comment 1173 418 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1173 420 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1176 422 MOV [rsi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 1183 424 MOV [rsi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 1190 426 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1190 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1197 428 J (address: [rsi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1202 430 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1205 432 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45  <||@
  Comment 1211 block B45 null  <||@
  Comment 1211 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1211 448 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1215 450 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1219 452 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 1225 454 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B50  <||@
  Comment 1231 block B46 null  <||@
  Comment 1231 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1231 458 rcx|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 1235 460 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 1238 462 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 1241 464 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1244 466 r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1250 468 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1253 470 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B50 falseDestination: B46 -> B48  <||@
  Comment 1259 block B48 null  <||@
  Comment 1259 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1259 484 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 1263 486 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 1271 488 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1279 490 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1287 492 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1295 494 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1298 496 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1305 498 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1305 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1312 500 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1312 502 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1315 504 stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1320 506 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1323 508 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1326 510 JUMP ~[] destination: B48 -> B51  <||@
  Comment 1326 block B51 null  <||@
  Comment 1326 536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1326 538 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1330 540 rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 1334 542 xmm1|V256_WORD = H [rsi|QWORD[.]] nZ: YMM oh: VMOVDQU  <||@
  Comment 1338 544 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1342 546 J (address: [rsi|QWORD[.]], input: xmm1|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1346 548 rsi|QWORD[.] = LEA [rax|QWORD[.] + 48] size: QWORD  <||@
  Comment 1350 550 rdx|QWORD = MOV r13|DWORD size: DWORD  <||@
  Comment 1353 552 rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD  <||@
  Comment 1357 554 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1364 556 JUMP ~[] destination: B51 -> B52  <||@
  Comment 1369 block B116 loop 1 depth 1 header:1203|LoopBegin  <||@
  Comment 1369 1132 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1376 1134 r10|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1379 1136 JUMP ~[] destination: B116 -> B52  <||@
  Comment 1379 block B52 loop 1 depth 1 header:1203|LoopBegin  <||@
  Comment 1379 558 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1379 560 J (address: [rsi|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1385 562 r11|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1389 564 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1392 566 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B116  <||@
  Comment 1394 block B53 null  <||@
  Comment 1394 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1394 570 rcx|QWORD = LEA [rdx|QWORD - 24] size: QWORD  <||@
  Comment 1398 572 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1401 574 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55  <||@
  Comment 1407 block B55 null  <||@
  Comment 1407 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 582 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1411 584 J (address: [rsi|QWORD[.] + r10|QWORD * 2 + 32], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1418 586 rcx|QWORD = LEA [r10|QWORD + 24] size: QWORD  <||@
  Comment 1422 588 r11|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1425 590 JUMP ~[] destination: B55 -> B56  <||@
  Comment 1425 block B56 null  <||@
  Comment 1425 592 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1425 594 rcx|QWORD = LEA [rdx|QWORD - 20] size: QWORD  <||@
  Comment 1429 596 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1432 598 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 1438 block B58 null  <||@
  Comment 1438 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1438 606 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1442 608 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1448 610 rcx|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1452 612 r11|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1455 614 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1455 block B59 null  <||@
  Comment 1455 616 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1455 618 rcx|QWORD = LEA [rdx|QWORD - 18] size: QWORD  <||@
  Comment 1459 620 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1462 622 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 1468 block B61 null  <||@
  Comment 1468 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1468 630 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1472 632 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1478 634 rcx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1482 636 r11|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1485 638 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1485 block B62 null  <||@
  Comment 1485 640 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1485 642 rdx|QWORD = LEA [rdx|QWORD - 17] size: QWORD  <||@
  Comment 1489 644 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1492 646 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 1498 block B64 null  <||@
  Comment 1498 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1498 654 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1503 656 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1503 block B65 null  <||@
  Comment 1503 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1503 660 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1506 662 stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1511 664 rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1516 666 rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 1521 668 JUMP ~[] destination: B65 -> B66  <||@
  Comment 1526 block B112 null  <||@
  Comment 1526 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1526 1084 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1526 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1536 1086 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1541 1088 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1546 1090 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 150, 43]  <||@
  Comment 1546 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1551 [r13:0, stack:8, stack:32]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                                            |1  |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}  |-  |r14|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                                 |1 
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                                                                                            |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                          
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=stack:88|QWORD[.],toStringCache=Object[null]}   <||@
  Comment 1552 1092 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1552 1094 JUMP ~[] destination: B112 -> B114  <||@
  Comment 1557 block B30 null  <||@
  Comment 1557 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1557 256 stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1562 258 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 260 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1572 262 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1572 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1582 264 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1587 266 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1592 268 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:27, 147, 43]  <||@
  Comment 1592 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1597 [stack:24, stack:32, stack:40]at java.net.URI.quote(URI.java:2678) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                                             |2  |3                                             |4  |5  |6             |7           |8          |9 
     locals:  |stack:56|QWORD[.]  |long[3458764316252045313|0x2fffffd200000001]  |-  |long[5188146764422578175|0x47fffffe87ffffff]  |-  |-  |Object[null]  |int[1|0x1]  |r14|DWORD  |- 
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                                                                                                                                                                                                                                                                                                                  |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-                                                                                                                                                                                                                                                                                                                  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
     stack:   |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |                                                                                                                                                                                                                                                                                                                   |   |   |   |   |   |   |              |   |    |   
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                                                                                                                                                                                                                                                
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}   <||@
  Comment 1598 270 rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1601 272 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1605 274 rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 276 rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 1615 278 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1619 280 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1624 282 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1629 284 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1634 block B50 null  <||@
  Comment 1634 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1634 514 stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 516 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1644 518 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1647 524 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1647 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1657 526 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1659 528 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1664 530 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1667 532 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43]  <||@
  Comment 1667 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1672 [r14:0, stack:24, stack:32, stack:40]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1               |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |stack:36|DWORD  |r13|DWORD 
  at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                                                                                                                                                                                                                                       
     locals:  |-                                                                                                                                                                                                                                                                                                                  |-                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                  |2              
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |stack:56|QWORD[.]  |stack:36|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                       |1 
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                                                                                                                                                                                                                                                                                                                  |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                                                                                                                                                                                                                                                
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}   <||@
  Comment 1673 534 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1678 block B38 null  <||@
  Comment 1678 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1678 358 JUMP ~[] destination: B38 -> B39  <||@
  Comment 1683 block B41 null  <||@
  Comment 1683 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1683 378 stack:72|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1688 380 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1693 382 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1696 384 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1696 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1706 386 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1711 388 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1716 390 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:18, 17, 21, 7, 150, 43]  <||@
  Comment 1716 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1721 [stack:24, stack:32, stack:40]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1               |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |stack:36|DWORD  |r13|DWORD 
  at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                                                                                                                                                                                                                                       
     locals:  |-                                                                                                                                                                                                                                                                                                                  |-                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                  |2              
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |stack:56|QWORD[.]  |stack:36|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                       |1 
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                                                                                                                                                                                                                                                                                                                  |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                                                                                                                                                                                                                                                
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}   <||@
  Comment 1722 392 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1725 394 rax|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1728 396 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1732 398 rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1737 400 rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 1742 404 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1747 406 JUMP ~[] destination: B41 -> B43  <||@
  Comment 1752 block B119 null  <||@
  Comment 1752 1158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1752 1160 rbx|DWORD = MOVE input: int[-86803|0xfffffffffffeaced]  <||@
  Comment 1757 1162 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1761 1164 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1764 1166 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1774 1168 JUMP ~[] destination: B119 -> B126  <||@
  Comment 1774 block B126 null  <||@
  Comment 1774 1266 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1774 1268 MOV (x: [r15|QWORD + 668], y: rbx|DWORD) size: DWORD  <||@
  Comment 1781 1270 MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1788 1272 DEOPT info [bci:0]  <||@
  Comment 1788 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1793 [rax:0, rcx:0, rdx:0, rdi:0, r8:0, r9:0, r10:0, r11:0, r13:0]at java.net.URI.toString(URI.java:1936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4            |5             |6          |7             |8             |9             |10 
     locals:  |rax|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|QWORD[.]  |rdi|QWORD[.]  |rbp|DWORD  |r13|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |-    <||@
  Comment 1794 block B34 null  <||@
  Comment 1794 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1794 322 r10|DWORD = MOVE input: int[-102241|0xfffffffffffe709f]  <||@
  Comment 1800 328 JUMP ~[] destination: B34 -> B35  <||@
  Comment 1800 block B35 null  <||@
  Comment 1800 330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1800 228 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1805 230 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1810 332 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1817 334 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1824 336 DEOPT info [bci:27, 147, 43]  <||@
  Comment 1824 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1829 [stack:32, stack:40]at java.net.URI.quote(URI.java:2678) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                                             |2  |3                                             |4  |5  |6             |7           |8          |9 
     locals:  |stack:56|QWORD[.]  |long[3458764316252045313|0x2fffffd200000001]  |-  |long[5188146764422578175|0x47fffffe87ffffff]  |-  |-  |Object[null]  |int[1|0x1]  |r14|DWORD  |- 
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 147, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                                                                                                                                                                                                                                                                                                                  |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-                                                                                                                                                                                                                                                                                                                  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
     stack:   |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |                                                                                                                                                                                                                                                                                                                   |   |   |   |   |   |   |              |   |    |   
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                                                                                                                                                                                                                                                
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}   <||@
  Comment 1830 block B27 null  <||@
  Comment 1830 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1830 226 r10|DWORD = MOVE input: int[-92947|0xfffffffffffe94ed]  <||@
  Comment 1836 232 JUMP ~[] destination: B27 -> B35  <||@
  Comment 1838 block B25 null  <||@
  Comment 1838 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1838 210 r10|DWORD = MOVE input: int[-93715|0xfffffffffffe91ed]  <||@
  Comment 1844 216 JUMP ~[] destination: B25 -> B35  <||@
  Comment 1846 block B121 null  <||@
  Comment 1846 1182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1846 1184 rbx|DWORD = MOVE input: int[-86291|0xfffffffffffeaeed]  <||@
  Comment 1851 1186 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1855 1188 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1858 1190 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1868 1192 JUMP ~[] destination: B121 -> B126  <||@
  Comment 1870 block B123 null  <||@
  Comment 1870 1206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1870 1208 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1875 1210 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1880 1212 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@830940833]  <||@
  Comment 1880 {Object[d.a@830940833]}  <||@
  Comment 1890 1214 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1893 1216 rbx|DWORD = MOVE input: int[-90651|0xfffffffffffe9de5]  <||@
  Comment 1898 1220 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1902 1222 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1907 1224 JUMP ~[] destination: B123 -> B126  <||@
  Comment 1912 block B125 null  <||@
  Comment 1912 1246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1912 1248 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1917 1250 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1922 1252 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899]  <||@
  Comment 1922 {Object[d.a@1765933899]}  <||@
  Comment 1932 1254 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1935 1256 rbx|DWORD = MOVE input: int[-121619|0xfffffffffffe24ed]  <||@
  Comment 1940 1260 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1944 1262 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1949 1264 JUMP ~[] destination: B125 -> B126  <||@
  Comment 1954 block B124 null  <||@
  Comment 1954 1226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1954 1228 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1959 1230 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1964 1232 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899]  <||@
  Comment 1964 {Object[d.a@1765933899]}  <||@
  Comment 1974 1234 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1977 1236 rbx|DWORD = MOVE input: int[-121875|0xfffffffffffe23ed]  <||@
  Comment 1982 1240 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 1986 1242 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1991 1244 JUMP ~[] destination: B124 -> B126  <||@
  Comment 1996 block B22 null  <||@
  Comment 1996 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1996 182 r10|DWORD = MOVE input: int[-93459|0xfffffffffffe92ed]  <||@
  Comment 2002 188 JUMP ~[] destination: B22 -> B35  <||@
  Comment 2007 block B117 null  <||@
  Comment 2007 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2007 1140 r10|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed]  <||@
  Comment 2013 1148 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2013 block B118 null  <||@
  Comment 2013 1150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2013 438 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2018 440 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2021 442 rax|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2024 1152 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2031 1154 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2038 1156 DEOPT info [bci:18, 17, 21, 7, 150, 43]  <||@
  Comment 2038 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2043 [stack:32, stack:40]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 18, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1          |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |rax|DWORD  |r13|DWORD 
  at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                                                                                                                                                                                                                                       
     locals:  |-                                                                                                                                                                                                                                                                                                                  |-                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                  |1                  |2         
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |stack:56|QWORD[.]  |rax|DWORD 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                                                                                       |1 
     locals:  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at java.net.URI.appendSchemeSpecificPart(URI.java:1911) [bci: 150, duringCall: true, rethrow: false]
              |0  |1                                                                                                                                                                                                                                                                                                                  |2  |3  |4  |5  |6  |7  |8             |9  |10  |11 
     locals:  |-  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}  |-  |-  |-  |-  |-  |-  |Object[null]  |-  |-   |-  
  at java.net.URI.toString(URI.java:1941) [bci: 43, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9             |10                                                                                                                                                                                                                                                                                                                
     locals:  |stack:64|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |Object[null]  |vobject:StringBuffer:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]},toStringCache=Object[null]}   <||@
  Comment 2044 block B122 null  <||@
  Comment 2044 1194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2044 1196 rbx|DWORD = MOVE input: int[-86035|0xfffffffffffeafed]  <||@
  Comment 2049 1198 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2053 1200 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2056 1202 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2066 1204 JUMP ~[] destination: B122 -> B126  <||@
  Comment 2071 block B5 null  <||@
  Comment 2071 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2071 54 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2076 56 stack:64|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2081 58 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1765933899]  <||@
  Comment 2081 {Object[d.a@1765933899]}  <||@
  Comment 2091 60 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2094 62 rbx|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed]  <||@
  Comment 2099 66 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2103 68 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2108 70 JUMP ~[] destination: B5 -> B126  <||@
  Comment 2113 block B44 null  <||@
  Comment 2113 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2113 436 r10|DWORD = MOVE input: int[-114017|0xfffffffffffe429f]  <||@
  Comment 2119 444 JUMP ~[] destination: B44 -> B118  <||@
  Comment 2121 block B19 null  <||@
  Comment 2121 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2121 152 r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed]  <||@
  Comment 2127 158 JUMP ~[] destination: B19 -> B35  <||@
  Comment 2132 block B120 null  <||@
  Comment 2132 1170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2132 1172 rbx|DWORD = MOVE input: int[-86547|0xfffffffffffeaded]  <||@
  Comment 2137 1174 rbp|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 2141 1176 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2144 1178 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2154 1180 JUMP ~[] destination: B120 -> B126  <||@
  Comment 2159 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2159 4  <||@
  Comment 2165 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2165 5  <||@
  HexCodeFile>>> <|@
end_nmethod
