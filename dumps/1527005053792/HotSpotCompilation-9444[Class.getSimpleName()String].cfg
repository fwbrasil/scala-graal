begin_compilation
  name " HotSpotCompilation-9444[java.lang.Class.getSimpleName()]"
  method "HotSpotCompilation-9444[java.lang.Class.getSimpleName()]"
  date 1527005203459
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1470 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1470  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Class;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v794 j1403 v1509 v796 ?282 v1492 v699 ?1086 ?323 ?1085 v790 ?401 v793 v797 v300 j1266 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class._klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:77) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: v11 
=== Usages ===
v5 v1510 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:78) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
stamp: void
=== Inputs ===
value: v1470 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: v1470  <|@  <|@
f <@~|@floating>@ <|@
tid a1104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?269 v1168 v1142 v1134 v1158 v1118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1032 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 v1395 v1355 v1265 v1222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:78) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i91 i66 ?183 a1367 a1327 i902 a1189 a1236 a1287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i910 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1367 a1189 a1236 a1287 a1327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1189 a1236 a1287 a1327 a1367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1410 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1411 j1431 j1418 j1423 j1427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rawvalue: Class:java.lang.System
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.System]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1496 v1554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:78) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v184 v17 v1224 v370 ?183 v759 ?183 v780 v1460 v886 v531 v535 v498 v1461 v500 ?183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?282 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1309
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?358 ?269 ?272 ?382 ?323 ?339 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1443
stackSize: 0
=== Inputs ===
outerFrameState: ?282 
values: a1 - - 
=== Succesors ===
=== Usages ===
?401 ?423 ?308 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: a1 - -  <|@  <|@
tid ?423 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1277
stackSize: 0
=== Inputs ===
outerFrameState: ?323 
values: - - - - 
=== Succesors ===
=== Usages ===
?1083 ?1081 ?630 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?323 values: - - - -  <|@  <|@
tid ?401 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1272
stackSize: 0
=== Inputs ===
outerFrameState: ?323 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?1082 ?398 ?1080 ?588 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?323 values: a1 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:78) [bci: 9]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v1470 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:80) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a388 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a388  <|@  <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a [Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@545c3801
stamp: void
targetMethod: HotSpotMethod<Class.getEnclosingMethod0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a388 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1080 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1072
stackSize: 0
=== Inputs ===
outerFrameState: ?401 
values: - - 
=== Succesors ===
=== Usages ===
a388 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?401 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a388 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Class.getEnclosingMethod0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v793 
stateDuring: ?1080 
=== Succesors ===
next: v393 
=== Usages ===
a1093 v390 
=== Predecessor ===
v9 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v793 stateDuring: ?1080 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a388 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a388  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9900466962742942
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
a388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v391 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602589167782746524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1074) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a635 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a635  <|@  <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a# Ljava/lang/Class;
signature: [Ljdk.vm.ci.meta.JavaType;@1330041e
stamp: void
targetMethod: HotSpotMethod<Class.getDeclaringClass0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a635 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1081 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getDeclaringClass()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1235
stackSize: 0
=== Inputs ===
outerFrameState: ?423 
values: - - 
=== Succesors ===
=== Usages ===
a635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?423 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a635 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a# Ljava/lang/Class;
targetMethod: Direct#Class.getDeclaringClass0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v794 
stateDuring: ?1081 
=== Succesors ===
next: v640 
=== Usages ===
a1096 v637 a307 
=== Predecessor ===
v391 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v794 stateDuring: ?1081 #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a635 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a635  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.7812649424038253
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
a635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v638 #falseSuccessor: v639  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600638587436913969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1240) [bci: 20]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592466742046495146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B16" 
    xhandlers
    flags 
    probability 4572387711107307776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 11]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v587  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:82) [bci: 14]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1471 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1471  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: v1470 
index: - 
=== Succesors ===
=== Usages ===
i1471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v1470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Klass::_layout_helper:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readLayoutHelper(KlassPointer) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.klassIsArray(HotSpotReplacementsUtil.java:412) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:83) [bci: 23]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v917 
=== Usages ===
v17 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.klassIsArray(HotSpotReplacementsUtil.java:414) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:83) [bci: 23]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1471 
y: i7 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1471 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1306) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v914 
=== Usages ===
=== Predecessor ===
i1471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v916 #falseSuccessor: v914  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1306) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v915  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1306
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 795
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1306) [bci: 4]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1306) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a595 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a595  <|@  <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a [Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@7fc63f82
stamp: void
targetMethod: HotSpotMethod<Class.getEnclosingMethod0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a595 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1082 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1072
stackSize: 0
=== Inputs ===
outerFrameState: ?401 
values: - - 
=== Succesors ===
=== Usages ===
a595 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?401 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a595 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Class.getEnclosingMethod0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v796 
stateDuring: ?1082 
=== Succesors ===
next: v600 
=== Usages ===
a1093 v597 
=== Predecessor ===
v914 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v796 stateDuring: ?1082 #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a595 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a595  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9900466962742942
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v599 
=== Usages ===
=== Predecessor ===
a595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v598 #falseSuccessor: v599  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602589167782746524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1074) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a407 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a407  <|@  <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a# Ljava/lang/Class;
signature: [Ljdk.vm.ci.meta.JavaType;@73e51a3a
stamp: void
targetMethod: HotSpotMethod<Class.getDeclaringClass0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1083 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getDeclaringClass()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1235
stackSize: 0
=== Inputs ===
outerFrameState: ?423 
values: - - 
=== Succesors ===
=== Usages ===
a407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?423 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a407 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a# Ljava/lang/Class;
targetMethod: Direct#Class.getDeclaringClass0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v797 
stateDuring: ?1083 
=== Succesors ===
next: v412 
=== Usages ===
a307 v409 a1096 
=== Predecessor ===
v598 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v797 stateDuring: ?1083 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a407 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a407  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.7812649424038253
=== Inputs ===
condition: v409 
=== Succesors ===
trueSuccessor: v410 
falseSuccessor: v411 
=== Usages ===
=== Predecessor ===
a407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v409 #trueSuccessor: v410 #falseSuccessor: v411  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600638587436913969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1240) [bci: 20]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592466742046495146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4596970341673865642
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1096 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/Class;
valueDescription: a -
=== Inputs ===
merge: v628 
values: a407 a635 
=== Succesors ===
=== Usages ===
?630 a307 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: a407 a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v629 v631 
=== Succesors ===
next: v800 
=== Usages ===
a1096 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v629 v631 #next: v800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1472 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1472  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a702 
index: - 
=== Succesors ===
=== Usages ===
a1472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a702 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1554 
=== Succesors ===
next: v921 
=== Usages ===
v824 
=== Predecessor ===
v800 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1554 #next: v921  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a1472 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1472  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v918 
falseSuccessor: v920 
=== Usages ===
=== Predecessor ===
a1472 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v918 #falseSuccessor: v920  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596970341673865642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v453  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v801 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
tid ?630 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Class.getDeclaringClass()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1235
stackSize: 1
=== Inputs ===
outerFrameState: ?423 
values: - - a1096 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?423 values: - - a1096  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 802
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?630 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?630  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4572387711107307776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 11]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1093 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v586 
values: a388 a595 
=== Succesors ===
=== Usages ===
?588 v803 ?398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v586 values: a388 a595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v587 v589 
=== Succesors ===
next: j1177 
=== Usages ===
a1093 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v587 v589 #next: j1177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1177 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1196 
=== Usages ===
v1511 v1512 
=== Predecessor ===
v586 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1196  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: - 
=== Succesors ===
=== Usages ===
j1196 v1198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1511 
=== Succesors ===
next: j1197 
=== Usages ===
j1411 j1202 v1536 
=== Predecessor ===
j1177 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1511 #next: j1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: - 
=== Succesors ===
=== Usages ===
j1197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1512 
=== Succesors ===
next: v1185 
=== Usages ===
v1182 
=== Predecessor ===
j1196 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1512 #next: v1185  <|@  <|@
f <@~|@floating>@ <|@
tid j1411 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1196 
y: j1410 
=== Succesors ===
=== Usages ===
v1182 v1198 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1196 y: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1197 
y: j1411 
=== Succesors ===
=== Usages ===
v1185 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1197 y: j1411  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1182 
=== Succesors ===
trueSuccessor: v1183 
falseSuccessor: v1184 
=== Usages ===
=== Predecessor ===
j1197 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1182 #trueSuccessor: v1183 #falseSuccessor: v1184  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4546972666250099759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1189 
=== Usages ===
=== Predecessor ===
v1185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1189  <|@  <|@
tid ?588 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1072
stackSize: 1
=== Inputs ===
outerFrameState: ?401 
values: - - a1093 
=== Succesors ===
=== Usages ===
a1189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?401 values: - - a1093  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1189 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?588 
arguments: v1175 i910 i6 
=== Succesors ===
next: j1190 
=== Usages ===
j1190 
=== Predecessor ===
v1183 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?588 arguments: v1175 i910 i6 #next: j1190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1190 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1189 
=== Succesors ===
next: v1203 
=== Usages ===
j1202 
=== Predecessor ===
a1189 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1189 #next: v1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
j1190 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576833933845142024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1198 
=== Usages ===
=== Predecessor ===
v1185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1511 
value: j1411 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1194 
=== Usages ===
=== Predecessor ===
v1184 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1511 value: j1411 stateAfter: - lastLocationAccess: - #next: v1194  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1196 
index: - 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1536 
=== Succesors ===
next: v1201 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1536 #next: v1201  <|@  <|@
f <@*|@fixed>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
v1194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1202 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1200 
values: j1196 j1190 
=== Succesors ===
=== Usages ===
v1515 v1514 a1034 v1537 v1538 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1200 values: j1196 j1190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1201 v1203 
=== Succesors ===
next: a1034 
=== Usages ===
j1202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1201 v1203 #next: a1034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1034 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1202 
=== Succesors ===
next: j1214 
=== Usages ===
a1040 
=== Predecessor ===
v1200 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1202 #next: j1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1209 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1208 
=== Succesors ===
=== Usages ===
v1513 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1209 
index: - 
=== Succesors ===
=== Usages ===
j1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1209 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1513 
=== Succesors ===
next: v1215 
=== Usages ===
v1215 
=== Predecessor ===
a1034 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1513 #next: v1215  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1202 
index: - 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1514 
value: j1214 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1218 
=== Usages ===
=== Predecessor ===
j1214 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1514 value: j1214 stateAfter: - lastLocationAccess: - #next: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1202 
index: - 
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1202 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1515 
value: v1415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1222 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1515 value: v1415 stateAfter: - lastLocationAccess: - #next: v1222  <|@  <|@
f <@~|@floating>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1202 
index: - 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1537 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1537 value: j1032 stateAfter: - lastLocationAccess: - #next: v1224  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1202 
index: - 
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1538 
value: i7 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1040 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1538 value: i7 stateAfter: - lastLocationAccess: - #next: a1040  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1040 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1034 
=== Succesors ===
next: v1041 
=== Usages ===
v803 ?648 v1508 
=== Predecessor ===
v1224 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1034 #next: v1041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
a1040 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v397  <|@  <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@464cb877
stamp: void
targetMethod: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])>
=== Inputs ===
arguments: a1040 a1093 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1040 a1093  <|@  <|@
tid a455 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@55cf5454
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Class$EnclosingMethodInfo;
type: HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?648 ?398 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?398 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1076
stackSize: 1
=== Inputs ===
outerFrameState: ?401 
values: - a1093 a455 
=== Succesors ===
=== Usages ===
?399 ?1084 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?401 values: - a1093 a455  <|@  <|@
tid ?648 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a455 
materializedValue: a1040 
=== Succesors ===
=== Usages ===
?399 ?1084 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a455 materializedValue: a1040  <|@  <|@
tid ?1084 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Class$EnclosingMethodInfo.<init>(Object[], Class$1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1080
stackSize: 0
=== Inputs ===
outerFrameState: ?398 
values: - - - 
virtualObjectMappings: ?648 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?398 values: - - - virtualObjectMappings: ?648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: void
targetMethod: Direct#Class$EnclosingMethodInfo.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v803 
stateDuring: ?1084 
=== Succesors ===
next: a1473 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v803 stateDuring: ?1084 #next: a1473  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1040 
index: - 
=== Succesors ===
=== Usages ===
a1473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1040 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class$EnclosingMethodInfo.enclosingClass
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.getEnclosingClass(Class.java:1116) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1279) [bci: 18]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
=== Succesors ===
next: v925 
=== Usages ===
a806 v1553 
=== Predecessor ===
v397 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1508 #next: v925  <|@  <|@
f <@~|@floating>@ <|@
tid a806 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.getEnclosingClass(Class.java:1116) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1279) [bci: 18]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Uncompress
stamp: a# Ljava/lang/Class;
=== Inputs ===
value: a1473 
=== Succesors ===
=== Usages ===
v300 a307 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1473  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a806 
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a806  <|@  <|@
tid ?399 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Class$EnclosingMethodInfo.<init>(Object[], Class$1)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1080
stackSize: 0
=== Inputs ===
outerFrameState: ?398 
values: - - - 
virtualObjectMappings: ?648 
=== Succesors ===
=== Usages ===
v1168 v1553 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?398 values: - - - virtualObjectMappings: ?648  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v922 
=== Usages ===
=== Predecessor ===
a1473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v924 #falseSuccessor: v922  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid i1165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -206611
stableDimension: 0
stamp: i32 [-206611] ⇊00000000fffcd8ed ⇈00000000fffcd8ed
stampKind: i32
value: int[-206611|0xfffffffffffcd8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?399 
actionAndReason: i1165 
speculation: a1104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?399 actionAndReason: i1165 speculation: a1104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1553 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?399 
object: a1473 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?399 object: a1473 #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v1553 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B13" "B3" 
    successors "B23" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: a# Ljava/lang/Class;
valueDescription: a -
=== Inputs ===
merge: v305 
values: a407 a806 a1096 a635 
=== Succesors ===
=== Usages ===
?308 v309 ?339 ?269 j1396 ?1087 v1497 v787 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v305 values: a407 a806 a1096 a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v304 v306 v453 v642 
=== Succesors ===
next: v312 
=== Usages ===
a307 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v304 v306 v453 v642 #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 44]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a307 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a307  <|@  <|@
f <@~|@floating>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1261 v1311 v1351 v1391 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1383 j1466 j1467 j1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1273 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1272 v1400 v1407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1268 j1397 j1404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1271 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1520 v1534 v1535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1474 v701 a1479 v792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 44]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.7741051967419984
=== Inputs ===
condition: v309 
=== Succesors ===
trueSuccessor: v310 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v309 #trueSuccessor: v310 #falseSuccessor: v311  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1290) [bci: 58]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1474 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
=== Succesors ===
next: v112 
=== Usages ===
a673 v809 
=== Predecessor ===
v310 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1492 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: void
=== Inputs ===
value: a1474 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1474  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0029838527247854074
=== Inputs ===
condition: v809 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
a1474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v809 #trueSuccessor: v110 #falseSuccessor: v111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4567472495373210469
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a114 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a114  <|@  <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@1bbb5b40
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1311
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
?1085 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
tid ?1085 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?120 
values: - - a1 
=== Succesors ===
=== Usages ===
a114 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?120 values: - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a114 <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v699 
stateDuring: ?1085 
=== Succesors ===
next: v701 
=== Usages ===
a123 a700 
=== Predecessor ===
v110 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v699 stateDuring: ?1085 #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid a700 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a114 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
value: a700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1266 
=== Usages ===
=== Predecessor ===
a114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1492 value: a700 stateAfter: - lastLocationAccess: - #next: j1266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1272 
=== Usages ===
j1268 
=== Predecessor ===
v701 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1272  <|@  <|@
f <@~|@floating>@ <|@
tid j1268 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1266 
y: i1267 
=== Succesors ===
=== Usages ===
v1520 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1266 y: i1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1268 
index: j1271 
=== Succesors ===
=== Usages ===
v1272 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1268 index: j1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1520 
value: i1273 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
j1266 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1520 value: i1273 stateAfter: - lastLocationAccess: - #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v1272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605126934324403878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid a673 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1474 
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1474  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a123 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v121 
values: a673 a114 
=== Succesors ===
=== Usages ===
?35 v1493 v217 ?44 ?44 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: a673 a114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v124 
=== Succesors ===
next: a1475 
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v124 #next: a1475  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
rethrowException: false
sourceFile: Class.java
sourceLine: 1311
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a123 
=== Succesors ===
=== Usages ===
v1107 a1475 i1476 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a123  <|@  <|@
f <@~|@floating>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a123 
index: - 
=== Succesors ===
=== Usages ===
a1475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a123 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1807) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?35 
guard: - 
address: v1493 
=== Succesors ===
next: i1476 
=== Usages ===
a678 v1494 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?35 guard: - address: v1493 #next: i1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1475 
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1807) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?35 
guard: - 
address: v1494 
=== Succesors ===
next: v1443 
=== Usages ===
i534 i209 v883 j872 
=== Predecessor ===
a1475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?35 guard: - address: v1494 #next: v1443  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1881) [bci: 38]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i196 i209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1869) [bci: 3]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1476 
y: i179 
=== Succesors ===
=== Usages ===
i182 j874 v886 v883 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1476 y: i179  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i209 
y: i7 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i209 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v886 
=== Succesors ===
trueSuccessor: v1439 
falseSuccessor: v1442 
=== Usages ===
=== Predecessor ===
i1476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v886 #trueSuccessor: v1439 #falseSuccessor: v1442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1437 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1437  <|@  <|@
f <@*|@fixed>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
v1439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B46" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1451 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1451  <|@  <|@
f <@~|@floating>@ <|@
tid j874 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i209 
=== Succesors ===
=== Usages ===
j906 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i209  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1476 
=== Succesors ===
=== Usages ===
v882 j878 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1476  <|@  <|@
f <@~|@floating>@ <|@
tid j873 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j878 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j878 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j872 
y: j873 
=== Succesors ===
=== Usages ===
j906 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j872 y: j873  <|@  <|@
f <@~|@floating>@ <|@
tid j906 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-2147483647 - 2147483647]
=== Inputs ===
x: j874 
y: j878 
=== Succesors ===
=== Usages ===
v882 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j874 y: j878  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j906 
y: j872 
=== Succesors ===
=== Usages ===
v1451 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j906 y: j872  <|@  <|@
f <@~|@floating>@ <|@
tid a1112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1568883993
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1568883993]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1106 a1106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -175899
stableDimension: 0
stamp: i32 [-175899] ⇊00000000fffd50e5 ⇈00000000fffd50e5
stampKind: i32
value: int[-175899|0xfffffffffffd50e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1105 i1105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v882 
=== Succesors ===
trueSuccessor: v1450 
falseSuccessor: v1447 
=== Usages ===
=== Predecessor ===
v1442 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v882 #trueSuccessor: v1450 #falseSuccessor: v1447  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B45" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1449 
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1449  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i209 
y: i1476 
=== Succesors ===
=== Usages ===
v1449 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i209 y: i1476  <|@  <|@
f <@*|@fixed>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v883 
=== Succesors ===
trueSuccessor: v1440 
falseSuccessor: v1448 
=== Usages ===
=== Predecessor ===
v1450 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v883 #trueSuccessor: v1440 #falseSuccessor: v1448  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1438 
=== Usages ===
=== Predecessor ===
v1449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1438  <|@  <|@
f <@*|@fixed>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
v1440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1437 v1438 
=== Succesors ===
next: v180 
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1437 v1438 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid a678 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1807) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1475 
=== Succesors ===
=== Usages ===
v1495 v698 ?183 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1475  <|@  <|@
f <@~|@floating>@ <|@
tid i812 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 75]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v1436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B44" 
    successors "B33" "B34" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4622117864685309086
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v181 
values: i209 i196 
=== Succesors ===
=== Usages ===
?183 v184 v1495 i196 i902 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v181 values: i209 i196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 13.603682667615487
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v180 
=== Succesors ===
next: v187 
=== Usages ===
i182 v197 v199 v203 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v180 #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 66]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i7 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i182 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 66]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
trueSuccessorProbability: 0.01461062227930204
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v199 #falseSuccessor: v186  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 4594711404117576775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1891) [bci: 84]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v181 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v181 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a123 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a123 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622031249313011565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 69]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1477 
=== Usages ===
v888 
=== Predecessor ===
v187 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1477  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1436 v186 
=== Succesors ===
=== Usages ===
i1477 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1436 v186  <|@  <|@
f <@~|@floating>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a678 
index: i182 
=== Succesors ===
=== Usages ===
i1477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a678 index: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v888 
address: v1495 
=== Succesors ===
next: v195 
=== Usages ===
v813 
=== Predecessor ===
v186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v888 address: v1495 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 75]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1477 
y: i812 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1477 y: i812  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 75]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
trueSuccessorProbability: 0.05977219319659602
=== Inputs ===
condition: v813 
=== Succesors ===
trueSuccessor: v203 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
i1477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v813 #trueSuccessor: v203 #falseSuccessor: v193  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1891) [bci: 84]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v181 
=== Succesors ===
next: v945 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v181 #next: v945  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
rethrowException: false
sourceFile: Class.java
sourceLine: 1312
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a123 - - a123 
=== Succesors ===
=== Usages ===
?133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a123 - - a123  <|@  <|@
tid ?133 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<String.lastIndexOf(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1807
stackSize: 0
=== Inputs ===
outerFrameState: ?44 
values: - - 
=== Succesors ===
=== Usages ===
?211 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?44 values: - -  <|@  <|@
tid ?211 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<String.lastIndexOf(String, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1827
stackSize: 0
=== Inputs ===
outerFrameState: ?133 
values: - - - 
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?133 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1827) [bci: 11]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
rawvalue: char[1]{.}
stableDimension: 1
stamp: a!# [C
stampKind: a -
value: Object[char[1]{.}]
=== Inputs ===
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1882) [bci: 44]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
rawvalue: 46
stableDimension: 0
stamp: i32 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i32
value: int[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 62
code: ResolvedJavaMethodBytecode<String.lastIndexOf(char[], int, int, char[], int, int, int)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1888
stackSize: 0
=== Inputs ===
outerFrameState: ?211 
values: a678 i7 - a132 - i6 - - i7 i210 i7 i182 - - - 
=== Succesors ===
=== Usages ===
v1134 a1236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?211 values: a678 i7 - a132 - i6 - - i7 i210 i7 i182 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i902 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1312) [bci: 55]
stamp: i32
=== Inputs ===
x: i182 
y: i6 
=== Succesors ===
=== Usages ===
v698 v531 i534 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i182 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i902 
y: i7 
=== Succesors ===
=== Usages ===
v945 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i902 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v531 
=== Succesors ===
trueSuccessor: v944 
falseSuccessor: v942 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v531 #trueSuccessor: v944 #falseSuccessor: v942  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v945 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
f <@~|@floating>@ <|@
tid i1131 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178195
stableDimension: 0
stamp: i32 [-178195] ⇊00000000fffd47ed ⇈00000000fffd47ed
stampKind: i32
value: int[-178195|0xfffffffffffd47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
v944 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v945 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid i534 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: i32
=== Inputs ===
x: i1476 
y: i902 
=== Succesors ===
=== Usages ===
v535 v698 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1476 y: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i534 
y: i7 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i534 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v535 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v946 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v535 #trueSuccessor: v948 #falseSuccessor: v946  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid i1136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178451
stableDimension: 0
stamp: i32 [-178451] ⇊00000000fffd46ed ⇈00000000fffd46ed
stampKind: i32
value: int[-178451|0xfffffffffffd46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1132 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-178451 - -178195] ⇊00000000fffd46ed ⇈00000000fffd47ed
valueDescription: i32
=== Inputs ===
merge: v1129 
values: i1131 i1136 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1129 values: i1131 i1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1130 v1135 
=== Succesors ===
next: v1134 
=== Usages ===
i1132 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1130 v1135 #next: v1134  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?183 
actionAndReason: i1132 
speculation: a1104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?183 actionAndReason: i1132 speculation: a1104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1225 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1225 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1240 
=== Usages ===
v1516 v1517 
=== Predecessor ===
v946 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1240  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1225 
index: - 
=== Succesors ===
=== Usages ===
j1240 v1242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1225 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1516 
=== Succesors ===
next: j1241 
=== Usages ===
j1418 j1246 v1539 
=== Predecessor ===
j1225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1516 #next: j1241  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1225 
index: - 
=== Succesors ===
=== Usages ===
j1241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1225 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1517 
=== Succesors ===
next: v1233 
=== Usages ===
v1230 
=== Predecessor ===
j1240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1517 #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid j1418 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1240 
y: j1410 
=== Succesors ===
=== Usages ===
v1230 v1242 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1240 y: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1241 
y: j1418 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1241 y: j1418  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1230 
=== Succesors ===
trueSuccessor: v1231 
falseSuccessor: v1232 
=== Usages ===
=== Predecessor ===
j1241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1230 #trueSuccessor: v1231 #falseSuccessor: v1232  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4573800964610547359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1236 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1236 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?183 
arguments: v1175 i910 i6 
=== Succesors ===
next: j1237 
=== Usages ===
j1237 
=== Predecessor ===
v1231 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?183 arguments: v1175 i910 i6 #next: j1237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1237 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1236 
=== Succesors ===
next: v1247 
=== Usages ===
j1246 
=== Predecessor ===
a1236 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1236 #next: v1247  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
j1237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4603706026601757482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1516 
value: j1418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1239 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1516 value: j1418 stateAfter: - lastLocationAccess: - #next: v1239  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1240 
index: - 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1539 
=== Succesors ===
next: v1245 
=== Usages ===
=== Predecessor ===
v1242 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1539 #next: v1245  <|@  <|@
f <@*|@fixed>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
v1239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1246 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1244 
values: j1240 j1237 
=== Succesors ===
=== Usages ===
v1519 v1518 a1044 v1540 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1244 values: j1240 j1237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1245 v1247 
=== Succesors ===
next: a1044 
=== Usages ===
j1246 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1245 v1247 #next: a1044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1044 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1246 
=== Succesors ===
next: j1257 
=== Usages ===
a1049 
=== Predecessor ===
v1244 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1246 #next: j1257  <|@  <|@
f <@~|@floating>@ <|@
tid j1468 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1252 
=== Succesors ===
=== Usages ===
v1549 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1468 
index: - 
=== Succesors ===
=== Usages ===
j1257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1549 
=== Succesors ===
next: v1258 
=== Usages ===
v1258 
=== Predecessor ===
a1044 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1549 #next: v1258  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1246 
index: - 
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
value: j1257 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1261 
=== Usages ===
=== Predecessor ===
j1257 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1518 value: j1257 stateAfter: - lastLocationAccess: - #next: v1261  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1246 
index: - 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1519 
value: v1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1265 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1519 value: v1421 stateAfter: - lastLocationAccess: - #next: v1265  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1246 
index: - 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1049 
=== Usages ===
=== Predecessor ===
v1261 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1540 value: j1032 stateAfter: - lastLocationAccess: - #next: a1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1049 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1044 
=== Succesors ===
next: v1050 
=== Usages ===
v698 ?652 v545 
=== Predecessor ===
v1265 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1044 #next: v1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
a1049 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v541  <|@  <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@40d4b6c7
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a1049 a678 i902 i534 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1049 a678 i902 i534  <|@  <|@
tid ?154 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1312
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
?1088 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
tid a221 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1088 ?652 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?652 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a221 
materializedValue: a1049 
=== Succesors ===
=== Usages ===
?1088 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a221 materializedValue: a1049  <|@  <|@
tid ?1088 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?154 
values: - - - a221 
virtualObjectMappings: ?652 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?154 values: - - - a221 virtualObjectMappings: ?652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v698 
stateDuring: ?1088 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v698 stateDuring: ?1088 #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1049 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1049 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621682082200859983
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1889) [bci: 78]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1889) [bci: 78]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: i32
=== Inputs ===
x: i182 
y: i179 
=== Succesors ===
=== Usages ===
i182 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i182 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
loopBegin: v181 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
v1449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1550  <|@  <|@
f <@*|@fixed>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
v1448 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1110 
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
v1447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1105 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-175899 - -172555] ⇊00000000fffd50e5 ⇈00000000fffd5ff5
valueDescription: i32
=== Inputs ===
merge: v1101 
values: i1111 i1111 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1101 values: i1111 i1111  <|@  <|@
f <@~|@floating>@ <|@
tid a1106 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1101 
values: a1112 a1112 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1101 values: a1112 a1112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1110 v1550 
=== Succesors ===
next: v1107 
=== Usages ===
i1105 a1106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1110 v1550 #next: v1107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?35 
actionAndReason: i1105 
speculation: a1106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?35 actionAndReason: i1105 speculation: a1106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B49" "B98" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 47]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1478 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1478  <|@  <|@
f <@~|@floating>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a702 
index: - 
=== Succesors ===
=== Usages ===
a1478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a702 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1496 
=== Succesors ===
next: v953 
=== Usages ===
v814 
=== Predecessor ===
v707 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1496 #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a1478 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1478  <|@  <|@
f <@*|@fixed>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v950 
falseSuccessor: v952 
=== Usages ===
=== Predecessor ===
a1478 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v950 #falseSuccessor: v952  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1479 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
=== Succesors ===
next: v331 
=== Usages ===
a711 v815 
=== Predecessor ===
v708 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1492 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a1479 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1479  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0029838527247854074
=== Inputs ===
condition: v815 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v330 
=== Usages ===
=== Predecessor ===
a1479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v815 #trueSuccessor: v329 #falseSuccessor: v330  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4559356115667858029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a333 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a333  <|@  <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@637821aa
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a333 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?339 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 0
=== Inputs ===
outerFrameState: ?282 
values: - a307 - 
=== Succesors ===
=== Usages ===
?1086 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: - a307 -  <|@  <|@
tid ?1086 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?339 
values: - - a1 
=== Succesors ===
=== Usages ===
a333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?339 values: - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a333 <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v790 
stateDuring: ?1086 
=== Succesors ===
next: v792 
=== Usages ===
a342 a791 
=== Predecessor ===
v329 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v790 stateDuring: ?1086 #next: v792  <|@  <|@
f <@~|@floating>@ <|@
tid a791 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a333 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
value: a791 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1403 
=== Usages ===
=== Predecessor ===
a333 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1492 value: a791 stateAfter: - lastLocationAccess: - #next: j1403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1407 
=== Usages ===
j1404 
=== Predecessor ===
v792 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1407  <|@  <|@
f <@~|@floating>@ <|@
tid j1404 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1403 
y: i1267 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1403 y: i1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1271 
=== Succesors ===
=== Usages ===
v1407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1535 
value: i1273 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
j1403 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1535 value: i1273 stateAfter: - lastLocationAccess: - #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v1407 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597282453568833770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid a711 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1479 
=== Succesors ===
=== Usages ===
a342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1479  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a342 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v340 
values: a711 a333 
=== Succesors ===
=== Usages ===
a609 ?272 v1500 ?358 v1551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v340 values: a711 a333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v341 v343 
=== Succesors ===
next: v1551 
=== Usages ===
a342 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v341 v343 #next: v1551  <|@  <|@
tid ?269 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 1
=== Inputs ===
outerFrameState: ?282 
values: - a307 - a1104 
=== Succesors ===
=== Usages ===
v1551 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: - a307 - a1104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?269 
object: a342 
=== Succesors ===
next: a1480 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?269 object: a342 #next: a1480  <|@  <|@
f <@~|@floating>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a307 
index: - 
=== Succesors ===
=== Usages ===
a1480 v789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a307 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
=== Succesors ===
next: v350 
=== Usages ===
a714 v816 
=== Predecessor ===
v1551 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1497 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a1480 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1480  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0029838527247854074
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
a1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v348 #falseSuccessor: v349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4559356115667858029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a352 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a352  <|@  <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@4cbaa465
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a307 
=== Succesors ===
=== Usages ===
a352 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a307  <|@  <|@
tid ?358 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 1
=== Inputs ===
outerFrameState: ?282 
values: - - - a342 
=== Succesors ===
=== Usages ===
?1087 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: - - - a342  <|@  <|@
tid ?1087 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?358 
values: - - a307 
=== Succesors ===
=== Usages ===
a352 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?358 values: - - a307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a352 <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v787 
stateDuring: ?1087 
=== Succesors ===
next: v789 
=== Usages ===
a361 a788 
=== Predecessor ===
v348 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v787 stateDuring: ?1087 #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid a788 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a352 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
value: a788 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1396 
=== Usages ===
=== Predecessor ===
a352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1497 value: a788 stateAfter: - lastLocationAccess: - #next: j1396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a307 
=== Succesors ===
next: v1400 
=== Usages ===
j1397 
=== Predecessor ===
v789 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a307 #next: v1400  <|@  <|@
f <@~|@floating>@ <|@
tid j1397 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1396 
y: i1267 
=== Succesors ===
=== Usages ===
v1534 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1396 y: i1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1397 
index: j1271 
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1397 index: j1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
value: i1273 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
j1396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1534 value: i1273 stateAfter: - lastLocationAccess: - #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
v1400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4597282453568833770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid a714 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1480 
=== Succesors ===
=== Usages ===
a361 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1480  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a361 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v359 
values: a714 a352 
=== Succesors ===
=== Usages ===
?272 v1498 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v359 values: a714 a352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v360 v362 
=== Succesors ===
next: a1481 
=== Usages ===
a361 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v360 v362 #next: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a342 
index: - 
=== Succesors ===
=== Usages ===
a1481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a342 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1500 
=== Succesors ===
next: v1552 
=== Usages ===
a727 v1552 v1501 v1504 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1500 #next: v1552  <|@  <|@
tid ?272 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 2
=== Inputs ===
outerFrameState: ?282 
values: - - - a342 a361 
=== Succesors ===
=== Usages ===
v1142 a1287 v1552 a1482 i1483 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: - - - a342 a361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?272 
object: a1481 
=== Succesors ===
next: a1482 
=== Usages ===
=== Predecessor ===
a1481 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?272 object: a1481 #next: a1482  <|@  <|@
f <@~|@floating>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a361 
index: - 
=== Succesors ===
=== Usages ===
a1482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?272 
guard: - 
address: v1498 
=== Succesors ===
next: i1483 
=== Usages ===
v1499 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?272 guard: - address: v1498 #next: i1483  <|@  <|@
f <@~|@floating>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1482 
=== Succesors ===
=== Usages ===
i1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?272 
guard: - 
address: v1499 
=== Succesors ===
next: i1484 
=== Usages ===
v381 i368 v370 v769 
=== Predecessor ===
a1482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?272 guard: - address: v1499 #next: i1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1481 
=== Succesors ===
=== Usages ===
i1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 17]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1501 
=== Succesors ===
next: v973 
=== Usages ===
i368 v381 v759 i608 
=== Predecessor ===
i1483 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1501 #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1484 
y: i1483 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1484 y: i1483  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v970 
=== Usages ===
=== Predecessor ===
i1484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v972 #falseSuccessor: v970  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid i1148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -187667
stableDimension: 0
stamp: i32 [-187667] ⇊00000000fffd22ed ⇈00000000fffd22ed
stampKind: i32
value: int[-187667|0xfffffffffffd22ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
v972 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B64" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1483 
y: i7 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1483 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid a727 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
a607 v769 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
rawvalue: 36
stableDimension: 0
stamp: i16 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i16
value: short[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 v823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9651155608201366
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v371 #falseSuccessor: v372  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 38]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1329) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1484 
y: i7 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1484 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v976 
falseSuccessor: v974 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v976 #falseSuccessor: v974  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1149 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1149  <|@  <|@
f <@~|@floating>@ <|@
tid i1150 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -193811
stableDimension: 0
stamp: i32 [-193811] ⇊00000000fffd0aed ⇈00000000fffd0aed
stampKind: i32
value: int[-193811|0xfffffffffffd0aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1485 
=== Usages ===
i1485 
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1481 
=== Succesors ===
=== Usages ===
i1485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1329) [bci: 72]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v974 
address: v1504 
=== Succesors ===
next: v981 
=== Usages ===
v821 
=== Predecessor ===
v974 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v974 address: v1504 #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1485 
y: i820 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1485 y: i820  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v978 
falseSuccessor: v980 
=== Usages ===
=== Predecessor ===
i1485 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v978 #falseSuccessor: v980  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v606  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
v978 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1151  <|@  <|@
f <@~|@floating>@ <|@
tid i1152 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -196627
stableDimension: 0
stamp: i32 [-196627] ⇊00000000fffcffed ⇈00000000fffcffed
stampKind: i32
value: int[-196627|0xfffffffffffcffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
v980 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" "B62" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1140 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-196627 - -183051] ⇊00000000fffc00e5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1137 
values: i1148 i1150 i1152 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1137 values: i1148 i1150 i1152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1147 v1149 v1151 
=== Succesors ===
next: v1142 
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1147 v1149 v1151 #next: v1142  <|@  <|@
f <@*|@fixed>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?272 
actionAndReason: i1140 
speculation: a1104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1137 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?272 actionAndReason: i1140 speculation: a1104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 42]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1276 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1276 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1291 
=== Usages ===
v1521 v1522 
=== Predecessor ===
v372 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1291  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1276 
index: - 
=== Succesors ===
=== Usages ===
j1291 v1293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1276 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1291 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
=== Succesors ===
next: j1292 
=== Usages ===
j1423 j1297 v1541 
=== Predecessor ===
j1276 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1521 #next: j1292  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1276 
index: - 
=== Succesors ===
=== Usages ===
j1292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1276 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1522 
=== Succesors ===
next: v1284 
=== Usages ===
v1281 
=== Predecessor ===
j1291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1522 #next: v1284  <|@  <|@
f <@~|@floating>@ <|@
tid j1423 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1291 
y: j1410 
=== Succesors ===
=== Usages ===
v1281 v1293 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1291 y: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1292 
y: j1423 
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1292 y: j1423  <|@  <|@
f <@*|@fixed>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1281 
=== Succesors ===
trueSuccessor: v1282 
falseSuccessor: v1283 
=== Usages ===
=== Predecessor ===
j1292 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1281 #trueSuccessor: v1282 #falseSuccessor: v1283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4545442995675356429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1287 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1287 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?272 
arguments: v1175 i910 i6 
=== Succesors ===
next: j1288 
=== Usages ===
j1288 
=== Predecessor ===
v1282 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?272 arguments: v1175 i910 i6 #next: j1288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1288 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1287 
=== Succesors ===
next: v1298 
=== Usages ===
j1297 
=== Predecessor ===
a1287 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1287 #next: v1298  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
j1288 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4575644437111554024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1293 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
value: j1423 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1290 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1521 value: j1423 stateAfter: - lastLocationAccess: - #next: v1290  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1291 
index: - 
=== Succesors ===
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1291 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1541 
=== Succesors ===
next: v1296 
=== Usages ===
=== Predecessor ===
v1293 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1541 #next: v1296  <|@  <|@
f <@*|@fixed>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
v1290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1297 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1295 
values: j1291 j1288 
=== Succesors ===
=== Usages ===
v1524 v1523 a1053 v1542 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1295 values: j1291 j1288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1296 v1298 
=== Succesors ===
next: a1053 
=== Usages ===
j1297 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1296 v1298 #next: a1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1053 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1297 
=== Succesors ===
next: j1307 
=== Usages ===
a1058 
=== Predecessor ===
v1295 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1297 #next: j1307  <|@  <|@
f <@~|@floating>@ <|@
tid j1467 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1252 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1467 
index: - 
=== Succesors ===
=== Usages ===
j1307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1548 
=== Succesors ===
next: v1308 
=== Usages ===
v1308 
=== Predecessor ===
a1053 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1548 #next: v1308  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1297 
index: - 
=== Succesors ===
=== Usages ===
v1308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1297 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1523 
value: j1307 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1311 
=== Usages ===
=== Predecessor ===
j1307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1523 value: j1307 stateAfter: - lastLocationAccess: - #next: v1311  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1297 
index: - 
=== Succesors ===
=== Usages ===
v1311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1297 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1524 
value: v1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1315 
=== Usages ===
=== Predecessor ===
v1308 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1524 value: v1421 stateAfter: - lastLocationAccess: - #next: v1315  <|@  <|@
f <@~|@floating>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1297 
index: - 
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1297 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1542 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1058 
=== Usages ===
=== Predecessor ===
v1311 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1542 value: j1032 stateAfter: - lastLocationAccess: - #next: a1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1058 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1053 
=== Succesors ===
next: v1059 
=== Usages ===
v769 ?657 v1505 a609 
=== Predecessor ===
v1315 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1053 #next: v1059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
a1058 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1484 
y: i1483 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1484 y: i1483  <|@  <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@d9a97e9
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a1058 a727 i1483 i368 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1058 a727 i1483 i368  <|@  <|@
tid ?382 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 0
=== Inputs ===
outerFrameState: ?282 
values: - - - 
=== Succesors ===
=== Usages ===
?378 ?1089 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: - - -  <|@  <|@
tid a459 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 2
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?657 ?378 ?1089 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?657 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a459 
materializedValue: a1058 
=== Succesors ===
=== Usages ===
?378 ?1089 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a459 materializedValue: a1058  <|@  <|@
tid ?1089 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?382 
values: - - - a459 
virtualObjectMappings: ?657 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?382 values: - - - a459 virtualObjectMappings: ?657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v769 
stateDuring: ?1089 
=== Succesors ===
next: a1486 
=== Usages ===
=== Predecessor ===
v1059 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v769 stateDuring: ?1089 #next: a1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1058 
index: - 
=== Succesors ===
=== Usages ===
a1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1328) [bci: 61]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1505 
=== Succesors ===
next: i1487 
=== Usages ===
a772 v1507 v1506 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1505 #next: i1487  <|@  <|@
tid ?378 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?382 
values: - - - a459 
virtualObjectMappings: ?657 
=== Succesors ===
=== Usages ===
v1158 i1487 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?382 values: - - - a459 virtualObjectMappings: ?657  <|@  <|@
f <@~|@floating>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1486 
=== Succesors ===
=== Usages ===
i1487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.Class.getSimpleName(Class.java:1328) [bci: 61]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?378 
guard: - 
address: v1506 
=== Succesors ===
next: v989 
=== Usages ===
v780 i608 
=== Predecessor ===
a1486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?378 guard: - address: v1506 #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1329) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1487 
y: i7 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1487 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v988 
falseSuccessor: v986 
=== Usages ===
=== Predecessor ===
i1487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v988 #falseSuccessor: v986  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B97" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@~|@floating>@ <|@
tid i1160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -199187
stableDimension: 0
stamp: i32 [-199187] ⇊00000000fffcf5ed ⇈00000000fffcf5ed
stampKind: i32
value: int[-199187|0xfffffffffffcf5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B96" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1488 
=== Usages ===
i1488 
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1488  <|@  <|@
f <@~|@floating>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1486 
=== Succesors ===
=== Usages ===
i1488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1329) [bci: 72]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v986 
address: v1507 
=== Succesors ===
next: v993 
=== Usages ===
v823 
=== Predecessor ===
v986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v986 address: v1507 #next: v993  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1488 
y: i820 
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1488 y: i820  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v823 
=== Succesors ===
trueSuccessor: v990 
falseSuccessor: v992 
=== Usages ===
=== Predecessor ===
i1488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v823 #trueSuccessor: v990 #falseSuccessor: v992  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid a772 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1328) [bci: 61]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1486 
=== Succesors ===
=== Usages ===
a607 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1486  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B61" 
    successors "B72" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a607 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v605 
values: a772 a727 
=== Succesors ===
=== Usages ===
v753 v1503 v756 v1502 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v605 values: a772 a727  <|@  <|@
f <@~|@floating>@ <|@
tid i608 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v605 
values: i1487 i1484 
=== Succesors ===
=== Usages ===
v68 ?67 i497 i1462 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v605 values: i1487 i1484  <|@  <|@
f <@~|@floating>@ <|@
tid a609 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v605 
values: a1058 a342 
=== Succesors ===
=== Usages ===
v507 v250 ?67 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v605 values: a1058 a342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v604 v606 
=== Succesors ===
next: v64 
=== Usages ===
a607 i608 a609 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v604 v606 #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B77" 
    successors "B73" "B87" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4597962382506270627
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v65 
values: i6 i91 
=== Succesors ===
=== Usages ===
?67 v68 i1462 v753 v1503 i497 v500 i91 v756 v741 v1460 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v65 values: i6 i91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0805586580550168
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v64 
=== Succesors ===
next: v74 
=== Usages ===
i66 v71 v85 v92 v1011 v1006 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v64 #next: v74  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 92
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1332
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a609 i608 i66 
=== Succesors ===
=== Usages ===
v1118 a1367 a1327 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a609 i608 i66  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 94]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i608 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i66 y: i608  <|@  <|@
tid ?245 <|@
d <@d|@=== Debug Properties ===
bci: 116
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1335
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
?1091 ?1090 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
tid a255 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 3
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?666 ?1090 ?1091 ?663 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 94]
stamp: void
trueSuccessorProbability: 0.9254385964912281
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v69 #falseSuccessor: v71  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B86" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1489 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a607 
index: - 
=== Succesors ===
=== Usages ===
i1489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1502 
=== Succesors ===
next: v1007 
=== Usages ===
v741 
=== Predecessor ===
v69 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1502 #next: v1007  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i1489 
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i66 y: i1489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v741 
=== Succesors ===
trueSuccessor: v1003 
falseSuccessor: v1006 
=== Usages ===
=== Predecessor ===
i1489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v741 #trueSuccessor: v1003 #falseSuccessor: v1006  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1490 
=== Usages ===
i1490 
=== Predecessor ===
v1007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a607 
index: i66 
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a607 index: i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1003 
address: v1503 
=== Succesors ===
next: v1012 
=== Usages ===
i749 
=== Predecessor ===
v1003 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1003 address: v1503 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid i749 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1490 
=== Succesors ===
=== Usages ===
v174 v171 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1490  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 0]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i749 
y: i170 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i749 y: i170  <|@  <|@
f <@*|@fixed>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1008 
=== Usages ===
=== Predecessor ===
i1490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v1011 #falseSuccessor: v1008  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v65 
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v65 #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid i1126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -192019
stableDimension: 0
stamp: i32 [-192019] ⇊00000000fffd11ed ⇈00000000fffd11ed
stampKind: i32
value: int[-192019|0xfffffffffffd11ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1011 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 9]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
rawvalue: 58
stableDimension: 0
stamp: i32 [58] ⇊000000000000003a ⇈000000000000003a
stampKind: i32
value: int[58|0x3a]
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 9]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i749 
y: i173 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i749 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 105]
stamp: void
trueSuccessorProbability: 0.08055940822931118
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v89 #falseSuccessor: v85  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580902375020534835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1333) [bci: 108]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1333) [bci: 108]
stamp: i32
=== Inputs ===
x: i66 
y: i6 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i66 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
stamp: void
=== Inputs ===
loopBegin: v65 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4596651018314987035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1335) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v65 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v65 #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid i497 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: i32
=== Inputs ===
x: i608 
y: i66 
=== Succesors ===
=== Usages ===
v498 v753 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i608 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i7 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v1015 
falseSuccessor: v1013 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v1015 #falseSuccessor: v1013  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1119  <|@  <|@
f <@~|@floating>@ <|@
tid i1120 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -192531
stableDimension: 0
stamp: i32 [-192531] ⇊00000000fffd0fed ⇈00000000fffd0fed
stampKind: i32
value: int[-192531|0xfffffffffffd0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1015 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4596651018314987035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i7 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i66 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
trueSuccessorProbability: 0.9651155608201366
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v501 #falseSuccessor: v502  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4596389978125520015
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 38]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a609 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a609 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4575003308216627588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 42]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1316 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1316 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1331 
=== Usages ===
v1525 v1526 
=== Predecessor ===
v502 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1331  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1316 
index: - 
=== Succesors ===
=== Usages ===
j1331 v1333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1525 
=== Succesors ===
next: j1332 
=== Usages ===
j1427 j1337 v1543 
=== Predecessor ===
j1316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1525 #next: j1332  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1316 
index: - 
=== Succesors ===
=== Usages ===
j1332 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1332 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1526 
=== Succesors ===
next: v1324 
=== Usages ===
v1321 
=== Predecessor ===
j1331 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1526 #next: v1324  <|@  <|@
f <@~|@floating>@ <|@
tid j1427 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1331 
y: j1410 
=== Succesors ===
=== Usages ===
v1321 v1333 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1331 y: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1332 
y: j1427 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1332 y: j1427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1321 
=== Succesors ===
trueSuccessor: v1322 
falseSuccessor: v1323 
=== Usages ===
=== Predecessor ===
j1332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1321 #trueSuccessor: v1322 #falseSuccessor: v1323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4544974527469744545
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1327 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1327 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?67 
arguments: v1175 i910 i6 
=== Succesors ===
next: j1328 
=== Usages ===
j1328 
=== Predecessor ===
v1322 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?67 arguments: v1175 i910 i6 #next: j1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1328 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1327 
=== Succesors ===
next: v1338 
=== Usages ===
j1337 
=== Predecessor ===
a1327 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1327 #next: v1338  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
j1328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4574919775355998141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1333 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1525 
value: j1427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1330 
=== Usages ===
=== Predecessor ===
v1323 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1525 value: j1427 stateAfter: - lastLocationAccess: - #next: v1330  <|@  <|@
f <@~|@floating>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1331 
index: - 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1331 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1543 
=== Succesors ===
next: v1336 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1543 #next: v1336  <|@  <|@
f <@*|@fixed>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
v1330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 4575003308216627588
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1337 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1335 
values: j1331 j1328 
=== Succesors ===
=== Usages ===
v1528 v1527 a1062 v1544 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1335 values: j1331 j1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1336 v1338 
=== Succesors ===
next: a1062 
=== Usages ===
j1337 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1336 v1338 #next: a1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1062 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1337 
=== Succesors ===
next: j1347 
=== Usages ===
a1067 
=== Predecessor ===
v1335 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1337 #next: j1347  <|@  <|@
f <@~|@floating>@ <|@
tid j1466 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1252 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1466 
index: - 
=== Succesors ===
=== Usages ===
j1347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1466 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1547 
=== Succesors ===
next: v1348 
=== Usages ===
v1348 
=== Predecessor ===
a1062 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1547 #next: v1348  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1337 
index: - 
=== Succesors ===
=== Usages ===
v1348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1337 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1527 
value: j1347 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
j1347 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1527 value: j1347 stateAfter: - lastLocationAccess: - #next: v1351  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1337 
index: - 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1337 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1528 
value: v1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1348 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1528 value: v1421 stateAfter: - lastLocationAccess: - #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1337 
index: - 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1337 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1544 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1067 
=== Usages ===
=== Predecessor ===
v1351 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1544 value: j1032 stateAfter: - lastLocationAccess: - #next: a1067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1067 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1062 
=== Succesors ===
next: v1068 
=== Usages ===
v753 ?663 v508 
=== Predecessor ===
v1355 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1062 #next: v1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
a1067 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v505  <|@  <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@689d7a13
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a1067 a607 i66 i497 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1067 a607 i66 i497  <|@  <|@
tid ?663 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a255 
materializedValue: a1067 
=== Succesors ===
=== Usages ===
?1090 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a255 materializedValue: a1067  <|@  <|@
tid ?1090 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?245 
values: - - - a255 
virtualObjectMappings: ?663 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?245 values: - - - a255 virtualObjectMappings: ?663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v753 
stateDuring: ?1090 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v753 stateDuring: ?1090 #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1067 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1067 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v65 
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v65 #next: v1123  <|@  <|@
f <@~|@floating>@ <|@
tid i1124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -189979
stableDimension: 0
stamp: i32 [-189979] ⇊00000000fffd19e5 ⇈00000000fffd19e5
stampKind: i32
value: int[-189979|0xfffffffffffd19e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1006 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4580902981326581777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1335) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v65 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v65 #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid i1462 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: i32
=== Inputs ===
x: i608 
y: i66 
=== Succesors ===
=== Usages ===
v1461 v756 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i608 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1462 
y: i7 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1462 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1461 
=== Succesors ===
trueSuccessor: v1023 
falseSuccessor: v1021 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1461 #trueSuccessor: v1023 #falseSuccessor: v1021  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@~|@floating>@ <|@
tid i1128 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -193299
stableDimension: 0
stamp: i32 [-193299] ⇊00000000fffd0ced ⇈00000000fffd0ced
stampKind: i32
value: int[-193299|0xfffffffffffd0ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1023 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B79" "B86" "B75" "B88" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1116 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-193299 - -189979] ⇊00000000fffd00e5 ⇈00000000fffd1fed
valueDescription: i32
=== Inputs ===
merge: v1113 
values: i1120 i1124 i1126 i1128 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1113 values: i1120 i1124 i1126 i1128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1119 v1123 v1125 v1127 
=== Succesors ===
next: v1118 
=== Usages ===
i1116 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1119 v1123 v1125 v1127 #next: v1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?67 
actionAndReason: i1116 
speculation: a1104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?67 actionAndReason: i1116 speculation: a1104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4580902981326581777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i7 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i66 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
trueSuccessorProbability: 0.9651155608201366
=== Inputs ===
condition: v1460 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1460 #trueSuccessor: v235 #falseSuccessor: v236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4580719985933764635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 38]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a609 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a609 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4558995075841720012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 42]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1356 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1356 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1371 
=== Usages ===
v1529 v1530 
=== Predecessor ===
v236 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1371  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: - 
=== Succesors ===
=== Usages ===
j1371 v1373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
=== Succesors ===
next: j1372 
=== Usages ===
j1431 j1377 v1545 
=== Predecessor ===
j1356 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1529 #next: j1372  <|@  <|@
f <@~|@floating>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: - 
=== Succesors ===
=== Usages ===
j1372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
=== Succesors ===
next: v1364 
=== Usages ===
v1361 
=== Predecessor ===
j1371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1530 #next: v1364  <|@  <|@
f <@~|@floating>@ <|@
tid j1431 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1371 
y: j1410 
=== Succesors ===
=== Usages ===
v1361 v1373 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1371 y: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1372 
y: j1431 
=== Succesors ===
=== Usages ===
v1364 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1372 y: j1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1361 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1363 
=== Usages ===
=== Predecessor ===
j1372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1361 #trueSuccessor: v1362 #falseSuccessor: v1363  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4529109517169768142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1367 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1367 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?67 
arguments: v1175 i910 i6 
=== Succesors ===
next: j1368 
=== Usages ===
j1368 
=== Predecessor ===
v1362 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?67 arguments: v1175 i910 i6 #next: j1368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1368 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1367 
=== Succesors ===
next: v1378 
=== Usages ===
j1377 
=== Predecessor ===
a1367 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1367 #next: v1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
j1368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4558936517316018526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1373 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
value: j1431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1370 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1529 value: j1431 stateAfter: - lastLocationAccess: - #next: v1370  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1371 
index: - 
=== Succesors ===
=== Usages ===
v1370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1371 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1545 
=== Succesors ===
next: v1376 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1545 #next: v1376  <|@  <|@
f <@*|@fixed>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
v1370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 4558995075841720012
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1377 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1375 
values: j1371 j1368 
=== Succesors ===
=== Usages ===
v1533 v1532 a1071 v1546 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1375 values: j1371 j1368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1376 v1378 
=== Succesors ===
next: a1071 
=== Usages ===
j1377 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1376 v1378 #next: a1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1071 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1377 
=== Succesors ===
next: j1387 
=== Usages ===
a1076 
=== Predecessor ===
v1375 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1377 #next: j1387  <|@  <|@
f <@~|@floating>@ <|@
tid j1383 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1252 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1383 
index: - 
=== Succesors ===
=== Usages ===
j1387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1383 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1531 
=== Succesors ===
next: v1388 
=== Usages ===
v1388 
=== Predecessor ===
a1071 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1531 #next: v1388  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1377 
index: - 
=== Succesors ===
=== Usages ===
v1388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1532 
value: j1387 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
j1387 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1532 value: j1387 stateAfter: - lastLocationAccess: - #next: v1391  <|@  <|@
f <@~|@floating>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1377 
index: - 
=== Succesors ===
=== Usages ===
v1391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1533 
value: v1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1395 
=== Usages ===
=== Predecessor ===
v1388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1533 value: v1421 stateAfter: - lastLocationAccess: - #next: v1395  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1377 
index: - 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1546 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1076 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1546 value: j1032 stateAfter: - lastLocationAccess: - #next: a1076  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1076 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1071 
=== Succesors ===
next: v1077 
=== Usages ===
v756 ?666 v251 
=== Predecessor ===
v1395 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1071 #next: v1077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
a1076 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v241  <|@  <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4aca73db
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a1076 a607 i66 i1462 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1076 a607 i66 i1462  <|@  <|@
tid ?666 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a255 
materializedValue: a1076 
=== Succesors ===
=== Usages ===
?1091 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a255 materializedValue: a1076  <|@  <|@
tid ?1091 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?245 
values: - - - a255 
virtualObjectMappings: ?666 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?245 values: - - - a255 virtualObjectMappings: ?666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v756 
stateDuring: ?1091 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v756 stateDuring: ?1091 #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1076 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1076 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B97" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1161 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1161  <|@  <|@
f <@~|@floating>@ <|@
tid i1162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -201235
stableDimension: 0
stamp: i32 [-201235] ⇊00000000fffceded ⇈00000000fffceded
stampKind: i32
value: int[-201235|0xfffffffffffceded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v992 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B68" "B96" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1156 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-201235 - -198155] ⇊00000000fffce1e5 ⇈00000000fffcfdfd
valueDescription: i32
=== Inputs ===
merge: v1153 
values: i1160 i1162 
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1153 values: i1160 i1162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1159 v1161 
=== Succesors ===
next: v1158 
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1159 v1161 #next: v1158  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?378 
actionAndReason: i1156 
speculation: a1104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?378 actionAndReason: i1156 speculation: a1104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v951  <|@  <|@
tid ?308 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1287
stackSize: 0
=== Inputs ===
outerFrameState: ?323 
values: - - a307 - 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?323 values: - - a307 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 709
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?308 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?308  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1470 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1470  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Class;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v794 j1403 v1509 v796 ?282 v1492 v699 ?1086 ?323 ?1085 v790 ?401 v793 v797 v300 j1266 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
result [v0|QWORD[.] + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1470 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class._klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:77) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: v11 
=== Usages ===
v5 v1510 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:78) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
stamp: void
=== Inputs ===
value: v1470 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: v1470  <|@  <|@
f <@~|@floating>@ <|@
tid a1104 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?269 v1168 v1142 v1134 v1158 v1118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1032 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 v1395 v1355 v1265 v1222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:78) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i91 i66 ?183 a1367 a1327 i902 a1189 a1236 a1287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i910 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1367 a1189 a1236 a1287 a1327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1189 a1236 a1287 a1327 a1367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1410 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1411 j1431 j1418 j1423 j1427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a702 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rawvalue: Class:java.lang.System
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.System]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1496 v1554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:78) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v184 v17 v1224 v370 ?183 v759 ?183 v780 v1460 v886 v531 v535 v498 v1461 v500 ?183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?282 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1309
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?358 ?269 ?272 ?382 ?323 ?339 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1443
stackSize: 0
=== Inputs ===
outerFrameState: ?282 
values: a1 - - 
=== Succesors ===
=== Usages ===
?401 ?423 ?308 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: a1 - -  <|@  <|@
tid ?423 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1277
stackSize: 0
=== Inputs ===
outerFrameState: ?323 
values: - - - - 
=== Succesors ===
=== Usages ===
?1083 ?1081 ?630 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?323 values: - - - -  <|@  <|@
tid ?401 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1272
stackSize: 0
=== Inputs ===
outerFrameState: ?323 
values: a1 - - - 
=== Succesors ===
=== Usages ===
?1082 ?398 ?1080 ?588 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?323 values: a1 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:78) [bci: 9]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v1470 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53ca6f6b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [v0|QWORD[.] + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:80) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a388 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a388  <|@  <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a [Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@545c3801
stamp: void
targetMethod: HotSpotMethod<Class.getEnclosingMethod0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a388 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1080 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1072
stackSize: 0
=== Inputs ===
outerFrameState: ?401 
values: - - 
=== Succesors ===
=== Usages ===
a388 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?401 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a388 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Class.getEnclosingMethod0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v793 
stateDuring: ?1080 
=== Succesors ===
next: v393 
=== Usages ===
a1093 v390 
=== Predecessor ===
v9 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v793 stateDuring: ?1080 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a388 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a388  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9900466962742942
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
a388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v391 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602589167782746524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1074) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a635 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a635  <|@  <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a# Ljava/lang/Class;
signature: [Ljdk.vm.ci.meta.JavaType;@1330041e
stamp: void
targetMethod: HotSpotMethod<Class.getDeclaringClass0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a635 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1081 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getDeclaringClass()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1235
stackSize: 0
=== Inputs ===
outerFrameState: ?423 
values: - - 
=== Succesors ===
=== Usages ===
a635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?423 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a635 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a# Ljava/lang/Class;
targetMethod: Direct#Class.getDeclaringClass0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v794 
stateDuring: ?1081 
=== Succesors ===
next: v640 
=== Usages ===
a1096 v637 a307 
=== Predecessor ===
v391 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v794 stateDuring: ?1081 #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a635 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a635  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.7812649424038253
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
a635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v638 #falseSuccessor: v639  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600638587436913969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1240) [bci: 20]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592466742046495146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B16" 
    xhandlers
    flags 
    probability 4572387711107307776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 11]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v587  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:82) [bci: 14]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1471 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1471  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
result [v1|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: v1470 
index: - 
=== Succesors ===
=== Usages ===
i1471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v1470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1471 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Klass::_layout_helper:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readLayoutHelper(KlassPointer) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.klassIsArray(HotSpotReplacementsUtil.java:412) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:83) [bci: 23]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
=== Succesors ===
next: v917 
=== Usages ===
v17 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1510 #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.klassIsArray(HotSpotReplacementsUtil.java:414) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isArray(HotSpotClassSubstitutions.java:83) [bci: 23]
at java.lang.Class.getSimpleName(Class.java:1306) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1471 
y: i7 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1471 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1306) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v914 
=== Usages ===
=== Predecessor ===
i1471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v916 #falseSuccessor: v914  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD + 8] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1306) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v915  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1306
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 795
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1306) [bci: 4]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -203539 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1306) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1306) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a595 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a595  <|@  <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a [Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@7fc63f82
stamp: void
targetMethod: HotSpotMethod<Class.getEnclosingMethod0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a595 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1082 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1072
stackSize: 0
=== Inputs ===
outerFrameState: ?401 
values: - - 
=== Succesors ===
=== Usages ===
a595 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?401 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a595 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Class.getEnclosingMethod0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v796 
stateDuring: ?1082 
=== Succesors ===
next: v600 
=== Usages ===
a1093 v597 
=== Predecessor ===
v914 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v796 stateDuring: ?1082 #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a595 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a595  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1073) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9900466962742942
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v599 
=== Usages ===
=== Predecessor ===
a595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v598 #falseSuccessor: v599  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|QWORD[.], y: v6|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602589167782746524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1074) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a407 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a407  <|@  <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a# Ljava/lang/Class;
signature: [Ljdk.vm.ci.meta.JavaType;@73e51a3a
stamp: void
targetMethod: HotSpotMethod<Class.getDeclaringClass0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1083 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Class.getDeclaringClass()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1235
stackSize: 0
=== Inputs ===
outerFrameState: ?423 
values: - - 
=== Succesors ===
=== Usages ===
a407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?423 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a407 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a# Ljava/lang/Class;
targetMethod: Direct#Class.getDeclaringClass0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v797 
stateDuring: ?1083 
=== Succesors ===
next: v412 
=== Usages ===
a307 v409 a1096 
=== Predecessor ===
v598 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v797 stateDuring: ?1083 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a407 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a407  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1237) [bci: 6]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.7812649424038253
=== Inputs ===
condition: v409 
=== Succesors ===
trueSuccessor: v410 
falseSuccessor: v411 
=== Usages ===
=== Predecessor ===
a407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v409 #trueSuccessor: v410 #falseSuccessor: v411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|QWORD[.], y: v7|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600638587436913969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1240) [bci: 20]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.]] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592466742046495146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 9]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4596970341673865642
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1096 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/Class;
valueDescription: a -
=== Inputs ===
merge: v628 
values: a407 a635 
=== Succesors ===
=== Usages ===
?630 a307 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v628 values: a407 a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v629 v631 
=== Succesors ===
next: v800 
=== Usages ===
a1096 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v629 v631 #next: v800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1472 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1472  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
result [v3|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a702 
index: - 
=== Succesors ===
=== Usages ===
a1472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a702 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1472 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1554 
=== Succesors ===
next: v921 
=== Usages ===
v824 
=== Predecessor ===
v800 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1554 #next: v921  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a1472 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1472  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v918 
falseSuccessor: v920 
=== Usages ===
=== Predecessor ===
a1472 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v918 #falseSuccessor: v920  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v3|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD[.], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596970341673865642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v453  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v801 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
tid ?630 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Class.getDeclaringClass()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1235
stackSize: 1
=== Inputs ===
outerFrameState: ?423 
values: - - a1096 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?423 values: - - a1096  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 802
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getDeclaringClass(Class.java:1238) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?630 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?630  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -205331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4]
stack: v8|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 10, 1, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4572387711107307776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 11]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1093 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v586 
values: a388 a595 
=== Succesors ===
=== Usages ===
?588 v803 ?398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v586 values: a388 a595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v587 v589 
=== Succesors ===
next: j1177 
=== Usages ===
a1093 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v587 v589 #next: j1177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1177 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1196 
=== Usages ===
v1511 v1512 
=== Predecessor ===
v586 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1196  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: - 
=== Succesors ===
=== Usages ===
j1196 v1198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1196 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1511 
=== Succesors ===
next: j1197 
=== Usages ===
j1411 j1202 v1536 
=== Predecessor ===
j1177 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1511 #next: j1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: - 
=== Succesors ===
=== Usages ===
j1197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1197 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1512 
=== Succesors ===
next: v1185 
=== Usages ===
v1182 
=== Predecessor ===
j1196 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1512 #next: v1185  <|@  <|@
f <@~|@floating>@ <|@
tid j1411 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1196 
y: j1410 
=== Succesors ===
=== Usages ===
v1182 v1198 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1196 y: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1197 
y: j1411 
=== Succesors ===
=== Usages ===
v1185 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1197 y: j1411  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1182 
=== Succesors ===
trueSuccessor: v1183 
falseSuccessor: v1184 
=== Usages ===
=== Predecessor ===
j1197 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1182 #trueSuccessor: v1183 #falseSuccessor: v1184  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v11|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4546972666250099759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1189 
=== Usages ===
=== Predecessor ===
v1185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1189  <|@  <|@
tid ?588 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1072
stackSize: 1
=== Inputs ===
outerFrameState: ?401 
values: - - a1093 
=== Succesors ===
=== Usages ===
a1189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?401 values: - - a1093  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1189 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?588 
arguments: v1175 i910 i6 
=== Succesors ===
next: j1190 
=== Usages ===
j1190 
=== Predecessor ===
v1183 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?588 arguments: v1175 i910 i6 #next: j1190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1190 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1189 
=== Succesors ===
next: v1203 
=== Usages ===
j1202 
=== Predecessor ===
a1189 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1189 #next: v1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
j1190 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4]
stack: v10|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576833933845142024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1198 
=== Usages ===
=== Predecessor ===
v1185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1511 
value: j1411 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1194 
=== Usages ===
=== Predecessor ===
v1184 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1511 value: j1411 stateAfter: - lastLocationAccess: - #next: v1194  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
result [v11|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1196 
index: - 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1536 
=== Succesors ===
next: v1201 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1536 #next: v1201  <|@  <|@
f <@*|@fixed>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
v1194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1202 <|@
result v14|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1200 
values: j1196 j1190 
=== Succesors ===
=== Usages ===
v1515 v1514 a1034 v1537 v1538 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1200 values: j1196 j1190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1201 v1203 
=== Succesors ===
next: a1034 
=== Usages ===
j1202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1201 v1203 #next: a1034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1034 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1202 
=== Succesors ===
next: j1214 
=== Usages ===
a1040 
=== Predecessor ===
v1200 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1202 #next: j1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1209 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1208 
=== Succesors ===
=== Usages ===
v1513 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
result [v16|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1209 
index: - 
=== Succesors ===
=== Usages ===
j1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1209 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1214 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1513 
=== Succesors ===
next: v1215 
=== Usages ===
v1215 
=== Predecessor ===
a1034 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1513 #next: v1215  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
result [v14|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1202 
index: - 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1514 
value: j1214 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1218 
=== Usages ===
=== Predecessor ===
j1214 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1514 value: j1214 stateAfter: - lastLocationAccess: - #next: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
result [v14|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1202 
index: - 
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1202 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1415 <|@
result meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1515 
value: v1415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1222 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1515 value: v1415 stateAfter: - lastLocationAccess: - #next: v1222  <|@  <|@
f <@~|@floating>@ <|@
tid v1537 <|@
result [v14|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1202 
index: - 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1537 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1537 value: j1032 stateAfter: - lastLocationAccess: - #next: v1224  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
result [v14|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1202 
index: - 
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1538 
value: i7 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1040 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1538 value: i7 stateAfter: - lastLocationAccess: - #next: a1040  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1040 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1034 
=== Succesors ===
next: v1041 
=== Usages ===
v803 ?648 v1508 
=== Predecessor ===
v1224 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1034 #next: v1041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
a1040 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v397  <|@  <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@464cb877
stamp: void
targetMethod: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])>
=== Inputs ===
arguments: a1040 a1093 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1040 a1093  <|@  <|@
tid a455 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@55cf5454
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Class$EnclosingMethodInfo;
type: HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?648 ?398 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?398 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Class.getEnclosingMethodInfo()>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1076
stackSize: 1
=== Inputs ===
outerFrameState: ?401 
values: - a1093 a455 
=== Succesors ===
=== Usages ===
?399 ?1084 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?401 values: - a1093 a455  <|@  <|@
tid ?648 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a455 
materializedValue: a1040 
=== Succesors ===
=== Usages ===
?399 ?1084 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a455 materializedValue: a1040  <|@  <|@
tid ?1084 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Class$EnclosingMethodInfo.<init>(Object[], Class$1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1080
stackSize: 0
=== Inputs ===
outerFrameState: ?398 
values: - - - 
virtualObjectMappings: ?648 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?398 values: - - - virtualObjectMappings: ?648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: void
targetMethod: Direct#Class$EnclosingMethodInfo.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v803 
stateDuring: ?1084 
=== Succesors ===
next: a1473 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v803 stateDuring: ?1084 #next: a1473  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
result [v15|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1040 
index: - 
=== Succesors ===
=== Usages ===
a1473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1040 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1473 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class$EnclosingMethodInfo.enclosingClass
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.getEnclosingClass(Class.java:1116) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1279) [bci: 18]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
=== Succesors ===
next: v925 
=== Usages ===
a806 v1553 
=== Predecessor ===
v397 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1508 #next: v925  <|@  <|@
f <@~|@floating>@ <|@
tid a806 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.getEnclosingClass(Class.java:1116) [bci: 1]
at java.lang.Class.getEnclosingClass(Class.java:1279) [bci: 18]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Uncompress
stamp: a# Ljava/lang/Class;
=== Inputs ===
value: a1473 
=== Succesors ===
=== Usages ===
v300 a307 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1473  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a806 
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a806  <|@  <|@
tid ?399 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Class$EnclosingMethodInfo.<init>(Object[], Class$1)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1080
stackSize: 0
=== Inputs ===
outerFrameState: ?398 
values: - - - 
virtualObjectMappings: ?648 
=== Succesors ===
=== Usages ===
v1168 v1553 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?398 values: - - - virtualObjectMappings: ?648  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v922 
=== Usages ===
=== Predecessor ===
a1473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v924 #falseSuccessor: v922  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE v14|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v16|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD[*]], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v15|QWORD[.] 
locals: - v10|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v15|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid i1165 <|@
result int[-206611|0xfffffffffffcd8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -206611
stableDimension: 0
stamp: i32 [-206611] ⇊00000000fffcd8ed ⇈00000000fffcd8ed
stampKind: i32
value: int[-206611|0xfffffffffffcd8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?399 
actionAndReason: i1165 
speculation: a1104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?399 actionAndReason: i1165 speculation: a1104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -206611 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v15|QWORD[.] 
locals: - v10|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:5, 17, 1, 1, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1281) [bci: 24]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1553 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?399 
object: a1473 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?399 object: a1473 #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v1553 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v15|QWORD[.] 
locals: - v10|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v18|DWORD[.] * 8] state [bci:5, 17, 1, 1, 34] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B13" "B3" 
    successors "B23" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a307 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: a# Ljava/lang/Class;
valueDescription: a -
=== Inputs ===
merge: v305 
values: a407 a806 a1096 a635 
=== Succesors ===
=== Usages ===
?308 v309 ?339 ?269 j1396 ?1087 v1497 v787 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v305 values: a407 a806 a1096 a635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v304 v306 v453 v642 
=== Succesors ===
next: v312 
=== Usages ===
a307 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v304 v306 v453 v642 #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 44]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a307 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a307  <|@  <|@
f <@~|@floating>@ <|@
tid v1421 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1261 v1311 v1351 v1391 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1383 j1466 j1467 j1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1273 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1272 v1400 v1407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1267 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1268 j1397 j1404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1271 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1520 v1534 v1535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1492 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1474 v701 a1479 v792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 44]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.7741051967419984
=== Inputs ===
condition: v309 
=== Succesors ===
trueSuccessor: v310 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v309 #trueSuccessor: v310 #falseSuccessor: v311  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7741051967419984 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1290) [bci: 58]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1474 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1474 <|@
result v23|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
=== Succesors ===
next: v112 
=== Usages ===
a673 v809 
=== Predecessor ===
v310 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1492 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: void
=== Inputs ===
value: a1474 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1474  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0029838527247854074
=== Inputs ===
condition: v809 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
a1474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v809 #trueSuccessor: v110 #falseSuccessor: v111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD[.], y: v23|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4567472495373210469
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a114 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a114  <|@  <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@1bbb5b40
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1311
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
?1085 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
tid ?1085 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?120 
values: - - a1 
=== Succesors ===
=== Usages ===
a114 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?120 values: - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a114 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v699 
stateDuring: ?1085 
=== Succesors ===
next: v701 
=== Usages ===
a123 a700 
=== Predecessor ===
v110 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v699 stateDuring: ?1085 #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid a700 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a114 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
value: a700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1266 
=== Usages ===
=== Predecessor ===
a114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1492 value: a700 stateAfter: - lastLocationAccess: - #next: j1266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1266 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1272 
=== Usages ===
j1268 
=== Predecessor ===
v701 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1272  <|@  <|@
f <@~|@floating>@ <|@
tid j1268 <|@
result v26|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1266 
y: i1267 
=== Succesors ===
=== Usages ===
v1520 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1266 y: i1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
result [v26|QWORD[*] + v22|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1268 
index: j1271 
=== Succesors ===
=== Usages ===
v1272 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1268 index: j1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1520 
value: i1273 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
j1266 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1520 value: i1273 stateAfter: - lastLocationAccess: - #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v1272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v0|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 43] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v25|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v26|QWORD[*] + v22|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605126934324403878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid a673 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1474 
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1474  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a123 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v121 
values: a673 a114 
=== Succesors ===
=== Usages ===
?35 v1493 v217 ?44 ?44 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: a673 a114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v124 
=== Succesors ===
next: a1475 
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v124 #next: a1475  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
rethrowException: false
sourceFile: Class.java
sourceLine: 1311
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a123 
=== Succesors ===
=== Usages ===
v1107 a1475 i1476 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a123  <|@  <|@
f <@~|@floating>@ <|@
tid v1493 <|@
result [v28|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a123 
index: - 
=== Succesors ===
=== Usages ===
a1475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a123 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1475 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1807) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?35 
guard: - 
address: v1493 
=== Succesors ===
next: i1476 
=== Usages ===
a678 v1494 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?35 guard: - address: v1493 #next: i1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
result [v29|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1475 
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1476 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1807) [bci: 6]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?35 
guard: - 
address: v1494 
=== Succesors ===
next: v1443 
=== Usages ===
i534 i209 v883 j872 
=== Predecessor ===
a1475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?35 guard: - address: v1494 #next: v1443  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1881) [bci: 38]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i196 i209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1869) [bci: 3]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1476 
y: i179 
=== Succesors ===
=== Usages ===
i182 j874 v886 v883 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1476 y: i179  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i209 
y: i7 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i209 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v886 
=== Succesors ===
trueSuccessor: v1439 
falseSuccessor: v1442 
=== Usages ===
=== Predecessor ===
i1476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v886 #trueSuccessor: v1439 #falseSuccessor: v1442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: v28|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v29|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: v28|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v30|DWORD = MOV [v29|DWORD[.] * 8 + 12] size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = DEC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1437 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1437  <|@  <|@
f <@*|@fixed>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
v1439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B46" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1451 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1451  <|@  <|@
f <@~|@floating>@ <|@
tid j874 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i209 
=== Succesors ===
=== Usages ===
j906 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i209  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1476 
=== Succesors ===
=== Usages ===
v882 j878 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1476  <|@  <|@
f <@~|@floating>@ <|@
tid j873 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j878 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j878 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j872 
y: j873 
=== Succesors ===
=== Usages ===
j906 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j872 y: j873  <|@  <|@
f <@~|@floating>@ <|@
tid j906 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-2147483647 - 2147483647]
=== Inputs ===
x: j874 
y: j878 
=== Succesors ===
=== Usages ===
v882 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j874 y: j878  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j906 
y: j872 
=== Succesors ===
=== Usages ===
v1451 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j906 y: j872  <|@  <|@
f <@~|@floating>@ <|@
tid a1112 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1568883993
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1568883993]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1106 a1106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1111 <|@
result int[-175899|0xfffffffffffd50e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -175899
stableDimension: 0
stamp: i32 [-175899] ⇊00000000fffd50e5 ⇈00000000fffd50e5
stampKind: i32
value: int[-175899|0xfffffffffffd50e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1105 i1105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v882 
=== Succesors ===
trueSuccessor: v1450 
falseSuccessor: v1447 
=== Usages ===
=== Predecessor ===
v1442 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v882 #trueSuccessor: v1450 #falseSuccessor: v1447  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = DEC v33|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1568883993] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B45" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1449 
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1449  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i209 
y: i1476 
=== Succesors ===
=== Usages ===
v1449 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i209 y: i1476  <|@  <|@
f <@*|@fixed>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v883 
=== Succesors ===
trueSuccessor: v1440 
falseSuccessor: v1448 
=== Usages ===
=== Predecessor ===
v1450 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v883 #trueSuccessor: v1440 #falseSuccessor: v1448  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1438 
=== Usages ===
=== Predecessor ===
v1449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1438  <|@  <|@
f <@*|@fixed>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
v1440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1437 v1438 
=== Succesors ===
next: v180 
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1437 v1438 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid a678 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1807) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1475 
=== Succesors ===
=== Usages ===
v1495 v698 ?183 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1475  <|@  <|@
f <@~|@floating>@ <|@
tid i812 <|@
result short[46|0x2e] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 75]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v1436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B44" 
    successors "B33" "B34" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4622117864685309086
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i182 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v181 
values: i209 i196 
=== Succesors ===
=== Usages ===
?183 v184 v1495 i196 i902 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v181 values: i209 i196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 13.603682667615487
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v180 
=== Succesors ===
next: v187 
=== Usages ===
i182 v197 v199 v203 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v180 #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 66]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i7 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i182 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 66]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
trueSuccessorProbability: 0.01461062227930204
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v199 #falseSuccessor: v186  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01461062227930204 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 4594711404117576775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1891) [bci: 84]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v181 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v181 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a123 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a123 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622031249313011565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 69]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1477 
=== Usages ===
v888 
=== Predecessor ===
v187 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1477  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1436 v186 
=== Succesors ===
=== Usages ===
i1477 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1436 v186  <|@  <|@
f <@~|@floating>@ <|@
tid v1495 <|@
result [v37|QWORD[.] + v38|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a678 
index: i182 
=== Succesors ===
=== Usages ===
i1477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a678 index: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1477 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v888 
address: v1495 
=== Succesors ===
next: v195 
=== Usages ===
v813 
=== Predecessor ===
v186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v888 address: v1495 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 75]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1477 
y: i812 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1477 y: i812  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 75]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
trueSuccessorProbability: 0.05977219319659602
=== Inputs ===
condition: v813 
=== Succesors ===
trueSuccessor: v203 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
i1477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v813 #trueSuccessor: v203 #falseSuccessor: v193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v37|QWORD[.] + v38|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05977219319659602 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1891) [bci: 84]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v181 
=== Succesors ===
next: v945 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v181 #next: v945  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
rethrowException: false
sourceFile: Class.java
sourceLine: 1312
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a123 - - a123 
=== Succesors ===
=== Usages ===
?133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a123 - - a123  <|@  <|@
tid ?133 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<String.lastIndexOf(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1807
stackSize: 0
=== Inputs ===
outerFrameState: ?44 
values: - - 
=== Succesors ===
=== Usages ===
?211 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?44 values: - -  <|@  <|@
tid ?211 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<String.lastIndexOf(String, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1827
stackSize: 0
=== Inputs ===
outerFrameState: ?133 
values: - - - 
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?133 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a132 <|@
result Object[char[1]{.}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1827) [bci: 11]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
rawvalue: char[1]{.}
stableDimension: 1
stamp: a!# [C
stampKind: a -
value: Object[char[1]{.}]
=== Inputs ===
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
result int[46|0x2e] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1882) [bci: 44]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
rawvalue: 46
stableDimension: 0
stamp: i32 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i32
value: int[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 62
code: ResolvedJavaMethodBytecode<String.lastIndexOf(char[], int, int, char[], int, int, int)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1888
stackSize: 0
=== Inputs ===
outerFrameState: ?211 
values: a678 i7 - a132 - i6 - - i7 i210 i7 i182 - - - 
=== Succesors ===
=== Usages ===
v1134 a1236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?211 values: a678 i7 - a132 - i6 - - i7 i210 i7 i182 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i902 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1312) [bci: 55]
stamp: i32
=== Inputs ===
x: i182 
y: i6 
=== Succesors ===
=== Usages ===
v698 v531 i534 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i182 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i902 
y: i7 
=== Succesors ===
=== Usages ===
v945 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i902 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v531 
=== Succesors ===
trueSuccessor: v944 
falseSuccessor: v942 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v531 #trueSuccessor: v944 #falseSuccessor: v942  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v945 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
f <@~|@floating>@ <|@
tid i1131 <|@
result int[-178195|0xfffffffffffd47ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178195
stableDimension: 0
stamp: i32 [-178195] ⇊00000000fffd47ed ⇈00000000fffd47ed
stampKind: i32
value: int[-178195|0xfffffffffffd47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
v944 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178195|0xfffffffffffd47ed]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v945 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid i534 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: i32
=== Inputs ===
x: i1476 
y: i902 
=== Succesors ===
=== Usages ===
v535 v698 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1476 y: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i534 
y: i7 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i534 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v535 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v946 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v535 #trueSuccessor: v948 #falseSuccessor: v946  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SUB (x: v30|DWORD, ~y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid i1136 <|@
result int[-178451|0xfffffffffffd46ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178451
stableDimension: 0
stamp: i32 [-178451] ⇊00000000fffd46ed ⇈00000000fffd46ed
stampKind: i32
value: int[-178451|0xfffffffffffd46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178451|0xfffffffffffd46ed]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1132 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-178451 - -178195] ⇊00000000fffd46ed ⇈00000000fffd47ed
valueDescription: i32
=== Inputs ===
merge: v1129 
values: i1131 i1136 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1129 values: i1131 i1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1130 v1135 
=== Succesors ===
next: v1134 
=== Usages ===
i1132 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1130 v1135 #next: v1134  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?183 
actionAndReason: i1132 
speculation: a1104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?183 actionAndReason: i1132 speculation: a1104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
locals: v37|QWORD[.] int[0|0x0] - Object[char[1]{.}] - int[1|0x1] - - int[0|0x0] int[46|0x2e] int[0|0x0] v38|DWORD - - - 
java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
locals: - - - 
java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
locals: - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stack: v28|QWORD[.] 
locals: - v28|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:62, 21, 7, 51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1225 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1225 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1240 
=== Usages ===
v1516 v1517 
=== Predecessor ===
v946 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1240  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1225 
index: - 
=== Succesors ===
=== Usages ===
j1240 v1242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1225 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1240 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1516 
=== Succesors ===
next: j1241 
=== Usages ===
j1418 j1246 v1539 
=== Predecessor ===
j1225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1516 #next: j1241  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1225 
index: - 
=== Succesors ===
=== Usages ===
j1241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1225 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1241 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1517 
=== Succesors ===
next: v1233 
=== Usages ===
v1230 
=== Predecessor ===
j1240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1517 #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid j1418 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1240 
y: j1410 
=== Succesors ===
=== Usages ===
v1230 v1242 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1240 y: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1241 
y: j1418 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1241 y: j1418  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1230 
=== Succesors ===
trueSuccessor: v1231 
falseSuccessor: v1232 
=== Usages ===
=== Predecessor ===
j1241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1230 #trueSuccessor: v1231 #falseSuccessor: v1232  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4573800964610547359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1236 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1236 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?183 
arguments: v1175 i910 i6 
=== Succesors ===
next: j1237 
=== Usages ===
j1237 
=== Predecessor ===
v1231 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?183 arguments: v1175 i910 i6 #next: j1237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1237 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1236 
=== Succesors ===
next: v1247 
=== Usages ===
j1246 
=== Predecessor ===
a1236 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1236 #next: v1247  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
j1237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
locals: v37|QWORD[.] int[0|0x0] - Object[char[1]{.}] - int[1|0x1] - - int[0|0x0] int[46|0x2e] int[0|0x0] v38|DWORD - - - 
java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
locals: - - - 
java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
locals: - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stack: v28|QWORD[.] 
locals: - v28|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:62, 21, 7, 51] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4603706026601757482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1516 
value: j1418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1239 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1516 value: j1418 stateAfter: - lastLocationAccess: - #next: v1239  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
result [v42|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1240 
index: - 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1539 
=== Succesors ===
next: v1245 
=== Usages ===
=== Predecessor ===
v1242 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1539 #next: v1245  <|@  <|@
f <@*|@fixed>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
v1239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v42|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1246 <|@
result v45|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1244 
values: j1240 j1237 
=== Succesors ===
=== Usages ===
v1519 v1518 a1044 v1540 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1244 values: j1240 j1237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1245 v1247 
=== Succesors ===
next: a1044 
=== Usages ===
j1246 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1245 v1247 #next: a1044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1044 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1246 
=== Succesors ===
next: j1257 
=== Usages ===
a1049 
=== Predecessor ===
v1244 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1246 #next: j1257  <|@  <|@
f <@~|@floating>@ <|@
tid j1468 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1252 
=== Succesors ===
=== Usages ===
v1549 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1549 <|@
result [v21|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1468 
index: - 
=== Succesors ===
=== Usages ===
j1257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1257 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1549 
=== Succesors ===
next: v1258 
=== Usages ===
v1258 
=== Predecessor ===
a1044 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1549 #next: v1258  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
result [v45|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1246 
index: - 
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
value: j1257 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1261 
=== Usages ===
=== Predecessor ===
j1257 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1518 value: j1257 stateAfter: - lastLocationAccess: - #next: v1261  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
result [v45|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1246 
index: - 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1519 
value: v1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1265 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1519 value: v1421 stateAfter: - lastLocationAccess: - #next: v1265  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
result [v45|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1246 
index: - 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1049 
=== Usages ===
=== Predecessor ===
v1261 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1540 value: j1032 stateAfter: - lastLocationAccess: - #next: a1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1049 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1044 
=== Succesors ===
next: v1050 
=== Usages ===
v698 ?652 v545 
=== Predecessor ===
v1265 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1044 #next: v1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
a1049 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v541  <|@  <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@40d4b6c7
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a1049 a678 i902 i534 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1049 a678 i902 i534  <|@  <|@
tid ?154 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1312
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
?1088 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
tid a221 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1088 ?652 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?652 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a221 
materializedValue: a1049 
=== Succesors ===
=== Usages ===
?1088 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a221 materializedValue: a1049  <|@  <|@
tid ?1088 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?154 
values: - - - a221 
virtualObjectMappings: ?652 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?154 values: - - - a221 virtualObjectMappings: ?652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v698 
stateDuring: ?1088 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v698 stateDuring: ?1088 #next: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1049 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1049 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v45|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*]], y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v45|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v46|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 56] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621682082200859983
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1889) [bci: 78]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1889) [bci: 78]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: i32
=== Inputs ===
x: i182 
y: i179 
=== Succesors ===
=== Usages ===
i182 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i182 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
loopBegin: v181 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = DEC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B44 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
v1449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1550  <|@  <|@
f <@*|@fixed>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
v1448 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-175899|0xfffffffffffd50e5], v36|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.lastIndexOf(String.java:1888) [bci: 72]
at java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
at java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1110 
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
v1447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-175899|0xfffffffffffd50e5], v36|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1105 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-175899 - -172555] ⇊00000000fffd50e5 ⇈00000000fffd5ff5
valueDescription: i32
=== Inputs ===
merge: v1101 
values: i1111 i1111 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1101 values: i1111 i1111  <|@  <|@
f <@~|@floating>@ <|@
tid a1106 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1101 
values: a1112 a1112 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1101 values: a1112 a1112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1110 v1550 
=== Succesors ===
next: v1107 
=== Usages ===
i1105 a1106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1110 v1550 #next: v1107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?35 
actionAndReason: i1105 
speculation: a1106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?35 actionAndReason: i1105 speculation: a1106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD, v50|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v50|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: v28|QWORD[.] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B49" "B98" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 47]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1478 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1478  <|@  <|@
f <@~|@floating>@ <|@
tid v1496 <|@
result [v3|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
scale: Times1
stamp: void*
=== Inputs ===
base: a702 
index: - 
=== Succesors ===
=== Usages ===
a1478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a702 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1478 <|@
result v51|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: System.security
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/SecurityManager;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1496 
=== Succesors ===
next: v953 
=== Usages ===
v814 
=== Predecessor ===
v707 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1496 #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a1478 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1478  <|@  <|@
f <@*|@fixed>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v950 
falseSuccessor: v952 
=== Usages ===
=== Predecessor ===
a1478 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v950 #falseSuccessor: v952  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = MOV [v3|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|DWORD[.], y: v51|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.System.getSecurityManager(System.java:334) [bci: 0]
at java.lang.Class.checkPackageAccess(Class.java:2361) [bci: 0]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1479 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1479 <|@
result v52|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
=== Succesors ===
next: v331 
=== Usages ===
a711 v815 
=== Predecessor ===
v708 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1492 #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a1479 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1479  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0029838527247854074
=== Inputs ===
condition: v815 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v330 
=== Usages ===
=== Predecessor ===
a1479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v815 #trueSuccessor: v329 #falseSuccessor: v330  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD[.], y: v52|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4559356115667858029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a333 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a333  <|@  <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@637821aa
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a333 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?339 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 0
=== Inputs ===
outerFrameState: ?282 
values: - a307 - 
=== Succesors ===
=== Usages ===
?1086 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: - a307 -  <|@  <|@
tid ?1086 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?339 
values: - - a1 
=== Succesors ===
=== Usages ===
a333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?339 values: - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a333 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v790 
stateDuring: ?1086 
=== Succesors ===
next: v792 
=== Usages ===
a342 a791 
=== Predecessor ===
v329 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v790 stateDuring: ?1086 #next: v792  <|@  <|@
f <@~|@floating>@ <|@
tid a791 <|@
result v54|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a333 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
value: a791 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1403 
=== Usages ===
=== Predecessor ===
a333 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1492 value: a791 stateAfter: - lastLocationAccess: - #next: j1403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1403 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1407 
=== Usages ===
j1404 
=== Predecessor ===
v792 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1407  <|@  <|@
f <@~|@floating>@ <|@
tid j1404 <|@
result v55|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1403 
y: i1267 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1403 y: i1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
result [v55|QWORD[*] + v22|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1404 
index: j1271 
=== Succesors ===
=== Usages ===
v1407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1404 index: j1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1535 
value: i1273 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
j1403 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1535 value: i1273 stateAfter: - lastLocationAccess: - #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v1407 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v0|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
locals: - v20|QWORD[.] - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12, 34] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = COMPRESSPOINTER (input: v53|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v54|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|QWORD[*] + v22|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597282453568833770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid a711 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1479 
=== Succesors ===
=== Usages ===
a342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1479  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a342 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v340 
values: a711 a333 
=== Succesors ===
=== Usages ===
a609 ?272 v1500 ?358 v1551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v340 values: a711 a333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v341 v343 
=== Succesors ===
next: v1551 
=== Usages ===
a342 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v341 v343 #next: v1551  <|@  <|@
tid ?269 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 1
=== Inputs ===
outerFrameState: ?282 
values: - a307 - a1104 
=== Succesors ===
=== Usages ===
v1551 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: - a307 - a1104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?269 
object: a342 
=== Succesors ===
next: a1480 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?269 object: a342 #next: a1480  <|@  <|@
f <@~|@floating>@ <|@
tid v1497 <|@
result [v20|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a307 
index: - 
=== Succesors ===
=== Usages ===
a1480 v789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a307 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1480 <|@
result v58|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
=== Succesors ===
next: v350 
=== Usages ===
a714 v816 
=== Predecessor ===
v1551 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1497 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
value: a1480 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1480  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0029838527247854074
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
a1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v348 #falseSuccessor: v349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 15]
stack: Object[null] 
locals: - v20|QWORD[.] - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v57|QWORD[.]] state [bci:15, 34] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v20|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|DWORD[.], y: v58|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4559356115667858029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a352 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a352  <|@  <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@4cbaa465
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a307 
=== Succesors ===
=== Usages ===
a352 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a307  <|@  <|@
tid ?358 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 1
=== Inputs ===
outerFrameState: ?282 
values: - - - a342 
=== Succesors ===
=== Usages ===
?1087 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: - - - a342  <|@  <|@
tid ?1087 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?358 
values: - - a307 
=== Succesors ===
=== Usages ===
a352 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?358 values: - - a307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a352 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v787 
stateDuring: ?1087 
=== Succesors ===
next: v789 
=== Usages ===
a361 a788 
=== Predecessor ===
v348 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v787 stateDuring: ?1087 #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid a788 <|@
result v60|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a352 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
value: a788 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1396 
=== Usages ===
=== Predecessor ===
a352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1497 value: a788 stateAfter: - lastLocationAccess: - #next: j1396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1396 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a307 
=== Succesors ===
next: v1400 
=== Usages ===
j1397 
=== Predecessor ===
v789 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a307 #next: v1400  <|@  <|@
f <@~|@floating>@ <|@
tid j1397 <|@
result v61|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1396 
y: i1267 
=== Succesors ===
=== Usages ===
v1534 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1396 y: i1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
result [v61|QWORD[*] + v22|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1397 
index: j1271 
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1397 index: j1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
value: i1273 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
j1396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1534 value: i1273 stateAfter: - lastLocationAccess: - #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
v1400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v20|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stack: v57|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16, 34] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 20], y: v60|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SHR v20|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v61|QWORD[*] + v22|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4597282453568833770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid a714 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1480 
=== Succesors ===
=== Usages ===
a361 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1480  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a361 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v359 
values: a714 a352 
=== Succesors ===
=== Usages ===
?272 v1498 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v359 values: a714 a352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v360 v362 
=== Succesors ===
next: a1481 
=== Usages ===
a361 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v360 v362 #next: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1500 <|@
result [v57|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a342 
index: - 
=== Succesors ===
=== Usages ===
a1481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a342 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1481 <|@
result v64|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1500 
=== Succesors ===
next: v1552 
=== Usages ===
a727 v1552 v1501 v1504 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1500 #next: v1552  <|@  <|@
tid ?272 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 2
=== Inputs ===
outerFrameState: ?282 
values: - - - a342 a361 
=== Succesors ===
=== Usages ===
v1142 a1287 v1552 a1482 i1483 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: - - - a342 a361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?272 
object: a1481 
=== Succesors ===
next: a1482 
=== Usages ===
=== Predecessor ===
a1481 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?272 object: a1481 #next: a1482  <|@  <|@
f <@~|@floating>@ <|@
tid v1498 <|@
result [v63|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a361 
index: - 
=== Succesors ===
=== Usages ===
a1482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1482 <|@
result v65|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?272 
guard: - 
address: v1498 
=== Succesors ===
next: i1483 
=== Usages ===
v1499 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?272 guard: - address: v1498 #next: i1483  <|@  <|@
f <@~|@floating>@ <|@
tid v1499 <|@
result [v65|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1482 
=== Succesors ===
=== Usages ===
i1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1483 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?272 
guard: - 
address: v1499 
=== Succesors ===
next: i1484 
=== Usages ===
v381 i368 v370 v769 
=== Predecessor ===
a1482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?272 guard: - address: v1499 #next: i1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1501 <|@
result [v64|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1481 
=== Succesors ===
=== Usages ===
i1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1484 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 17]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1501 
=== Succesors ===
next: v973 
=== Usages ===
i368 v381 v759 i608 
=== Predecessor ===
i1483 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1501 #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1484 
y: i1483 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1484 y: i1483  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v970 
=== Usages ===
=== Predecessor ===
i1484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v972 #falseSuccessor: v970  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[.] = MOV [v57|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v57|QWORD[.] v63|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v64|DWORD[.] * 8] state [bci:19, 34] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v57|QWORD[.] v63|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v65|DWORD[.] = MOV [v63|QWORD[.] + 12] size: DWORD state [bci:19, 34] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v57|QWORD[.] v63|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v66|DWORD = MOV [v65|DWORD[.] * 8 + 12] size: DWORD state [bci:19, 34] <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV [v64|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid i1148 <|@
result int[-187667|0xfffffffffffd22ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -187667
stableDimension: 0
stamp: i32 [-187667] ⇊00000000fffd22ed ⇈00000000fffd22ed
stampKind: i32
value: int[-187667|0xfffffffffffd22ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
v972 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187667|0xfffffffffffd22ed]] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B64" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1483 
y: i7 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1483 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid a727 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
a607 v769 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
result short[36|0x24] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
rawvalue: 36
stableDimension: 0
stamp: i16 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i16
value: short[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 v823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9651155608201366
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v371 #falseSuccessor: v372  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v66|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 38]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1329) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1484 
y: i7 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1484 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v976 
falseSuccessor: v974 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v976 #falseSuccessor: v974  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1149 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1149  <|@  <|@
f <@~|@floating>@ <|@
tid i1150 <|@
result int[-193811|0xfffffffffffd0aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -193811
stableDimension: 0
stamp: i32 [-193811] ⇊00000000fffd0aed ⇈00000000fffd0aed
stampKind: i32
value: int[-193811|0xfffffffffffd0aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-193811|0xfffffffffffd0aed]] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1485 
=== Usages ===
i1485 
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1504 <|@
result [v64|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1481 
=== Succesors ===
=== Usages ===
i1485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1485 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1329) [bci: 72]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v974 
address: v1504 
=== Succesors ===
next: v981 
=== Usages ===
v821 
=== Predecessor ===
v974 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v974 address: v1504 #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1485 
y: i820 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1485 y: i820  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v978 
falseSuccessor: v980 
=== Usages ===
=== Predecessor ===
i1485 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v978 #falseSuccessor: v980  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v64|DWORD[.] * 8 + 16] y: 36 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v606  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
v978 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.], v67|DWORD, v57|QWORD[.]] destination: B61 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1151  <|@  <|@
f <@~|@floating>@ <|@
tid i1152 <|@
result int[-196627|0xfffffffffffcffed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -196627
stableDimension: 0
stamp: i32 [-196627] ⇊00000000fffcffed ⇈00000000fffcffed
stampKind: i32
value: int[-196627|0xfffffffffffcffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
v980 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-196627|0xfffffffffffcffed]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" "B62" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1140 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-196627 - -183051] ⇊00000000fffc00e5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1137 
values: i1148 i1150 i1152 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1137 values: i1148 i1150 i1152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1147 v1149 v1151 
=== Succesors ===
next: v1142 
=== Usages ===
i1140 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1147 v1149 v1151 #next: v1142  <|@  <|@
f <@*|@fixed>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?272 
actionAndReason: i1140 
speculation: a1104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1137 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?272 actionAndReason: i1140 speculation: a1104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v57|QWORD[.] v63|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:19, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 42]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1276 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1276 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1291 
=== Usages ===
v1521 v1522 
=== Predecessor ===
v372 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1291  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1276 
index: - 
=== Succesors ===
=== Usages ===
j1291 v1293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1276 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1291 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
=== Succesors ===
next: j1292 
=== Usages ===
j1423 j1297 v1541 
=== Predecessor ===
j1276 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1521 #next: j1292  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1276 
index: - 
=== Succesors ===
=== Usages ===
j1292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1276 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1292 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1522 
=== Succesors ===
next: v1284 
=== Usages ===
v1281 
=== Predecessor ===
j1291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1522 #next: v1284  <|@  <|@
f <@~|@floating>@ <|@
tid j1423 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1291 
y: j1410 
=== Succesors ===
=== Usages ===
v1281 v1293 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1291 y: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1292 
y: j1423 
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1292 y: j1423  <|@  <|@
f <@*|@fixed>@ <|@
tid v1284 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1281 
=== Succesors ===
trueSuccessor: v1282 
falseSuccessor: v1283 
=== Usages ===
=== Predecessor ===
j1292 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1281 #trueSuccessor: v1282 #falseSuccessor: v1283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v70|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4545442995675356429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1287 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1287 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?272 
arguments: v1175 i910 i6 
=== Succesors ===
next: j1288 
=== Usages ===
j1288 
=== Predecessor ===
v1282 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?272 arguments: v1175 i910 i6 #next: j1288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1288 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1287 
=== Succesors ===
next: v1298 
=== Usages ===
j1297 
=== Predecessor ===
a1287 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1287 #next: v1298  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
j1288 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v57|QWORD[.] v63|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 34] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.]] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4575644437111554024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1293 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
value: j1423 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1290 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1521 value: j1423 stateAfter: - lastLocationAccess: - #next: v1290  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
result [v70|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1291 
index: - 
=== Succesors ===
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1291 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1541 
=== Succesors ===
next: v1296 
=== Usages ===
=== Predecessor ===
v1293 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1541 #next: v1296  <|@  <|@
f <@*|@fixed>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
v1290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v70|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1297 <|@
result v73|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1295 
values: j1291 j1288 
=== Succesors ===
=== Usages ===
v1524 v1523 a1053 v1542 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1295 values: j1291 j1288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1296 v1298 
=== Succesors ===
next: a1053 
=== Usages ===
j1297 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1296 v1298 #next: a1053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1053 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1297 
=== Succesors ===
next: j1307 
=== Usages ===
a1058 
=== Predecessor ===
v1295 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1297 #next: j1307  <|@  <|@
f <@~|@floating>@ <|@
tid j1467 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1252 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1548 <|@
result [v21|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1467 
index: - 
=== Succesors ===
=== Usages ===
j1307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1307 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1548 
=== Succesors ===
next: v1308 
=== Usages ===
v1308 
=== Predecessor ===
a1053 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1548 #next: v1308  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
result [v73|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1297 
index: - 
=== Succesors ===
=== Usages ===
v1308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1297 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1523 
value: j1307 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1311 
=== Usages ===
=== Predecessor ===
j1307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1523 value: j1307 stateAfter: - lastLocationAccess: - #next: v1311  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
result [v73|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1297 
index: - 
=== Succesors ===
=== Usages ===
v1311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1297 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1524 
value: v1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1315 
=== Usages ===
=== Predecessor ===
v1308 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1524 value: v1421 stateAfter: - lastLocationAccess: - #next: v1315  <|@  <|@
f <@~|@floating>@ <|@
tid v1542 <|@
result [v73|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1297 
index: - 
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1297 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1542 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1058 
=== Usages ===
=== Predecessor ===
v1311 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1542 value: j1032 stateAfter: - lastLocationAccess: - #next: a1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1058 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1053 
=== Succesors ===
next: v1059 
=== Usages ===
v769 ?657 v1505 a609 
=== Predecessor ===
v1315 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1053 #next: v1059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
a1058 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1484 
y: i1483 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1484 y: i1483  <|@  <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@d9a97e9
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a1058 a727 i1483 i368 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1058 a727 i1483 i368  <|@  <|@
tid ?382 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<Class.getSimpleBinaryName()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1448
stackSize: 0
=== Inputs ===
outerFrameState: ?282 
values: - - - 
=== Succesors ===
=== Usages ===
?378 ?1089 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?282 values: - - -  <|@  <|@
tid a459 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 2
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?657 ?378 ?1089 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?657 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a459 
materializedValue: a1058 
=== Succesors ===
=== Usages ===
?378 ?1089 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a459 materializedValue: a1058  <|@  <|@
tid ?1089 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?382 
values: - - - a459 
virtualObjectMappings: ?657 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?382 values: - - - a459 virtualObjectMappings: ?657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v769 
stateDuring: ?1089 
=== Succesors ===
next: a1486 
=== Usages ===
=== Predecessor ===
v1059 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v769 stateDuring: ?1089 #next: a1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1505 <|@
result [v74|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1058 
index: - 
=== Succesors ===
=== Usages ===
a1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1486 <|@
result v77|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1328) [bci: 61]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1505 
=== Succesors ===
next: i1487 
=== Usages ===
a772 v1507 v1506 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1505 #next: i1487  <|@  <|@
tid ?378 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?382 
values: - - - a459 
virtualObjectMappings: ?657 
=== Succesors ===
=== Usages ===
v1158 i1487 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?382 values: - - - a459 virtualObjectMappings: ?657  <|@  <|@
f <@~|@floating>@ <|@
tid v1506 <|@
result [v77|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1486 
=== Succesors ===
=== Usages ===
i1487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1487 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.Class.getSimpleName(Class.java:1328) [bci: 61]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?378 
guard: - 
address: v1506 
=== Succesors ===
next: v989 
=== Usages ===
v780 i608 
=== Predecessor ===
a1486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?378 guard: - address: v1506 #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1329) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1487 
y: i7 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1487 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v988 
falseSuccessor: v986 
=== Usages ===
=== Predecessor ===
i1487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v988 #falseSuccessor: v986  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD[*]], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v73|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v67|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v74|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22, 34] <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v74|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 55]
stack: v74|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v78|DWORD = MOV [v77|DWORD[.] * 8 + 12] size: DWORD state [bci:55, 22, 34] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B97" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@~|@floating>@ <|@
tid i1160 <|@
result int[-199187|0xfffffffffffcf5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -199187
stableDimension: 0
stamp: i32 [-199187] ⇊00000000fffcf5ed ⇈00000000fffcf5ed
stampKind: i32
value: int[-199187|0xfffffffffffcf5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-199187|0xfffffffffffcf5ed]] destination: B68 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B96" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1488 
=== Usages ===
i1488 
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1488  <|@  <|@
f <@~|@floating>@ <|@
tid v1507 <|@
result [v77|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1486 
=== Succesors ===
=== Usages ===
i1488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1488 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1329) [bci: 72]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v986 
address: v1507 
=== Succesors ===
next: v993 
=== Usages ===
v823 
=== Predecessor ===
v986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v986 address: v1507 #next: v993  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1488 
y: i820 
=== Succesors ===
=== Usages ===
v993 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1488 y: i820  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v823 
=== Succesors ===
trueSuccessor: v990 
falseSuccessor: v992 
=== Usages ===
=== Predecessor ===
i1488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v823 #trueSuccessor: v990 #falseSuccessor: v992  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v77|DWORD[.] * 8 + 16] y: 36 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid a772 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1328) [bci: 61]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1486 
=== Succesors ===
=== Usages ===
a607 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1486  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.], v78|DWORD, v74|QWORD[.]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B61" 
    successors "B72" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a607 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v605 
values: a772 a727 
=== Succesors ===
=== Usages ===
v753 v1503 v756 v1502 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v605 values: a772 a727  <|@  <|@
f <@~|@floating>@ <|@
tid i608 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v605 
values: i1487 i1484 
=== Succesors ===
=== Usages ===
v68 ?67 i497 i1462 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v605 values: i1487 i1484  <|@  <|@
f <@~|@floating>@ <|@
tid a609 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v605 
values: a1058 a342 
=== Succesors ===
=== Usages ===
v507 v250 ?67 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v605 values: a1058 a342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v604 v606 
=== Succesors ===
next: v64 
=== Usages ===
a607 i608 a609 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v604 v606 #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[.], v81|DWORD, v82|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B77" 
    successors "B73" "B87" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4597962382506270627
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i66 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v65 
values: i6 i91 
=== Succesors ===
=== Usages ===
?67 v68 i1462 v753 v1503 i497 v500 i91 v756 v741 v1460 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v65 values: i6 i91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0805586580550168
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v64 
=== Succesors ===
next: v74 
=== Usages ===
i66 v71 v85 v92 v1011 v1006 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v64 #next: v74  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 92
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1332
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a609 i608 i66 
=== Succesors ===
=== Usages ===
v1118 a1367 a1327 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a609 i608 i66  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 94]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i608 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i66 y: i608  <|@  <|@
tid ?245 <|@
d <@d|@=== Debug Properties ===
bci: 116
code: ResolvedJavaMethodBytecode<Class.getSimpleName()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1335
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
?1091 ?1090 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
tid a255 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: 3
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?666 ?1090 ?1091 ?663 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 94]
stamp: void
trueSuccessorProbability: 0.9254385964912281
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v69 #falseSuccessor: v71  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9254385964912281 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B86" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1489 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1502 <|@
result [v80|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a607 
index: - 
=== Succesors ===
=== Usages ===
i1489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a607 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1489 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1502 
=== Succesors ===
next: v1007 
=== Usages ===
v741 
=== Predecessor ===
v69 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1502 #next: v1007  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i1489 
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i66 y: i1489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1007 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v741 
=== Succesors ===
trueSuccessor: v1003 
falseSuccessor: v1006 
=== Usages ===
=== Predecessor ===
i1489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v741 #trueSuccessor: v1003 #falseSuccessor: v1006  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: [v80|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1490 
=== Usages ===
i1490 
=== Predecessor ===
v1007 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1503 <|@
result [v80|QWORD[.] + v83|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a607 
index: i66 
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a607 index: i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1490 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1003 
address: v1503 
=== Succesors ===
next: v1012 
=== Usages ===
i749 
=== Predecessor ===
v1003 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1003 address: v1503 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid i749 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1490 
=== Succesors ===
=== Usages ===
v174 v171 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1490  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 0]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i749 
y: i170 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i749 y: i170  <|@  <|@
f <@*|@fixed>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1008 
=== Usages ===
=== Predecessor ===
i1490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v1011 #falseSuccessor: v1008  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVZX [v80|QWORD[.] + v83|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v84|DWORD y: 48 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v65 
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v65 #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid i1126 <|@
result int[-192019|0xfffffffffffd11ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -192019
stableDimension: 0
stamp: i32 [-192019] ⇊00000000fffd11ed ⇈00000000fffd11ed
stampKind: i32
value: int[-192019|0xfffffffffffd11ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1011 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-192019|0xfffffffffffd11ed]] destination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 3]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result int[58|0x3a] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 9]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
rawvalue: 58
stableDimension: 0
stamp: i32 [58] ⇊000000000000003a ⇈000000000000003a
stampKind: i32
value: int[58|0x3a]
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Class.isAsciiDigit(Class.java:1369) [bci: 9]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 102]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i749 
y: i173 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i749 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 105]
stamp: void
trueSuccessorProbability: 0.08055940822931118
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v89 #falseSuccessor: v85  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v84|DWORD y: 58 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08055940822931118 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580902375020534835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1333) [bci: 108]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1333) [bci: 108]
stamp: i32
=== Inputs ===
x: i66 
y: i6 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i66 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
stamp: void
=== Inputs ===
loopBegin: v65 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC v83|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|DWORD] destination: B77 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4596651018314987035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1335) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v65 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v65 #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid i497 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: i32
=== Inputs ===
x: i608 
y: i66 
=== Succesors ===
=== Usages ===
v498 v753 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i608 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i497 
y: i7 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i497 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v1015 
falseSuccessor: v1013 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v1015 #falseSuccessor: v1013  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v81|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|DWORD, y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1119  <|@  <|@
f <@~|@floating>@ <|@
tid i1120 <|@
result int[-192531|0xfffffffffffd0fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -192531
stableDimension: 0
stamp: i32 [-192531] ⇊00000000fffd0fed ⇈00000000fffd0fed
stampKind: i32
value: int[-192531|0xfffffffffffd0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1015 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-192531|0xfffffffffffd0fed]] destination: B79 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4596651018314987035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i7 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i66 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
trueSuccessorProbability: 0.9651155608201366
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v501 #falseSuccessor: v502  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4596389978125520015
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 38]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a609 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a609 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4575003308216627588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 42]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1316 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1316 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1331 
=== Usages ===
v1525 v1526 
=== Predecessor ===
v502 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1331  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1316 
index: - 
=== Succesors ===
=== Usages ===
j1331 v1333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1331 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1525 
=== Succesors ===
next: j1332 
=== Usages ===
j1427 j1337 v1543 
=== Predecessor ===
j1316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1525 #next: j1332  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1316 
index: - 
=== Succesors ===
=== Usages ===
j1332 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1332 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1526 
=== Succesors ===
next: v1324 
=== Usages ===
v1321 
=== Predecessor ===
j1331 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1526 #next: v1324  <|@  <|@
f <@~|@floating>@ <|@
tid j1427 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1331 
y: j1410 
=== Succesors ===
=== Usages ===
v1321 v1333 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1331 y: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1332 
y: j1427 
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1332 y: j1427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1321 
=== Succesors ===
trueSuccessor: v1322 
falseSuccessor: v1323 
=== Usages ===
=== Predecessor ===
j1332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1321 #trueSuccessor: v1322 #falseSuccessor: v1323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v87|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4544974527469744545
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1327 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1327 <|@
result v89|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?67 
arguments: v1175 i910 i6 
=== Succesors ===
next: j1328 
=== Usages ===
j1328 
=== Predecessor ===
v1322 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?67 arguments: v1175 i910 i6 #next: j1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1328 <|@
result v89|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1327 
=== Succesors ===
next: v1338 
=== Usages ===
j1337 
=== Predecessor ===
a1327 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1327 #next: v1338  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
j1328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - v82|QWORD[.] v81|DWORD v83|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD[.]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4574919775355998141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1333 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1525 
value: j1427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1330 
=== Usages ===
=== Predecessor ===
v1323 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1525 value: j1427 stateAfter: - lastLocationAccess: - #next: v1330  <|@  <|@
f <@~|@floating>@ <|@
tid v1543 <|@
result [v87|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1331 
index: - 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1331 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1543 
=== Succesors ===
next: v1336 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1543 #next: v1336  <|@  <|@
f <@*|@fixed>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
v1330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v87|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 4575003308216627588
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1337 <|@
result v90|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1335 
values: j1331 j1328 
=== Succesors ===
=== Usages ===
v1528 v1527 a1062 v1544 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1335 values: j1331 j1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1336 v1338 
=== Succesors ===
next: a1062 
=== Usages ===
j1337 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1336 v1338 #next: a1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1062 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1337 
=== Succesors ===
next: j1347 
=== Usages ===
a1067 
=== Predecessor ===
v1335 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1337 #next: j1347  <|@  <|@
f <@~|@floating>@ <|@
tid j1466 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1252 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1547 <|@
result [v21|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1466 
index: - 
=== Succesors ===
=== Usages ===
j1347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1466 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1347 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1547 
=== Succesors ===
next: v1348 
=== Usages ===
v1348 
=== Predecessor ===
a1062 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1547 #next: v1348  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
result [v90|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1337 
index: - 
=== Succesors ===
=== Usages ===
v1348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1337 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1527 
value: j1347 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
j1347 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1527 value: j1347 stateAfter: - lastLocationAccess: - #next: v1351  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
result [v90|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1337 
index: - 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1337 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1528 
value: v1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1348 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1528 value: v1421 stateAfter: - lastLocationAccess: - #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
result [v90|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1337 
index: - 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1337 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1544 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1067 
=== Usages ===
=== Predecessor ===
v1351 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1544 value: j1032 stateAfter: - lastLocationAccess: - #next: a1067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1067 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1062 
=== Succesors ===
next: v1068 
=== Usages ===
v753 ?663 v508 
=== Predecessor ===
v1355 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1062 #next: v1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
a1067 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v505  <|@  <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@689d7a13
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a1067 a607 i66 i497 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1067 a607 i66 i497  <|@  <|@
tid ?663 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a255 
materializedValue: a1067 
=== Succesors ===
=== Usages ===
?1090 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a255 materializedValue: a1067  <|@  <|@
tid ?1090 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?245 
values: - - - a255 
virtualObjectMappings: ?663 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?245 values: - - - a255 virtualObjectMappings: ?663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v753 
stateDuring: ?1090 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v753 stateDuring: ?1090 #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1067 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1067 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v90|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[*]], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v90|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v83|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v86|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v91|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Class.getSimpleName(Class.java:1332) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v65 
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v65 #next: v1123  <|@  <|@
f <@~|@floating>@ <|@
tid i1124 <|@
result int[-189979|0xfffffffffffd19e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -189979
stableDimension: 0
stamp: i32 [-189979] ⇊00000000fffd19e5 ⇈00000000fffd19e5
stampKind: i32
value: int[-189979|0xfffffffffffd19e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1006 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189979|0xfffffffffffd19e5]] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4580902981326581777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1335) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v65 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v65 #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid i1462 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: i32
=== Inputs ===
x: i608 
y: i66 
=== Succesors ===
=== Usages ===
v1461 v756 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i608 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1462 
y: i7 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1462 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1461 
=== Succesors ===
trueSuccessor: v1023 
falseSuccessor: v1021 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1461 #trueSuccessor: v1023 #falseSuccessor: v1021  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SUB (x: v81|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@~|@floating>@ <|@
tid i1128 <|@
result int[-193299|0xfffffffffffd0ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -193299
stableDimension: 0
stamp: i32 [-193299] ⇊00000000fffd0ced ⇈00000000fffd0ced
stampKind: i32
value: int[-193299|0xfffffffffffd0ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
v1023 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-193299|0xfffffffffffd0ced]] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B79" "B86" "B75" "B88" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1116 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-193299 - -189979] ⇊00000000fffd00e5 ⇈00000000fffd1fed
valueDescription: i32
=== Inputs ===
merge: v1113 
values: i1120 i1124 i1126 i1128 
=== Succesors ===
=== Usages ===
v1118 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1113 values: i1120 i1124 i1126 i1128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1119 v1123 v1125 v1127 
=== Succesors ===
next: v1118 
=== Usages ===
i1116 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1119 v1123 v1125 v1127 #next: v1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?67 
actionAndReason: i1116 
speculation: a1104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?67 actionAndReason: i1116 speculation: a1104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - v82|QWORD[.] v81|DWORD v83|DWORD 
>@ <|@ instruction DEOPT info [bci:92] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4580902981326581777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i7 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i66 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
trueSuccessorProbability: 0.9651155608201366
=== Inputs ===
condition: v1460 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1460 #trueSuccessor: v235 #falseSuccessor: v236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4580719985933764635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 38]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a609 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a609 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4558995075841720012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 42]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1356 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1356 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1371 
=== Usages ===
v1529 v1530 
=== Predecessor ===
v236 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1371  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: - 
=== Succesors ===
=== Usages ===
j1371 v1373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1371 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
=== Succesors ===
next: j1372 
=== Usages ===
j1431 j1377 v1545 
=== Predecessor ===
j1356 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1529 #next: j1372  <|@  <|@
f <@~|@floating>@ <|@
tid v1530 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1356 
index: - 
=== Succesors ===
=== Usages ===
j1372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1356 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1372 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
=== Succesors ===
next: v1364 
=== Usages ===
v1361 
=== Predecessor ===
j1371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1530 #next: v1364  <|@  <|@
f <@~|@floating>@ <|@
tid j1431 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1371 
y: j1410 
=== Succesors ===
=== Usages ===
v1361 v1373 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1371 y: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1361 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1372 
y: j1431 
=== Succesors ===
=== Usages ===
v1364 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1372 y: j1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1361 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1363 
=== Usages ===
=== Predecessor ===
j1372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1361 #trueSuccessor: v1362 #falseSuccessor: v1363  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v95|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4529109517169768142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1367 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1367 <|@
result v97|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?67 
arguments: v1175 i910 i6 
=== Succesors ===
next: j1368 
=== Usages ===
j1368 
=== Predecessor ===
v1362 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?67 arguments: v1175 i910 i6 #next: j1368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1368 <|@
result v97|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1367 
=== Succesors ===
next: v1378 
=== Usages ===
j1377 
=== Predecessor ===
a1367 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1367 #next: v1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
j1368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - v82|QWORD[.] v81|DWORD v83|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|QWORD[.]] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4558936517316018526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1373 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
value: j1431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1370 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1529 value: j1431 stateAfter: - lastLocationAccess: - #next: v1370  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
result [v95|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1371 
index: - 
=== Succesors ===
=== Usages ===
v1370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1371 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1545 
=== Succesors ===
next: v1376 
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1545 #next: v1376  <|@  <|@
f <@*|@fixed>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
v1370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v95|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 4558995075841720012
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1377 <|@
result v98|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1375 
values: j1371 j1368 
=== Succesors ===
=== Usages ===
v1533 v1532 a1071 v1546 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1375 values: j1371 j1368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1376 v1378 
=== Succesors ===
next: a1071 
=== Usages ===
j1377 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1376 v1378 #next: a1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1071 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1377 
=== Succesors ===
next: j1387 
=== Usages ===
a1076 
=== Predecessor ===
v1375 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1377 #next: j1387  <|@  <|@
f <@~|@floating>@ <|@
tid j1383 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1252 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
result [v21|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1383 
index: - 
=== Succesors ===
=== Usages ===
j1387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1383 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1387 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1531 
=== Succesors ===
next: v1388 
=== Usages ===
v1388 
=== Predecessor ===
a1071 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1531 #next: v1388  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
result [v98|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1377 
index: - 
=== Succesors ===
=== Usages ===
v1388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1532 
value: j1387 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
j1387 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1532 value: j1387 stateAfter: - lastLocationAccess: - #next: v1391  <|@  <|@
f <@~|@floating>@ <|@
tid v1533 <|@
result [v98|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1377 
index: - 
=== Succesors ===
=== Usages ===
v1391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1533 
value: v1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1395 
=== Usages ===
=== Predecessor ===
v1388 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1533 value: v1421 stateAfter: - lastLocationAccess: - #next: v1395  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
result [v98|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1377 
index: - 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1546 
value: j1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1076 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1546 value: j1032 stateAfter: - lastLocationAccess: - #next: a1076  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1076 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1071 
=== Succesors ===
next: v1077 
=== Usages ===
v756 ?666 v251 
=== Predecessor ===
v1395 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1071 #next: v1077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
a1076 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v241  <|@  <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4aca73db
stamp: void
targetMethod: HotSpotMethod<String.<init>(char[], int, int)>
=== Inputs ===
arguments: a1076 a607 i66 i1462 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1076 a607 i66 i1462  <|@  <|@
tid ?666 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a255 
materializedValue: a1076 
=== Succesors ===
=== Usages ===
?1091 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a255 materializedValue: a1076  <|@  <|@
tid ?1091 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1933
stackSize: 1
=== Inputs ===
outerFrameState: ?245 
values: - - - a255 
virtualObjectMappings: ?666 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?245 values: - - - a255 virtualObjectMappings: ?666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
bci: 52
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 52]
at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
polymorphic: false
stamp: void
targetMethod: Direct#String.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v756 
stateDuring: ?1091 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v756 stateDuring: ?1091 #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1076 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1076 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v98|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[*]], y: v100|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v98|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v83|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v93|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v99|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B97" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getSimpleName(Class.java:1329) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1161 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1161  <|@  <|@
f <@~|@floating>@ <|@
tid i1162 <|@
result int[-201235|0xfffffffffffceded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -201235
stableDimension: 0
stamp: i32 [-201235] ⇊00000000fffceded ⇈00000000fffceded
stampKind: i32
value: int[-201235|0xfffffffffffceded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
v992 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-201235|0xfffffffffffceded]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B68" "B96" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1156 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-201235 - -198155] ⇊00000000fffce1e5 ⇈00000000fffcfdfd
valueDescription: i32
=== Inputs ===
merge: v1153 
values: i1160 i1162 
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1153 values: i1160 i1162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1159 v1161 
=== Succesors ===
next: v1158 
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1159 v1161 #next: v1158  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?378 
actionAndReason: i1156 
speculation: a1104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?378 actionAndReason: i1156 speculation: a1104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 55]
stack: v74|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:55, 22, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v951 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v951  <|@  <|@
tid ?308 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<Class.getEnclosingClass()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 1287
stackSize: 0
=== Inputs ===
outerFrameState: ?323 
values: - - a307 - 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?323 values: - - a307 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 709
nodeSourcePosition: at java.lang.Class.checkPackageAccess(Class.java:2362) [bci: 5]
at java.lang.Class.getEnclosingClass(Class.java:1288) [bci: 55]
at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?308 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -181523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
locals: - - v20|QWORD[.] - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:43, 1, 34] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53ca6f6b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [v0|QWORD[.] + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD + 8] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|QWORD[.], y: v6|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602589167782746524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|QWORD[.], y: v7|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600638587436913969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.]] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B13" "B3" 
    successors "B23" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7741051967419984 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD[.], y: v23|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605126934324403878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: v28|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v29|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: v28|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v30|DWORD = MOV [v29|DWORD[.] * 8 + 12] size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = DEC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B46" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = DEC v33|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B45" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622031249313011565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v37|QWORD[.] + v38|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05977219319659602 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621682082200859983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = DEC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B44 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B44" 
    successors "B33" "B34" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4622117864685309086
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01461062227930204 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SUB (x: v30|DWORD, ~y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4603706026601757482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v42|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v45|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [v112|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*]], y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v45|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v46|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 56] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602589167782746524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD[.], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600638587436913969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B49" "B98" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = MOV [v107|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|DWORD[.], y: v51|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD[.], y: v52|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597282453568833770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 15]
stack: Object[null] 
locals: - v20|QWORD[.] - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v57|QWORD[.]] state [bci:15, 34] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v20|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|DWORD[.], y: v58|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4597282453568833770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[.] = MOV [v57|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v57|QWORD[.] v63|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v64|DWORD[.] * 8] state [bci:19, 34] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v57|QWORD[.] v63|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v65|DWORD[.] = MOV [v63|QWORD[.] + 12] size: DWORD state [bci:19, 34] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v57|QWORD[.] v63|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v66|DWORD = MOV [v65|DWORD[.] * 8 + 12] size: DWORD state [bci:19, 34] <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV [v64|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B64" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v66|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v64|DWORD[.] * 8 + 16] y: 36 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.], v67|DWORD, v57|QWORD[.]] destination: B61 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B61" 
    successors "B72" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD[.], v81|DWORD, v82|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B86" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: [v80|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVZX [v80|QWORD[.] + v83|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v84|DWORD y: 48 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v84|DWORD y: 58 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08055940822931118 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580902375020534835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC v83|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|DWORD] destination: B77 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B77" 
    successors "B73" "B87" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4597962382506270627
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9254385964912281 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4596651018314987035
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v81|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|DWORD, y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4596651018314987035
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4596389978125520015
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 4594711404117576775
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592466742046495146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4596970341673865642
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v108|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD[.], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596970341673865642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592466742046495146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4580902981326581777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SUB (x: v81|DWORD, ~y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4580902981326581777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4580719985933764635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v70|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4575644437111554024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v70|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [v111|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD[*]], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v73|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v73|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v67|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v74|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22, 34] <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v74|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 55]
stack: v74|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v78|DWORD = MOV [v77|DWORD[.] * 8 + 12] size: DWORD state [bci:55, 22, 34] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B96" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v77|DWORD[.] * 8 + 16] y: 36 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD[.], v78|DWORD, v74|QWORD[.]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4575003308216627588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v87|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4574919775355998141
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v87|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 4575003308216627588
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v90|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = MOV [v110|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[*]], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v90|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v83|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v86|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v91|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4573800964610547359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
locals: v37|QWORD[.] int[0|0x0] - Object[char[1]{.}] - int[1|0x1] - - int[0|0x0] int[46|0x2e] int[0|0x0] v38|DWORD - - - 
java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
locals: - - - 
java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
locals: - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stack: v28|QWORD[.] 
locals: - v28|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:62, 21, 7, 51] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B16" 
    xhandlers
    flags 
    probability 4572387711107307776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v11|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576833933845142024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE v14|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v16|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD[*]], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v15|QWORD[.] 
locals: - v10|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v15|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v15|QWORD[.] 
locals: - v10|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v18|DWORD[.] * 8] state [bci:5, 17, 1, 1, 34] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4572387711107307776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4567472495373210469
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v0|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 43] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v25|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v26|QWORD[*] + v115|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4559356115667858029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v20|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stack: v57|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16, 34] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 20], y: v60|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SHR v20|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v61|QWORD[*] + v113|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4559356115667858029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v0|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
locals: - v20|QWORD[.] - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12, 34] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = COMPRESSPOINTER (input: v53|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v54|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|QWORD[*] + v114|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4558995075841720012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v95|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4558936517316018526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v95|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 4558995075841720012
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v98|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOV [v109|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[*]], y: v100|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v98|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v98|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v83|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v93|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 52]
stack: v99|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4546972666250099759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v106|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4]
stack: v10|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4545442995675356429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v104|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v57|QWORD[.] v63|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 34] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.]] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4544974527469744545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - v82|QWORD[.] v81|DWORD v83|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD[.]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4529109517169768142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - v82|QWORD[.] v81|DWORD v83|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|QWORD[.]] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-192019|0xfffffffffffd11ed]] destination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B79" "B86" "B75" "B88" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - v82|QWORD[.] v81|DWORD v83|DWORD 
>@ <|@ instruction DEOPT info [bci:92] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -181523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
locals: - - v20|QWORD[.] - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:43, 1, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-192531|0xfffffffffffd0fed]] destination: B79 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-193811|0xfffffffffffd0aed]] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" "B62" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: v57|QWORD[.] v63|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:19, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1568883993] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-175899|0xfffffffffffd50e5], v116|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD, v50|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v50|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: v28|QWORD[.] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178451|0xfffffffffffd46ed]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
locals: v37|QWORD[.] int[0|0x0] - Object[char[1]{.}] - int[1|0x1] - - int[0|0x0] int[46|0x2e] int[0|0x0] v38|DWORD - - - 
java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
locals: - - - 
java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
locals: - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stack: v28|QWORD[.] 
locals: - v28|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:62, 21, 7, 51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187667|0xfffffffffffd22ed]] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178195|0xfffffffffffd47ed]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -206611 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: v15|QWORD[.] 
locals: - v10|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: v0|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:5, 17, 1, 1, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -205331 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4]
stack: v8|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: v0|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 10, 1, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B97" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-199187|0xfffffffffffcf5ed]] destination: B68 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B68" "B96" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1933) [bci: 55]
stack: v74|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:55, 22, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-196627|0xfffffffffffcffed]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B97" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-201235|0xfffffffffffceded]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -203539 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getSimpleName(Class.java:1306) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189979|0xfffffffffffd19e5]] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-193299|0xfffffffffffd0ced]] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1568883993] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-175899|0xfffffffffffd50e5], v117|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #93         // isArray:()boolean
     4: ifeq          33
     7: new           #11         // java.lang.StringBuilder
    10: dup           
    11: invokespecial #10         // java.lang.StringBuilder.<init>:()void
    14: aload_0       
    15: invokevirtual #94         // getComponentType:()java.lang.Class
    18: invokevirtual #95         // getSimpleName:()java.lang.String
    21: invokevirtual #13         // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    24: ldc           #122        // "[]"
    26: invokevirtual #13         // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    29: invokevirtual #15         // java.lang.StringBuilder.toString:()java.lang.String
    32: areturn       
    33: aload_0       
    34: invokespecial #96         // getSimpleBinaryName:()java.lang.String
    37: astore_1      
    38: aload_1       
    39: ifnonnull     60
    42: aload_0       
    43: invokevirtual #14         // getName:()java.lang.String
    46: astore_1      
    47: aload_1       
    48: aload_1       
    49: ldc           #124        // "."
    51: invokevirtual #97         // java.lang.String.lastIndexOf:(java.lang.String)int
    54: iconst_1      
    55: iadd          
    56: invokevirtual #98         // java.lang.String.substring:(int)java.lang.String
    59: areturn       
    60: aload_1       
    61: invokevirtual #99         // java.lang.String.length:()int
    64: istore_2      
    65: iload_2       
    66: iconst_1      
    67: if_icmplt     80
    70: aload_1       
    71: iconst_0      
    72: invokevirtual #100        // java.lang.String.charAt:(int)char
    75: bipush        36
    77: if_icmpeq     90
    80: new           #99         // java.lang.InternalError
    83: dup           
    84: ldc           #129        // "Malformed class name"
    86: invokespecial #79         // java.lang.InternalError.<init>:(java.lang.String)void
    89: athrow        
    90: iconst_1      
    91: istore_3      
    92: iload_3       
    93: iload_2       
    94: if_icmpge     114
    97: aload_1       
    98: iload_3       
    99: invokevirtual #100        // java.lang.String.charAt:(int)char
   102: invokestatic  #101        // isAsciiDigit:(char)boolean
   105: ifeq          114
   108: iinc          
   111: goto          92
   114: aload_1       
   115: iload_3       
   116: invokevirtual #98         // java.lang.String.substring:(int)java.lang.String
   119: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53ca6f6b slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = MOV [rsi|QWORD[.] + 72] size: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction CMP [r10|QWORD + 8] y: 0 size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34] <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602589167782746524
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34] <|@ <|@
      nr   78  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600638587436913969
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B13" "B3" 
    successors "B23" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.7741051967419984 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  224  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605126934324403878
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  264  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: r13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:46] <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: r13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:46] <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B46" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r8|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction CMP (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B45" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622031249313011565
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  324  <|@ instruction CMP [r14|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.05977219319659602 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621682082200859983
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B44 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B44" 
    successors "B33" "B34" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4622117864685309086
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  312  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.01461062227930204 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  332  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  374  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4603706026601757482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  420  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 56] <|@ <|@
      nr  438  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34] <|@ <|@
      nr   20  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602589167782746524
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34] <|@ <|@
      nr   30  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600638587436913969
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B49" "B98" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr  482  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  494  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597282453568833770
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  538  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 15]
stack: Object[null] 
locals: - rax|QWORD[.] - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:15, 34] <|@ <|@
      nr  540  <|@ instruction rdx|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  542  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4597282453568833770
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  588  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r13:0, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r10|QWORD[.] r13|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:19, 34] <|@ <|@
      nr  590  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r13:0, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r10|QWORD[.] r13|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:19, 34] <|@ <|@
      nr  592  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r13:0, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r10|QWORD[.] r13|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:19, 34] <|@ <|@
      nr  594  <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B64" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction CMP [rax|DWORD[.] * 8 + 16] y: 36 size: WORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B61 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B61" 
    successors "B72" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B86" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  780  <|@ instruction CMP (x: r11|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|DWORD = MOVZX [r13|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  788  <|@ instruction CMP rax|DWORD y: 48 size: DWORD <|@ <|@
      nr  790  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction CMP rax|DWORD y: 58 size: DWORD <|@ <|@
      nr  804  <|@ instruction BRANCH trueDestinationProbability: 0.08055940822931118 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580902375020534835
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B77 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B77" 
    successors "B73" "B87" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4597962382506270627
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  774  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.9254385964912281 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4596651018314987035
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4596651018314987035
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4596389978125520015
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 4594711404117576775
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592466742046495146
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4596970341673865642
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   94  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596970341673865642
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4592466742046495146
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4580902981326581777
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  922  <|@ instruction r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4580902981326581777
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4580719985933764635
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  664  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  666  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4575644437111554024
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  710  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22, 34] <|@ <|@
      nr  734  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@reference-map: [rsi:0, r9:0, stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 55]
stack: r9|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:55, 22, 34] <|@ <|@
      nr  740  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B96" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction CMP [rsi|DWORD[.] * 8 + 16] y: 36 size: WORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4575003308216627588
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  844  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  846  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  848  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4574919775355998141
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  878  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  880  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 4575003308216627588
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  888  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  894  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  896  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116] <|@ <|@
      nr  908  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4573800964610547359
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  388  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  390  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
locals: r14|QWORD[.] int[0|0x0] - Object[char[1]{.}] - int[1|0x1] - - int[0|0x0] int[46|0x2e] int[0|0x0] stack:60|DWORD - - - 
java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
locals: - - - 
java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
locals: - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stack: r13|QWORD[.] 
locals: - r13|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:62, 21, 7, 51] <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B16" 
    xhandlers
    flags 
    probability 4572387711107307776
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576833933845142024
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>} <|@ <|@
      nr  164  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed} <|@ <|@
      nr  170  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: stack:48|QWORD[.] 
locals: - stack:40|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1, 34] <|@ <|@
      nr  184  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMP (x: r11|QWORD[.], y: stack:32|QWORD[.]) size: QWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: r10|QWORD[.] 
locals: - stack:40|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:5, 17, 1, 1, 34] <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4572387711107307776
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4567472495373210469
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  232  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:32|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 43] <|@ <|@
      nr  238  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  248  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  250  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4559356115667858029
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:40|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16, 34] <|@ <|@
      nr  556  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  562  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  566  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4559356115667858029
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  502  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:32|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
locals: - stack:40|QWORD[.] - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12, 34] <|@ <|@
      nr  508  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  516  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  518  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  520  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4558995075841720012
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  958  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  960  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  962  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  964  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4558936517316018526
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  996  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 4558995075841720012
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1020  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116] <|@ <|@
      nr 1024  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4546972666250099759
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4]
stack: stack:40|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: r13|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: r13|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: r13|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1, 34] <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4545442995675356429
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: stack:48|QWORD[.] r13|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 34] <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4544974527469744545
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction stack:56|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - stack:40|QWORD[.] r14|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4529109517169768142
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction stack:56|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  976  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  980  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - stack:40|QWORD[.] r14|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-192019|0xfffffffffffd11ed] <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B79" "B86" "B75" "B88" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - r8|QWORD[.] r14|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:92] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [r15|QWORD + 668] y: -181523 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [rax:0, stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
locals: - - rax|QWORD[.] - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:43, 1, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B79 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction r10|DWORD = MOVE input: int[-193811|0xfffffffffffd0aed] <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" "B62" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@reference-map: [r11:0, r13:0, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r11|QWORD[.] r13|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:19, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1568883993] <|@ <|@
      nr  462  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|DWORD = MOVE input: int[-175899|0xfffffffffffd50e5] <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  470  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: r13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r10|DWORD = MOVE input: int[-178451|0xfffffffffffd46ed] <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
locals: r14|QWORD[.] int[0|0x0] - Object[char[1]{.}] - int[1|0x1] - - int[0|0x0] int[46|0x2e] int[0|0x0] r11|DWORD - - - 
java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
locals: - - - 
java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
locals: - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stack: r13|QWORD[.] 
locals: - r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:62, 21, 7, 51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-187667|0xfffffffffffd22ed] <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction MOV [r15|QWORD + 668] y: -206611 size: DWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:32]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: r10|QWORD[.] 
locals: - rax|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:5, 17, 1, 1, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [r15|QWORD + 668] y: -205331 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4]
stack: rax|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: rsi|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 10, 1, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B97" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction r10|DWORD = MOVE input: int[-199187|0xfffffffffffcf5ed] <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B68 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B68" "B96" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1040  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 55]
stack: r9|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:55, 22, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B97" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[-201235|0xfffffffffffceded] <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV [r15|QWORD + 668] y: -203539 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1306) [bci: 0]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction r10|DWORD = MOVE input: int[-189979|0xfffffffffffd19e5] <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction r10|DWORD = MOVE input: int[-193299|0xfffffffffffd0ced] <|@ <|@
      nr  934  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1568883993] <|@ <|@
      nr  452  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-175899|0xfffffffffffd50e5] <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #93         // isArray:()boolean
     4: ifeq          33
     7: new           #11         // java.lang.StringBuilder
    10: dup           
    11: invokespecial #10         // java.lang.StringBuilder.<init>:()void
    14: aload_0       
    15: invokevirtual #94         // getComponentType:()java.lang.Class
    18: invokevirtual #95         // getSimpleName:()java.lang.String
    21: invokevirtual #13         // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    24: ldc           #122        // "[]"
    26: invokevirtual #13         // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    29: invokevirtual #15         // java.lang.StringBuilder.toString:()java.lang.String
    32: areturn       
    33: aload_0       
    34: invokespecial #96         // getSimpleBinaryName:()java.lang.String
    37: astore_1      
    38: aload_1       
    39: ifnonnull     60
    42: aload_0       
    43: invokevirtual #14         // getName:()java.lang.String
    46: astore_1      
    47: aload_1       
    48: aload_1       
    49: ldc           #124        // "."
    51: invokevirtual #97         // java.lang.String.lastIndexOf:(java.lang.String)int
    54: iconst_1      
    55: iadd          
    56: invokevirtual #98         // java.lang.String.substring:(int)java.lang.String
    59: areturn       
    60: aload_1       
    61: invokevirtual #99         // java.lang.String.length:()int
    64: istore_2      
    65: iload_2       
    66: iconst_1      
    67: if_icmplt     80
    70: aload_1       
    71: iconst_0      
    72: invokevirtual #100        // java.lang.String.charAt:(int)char
    75: bipush        36
    77: if_icmpeq     90
    80: new           #99         // java.lang.InternalError
    83: dup           
    84: ldc           #129        // "Malformed class name"
    86: invokespecial #79         // java.lang.InternalError.<init>:(java.lang.String)void
    89: athrow        
    90: iconst_1      
    91: istore_3      
    92: iload_3       
    93: iload_2       
    94: if_icmpge     114
    97: aload_1       
    98: iload_3       
    99: invokevirtual #100        // java.lang.String.charAt:(int)char
   102: invokestatic  #101        // isAsciiDigit:(char)boolean
   105: ifeq          114
   108: iinc          
   111: goto          92
   114: aload_1       
   115: iload_3       
   116: invokevirtual #98         // java.lang.String.substring:(int)java.lang.String
   119: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53ca6f6b slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = MOV [rsi|QWORD[.] + 72] size: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction CMP [r10|QWORD + 8] y: 0 size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34] <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" "B12" 
    xhandlers
    flags 
    probability 4602589167782746524
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34] <|@ <|@
      nr   78  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B9 -> B22 falseDestination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" "B21" "B12" "B2" 
    successors "B23" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.7741051967419984 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  224  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605126934324403878
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  264  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: r13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:46] <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: r13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:46] <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B31 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B47" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r8|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction CMP (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B47" 
    xhandlers
    flags 
    probability 4600644139669091577
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B31 falseDestination: B29 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605147739296462073
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622031249313011565
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  324  <|@ instruction CMP [r14|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.05977219319659602 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621682082200859983
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B44 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B44" 
    successors "B33" "B34" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4622117864685309086
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  312  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.01461062227930204 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction r11|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  332  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B40" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  374  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4603706026601757482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors 
    xhandlers
    flags 
    probability 4603761893339701735
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  420  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r8|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 56]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 56] <|@ <|@
      nr  438  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34] <|@ <|@
      nr   20  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B22" "B12" 
    xhandlers
    flags 
    probability 4602589167782746524
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1]
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34] <|@ <|@
      nr   30  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B2 -> B22 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B49" "B98" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr  482  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  494  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4597282453568833770
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  538  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 15]
stack: Object[null] 
locals: - rax|QWORD[.] - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:15, 34] <|@ <|@
      nr  540  <|@ instruction rdx|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  542  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4597282453568833770
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  588  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r13:0, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r10|QWORD[.] r13|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:19, 34] <|@ <|@
      nr  590  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r13:0, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r10|QWORD[.] r13|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:19, 34] <|@ <|@
      nr  592  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r13:0, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r10|QWORD[.] r13|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:19, 34] <|@ <|@
      nr  594  <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B64" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction CMP [rax|DWORD[.] * 8 + 16] y: 36 size: WORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 4597022823691187601
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B61 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B61" 
    successors "B72" 
    xhandlers
    flags 
    probability 4597306738304756764
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B86" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  780  <|@ instruction CMP (x: r11|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|DWORD = MOVZX [r13|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  788  <|@ instruction CMP rax|DWORD y: 48 size: DWORD <|@ <|@
      nr  790  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597306662516500897
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction CMP rax|DWORD y: 58 size: DWORD <|@ <|@
      nr  804  <|@ instruction BRANCH trueDestinationProbability: 0.08055940822931118 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580902375020534835
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B77 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B77" 
    successors "B73" "B87" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4597962382506270627
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  774  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction BRANCH trueDestinationProbability: 0.9254385964912281 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4596651018314987035
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4596651018314987035
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  832  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4596389978125520015
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 4594711404117576775
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B22" "B14" 
    xhandlers
    flags 
    probability 4596970341673865642
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System] <|@ <|@
      nr   94  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B22 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4580902981326581777
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  922  <|@ instruction r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  926  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4580902981326581777
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4580719985933764635
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  664  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  666  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4575644437111554024
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  710  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22, 34] <|@ <|@
      nr  734  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@reference-map: [rsi:0, r9:0, stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 55]
stack: r9|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction r14|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:55, 22, 34] <|@ <|@
      nr  740  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B96" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction CMP [rsi|DWORD[.] * 8 + 16] y: 36 size: WORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4575696255598160046
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  760  <|@ instruction r10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4575003308216627588
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  844  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  846  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  848  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4574919775355998141
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  878  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  880  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 4575003308216627588
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  886  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  888  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  892  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  894  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  896  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116] <|@ <|@
      nr  908  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4573800964610547359
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  388  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  390  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
locals: r14|QWORD[.] int[0|0x0] - Object[char[1]{.}] - int[1|0x1] - - int[0|0x0] int[46|0x2e] int[0|0x0] stack:60|DWORD - - - 
java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
locals: - - - 
java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
locals: - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stack: r13|QWORD[.] 
locals: - r13|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:62, 21, 7, 51] <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B1" "B8" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  120  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576833933845142024
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>} <|@ <|@
      nr  164  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed} <|@ <|@
      nr  170  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: stack:48|QWORD[.] 
locals: - stack:40|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1, 34] <|@ <|@
      nr  184  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMP (x: r11|QWORD[.], y: stack:32|QWORD[.]) size: QWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576891310734678272
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:24, stack:32]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: r10|QWORD[.] 
locals: - stack:40|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:5, 17, 1, 1, 34] <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4567472495373210469
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  232  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:32|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleName(Class.java:1311) [bci: 43]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 43] <|@ <|@
      nr  238  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  246  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  248  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  250  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4559356115667858029
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:40|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16, 34] <|@ <|@
      nr  556  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  562  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  566  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  568  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4559356115667858029
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  502  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:32|QWORD[.] 
locals: - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12]
locals: - stack:40|QWORD[.] - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12, 34] <|@ <|@
      nr  508  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  516  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  518  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  520  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4558995075841720012
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  958  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  960  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  962  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  964  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4558936517316018526
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  996  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 4558995075841720012
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1020  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 52]
stack: stack:40|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1335) [bci: 116]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116] <|@ <|@
      nr 1024  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4546972666250099759
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4]
stack: stack:40|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: r13|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: r13|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: r13|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1, 34] <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4545442995675356429
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: stack:48|QWORD[.] r13|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 34] <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4544974527469744545
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction stack:56|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - stack:40|QWORD[.] r14|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" 
    xhandlers
    flags 
    probability 4529109517169768142
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction stack:56|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  976  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  980  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - stack:40|QWORD[.] r14|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92] <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-192019|0xfffffffffffd11ed] <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B79" "B86" "B75" "B88" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1332) [bci: 92]
locals: - r8|QWORD[.] r14|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:92] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [r15|QWORD + 668] y: -181523 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [rax:0, stack:32]
live-base-pointers: []
java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43]
locals: - - rax|QWORD[.] - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:43, 1, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B79 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction r10|DWORD = MOVE input: int[-193811|0xfffffffffffd0aed] <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" "B62" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  654  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  658  <|@ st <@st|@reference-map: [r11:0, r13:0, stack:32]
live-base-pointers: []
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19]
stack: r11|QWORD[.] r13|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:19, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1568883993] <|@ <|@
      nr  462  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|DWORD = MOVE input: int[-175899|0xfffffffffffd50e5] <|@ <|@
      nr  470  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1311) [bci: 46]
stack: r13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r10|DWORD = MOVE input: int[-178451|0xfffffffffffd46ed] <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.String.lastIndexOf(String.java:1888) [bci: 62]
locals: r14|QWORD[.] int[0|0x0] - Object[char[1]{.}] - int[1|0x1] - - int[0|0x0] int[46|0x2e] int[0|0x0] r11|DWORD - - - 
java.lang.String.lastIndexOf(String.java:1827) [bci: 21]
locals: - - - 
java.lang.String.lastIndexOf(String.java:1807) [bci: 7]
locals: - - 
java.lang.Class.getSimpleName(Class.java:1312) [bci: 51]
stack: r13|QWORD[.] 
locals: - r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:62, 21, 7, 51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-187667|0xfffffffffffd22ed] <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction MOV [r15|QWORD + 668] y: -206611 size: DWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:32]
live-base-pointers: []
java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5]
locals: - - - 
java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17]
stack: r10|QWORD[.] 
locals: - rax|QWORD[.] 
java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1]
locals: stack:32|QWORD[.] - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: stack:32|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:5, 17, 1, 1, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [r15|QWORD + 668] y: -205331 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4]
stack: rax|QWORD[.] 
locals: - - 
java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10]
locals: - - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1]
locals: rsi|QWORD[.] - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:4, 10, 1, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B97" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction r10|DWORD = MOVE input: int[-199187|0xfffffffffffcf5ed] <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B68 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B68" "B96" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1040  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:1933) [bci: 55]
stack: r9|QWORD[.] 
locals: - - - 
java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22]
locals: - - - 
java.lang.Class.getSimpleName(Class.java:1309) [bci: 34]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:55, 22, 34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B97" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[-201235|0xfffffffffffceded] <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV [r15|QWORD + 668] y: -203539 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.Class.getSimpleName(Class.java:1306) [bci: 0]
locals: stack:32|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction r10|DWORD = MOVE input: int[-189979|0xfffffffffffd19e5] <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction r10|DWORD = MOVE input: int[-193299|0xfffffffffffd0ced] <|@ <|@
      nr  934  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #93         // isArray:()boolean
     4: ifeq          33
     7: new           #11         // java.lang.StringBuilder
    10: dup           
    11: invokespecial #10         // java.lang.StringBuilder.<init>:()void
    14: aload_0       
    15: invokevirtual #94         // getComponentType:()java.lang.Class
    18: invokevirtual #95         // getSimpleName:()java.lang.String
    21: invokevirtual #13         // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    24: ldc           #122        // "[]"
    26: invokevirtual #13         // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    29: invokevirtual #15         // java.lang.StringBuilder.toString:()java.lang.String
    32: areturn       
    33: aload_0       
    34: invokespecial #96         // getSimpleBinaryName:()java.lang.String
    37: astore_1      
    38: aload_1       
    39: ifnonnull     60
    42: aload_0       
    43: invokevirtual #14         // getName:()java.lang.String
    46: astore_1      
    47: aload_1       
    48: aload_1       
    49: ldc           #124        // "."
    51: invokevirtual #97         // java.lang.String.lastIndexOf:(java.lang.String)int
    54: iconst_1      
    55: iadd          
    56: invokevirtual #98         // java.lang.String.substring:(int)java.lang.String
    59: areturn       
    60: aload_1       
    61: invokevirtual #99         // java.lang.String.length:()int
    64: istore_2      
    65: iload_2       
    66: iconst_1      
    67: if_icmplt     80
    70: aload_1       
    71: iconst_0      
    72: invokevirtual #100        // java.lang.String.charAt:(int)char
    75: bipush        36
    77: if_icmpeq     90
    80: new           #99         // java.lang.InternalError
    83: dup           
    84: ldc           #129        // "Malformed class name"
    86: invokespecial #79         // java.lang.InternalError.<init>:(java.lang.String)void
    89: athrow        
    90: iconst_1      
    91: istore_3      
    92: iload_3       
    93: iload_2       
    94: if_icmpge     114
    97: aload_1       
    98: iload_3       
    99: invokevirtual #100        // java.lang.String.charAt:(int)char
   102: invokestatic  #101        // isAsciiDigit:(char)boolean
   105: ifeq          114
   108: iinc          
   111: goto          92
   114: aload_1       
   115: iload_3       
   116: invokevirtual #98         // java.lang.String.substring:(int)java.lang.String
   119: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8b56484d85d20f845301000041837a08000f8cfe0700004c8bd60f1f8000000000e800000000904885c00f8508040000488b7424200f1f4000e800000000904885c00f85650200004885c0488b7424200f85370100008b561485d20f845d04000048c1e2034c8bea418b750c8b14f50c0000008bcaffc985c90f8c200000004c63c1448bd24d8bda49ffcb4d2bc34d3bd00f86ba0600003bd10f86b2060000448bf649c1e603448bd1e91c000000660f1f440000660f1f4400006643837c56102e0f840d00000041ffca4585d27debe9c3010000458bda41ffc34585db0f8cbd060000412bd385d20f8c8a060000498b7760488d4e18493b4f700f87ff02000049894f600f1886d800000048b9addeaddeaddeadde4c8bd6488b89a800000048890ec74608addeadde4c89660c498bf2448bc2498bd6418bcb4c89542418666690e80000000090488b442418488b6c24304883c438850500000000c5f877c36690e800000000904885c00f85c8020000488b7424200f1f4000e800000000904885c00f84c0feffffe92001000048baaddeaddeaddeadde8b527485d20f856f05000048894424188b561485d20f84a403000048c1e2034c8bd24185028b501485d20f843d03000048c1e2034c8bea418b420c418504c4418b550c448b34d50c000000448b1cc50c000000453bf30f87a2050000448bc049c1e0034585f60f85f20000004585db0f842805000066833cc510000000240f85e4050000458bf34d8be841bb01000000e9330000000f1f80000000000f1f8000000000453b5d0c0f83e9050000430fb7445d1083f8300f82a104000083f83a0f830d00000041ffc3453bf37fd6e95e000000458bc6452bc34585c00f8cb10400004585db0f850e010000498bc2488b6c24304883c438850500000000c5f877c3498bc5488b6c24304883c438850500000000c5f877c348beaddeaddeaddeadde8b767485f60f8486fdffffe901050000458bc6452bc34585c00f8c650500004585db0f85c5020000498bc2488b6c24304883c438850500000000c5f877c3498b5760488d4a18493b4f700f873903000049894f600f1882d8000000488bf248baaddeaddeaddeadde4c8bce488b92a8000000488916c74608addeadde4c89660c452bde498bf1498bd0418bce458bc34c894c2418660f1f440000e800000000904c8b4c2418418b710c448b34f50c0000004585f60f847404000066833cf510000000240f858d04000048c1e6034d8bd14c8beee992feffff498b7760488d5618493b57700f87dd020000498957600f1886d800000048baaddeaddeaddeadde4c8bd6488b92a8000000488916c74608addeadde4c89660c498bf2498bd5418bcb4c895424100f1f440000e80000000090488b442410488b6c24304883c438850500000000c5f877c38954240c44895c2408448954240448beaddeaddeaddeaddeba02000000b901000000e80000000090488bf08b54240c448b5c2408e9d3fcffff498b7760488d5618493b57700f87c5010000498957600f1886d80000004c8bd648baaddeaddeaddeadde488b92a8000000488916c74608addeadde4c89660c44896614498bf2488bd048894424184c89542410660f1f440000e800000000904c8b542410418b720c448bde49c1e3034c3b5c24200f84f9020000418504f4498bc3e98afbffff49ba00e01b17010000004c8bde660f1f440000e80000000090488bf048c1ee034c8b54242041897214498bf248c1ee0949ba00e01b1701000000468824164c8be8e964fbffff4c8954241049bb00e01b1701000000488bf0666690e80000000090488bf048c1ee034c8b54241841897214498bf248c1ee0949bb00e01b17010000004688241e4c8be84c8b542410488b742420e978fcffff49ba00e01b17010000004c8bde660f1f440000e80000000090488bf048c1ee034c8b6c242041897514498bf548c1ee0949ba00e01b1701000000468824164c8bd0488b442418498bf5e915fcffff498b7760488d5618493b57700f8703010000498957600f1886d800000048baaddeaddeaddeadde4c8bd6488b92a8000000488916c74608addeadde4c89660c498bf2498bd5418bcb4c89542418e80000000090488b442418488b6c24304883c438850500000000c5f877c348894424184c8b6c242048beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0488b442418e915feffff4c8944241844895c24084c8954241048baaddeaddeaddeadde488bf2ba02000000b901000000e80000000090488bf04c8b442418448b5c2408e997fcffff448944240844895c240c4c8954241848beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0448b442408448b5c240ce9f3fcffff448944240844895c240c4c8954241848beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0448b442408448b5c240ce9cdfeffff4d8bc241baed11fdff4589979c0200004d89a7a8020000e8000000009041c7879c020000ed3afdff4d89a7a8020000e800000000904d8bc241baed0ffdffebc94d8bda41baed0afdff4589979c0200004d89a7a8020000e8000000009049baaddeaddeaddeadde4d8bda41bae550fdff4589979c0200004d899fa8020000e80000000090458bda41baed46fdff4589979c0200004d89a7a8020000e800000000904d8bda41baed22fdffeb9d458bda41baed47fdffebd6488b44241841c7879c020000edd8fcff4d89a7a8020000e80000000090488b74242041c7879c020000edddfcff4d89a7a8020000e8000000009041baedf5fcff4589979c0200004d89a7a8020000e800000000904d8bda41baedfffcffe930ffffff41baededfcffebd641c7879c020000ede4fcff4d89a7a8020000e800000000904d8bc241bae519fdffe9c2feffff4d8bc241baed0cfdffe9b4feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53ca6f6b slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|QWORD = MOV [rsi|QWORD[.] + 72] size: QWORD  <||@
  Comment 57 10 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 60 12 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 66 block B6 null  <||@
  Comment 66 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 48 CMP [r10|QWORD + 8] y: 0 size: DWORD  <||@
  Comment 71 50 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 77 block B8 null  <||@
  Comment 77 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 62 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 80 66 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34]  <||@
  Comment 80 9  <||@
  Comment 87 {HotSpotMethod<Class.getEnclosingMethod0()>}  <||@
  Comment 92 [stack:32]at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 93 68 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 96 70 BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B16  <||@
  Comment 102 block B9 null  <||@
  Comment 102 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 102 74 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 107 76 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34]  <||@
  Comment 107 9  <||@
  Comment 111 {HotSpotMethod<Class.getDeclaringClass0()>}  <||@
  Comment 116 [stack:32]at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 117 78 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 120 80 BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B9 -> B22 falseDestination: B9 -> B12  <||@
  Comment 126 block B22 null  <||@
  Comment 126 212 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 126 214 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 129 220 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 134 216 BRANCH trueDestinationProbability: 0.7741051967419984 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B48  <||@
  Comment 140 block B23 null  <||@
  Comment 140 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 222 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 143 224 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 145 226 BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 151 block B25 null  <||@
  Comment 151 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 256 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 155 258 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 158 260 JUMP ~[] destination: B25 -> B26  <||@
  Comment 158 block B26 null  <||@
  Comment 158 262 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 158 264 rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:46]  <||@
  Comment 158 [r13:0]at java.lang.Class.getSimpleName(Class.java:1311) [bci: 46, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |-             |-  |-  |- 
     stack:   |r13|QWORD[.]  |   |   |    <||@
  Comment 158 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 162 266 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:46]  <||@
  Comment 162 [rsi:0, r13:0]at java.lang.Class.getSimpleName(Class.java:1311) [bci: 46, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |-             |-  |-  |- 
     stack:   |r13|QWORD[.]  |   |   |    <||@
  Comment 162 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 169 268 rcx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 173 270 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 175 272 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B31 falseDestination: B26 -> B28  <||@
  Comment 181 block B28 null  <||@
  Comment 181 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 280 r8|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 184 282 r10|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 187 284 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 193 286 r8|QWORD = SUB (x: r8|QWORD, ~y: r11|QWORD) size: QWORD  <||@
  Comment 196 288 CMP (x: r10|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 199 290 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B47  <||@
  Comment 205 block B29 null  <||@
  Comment 205 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 205 294 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 207 296 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B31 falseDestination: B29 -> B47  <||@
  Comment 213 block B31 null  <||@
  Comment 213 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 304 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 220 306 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 223 308 JUMP ~[] destination: B31 -> B32  <||@
  Comment 228 block B34 loop 0 depth 1 header:181|LoopBegin  <||@
  Comment 228 322 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 324 CMP [r14|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 247 326 BRANCH trueDestinationProbability: 0.05977219319659602 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B44  <||@
  Comment 253 block B44 loop 0 depth 1 header:181|LoopBegin  <||@
  Comment 253 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 253 444 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 256 446 JUMP ~[] destination: B44 -> B32  <||@
  Comment 256 block B32 loop 0 depth 1 header:181|LoopBegin  <||@
  Comment 256 310 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 256 312 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 259 314 BRANCH trueDestinationProbability: 0.01461062227930204 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 266 block B35 null  <||@
  Comment 266 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 330 r11|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 272 332 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 275 334 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 281 block B37 null  <||@
  Comment 281 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 346 rdx|DWORD = SUB (x: rdx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 284 348 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 286 350 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B40  <||@
  Comment 292 block B40 null  <||@
  Comment 292 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 370 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 296 372 rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 300 374 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 304 376 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 310 block B42 null  <||@
  Comment 310 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 404 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 314 406 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 321 408 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 321 410 JUMP ~[] destination: B42 -> B43  <||@
  Comment 321 block B43 null  <||@
  Comment 321 412 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 321 414 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 321 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 331 416 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 334 418 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 341 420 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 344 422 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 344 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 351 424 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 355 426 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 358 428 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 361 430 rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 364 432 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 367 434 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 372 436 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 56]  <||@
  Comment 372 9  <||@
  Comment 375 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 380 [stack:24]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |  
  at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 381 438 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 386 440 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 395 12  <||@
  Comment 405 block B1 null  <||@
  Comment 405 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 405 18 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34]  <||@
  Comment 405 9  <||@
  Comment 407 {HotSpotMethod<Class.getEnclosingMethod0()>}  <||@
  Comment 412 [stack:32]at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 413 20 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 416 22 BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B16  <||@
  Comment 422 block B2 null  <||@
  Comment 422 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 422 26 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 427 28 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34]  <||@
  Comment 427 9  <||@
  Comment 431 {HotSpotMethod<Class.getDeclaringClass0()>}  <||@
  Comment 436 [stack:32]at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 437 30 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 440 32 BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B2 -> B22 falseDestination: B2 -> B12  <||@
  Comment 451 block B48 null  <||@
  Comment 451 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 480 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 451 {Object[Class:java.lang.System]}  <||@
  Comment 461 482 rdx|DWORD[.] = MOV [rdx|QWORD[.] + 116] size: DWORD  <||@
  Comment 464 484 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 466 486 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B98  <||@
  Comment 472 block B49 null  <||@
  Comment 472 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 472 490 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 477 492 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 480 494 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 482 496 BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 488 block B51 null  <||@
  Comment 488 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 530 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 492 532 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 495 534 JUMP ~[] destination: B51 -> B52  <||@
  Comment 495 block B52 null  <||@
  Comment 495 536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 495 538 NULLCHECK [r10|QWORD[.]] state [bci:15, 34]  <||@
  Comment 495 [rax:0, rsi:0, r10:0, stack:24, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 15, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |rax|QWORD[.]  |- 
     stack:   |Object[null]  |              |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 495 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 498 540 rdx|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD  <||@
  Comment 501 542 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 503 544 BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 509 block B54 null  <||@
  Comment 509 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 509 578 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 513 580 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 516 582 JUMP ~[] destination: B54 -> B55  <||@
  Comment 516 block B55 null  <||@
  Comment 516 584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 516 586 rax|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 520 588 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:19, 34]  <||@
  Comment 520 [rax:0, rsi:0, r10:0, r13:0, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r10|QWORD[.]  |r13|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 520 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 524 590 rdx|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:19, 34]  <||@
  Comment 524 [rax:0, rsi:0, r10:0, r13:0, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r10|QWORD[.]  |r13|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 524 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 528 592 r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:19, 34]  <||@
  Comment 528 [rax:0, rsi:0, r10:0, r13:0, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r10|QWORD[.]  |r13|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 528 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 536 594 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 544 596 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 547 598 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 553 block B57 null  <||@
  Comment 553 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 610 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 560 612 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 563 614 BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B64  <||@
  Comment 569 block B58 null  <||@
  Comment 569 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 569 618 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 572 620 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 578 block B60 null  <||@
  Comment 578 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 578 632 CMP [rax|DWORD[.] * 8 + 16] y: 36 size: WORD  <||@
  Comment 587 634 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 593 block B61 null  <||@
  Comment 593 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 638 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 596 640 r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 599 642 JUMP ~[] destination: B61 -> B71  <||@
  Comment 599 block B71 null  <||@
  Comment 599 766 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 599 768 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 605 770 JUMP ~[] destination: B71 -> B72  <||@
  Comment 610 block B73 loop 1 depth 1 header:65|LoopBegin  <||@
  Comment 610 778 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 624 780 CMP (x: r11|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 628 782 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B86  <||@
  Comment 634 block B74 loop 1 depth 1 header:65|LoopBegin  <||@
  Comment 634 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 634 786 rax|DWORD = MOVZX [r13|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 640 788 CMP rax|DWORD y: 48 size: DWORD  <||@
  Comment 643 790 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 649 block B76 loop 1 depth 1 header:65|LoopBegin  <||@
  Comment 649 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 802 CMP rax|DWORD y: 58 size: DWORD  <||@
  Comment 652 804 BRANCH trueDestinationProbability: 0.08055940822931118 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 658 block B77 loop 1 depth 1 header:65|LoopBegin  <||@
  Comment 658 806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 658 808 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 661 810 JUMP ~[] destination: B77 -> B72  <||@
  Comment 661 block B72 loop 1 depth 1 header:65|LoopBegin  <||@
  Comment 661 772 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 661 774 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 664 776 BRANCH trueDestinationProbability: 0.9254385964912281 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B87  <||@
  Comment 671 block B78 null  <||@
  Comment 671 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 671 814 r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 677 816 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 680 818 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 686 block B80 null  <||@
  Comment 686 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 686 830 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 689 832 BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 695 block B81 null  <||@
  Comment 695 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 695 836 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 698 838 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 707 12  <||@
  Comment 717 block B33 null  <||@
  Comment 717 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 717 318 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 720 320 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 729 12  <||@
  Comment 739 block B12 null  <||@
  Comment 739 90 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 739 92 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 739 {Object[Class:java.lang.System]}  <||@
  Comment 749 94 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 752 96 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 754 98 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B22 falseDestination: B12 -> B14  <||@
  Comment 765 block B87 null  <||@
  Comment 765 920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 922 r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 771 924 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 774 926 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B90  <||@
  Comment 780 block B90 null  <||@
  Comment 780 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 780 946 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 783 948 BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 789 block B91 null  <||@
  Comment 789 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 952 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 792 954 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 801 12  <||@
  Comment 811 block B64 null  <||@
  Comment 811 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 811 662 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 815 664 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 819 666 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 823 668 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 829 block B66 null  <||@
  Comment 829 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 829 698 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 833 700 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 840 702 rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 843 704 JUMP ~[] destination: B66 -> B67  <||@
  Comment 843 block B67 null  <||@
  Comment 843 706 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 843 708 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 843 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 853 710 r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 856 712 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 863 714 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 866 716 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 866 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 873 718 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 877 720 r11|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 880 722 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 883 724 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 886 726 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 889 728 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 892 730 stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 897 732 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22, 34]  <||@
  Comment 897 9  <||@
  Comment 903 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 908 [stack:24, stack:32]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 909 734 r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 914 736 rsi|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD  <||@
  Comment 918 738 r14|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:55, 22, 34]  <||@
  Comment 918 [rsi:0, r9:0, stack:32]at java.lang.String.substring(String.java:1933) [bci: 55, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |-            |-  |- 
     stack:   |r9|QWORD[.]  |   |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 918 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 926 740 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 929 742 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 935 block B69 null  <||@
  Comment 935 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 935 752 CMP [rsi|DWORD[.] * 8 + 16] y: 36 size: WORD  <||@
  Comment 944 754 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B96  <||@
  Comment 950 block B70 null  <||@
  Comment 950 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 950 758 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 954 760 r10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 957 762 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 960 764 JUMP ~[] destination: B70 -> B71  <||@
  Comment 965 block B82 null  <||@
  Comment 965 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 965 842 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 969 844 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 973 846 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 977 848 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 983 block B84 null  <||@
  Comment 983 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 876 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 987 878 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 994 880 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 994 882 JUMP ~[] destination: B84 -> B85  <||@
  Comment 994 block B85 null  <||@
  Comment 994 884 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 994 886 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 994 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1004 888 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1007 890 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1014 892 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1017 894 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1017 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1024 896 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1028 898 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1031 900 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1034 902 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1037 904 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1042 906 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116]  <||@
  Comment 1042 9  <||@
  Comment 1047 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 1052 [stack:16]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1053 908 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1058 910 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1067 12  <||@
  Comment 1077 block B41 null  <||@
  Comment 1077 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1077 380 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1081 382 stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1086 384 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1091 386 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1091 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1101 388 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1106 390 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1111 392 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:62, 21, 7, 51]  <||@
  Comment 1111 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1116 [r13:0, r14:0]at java.lang.String.lastIndexOf(String.java:1888) [bci: 62, duringCall: false, rethrow: false]
              |0             |1           |2  |3                   |4  |5           |6  |7  |8           |9             |10          |11              |12  |13  |14 
     locals:  |r14|QWORD[.]  |int[0|0x0]  |-  |Object[char[1]{.}]  |-  |int[1|0x1]  |-  |-  |int[0|0x0]  |int[46|0x2e]  |int[0|0x0]  |stack:60|DWORD  |-   |-   |-  
  at java.lang.String.lastIndexOf(String.java:1827) [bci: 21, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.String.lastIndexOf(String.java:1807) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |-             |r13|QWORD[.]  |-  |- 
     stack:   |r13|QWORD[.]  |              |   |    <||@
  Comment 1117 394 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1120 396 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1124 398 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1129 400 JUMP ~[] destination: B41 -> B43  <||@
  Comment 1134 block B16 null  <||@
  Comment 1134 118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1134 120 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1138 122 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1142 124 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1146 126 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1152 block B18 null  <||@
  Comment 1152 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1152 150 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1156 152 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1163 154 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1163 156 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1163 block B19 null  <||@
  Comment 1163 158 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1163 160 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1166 162 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}  <||@
  Comment 1166 {meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}}  <||@
  Comment 1176 164 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1183 166 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1186 168 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}  <||@
  Comment 1186 {meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}}  <||@
  Comment 1193 170 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1197 172 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1201 174 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1204 176 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1207 178 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1212 180 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1217 182 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1, 34]  <||@
  Comment 1217 9  <||@
  Comment 1223 {HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])>}  <||@
  Comment 1228 [stack:16, stack:24, stack:32]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |stack:40|QWORD[.] 
     stack:   |stack:48|QWORD[.]  |                  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1229 184 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1234 186 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1238 188 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 1245 190 CMP (x: r11|QWORD[.], y: stack:32|QWORD[.]) size: QWORD  <||@
  Comment 1250 192 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 1256 block B21 null  <||@
  Comment 1256 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1256 206 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:5, 17, 1, 1, 34]  <||@
  Comment 1256 [r10:0, r11:0, stack:24, stack:32]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |-             |stack:40|QWORD[.] 
     stack:   |r10|QWORD[.]  |                  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1256 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1260 208 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1263 210 JUMP ~[] destination: B21 -> B22  <||@
  Comment 1268 block B24 null  <||@
  Comment 1268 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1268 230 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1278 232 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1281 236 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 43]  <||@
  Comment 1281 9  <||@
  Comment 1287 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 1292 [stack:32]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:32|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1293 238 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 1300 240 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1305 242 MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1309 244 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1316 246 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1326 248 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1330 250 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1333 252 JUMP ~[] destination: B24 -> B26  <||@
  Comment 1338 block B53 null  <||@
  Comment 1338 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 548 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 550 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1353 552 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1356 554 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16, 34]  <||@
  Comment 1356 9  <||@
  Comment 1359 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 1364 [stack:16, stack:24, stack:32]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:40|QWORD[.]  |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1365 556 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 1372 558 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1377 560 MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1381 562 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1388 564 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1398 566 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1402 568 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1405 570 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1410 572 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1415 574 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1420 block B50 null  <||@
  Comment 1420 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1420 500 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1430 502 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1433 506 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12, 34]  <||@
  Comment 1433 9  <||@
  Comment 1439 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 1444 [stack:24, stack:32]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:32|QWORD[.]  |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:40|QWORD[.]  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1445 508 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 1452 510 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1457 512 MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1461 514 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1468 516 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1478 518 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1482 520 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1485 522 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1490 524 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1493 526 JUMP ~[] destination: B50 -> B52  <||@
  Comment 1498 block B92 null  <||@
  Comment 1498 956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1498 958 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1502 960 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1506 962 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1510 964 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 1516 block B94 null  <||@
  Comment 1516 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1516 992 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1520 994 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1527 996 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1527 998 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1527 block B95 null  <||@
  Comment 1527 1000 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1527 1002 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1527 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1537 1004 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1540 1006 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1547 1008 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1550 1010 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1550 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1557 1012 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1561 1014 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1564 1016 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 1018 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1570 1020 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1575 1022 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116]  <||@
  Comment 1575 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 1575 9  <||@
  Comment 1580 [stack:24]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |  
  at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1581 1024 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1586 1026 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1595 12  <||@
  Comment 1605 block B17 null  <||@
  Comment 1605 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1605 130 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 132 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1615 134 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1615 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1625 136 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1630 138 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1635 140 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1, 34]  <||@
  Comment 1635 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1640 [r13:0, stack:24, stack:32]at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:40|QWORD[.]  |  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |r13|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 1641 142 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1644 144 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1649 146 JUMP ~[] destination: B17 -> B19  <||@
  Comment 1654 block B65 null  <||@
  Comment 1654 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1654 672 stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1659 674 stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1664 676 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1669 678 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1669 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1679 680 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1682 682 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1687 684 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1692 686 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 34]  <||@
  Comment 1692 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1697 [r13:0, stack:16, stack:24, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |-                  |-             |- 
     stack:   |stack:48|QWORD[.]  |r13|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1698 688 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1701 690 r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 692 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1711 694 JUMP ~[] destination: B65 -> B67  <||@
  Comment 1716 block B83 null  <||@
  Comment 1716 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1716 852 stack:56|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1721 854 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1726 856 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1731 858 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1731 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1741 860 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1746 862 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1751 864 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92]  <||@
  Comment 1751 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1756 [r13:0, stack:24]at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92, duringCall: false, rethrow: false]
              |0  |1                  |2          |3              
     locals:  |-  |stack:40|QWORD[.]  |r14|DWORD  |stack:52|DWORD   <||@
  Comment 1757 866 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1760 868 r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1765 870 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1770 872 JUMP ~[] destination: B83 -> B85  <||@
  Comment 1775 block B93 null  <||@
  Comment 1775 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1775 968 stack:56|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1780 970 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1785 972 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1790 974 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1790 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1800 976 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1805 978 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1810 980 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92]  <||@
  Comment 1810 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1815 [r13:0, stack:24]at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92, duringCall: false, rethrow: false]
              |0  |1                  |2          |3              
     locals:  |-  |stack:40|QWORD[.]  |r14|DWORD  |stack:52|DWORD   <||@
  Comment 1816 982 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1819 984 r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1824 986 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1829 988 JUMP ~[] destination: B93 -> B95  <||@
  Comment 1834 block B75 null  <||@
  Comment 1834 792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1834 794 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1837 796 r10|DWORD = MOVE input: int[-192019|0xfffffffffffd11ed]  <||@
  Comment 1843 798 JUMP ~[] destination: B75 -> B89  <||@
  Comment 1843 block B89 null  <||@
  Comment 1843 936 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1843 938 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1850 940 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1857 942 DEOPT info [bci:92]  <||@
  Comment 1857 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1862 [r8:0]at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92, duringCall: false, rethrow: false]
              |0  |1            |2          |3         
     locals:  |-  |r8|QWORD[.]  |r14|DWORD  |r11|DWORD   <||@
  Comment 1863 block B98 null  <||@
  Comment 1863 1042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1863 1044 MOV [r15|QWORD + 668] y: -181523 size: DWORD  <||@
  Comment 1874 1046 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1881 1048 DEOPT info [bci:43, 1, 34]  <||@
  Comment 1881 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1886 [rax:0, stack:32]at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43, duringCall: false, rethrow: false]
              |0  |1  |2             |3 
     locals:  |-  |-  |rax|QWORD[.]  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1887 block B79 null  <||@
  Comment 1887 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1887 822 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1890 824 r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed]  <||@
  Comment 1896 826 JUMP ~[] destination: B79 -> B89  <||@
  Comment 1898 block B59 null  <||@
  Comment 1898 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1898 624 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1901 626 r10|DWORD = MOVE input: int[-193811|0xfffffffffffd0aed]  <||@
  Comment 1907 628 JUMP ~[] destination: B59 -> B63  <||@
  Comment 1907 block B63 null  <||@
  Comment 1907 652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1907 654 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1914 656 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1921 658 DEOPT info [bci:19, 34]  <||@
  Comment 1921 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1926 [r11:0, r13:0, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r11|QWORD[.]  |r13|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1927 block B47 null  <||@
  Comment 1927 468 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1927 460 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1568883993]  <||@
  Comment 1927 {Object[d.a@1568883993]}  <||@
  Comment 1937 462 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1940 464 r10|DWORD = MOVE input: int[-175899|0xfffffffffffd50e5]  <||@
  Comment 1946 470 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1953 472 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1960 474 DEOPT info [bci:46]  <||@
  Comment 1960 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1965 [r13:0]at java.lang.Class.getSimpleName(Class.java:1311) [bci: 46, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |-             |-  |-  |- 
     stack:   |r13|QWORD[.]  |   |   |    <||@
  Comment 1966 block B38 null  <||@
  Comment 1966 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1966 354 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1969 356 r10|DWORD = MOVE input: int[-178451|0xfffffffffffd46ed]  <||@
  Comment 1975 358 JUMP ~[] destination: B38 -> B39  <||@
  Comment 1975 block B39 null  <||@
  Comment 1975 360 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1975 362 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1982 364 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1989 366 DEOPT info [bci:62, 21, 7, 51]  <||@
  Comment 1989 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1994 [r13:0, r14:0]at java.lang.String.lastIndexOf(String.java:1888) [bci: 62, duringCall: false, rethrow: false]
              |0             |1           |2  |3                   |4  |5           |6  |7  |8           |9             |10          |11         |12  |13  |14 
     locals:  |r14|QWORD[.]  |int[0|0x0]  |-  |Object[char[1]{.}]  |-  |int[1|0x1]  |-  |-  |int[0|0x0]  |int[46|0x2e]  |int[0|0x0]  |r11|DWORD  |-   |-   |-  
  at java.lang.String.lastIndexOf(String.java:1827) [bci: 21, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.String.lastIndexOf(String.java:1807) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |-             |r13|QWORD[.]  |-  |- 
     stack:   |r13|QWORD[.]  |              |   |    <||@
  Comment 1995 block B56 null  <||@
  Comment 1995 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1995 602 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1998 604 r10|DWORD = MOVE input: int[-187667|0xfffffffffffd22ed]  <||@
  Comment 2004 606 JUMP ~[] destination: B56 -> B63  <||@
  Comment 2006 block B36 null  <||@
  Comment 2006 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2006 338 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2009 340 r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed]  <||@
  Comment 2015 342 JUMP ~[] destination: B36 -> B39  <||@
  Comment 2017 block B20 null  <||@
  Comment 2017 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2017 196 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2022 198 MOV [r15|QWORD + 668] y: -206611 size: DWORD  <||@
  Comment 2033 200 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2040 202 DEOPT info [bci:5, 17, 1, 1, 34]  <||@
  Comment 2040 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2045 [rax:0, r10:0, stack:32]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |-             |rax|QWORD[.] 
     stack:   |r10|QWORD[.]  |             
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 2046 block B14 null  <||@
  Comment 2046 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2046 106 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2051 108 MOV [r15|QWORD + 668] y: -205331 size: DWORD  <||@
  Comment 2062 110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2069 112 DEOPT info [bci:4, 10, 1, 34]  <||@
  Comment 2069 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2074 [rax:0, rsi:0]at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rax|QWORD[.]  |  
  at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 2075 block B68 null  <||@
  Comment 2075 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2075 746 r10|DWORD = MOVE input: int[-199187|0xfffffffffffcf5ed]  <||@
  Comment 2081 748 JUMP ~[] destination: B68 -> B97  <||@
  Comment 2081 block B97 null  <||@
  Comment 2081 1034 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2081 1036 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2088 1038 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2095 1040 DEOPT info [bci:55, 22, 34]  <||@
  Comment 2095 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2100 [r9:0, stack:32]at java.lang.String.substring(String.java:1933) [bci: 55, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |-            |-  |- 
     stack:   |r9|QWORD[.]  |   |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 2101 block B62 null  <||@
  Comment 2101 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2101 646 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2104 648 r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed]  <||@
  Comment 2110 650 JUMP ~[] destination: B62 -> B63  <||@
  Comment 2115 block B96 null  <||@
  Comment 2115 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2115 1030 r10|DWORD = MOVE input: int[-201235|0xfffffffffffceded]  <||@
  Comment 2121 1032 JUMP ~[] destination: B96 -> B97  <||@
  Comment 2123 block B7 null  <||@
  Comment 2123 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 54 MOV [r15|QWORD + 668] y: -203539 size: DWORD  <||@
  Comment 2134 56 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2141 58 DEOPT info [bci:0]  <||@
  Comment 2141 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2146 [stack:32]at java.lang.Class.getSimpleName(Class.java:1306) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 2147 block B86 null  <||@
  Comment 2147 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2147 914 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2150 916 r10|DWORD = MOVE input: int[-189979|0xfffffffffffd19e5]  <||@
  Comment 2156 918 JUMP ~[] destination: B86 -> B89  <||@
  Comment 2161 block B88 null  <||@
  Comment 2161 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2161 930 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2164 932 r10|DWORD = MOVE input: int[-193299|0xfffffffffffd0ced]  <||@
  Comment 2170 934 JUMP ~[] destination: B88 -> B89  <||@
  Comment 2175 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2175 4  <||@
  Comment 2181 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2181 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9444[java.lang.Class.getSimpleName()]"
  method "HotSpotCompilation-9444[java.lang.Class.getSimpleName()]"
  date 1527005204065
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106bd8ea0 448b560849c1e203493bc20f85afcfc2ff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8b56484d85d20f845301000041837a08000f8cfe0700004c8bd60f1f8000000000e8a4d1c2ff904885c00f8508040000488b7424200f1f4000e88cd1c2ff904885c00f85650200004885c0488b7424200f85370100008b561485d20f845d04000048c1e2034c8bea418b750c8b14f50c0000008bcaffc985c90f8c200000004c63c1448bd24d8bda49ffcb4d2bc34d3bd00f86ba0600003bd10f86b2060000448bf649c1e603448bd1e91c000000660f1f440000660f1f4400006643837c56102e0f840d00000041ffca4585d27debe9c3010000458bda41ffc34585db0f8cbd060000412bd385d20f8c8a060000498b7760488d4e18493b4f700f87ff02000049894f600f1886d800000048b9d01600c0070000004c8bd6488b89a800000048890ec74608da0200f84c89660c498bf2448bc2498bd6418bcb4c89542418666690e884d0c2ff90488b442418488b6c24304883c4388505d55fcbfdc5f877c36690e864d0c2ff904885c00f85c8020000488b7424200f1f4000e84cd0c2ff904885c00f84c0feffffe92001000048ba28cd03c0060000008b527485d20f856f05000048894424188b561485d20f84a403000048c1e2034c8bd24185028b501485d20f843d03000048c1e2034c8bea418b420c418504c4418b550c448b34d50c000000448b1cc50c000000453bf30f87a2050000448bc049c1e0034585f60f85f20000004585db0f842805000066833cc510000000240f85e4050000458bf34d8be841bb01000000e9330000000f1f80000000000f1f8000000000453b5d0c0f83e9050000430fb7445d1083f8300f82a104000083f83a0f830d00000041ffc3453bf37fd6e95e000000458bc6452bc34585c00f8cb10400004585db0f850e010000498bc2488b6c24304883c43885059d5ecbfdc5f877c3498bc5488b6c24304883c4388505875ecbfdc5f877c348be28cd03c0060000008b767485f60f8486fdffffe901050000458bc6452bc34585c00f8c650500004585db0f85c5020000498bc2488b6c24304883c43885053f5ecbfdc5f877c3498b5760488d4a18493b4f700f873903000049894f600f1882d8000000488bf248bad01600c0070000004c8bce488b92a8000000488916c74608da0200f84c89660c452bde498bf1498bd0418bce458bc34c894c2418660f1f440000e874cec2ff904c8b4c2418418b710c448b34f50c0000004585f60f847404000066833cf510000000240f858d04000048c1e6034d8bd14c8beee992feffff498b7760488d5618493b57700f87dd020000498957600f1886d800000048bad01600c0070000004c8bd6488b92a8000000488916c74608da0200f84c89660c498bf2498bd5418bcb4c895424100f1f440000e8e4cdc2ff90488b442410488b6c24304883c4388505355dcbfdc5f877c38954240c44895c2408448954240448be680b00c007000000ba02000000b901000000e8e4da3b0090488bf08b54240c448b5c2408e9d3fcffff498b7760488d5618493b57700f87c5010000498957600f1886d80000004c8bd648bae0292dc007000000488b92a8000000488916c746083ca505f84c89660c44896614498bf2488bd048894424184c89542410660f1f440000e834cdc2ff904c8b542410418b720c448bde49c1e3034c3b5c24200f84f9020000418504f4498bc3e98afbffff49ba00e01b17010000004c8bde660f1f440000e8f4ccc2ff90488bf048c1ee034c8b54242041897214498bf248c1ee0949ba00e01b1701000000468824164c8be8e964fbffff4c8954241049bb00e01b1701000000488bf0666690e8acccc2ff90488bf048c1ee034c8b54241841897214498bf248c1ee0949bb00e01b17010000004688241e4c8be84c8b542410488b742420e978fcffff49ba00e01b17010000004c8bde660f1f440000e85cccc2ff90488bf048c1ee034c8b6c242041897514498bf548c1ee0949ba00e01b1701000000468824164c8bd0488b442418498bf5e915fcffff498b7760488d5618493b57700f8703010000498957600f1886d800000048bad01600c0070000004c8bd6488b92a8000000488916c74608da0200f84c89660c498bf2498bd5418bcb4c89542418e8d4cbc2ff90488b442418488b6c24304883c4388505255bcbfdc5f877c348894424184c8b6c242048be680b00c007000000ba02000000b901000000e8d8d83b0090488bf0488b442418e915feffff4c8944241844895c24084c8954241048ba680b00c007000000488bf2ba02000000b901000000e89fd83b0090488bf04c8b442418448b5c2408e997fcffff448944240844895c240c4c8954241848be680b00c007000000ba02000000b901000000e864d83b0090488bf0448b442408448b5c240ce9f3fcffff448944240844895c240c4c8954241848be680b00c007000000ba02000000b901000000e829d83b0090488bf0448b442408448b5c240ce9cdfeffff4d8bc241baed11fdff4589979c0200004d89a7a8020000e818e0c2ff9041c7879c020000ed3afdff4d89a7a8020000e800e0c2ff904d8bc241baed0ffdffebc94d8bda41baed0afdff4589979c0200004d89a7a8020000e8d8dfc2ff9049bae06cbcba070000004d8bda41bae550fdff4589979c0200004d899fa8020000e8b1dfc2ff90458bda41baed46fdff4589979c0200004d89a7a8020000e894dfc2ff904d8bda41baed22fdffeb9d458bda41baed47fdffebd6488b44241841c7879c020000edd8fcff4d89a7a8020000e861dfc2ff90488b74242041c7879c020000edddfcff4d89a7a8020000e844dfc2ff9041baedf5fcff4589979c0200004d89a7a8020000e82adfc2ff904d8bda41baedfffcffe930ffffff41baededfcffebd641c7879c020000ede4fcff4d89a7a8020000e8fcdec2ff904d8bc241bae519fdffe9c2feffff4d8bc241baed0cfdffe9b4feffffe8fc0e070090e8d6ddc2ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53ca6f6b slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|QWORD = MOV [rsi|QWORD[.] + 72] size: QWORD  <||@
  Comment 57 10 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 60 12 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 66 block B6 null  <||@
  Comment 66 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 48 CMP [r10|QWORD + 8] y: 0 size: DWORD  <||@
  Comment 71 50 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 77 block B8 null  <||@
  Comment 77 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 62 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 80 66 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34]  <||@
  Comment 80 9  <||@
  Comment 87 {HotSpotMethod<Class.getEnclosingMethod0()>}  <||@
  Comment 92 [stack:32]at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 93 68 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 96 70 BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B16  <||@
  Comment 102 block B9 null  <||@
  Comment 102 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 102 74 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 107 76 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34]  <||@
  Comment 107 9  <||@
  Comment 111 {HotSpotMethod<Class.getDeclaringClass0()>}  <||@
  Comment 116 [stack:32]at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 117 78 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 120 80 BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B9 -> B22 falseDestination: B9 -> B12  <||@
  Comment 126 block B22 null  <||@
  Comment 126 212 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 126 214 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 129 220 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 134 216 BRANCH trueDestinationProbability: 0.7741051967419984 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B48  <||@
  Comment 140 block B23 null  <||@
  Comment 140 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 222 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 143 224 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 145 226 BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 151 block B25 null  <||@
  Comment 151 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 256 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 155 258 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 158 260 JUMP ~[] destination: B25 -> B26  <||@
  Comment 158 block B26 null  <||@
  Comment 158 262 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 158 264 rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:46]  <||@
  Comment 158 [r13:0]at java.lang.Class.getSimpleName(Class.java:1311) [bci: 46, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |-             |-  |-  |- 
     stack:   |r13|QWORD[.]  |   |   |    <||@
  Comment 158 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 162 266 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:46]  <||@
  Comment 162 [rsi:0, r13:0]at java.lang.Class.getSimpleName(Class.java:1311) [bci: 46, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |-             |-  |-  |- 
     stack:   |r13|QWORD[.]  |   |   |    <||@
  Comment 162 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 169 268 rcx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 173 270 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 175 272 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B26 -> B31 falseDestination: B26 -> B28  <||@
  Comment 181 block B28 null  <||@
  Comment 181 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 280 r8|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 184 282 r10|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 187 284 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 193 286 r8|QWORD = SUB (x: r8|QWORD, ~y: r11|QWORD) size: QWORD  <||@
  Comment 196 288 CMP (x: r10|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 199 290 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B47  <||@
  Comment 205 block B29 null  <||@
  Comment 205 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 205 294 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 207 296 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B31 falseDestination: B29 -> B47  <||@
  Comment 213 block B31 null  <||@
  Comment 213 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 304 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 220 306 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 223 308 JUMP ~[] destination: B31 -> B32  <||@
  Comment 228 block B34 loop 0 depth 1 header:181|LoopBegin  <||@
  Comment 228 322 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 324 CMP [r14|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 247 326 BRANCH trueDestinationProbability: 0.05977219319659602 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B44  <||@
  Comment 253 block B44 loop 0 depth 1 header:181|LoopBegin  <||@
  Comment 253 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 253 444 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 256 446 JUMP ~[] destination: B44 -> B32  <||@
  Comment 256 block B32 loop 0 depth 1 header:181|LoopBegin  <||@
  Comment 256 310 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 256 312 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 259 314 BRANCH trueDestinationProbability: 0.01461062227930204 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 266 block B35 null  <||@
  Comment 266 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 330 r11|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 272 332 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 275 334 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 281 block B37 null  <||@
  Comment 281 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 346 rdx|DWORD = SUB (x: rdx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 284 348 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 286 350 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B40  <||@
  Comment 292 block B40 null  <||@
  Comment 292 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 370 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 296 372 rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 300 374 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 304 376 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 310 block B42 null  <||@
  Comment 310 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 404 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 314 406 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 321 408 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 321 410 JUMP ~[] destination: B42 -> B43  <||@
  Comment 321 block B43 null  <||@
  Comment 321 412 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 321 414 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 321 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 331 416 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 334 418 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 341 420 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 344 422 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 344 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 351 424 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 355 426 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 358 428 r8|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 361 430 rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 364 432 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 367 434 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 372 436 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 56]  <||@
  Comment 372 9  <||@
  Comment 375 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 380 [stack:24]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |  
  at java.lang.Class.getSimpleName(Class.java:1312) [bci: 56, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 381 438 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 386 440 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 395 12  <||@
  Comment 405 block B1 null  <||@
  Comment 405 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 405 18 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getEnclosingMethod0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 1, 1, 34]  <||@
  Comment 405 9  <||@
  Comment 407 {HotSpotMethod<Class.getEnclosingMethod0()>}  <||@
  Comment 412 [stack:32]at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 413 20 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 416 22 BRANCH trueDestinationProbability: 0.9900466962742942 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B16  <||@
  Comment 422 block B2 null  <||@
  Comment 422 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 422 26 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 427 28 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getDeclaringClass0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1, 10, 1, 34]  <||@
  Comment 427 9  <||@
  Comment 431 {HotSpotMethod<Class.getDeclaringClass0()>}  <||@
  Comment 436 [stack:32]at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 1, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 437 30 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 440 32 BRANCH trueDestinationProbability: 0.7812649424038253 condition: = trueDestination: B2 -> B22 falseDestination: B2 -> B12  <||@
  Comment 451 block B48 null  <||@
  Comment 451 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 480 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 451 {Object[Class:java.lang.System]}  <||@
  Comment 461 482 rdx|DWORD[.] = MOV [rdx|QWORD[.] + 116] size: DWORD  <||@
  Comment 464 484 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 466 486 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B98  <||@
  Comment 472 block B49 null  <||@
  Comment 472 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 472 490 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 477 492 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 480 494 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 482 496 BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 488 block B51 null  <||@
  Comment 488 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 530 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 492 532 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 495 534 JUMP ~[] destination: B51 -> B52  <||@
  Comment 495 block B52 null  <||@
  Comment 495 536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 495 538 NULLCHECK [r10|QWORD[.]] state [bci:15, 34]  <||@
  Comment 495 [rax:0, rsi:0, r10:0, stack:24, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 15, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |rax|QWORD[.]  |- 
     stack:   |Object[null]  |              |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 495 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 498 540 rdx|DWORD[.] = MOV [rax|QWORD[.] + 20] size: DWORD  <||@
  Comment 501 542 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 503 544 BRANCH trueDestinationProbability: 0.0029838527247854074 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 509 block B54 null  <||@
  Comment 509 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 509 578 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 513 580 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 516 582 JUMP ~[] destination: B54 -> B55  <||@
  Comment 516 block B55 null  <||@
  Comment 516 584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 516 586 rax|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 520 588 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:19, 34]  <||@
  Comment 520 [rax:0, rsi:0, r10:0, r13:0, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r10|QWORD[.]  |r13|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 520 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 524 590 rdx|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:19, 34]  <||@
  Comment 524 [rax:0, rsi:0, r10:0, r13:0, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r10|QWORD[.]  |r13|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 524 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 528 592 r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:19, 34]  <||@
  Comment 528 [rax:0, rsi:0, r10:0, r13:0, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r10|QWORD[.]  |r13|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 528 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 536 594 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 544 596 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 547 598 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 553 block B57 null  <||@
  Comment 553 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 610 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 560 612 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 563 614 BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B64  <||@
  Comment 569 block B58 null  <||@
  Comment 569 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 569 618 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 572 620 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 578 block B60 null  <||@
  Comment 578 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 578 632 CMP [rax|DWORD[.] * 8 + 16] y: 36 size: WORD  <||@
  Comment 587 634 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 593 block B61 null  <||@
  Comment 593 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 593 638 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 596 640 r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 599 642 JUMP ~[] destination: B61 -> B71  <||@
  Comment 599 block B71 null  <||@
  Comment 599 766 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 599 768 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 605 770 JUMP ~[] destination: B71 -> B72  <||@
  Comment 610 block B73 loop 1 depth 1 header:65|LoopBegin  <||@
  Comment 610 778 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 624 780 CMP (x: r11|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 628 782 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B86  <||@
  Comment 634 block B74 loop 1 depth 1 header:65|LoopBegin  <||@
  Comment 634 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 634 786 rax|DWORD = MOVZX [r13|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 640 788 CMP rax|DWORD y: 48 size: DWORD  <||@
  Comment 643 790 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 649 block B76 loop 1 depth 1 header:65|LoopBegin  <||@
  Comment 649 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 802 CMP rax|DWORD y: 58 size: DWORD  <||@
  Comment 652 804 BRANCH trueDestinationProbability: 0.08055940822931118 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 658 block B77 loop 1 depth 1 header:65|LoopBegin  <||@
  Comment 658 806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 658 808 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 661 810 JUMP ~[] destination: B77 -> B72  <||@
  Comment 661 block B72 loop 1 depth 1 header:65|LoopBegin  <||@
  Comment 661 772 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 661 774 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 664 776 BRANCH trueDestinationProbability: 0.9254385964912281 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B87  <||@
  Comment 671 block B78 null  <||@
  Comment 671 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 671 814 r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 677 816 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 680 818 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 686 block B80 null  <||@
  Comment 686 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 686 830 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 689 832 BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 695 block B81 null  <||@
  Comment 695 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 695 836 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 698 838 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 707 12  <||@
  Comment 717 block B33 null  <||@
  Comment 717 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 717 318 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 720 320 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 729 12  <||@
  Comment 739 block B12 null  <||@
  Comment 739 90 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 739 92 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.System]  <||@
  Comment 739 {Object[Class:java.lang.System]}  <||@
  Comment 749 94 rsi|DWORD[.] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 752 96 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 754 98 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B22 falseDestination: B12 -> B14  <||@
  Comment 765 block B87 null  <||@
  Comment 765 920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 922 r8|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 771 924 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 774 926 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B90  <||@
  Comment 780 block B90 null  <||@
  Comment 780 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 780 946 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 783 948 BRANCH trueDestinationProbability: 0.9651155608201366 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 789 block B91 null  <||@
  Comment 789 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 952 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 792 954 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 801 12  <||@
  Comment 811 block B64 null  <||@
  Comment 811 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 811 662 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 815 664 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 819 666 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 823 668 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 829 block B66 null  <||@
  Comment 829 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 829 698 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 833 700 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 840 702 rsi|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 843 704 JUMP ~[] destination: B66 -> B67  <||@
  Comment 843 block B67 null  <||@
  Comment 843 706 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 843 708 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 843 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 853 710 r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 856 712 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 863 714 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 866 716 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 866 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 873 718 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 877 720 r11|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 880 722 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 883 724 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 886 726 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 889 728 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 892 730 stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 897 732 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 22, 34]  <||@
  Comment 897 9  <||@
  Comment 903 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 908 [stack:24, stack:32]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 909 734 r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 914 736 rsi|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD  <||@
  Comment 918 738 r14|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:55, 22, 34]  <||@
  Comment 918 [rsi:0, r9:0, stack:32]at java.lang.String.substring(String.java:1933) [bci: 55, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |-            |-  |- 
     stack:   |r9|QWORD[.]  |   |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 918 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 926 740 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 929 742 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 935 block B69 null  <||@
  Comment 935 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 935 752 CMP [rsi|DWORD[.] * 8 + 16] y: 36 size: WORD  <||@
  Comment 944 754 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B96  <||@
  Comment 950 block B70 null  <||@
  Comment 950 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 950 758 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 954 760 r10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 957 762 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 960 764 JUMP ~[] destination: B70 -> B71  <||@
  Comment 965 block B82 null  <||@
  Comment 965 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 965 842 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 969 844 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 973 846 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 977 848 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 983 block B84 null  <||@
  Comment 983 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 876 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 987 878 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 994 880 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 994 882 JUMP ~[] destination: B84 -> B85  <||@
  Comment 994 block B85 null  <||@
  Comment 994 884 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 994 886 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 994 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1004 888 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1007 890 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1014 892 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1017 894 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1017 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1024 896 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1028 898 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1031 900 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1034 902 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1037 904 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1042 906 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116]  <||@
  Comment 1042 9  <||@
  Comment 1047 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 1052 [stack:16]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1053 908 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1058 910 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1067 12  <||@
  Comment 1077 block B41 null  <||@
  Comment 1077 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1077 380 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1081 382 stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1086 384 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1091 386 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1091 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1101 388 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1106 390 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1111 392 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:62, 21, 7, 51]  <||@
  Comment 1111 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1116 [r13:0, r14:0]at java.lang.String.lastIndexOf(String.java:1888) [bci: 62, duringCall: false, rethrow: false]
              |0             |1           |2  |3                   |4  |5           |6  |7  |8           |9             |10          |11              |12  |13  |14 
     locals:  |r14|QWORD[.]  |int[0|0x0]  |-  |Object[char[1]{.}]  |-  |int[1|0x1]  |-  |-  |int[0|0x0]  |int[46|0x2e]  |int[0|0x0]  |stack:60|DWORD  |-   |-   |-  
  at java.lang.String.lastIndexOf(String.java:1827) [bci: 21, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.String.lastIndexOf(String.java:1807) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |-             |r13|QWORD[.]  |-  |- 
     stack:   |r13|QWORD[.]  |              |   |    <||@
  Comment 1117 394 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1120 396 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1124 398 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1129 400 JUMP ~[] destination: B41 -> B43  <||@
  Comment 1134 block B16 null  <||@
  Comment 1134 118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1134 120 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1138 122 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1142 124 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1146 126 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1152 block B18 null  <||@
  Comment 1152 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1152 150 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1156 152 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1163 154 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1163 156 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1163 block B19 null  <||@
  Comment 1163 158 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1163 160 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1166 162 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}  <||@
  Comment 1166 {meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>}}  <||@
  Comment 1176 164 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1183 166 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1186 168 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}  <||@
  Comment 1186 {meta{HotSpotType<Ljava/lang/Class$EnclosingMethodInfo;, resolved>;compressed}}  <||@
  Comment 1193 170 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1197 172 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1201 174 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1204 176 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1207 178 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1212 180 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1217 182 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 17, 1, 1, 34]  <||@
  Comment 1217 9  <||@
  Comment 1223 {HotSpotMethod<Class$EnclosingMethodInfo.<init>(Object[])>}  <||@
  Comment 1228 [stack:16, stack:24, stack:32]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 2, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |stack:40|QWORD[.] 
     stack:   |stack:48|QWORD[.]  |                  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1229 184 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1234 186 rsi|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1238 188 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 1245 190 CMP (x: r11|QWORD[.], y: stack:32|QWORD[.]) size: QWORD  <||@
  Comment 1250 192 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 1256 block B21 null  <||@
  Comment 1256 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1256 206 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:5, 17, 1, 1, 34]  <||@
  Comment 1256 [r10:0, r11:0, stack:24, stack:32]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |-             |stack:40|QWORD[.] 
     stack:   |r10|QWORD[.]  |                  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1256 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1260 208 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1263 210 JUMP ~[] destination: B21 -> B22  <||@
  Comment 1268 block B24 null  <||@
  Comment 1268 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1268 230 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1278 232 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1281 236 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 43]  <||@
  Comment 1281 9  <||@
  Comment 1287 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 1292 [stack:32]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:32|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1311) [bci: 43, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1293 238 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 1300 240 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1305 242 MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1309 244 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1316 246 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1326 248 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1330 250 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1333 252 JUMP ~[] destination: B24 -> B26  <||@
  Comment 1338 block B53 null  <||@
  Comment 1338 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 548 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 550 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1353 552 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1356 554 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 16, 34]  <||@
  Comment 1356 9  <||@
  Comment 1359 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 1364 [stack:16, stack:24, stack:32]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:40|QWORD[.]  |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1365 556 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 1372 558 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1377 560 MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1381 562 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1388 564 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1398 566 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1402 568 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1405 570 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1410 572 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1415 574 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1420 block B50 null  <||@
  Comment 1420 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1420 500 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1430 502 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1433 506 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 12, 34]  <||@
  Comment 1433 9  <||@
  Comment 1439 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 1444 [stack:24, stack:32]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:32|QWORD[.]  |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 12, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:40|QWORD[.]  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1445 508 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@a368f24 encoding: base: 0 shift: 3  <||@
  Comment 1452 510 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1457 512 MOV (x: [r13|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1461 514 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1468 516 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1478 518 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1482 520 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1485 522 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1490 524 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1493 526 JUMP ~[] destination: B50 -> B52  <||@
  Comment 1498 block B92 null  <||@
  Comment 1498 956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1498 958 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1502 960 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1506 962 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1510 964 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 1516 block B94 null  <||@
  Comment 1516 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1516 992 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1520 994 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1527 996 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1527 998 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1527 block B95 null  <||@
  Comment 1527 1000 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1527 1002 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1527 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1537 1004 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1540 1006 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1547 1008 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1550 1010 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1550 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1557 1012 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1561 1014 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1564 1016 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 1018 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1570 1020 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1575 1022 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<String.<init>(char[], int, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:52, 116]  <||@
  Comment 1575 {HotSpotMethod<String.<init>(char[], int, int)>}  <||@
  Comment 1575 9  <||@
  Comment 1580 [stack:24]at java.lang.String.substring(String.java:1933) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |  
  at java.lang.Class.getSimpleName(Class.java:1335) [bci: 116, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1581 1024 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1586 1026 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1595 12  <||@
  Comment 1605 block B17 null  <||@
  Comment 1605 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1605 130 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 132 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1615 134 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1615 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1625 136 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1630 138 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1635 140 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 1, 1, 34]  <||@
  Comment 1635 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1640 [r13:0, stack:24, stack:32]at java.lang.Class.getEnclosingMethodInfo(Class.java:1072) [bci: 4, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:40|QWORD[.]  |  
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |r13|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r13|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 1641 142 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1644 144 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1649 146 JUMP ~[] destination: B17 -> B19  <||@
  Comment 1654 block B65 null  <||@
  Comment 1654 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1654 672 stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1659 674 stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1664 676 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1669 678 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1669 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1679 680 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1682 682 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1687 684 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1692 686 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 34]  <||@
  Comment 1692 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1697 [r13:0, stack:16, stack:24, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |-                  |-             |- 
     stack:   |stack:48|QWORD[.]  |r13|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1698 688 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1701 690 r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 692 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1711 694 JUMP ~[] destination: B65 -> B67  <||@
  Comment 1716 block B83 null  <||@
  Comment 1716 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1716 852 stack:56|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1721 854 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1726 856 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1731 858 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1731 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1741 860 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1746 862 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1751 864 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92]  <||@
  Comment 1751 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1756 [r13:0, stack:24]at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92, duringCall: false, rethrow: false]
              |0  |1                  |2          |3              
     locals:  |-  |stack:40|QWORD[.]  |r14|DWORD  |stack:52|DWORD   <||@
  Comment 1757 866 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1760 868 r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1765 870 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1770 872 JUMP ~[] destination: B83 -> B85  <||@
  Comment 1775 block B93 null  <||@
  Comment 1775 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1775 968 stack:56|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1780 970 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1785 972 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1790 974 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1790 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1800 976 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1805 978 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1810 980 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:92]  <||@
  Comment 1810 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1815 [r13:0, stack:24]at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92, duringCall: false, rethrow: false]
              |0  |1                  |2          |3              
     locals:  |-  |stack:40|QWORD[.]  |r14|DWORD  |stack:52|DWORD   <||@
  Comment 1816 982 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1819 984 r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1824 986 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1829 988 JUMP ~[] destination: B93 -> B95  <||@
  Comment 1834 block B75 null  <||@
  Comment 1834 792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1834 794 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1837 796 r10|DWORD = MOVE input: int[-192019|0xfffffffffffd11ed]  <||@
  Comment 1843 798 JUMP ~[] destination: B75 -> B89  <||@
  Comment 1843 block B89 null  <||@
  Comment 1843 936 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1843 938 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1850 940 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1857 942 DEOPT info [bci:92]  <||@
  Comment 1857 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1862 [r8:0]at java.lang.Class.getSimpleName(Class.java:1332) [bci: 92, duringCall: false, rethrow: false]
              |0  |1            |2          |3         
     locals:  |-  |r8|QWORD[.]  |r14|DWORD  |r11|DWORD   <||@
  Comment 1863 block B98 null  <||@
  Comment 1863 1042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1863 1044 MOV [r15|QWORD + 668] y: -181523 size: DWORD  <||@
  Comment 1874 1046 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1881 1048 DEOPT info [bci:43, 1, 34]  <||@
  Comment 1881 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1886 [rax:0, stack:32]at java.lang.Class.getEnclosingClass(Class.java:1287) [bci: 43, duringCall: false, rethrow: false]
              |0  |1  |2             |3 
     locals:  |-  |-  |rax|QWORD[.]  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1887 block B79 null  <||@
  Comment 1887 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1887 822 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1890 824 r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed]  <||@
  Comment 1896 826 JUMP ~[] destination: B79 -> B89  <||@
  Comment 1898 block B59 null  <||@
  Comment 1898 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1898 624 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1901 626 r10|DWORD = MOVE input: int[-193811|0xfffffffffffd0aed]  <||@
  Comment 1907 628 JUMP ~[] destination: B59 -> B63  <||@
  Comment 1907 block B63 null  <||@
  Comment 1907 652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1907 654 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1914 656 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1921 658 DEOPT info [bci:19, 34]  <||@
  Comment 1921 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1926 [r11:0, r13:0, stack:32]at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |-             |-             |- 
     stack:   |r11|QWORD[.]  |r13|QWORD[.]  |  
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 1927 block B47 null  <||@
  Comment 1927 468 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1927 460 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1568883993]  <||@
  Comment 1927 {Object[d.a@1568883993]}  <||@
  Comment 1937 462 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1940 464 r10|DWORD = MOVE input: int[-175899|0xfffffffffffd50e5]  <||@
  Comment 1946 470 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1953 472 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1960 474 DEOPT info [bci:46]  <||@
  Comment 1960 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1965 [r13:0]at java.lang.Class.getSimpleName(Class.java:1311) [bci: 46, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |-             |-  |-  |- 
     stack:   |r13|QWORD[.]  |   |   |    <||@
  Comment 1966 block B38 null  <||@
  Comment 1966 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1966 354 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1969 356 r10|DWORD = MOVE input: int[-178451|0xfffffffffffd46ed]  <||@
  Comment 1975 358 JUMP ~[] destination: B38 -> B39  <||@
  Comment 1975 block B39 null  <||@
  Comment 1975 360 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1975 362 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1982 364 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1989 366 DEOPT info [bci:62, 21, 7, 51]  <||@
  Comment 1989 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1994 [r13:0, r14:0]at java.lang.String.lastIndexOf(String.java:1888) [bci: 62, duringCall: false, rethrow: false]
              |0             |1           |2  |3                   |4  |5           |6  |7  |8           |9             |10          |11         |12  |13  |14 
     locals:  |r14|QWORD[.]  |int[0|0x0]  |-  |Object[char[1]{.}]  |-  |int[1|0x1]  |-  |-  |int[0|0x0]  |int[46|0x2e]  |int[0|0x0]  |r11|DWORD  |-   |-   |-  
  at java.lang.String.lastIndexOf(String.java:1827) [bci: 21, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.String.lastIndexOf(String.java:1807) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1312) [bci: 51, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |-             |r13|QWORD[.]  |-  |- 
     stack:   |r13|QWORD[.]  |              |   |    <||@
  Comment 1995 block B56 null  <||@
  Comment 1995 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1995 602 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1998 604 r10|DWORD = MOVE input: int[-187667|0xfffffffffffd22ed]  <||@
  Comment 2004 606 JUMP ~[] destination: B56 -> B63  <||@
  Comment 2006 block B36 null  <||@
  Comment 2006 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2006 338 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2009 340 r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed]  <||@
  Comment 2015 342 JUMP ~[] destination: B36 -> B39  <||@
  Comment 2017 block B20 null  <||@
  Comment 2017 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2017 196 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2022 198 MOV [r15|QWORD + 668] y: -206611 size: DWORD  <||@
  Comment 2033 200 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2040 202 DEOPT info [bci:5, 17, 1, 1, 34]  <||@
  Comment 2040 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2045 [rax:0, r10:0, stack:32]at java.lang.Class$EnclosingMethodInfo.<init>(Class.java:1080) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getEnclosingMethodInfo(Class.java:1076) [bci: 17, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |-             |rax|QWORD[.] 
     stack:   |r10|QWORD[.]  |             
  at java.lang.Class.getEnclosingClass(Class.java:1272) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 2046 block B14 null  <||@
  Comment 2046 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2046 106 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2051 108 MOV [r15|QWORD + 668] y: -205331 size: DWORD  <||@
  Comment 2062 110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2069 112 DEOPT info [bci:4, 10, 1, 34]  <||@
  Comment 2069 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2074 [rax:0, rsi:0]at java.lang.Class.getDeclaringClass(Class.java:1235) [bci: 4, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rax|QWORD[.]  |  
  at java.lang.Class.getEnclosingClass(Class.java:1277) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.Class.getSimpleBinaryName(Class.java:1443) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 2075 block B68 null  <||@
  Comment 2075 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2075 746 r10|DWORD = MOVE input: int[-199187|0xfffffffffffcf5ed]  <||@
  Comment 2081 748 JUMP ~[] destination: B68 -> B97  <||@
  Comment 2081 block B97 null  <||@
  Comment 2081 1034 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2081 1036 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2088 1038 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2095 1040 DEOPT info [bci:55, 22, 34]  <||@
  Comment 2095 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2100 [r9:0, stack:32]at java.lang.String.substring(String.java:1933) [bci: 55, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |-            |-  |- 
     stack:   |r9|QWORD[.]  |   |  
  at java.lang.Class.getSimpleBinaryName(Class.java:1448) [bci: 22, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.Class.getSimpleName(Class.java:1309) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 2101 block B62 null  <||@
  Comment 2101 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2101 646 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2104 648 r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed]  <||@
  Comment 2110 650 JUMP ~[] destination: B62 -> B63  <||@
  Comment 2115 block B96 null  <||@
  Comment 2115 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2115 1030 r10|DWORD = MOVE input: int[-201235|0xfffffffffffceded]  <||@
  Comment 2121 1032 JUMP ~[] destination: B96 -> B97  <||@
  Comment 2123 block B7 null  <||@
  Comment 2123 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 54 MOV [r15|QWORD + 668] y: -203539 size: DWORD  <||@
  Comment 2134 56 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2141 58 DEOPT info [bci:0]  <||@
  Comment 2141 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2146 [stack:32]at java.lang.Class.getSimpleName(Class.java:1306) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |-   <||@
  Comment 2147 block B86 null  <||@
  Comment 2147 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2147 914 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2150 916 r10|DWORD = MOVE input: int[-189979|0xfffffffffffd19e5]  <||@
  Comment 2156 918 JUMP ~[] destination: B86 -> B89  <||@
  Comment 2161 block B88 null  <||@
  Comment 2161 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2161 930 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2164 932 r10|DWORD = MOVE input: int[-193299|0xfffffffffffd0ced]  <||@
  Comment 2170 934 JUMP ~[] destination: B88 -> B89  <||@
  Comment 2175 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2175 4  <||@
  Comment 2181 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2181 5  <||@
  HexCodeFile>>> <|@
end_nmethod
