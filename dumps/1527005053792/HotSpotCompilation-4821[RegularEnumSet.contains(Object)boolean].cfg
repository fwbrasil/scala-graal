begin_compilation
  name " HotSpotCompilation-4821[java.util.RegularEnumSet.contains(Object)]"
  method "HotSpotCompilation-4821[java.util.RegularEnumSet.contains(Object)]"
  date 1527005160005
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/RegularEnumSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v106 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v111 v108 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<RegularEnumSet.contains(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: RegularEnumSet.java
sourceLine: 141
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v91 v100 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.RegularEnumSet.contains(RegularEnumSet.java:143) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v111 
=== Succesors ===
next: a101 
=== Usages ===
v110 v109 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v111 #next: a101  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EnumSet.elementType
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 13]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v106 
=== Succesors ===
next: a102 
=== Usages ===
a34 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v106 #next: a102  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v100 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Klass::_java_mirror:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.RegularEnumSet.contains(RegularEnumSet.java:143) [bci: 7]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v109 
=== Succesors ===
next: v54 
=== Usages ===
v11 
=== Predecessor ===
a101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v109 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid a34 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 13]
op: Uncompress
stamp: a# Ljava/lang/Class;
=== Inputs ===
value: a101 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a101  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a34 
y: a102 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a34 y: a102  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
a102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v51 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v100 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v110 
=== Succesors ===
next: v58 
=== Usages ===
v70 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v110 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
rawvalue: meta{HotSpotType<Ljava/lang/Enum;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Enum;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v103 
y: v62 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v103 y: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v70 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v70 #trueSuccessor: v55 #falseSuccessor: v57  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i104 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i104  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Enum.ordinal
nodeSourcePosition: at java.lang.Enum.ordinal(Enum.java:103) [bci: 1]
at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v108 
=== Succesors ===
next: j105 
=== Usages ===
j21 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v108 #next: j105  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j105 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: RegularEnumSet.elements
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 33]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v107 
=== Succesors ===
next: v29 
=== Usages ===
v26 
=== Predecessor ===
i104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v107 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 44]
stamp: i64
=== Inputs ===
x: j14 
y: i104 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j14 y: i104  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 48]
stamp: void
=== Inputs ===
x: j21 
y: j105 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j21 y: j105  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 48]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 48]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 48]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v26 
trueValue: i25 
falseValue: i27 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v26 trueValue: i25 falseValue: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 56]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
j105 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -10531
stableDimension: 0
stamp: i32 [-10531] ⇊00000000ffffd6dd ⇈00000000ffffd6dd
stampKind: i32
value: int[-10531|0xffffffffffffd6dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v57 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9491
stableDimension: 0
stamp: i32 [-9491] ⇊00000000ffffdaed ⇈00000000ffffdaed
stampKind: i32
value: int[-9491|0xffffffffffffdaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-10531 - -7699] ⇊00000000ffffc0cd ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v85 
values: i93 i95 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v85 values: i93 i95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 
=== Succesors ===
next: v91 
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i89 
speculation: a88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i89 speculation: a88  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/RegularEnumSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v106 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v111 v108 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<RegularEnumSet.contains(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: RegularEnumSet.java
sourceLine: 141
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v91 v100 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.RegularEnumSet.contains(RegularEnumSet.java:143) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v111 
=== Succesors ===
next: a101 
=== Usages ===
v110 v109 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v111 #next: a101  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a101 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EnumSet.elementType
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 13]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v106 
=== Succesors ===
next: a102 
=== Usages ===
a34 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v106 #next: a102  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
result [v2|DWORD * 8 + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v100 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Klass::_java_mirror:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.RegularEnumSet.contains(RegularEnumSet.java:143) [bci: 7]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v109 
=== Succesors ===
next: v54 
=== Usages ===
v11 
=== Predecessor ===
a101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v109 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid a34 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 13]
op: Uncompress
stamp: a# Ljava/lang/Class;
=== Inputs ===
value: a101 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a101  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a34 
y: a102 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a34 y: a102  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
a102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v51 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4ba664e4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6133ebfb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD[.], y: [v2|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
result [v2|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v100 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v110 
=== Succesors ===
next: v58 
=== Usages ===
v70 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v110 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
rawvalue: meta{HotSpotType<Ljava/lang/Enum;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Enum;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v103 
y: v62 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v103 y: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v70 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v70 #trueSuccessor: v55 #falseSuccessor: v57  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [v2|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i104 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i104  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i104 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Enum.ordinal
nodeSourcePosition: at java.lang.Enum.ordinal(Enum.java:103) [bci: 1]
at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v108 
=== Succesors ===
next: j105 
=== Usages ===
j21 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v108 #next: j105  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j105 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: RegularEnumSet.elements
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 33]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v107 
=== Succesors ===
next: v29 
=== Usages ===
v26 
=== Predecessor ===
i104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v107 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 44]
stamp: i64
=== Inputs ===
x: j14 
y: i104 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j14 y: i104  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 48]
stamp: void
=== Inputs ===
x: j21 
y: j105 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j21 y: j105  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 48]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 48]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 48]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v26 
trueValue: i25 
falseValue: i27 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v26 trueValue: i25 falseValue: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 56]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
j105 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL (x: v9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v11|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:147) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result int[-10531|0xffffffffffffd6dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -10531
stableDimension: 0
stamp: i32 [-10531] ⇊00000000ffffd6dd ⇈00000000ffffd6dd
stampKind: i32
value: int[-10531|0xffffffffffffd6dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v57 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-10531|0xffffffffffffd6dd]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.contains(RegularEnumSet.java:144) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result int[-9491|0xffffffffffffdaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -9491
stableDimension: 0
stamp: i32 [-9491] ⇊00000000ffffdaed ⇈00000000ffffdaed
stampKind: i32
value: int[-9491|0xffffffffffffdaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9491|0xffffffffffffdaed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i89 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-10531 - -7699] ⇊00000000ffffc0cd ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v85 
values: i93 i95 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v85 values: i93 i95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 
=== Succesors ===
next: v91 
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i89 
speculation: a88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i89 speculation: a88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4ba664e4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6133ebfb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD[.], y: [v2|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [v2|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL (x: v9|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v11|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-9491|0xffffffffffffdaed]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-10531|0xffffffffffffd6dd]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: aload_1       
     7: invokevirtual #6          // java.lang.Object.getClass:()java.lang.Class
    10: astore_2      
    11: aload_2       
    12: aload_0       
    13: getfield      #7          // java.util.EnumSet.elementType:java.lang.Class
    16: if_acmpeq     32
    19: aload_2       
    20: invokevirtual #8          // java.lang.Class.getSuperclass:()java.lang.Class
    23: aload_0       
    24: getfield      #7          // java.util.EnumSet.elementType:java.lang.Class
    27: if_acmpeq     32
    30: iconst_0      
    31: ireturn       
    32: aload_0       
    33: getfield      #0          // elements:long
    36: lconst_1      
    37: aload_1       
    38: checkcast     #13         // java.lang.Enum
    41: invokevirtual #2          // java.lang.Enum.ordinal:()int
    44: lshl          
    45: land          
    46: lconst_0      
    47: lcmp          
    48: ifeq          55
    51: iconst_1      
    52: goto          56
    55: iconst_0      
    56: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4ba664e4 slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6133ebfb encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction CMP (x: rax|QWORD[.], y: [rcx|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>} <|@ <|@
      nr   24  <|@ instruction CMP (x: rax|QWORD, y: [rcx|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   34  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   38  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   44  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-9491|0xffffffffffffdaed] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-10531|0xffffffffffffd6dd] // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: aload_1       
     7: invokevirtual #6          // java.lang.Object.getClass:()java.lang.Class
    10: astore_2      
    11: aload_2       
    12: aload_0       
    13: getfield      #7          // java.util.EnumSet.elementType:java.lang.Class
    16: if_acmpeq     32
    19: aload_2       
    20: invokevirtual #8          // java.lang.Class.getSuperclass:()java.lang.Class
    23: aload_0       
    24: getfield      #7          // java.util.EnumSet.elementType:java.lang.Class
    27: if_acmpeq     32
    30: iconst_0      
    31: ireturn       
    32: aload_0       
    33: getfield      #0          // elements:long
    36: lconst_1      
    37: aload_1       
    38: checkcast     #13         // java.lang.Enum
    41: invokevirtual #2          // java.lang.Enum.ordinal:()int
    44: lshl          
    45: land          
    46: lconst_0      
    47: lcmp          
    48: ifeq          55
    51: iconst_1      
    52: goto          56
    55: iconst_0      
    56: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4ba664e4 slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6133ebfb encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction CMP (x: rax|QWORD[.], y: [rcx|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>} <|@ <|@
      nr   24  <|@ instruction CMP (x: rax|QWORD, y: [rcx|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   34  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   38  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   44  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-9491|0xffffffffffffdaed] // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-10531|0xffffffffffffd6dd] // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: aload_1       
     7: invokevirtual #6          // java.lang.Object.getClass:()java.lang.Class
    10: astore_2      
    11: aload_2       
    12: aload_0       
    13: getfield      #7          // java.util.EnumSet.elementType:java.lang.Class
    16: if_acmpeq     32
    19: aload_2       
    20: invokevirtual #8          // java.lang.Class.getSuperclass:()java.lang.Class
    23: aload_0       
    24: getfield      #7          // java.util.EnumSet.elementType:java.lang.Class
    27: if_acmpeq     32
    30: iconst_0      
    31: ireturn       
    32: aload_0       
    33: getfield      #0          // elements:long
    36: lconst_1      
    37: aload_1       
    38: checkcast     #13         // java.lang.Enum
    41: invokevirtual #2          // java.lang.Enum.ordinal:()int
    44: lshl          
    45: land          
    46: lconst_0      
    47: lcmp          
    48: ifeq          55
    51: iconst_1      
    52: goto          56
    55: iconst_0      
    56: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4a088b460c48c1e003483b04cd680000000f855100000048b8addeaddeaddeadde483b04cd300000000f85530000008b4a0c488b461849c7c20100000049d3e24985c2b80000000041ba01000000440f44d0418bc2488b6c24104883c418850500000000c5f877c341baeddaffff4589979c0200004d89a7a8020000e8000000009041baddd6ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4ba664e4 slotKind: QWORD  <||@
  Comment 48 10 rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 12 rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 54 14 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6133ebfb encoding: base: 0 shift: 3  <||@
  Comment 58 16 CMP (x: rax|QWORD[.], y: [rcx|DWORD * 8 + 104]) size: QWORD  <||@
  Comment 66 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 72 block B1 null  <||@
  Comment 72 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 22 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>}  <||@
  Comment 72 {meta{HotSpotType<Ljava/lang/Enum;, resolved>}}  <||@
  Comment 82 24 CMP (x: rax|QWORD, y: [rcx|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 90 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 96 block B2 null  <||@
  Comment 96 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 30 rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 99 32 rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD  <||@
  Comment 103 34 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 110 38 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 113 40 TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 116 42 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 121 44 r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 131 46 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 134 48 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 143 12  <||@
  Comment 153 block B4 null  <||@
  Comment 153 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 -1 r10|DWORD = MOVE input: int[-9491|0xffffffffffffdaed]  <||@
  Comment 159 52 JUMP ~[] destination: B4 -> B5  <||@
  Comment 159 block B5 null  <||@
  Comment 159 58 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 159 60 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 166 62 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 173 64 DEOPT info [bci:0]  <||@
  Comment 173 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 178 [rdx:0, rsi:0]at java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 179 block B3 null  <||@
  Comment 179 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 -1 r10|DWORD = MOVE input: int[-10531|0xffffffffffffd6dd]  <||@
  Comment 185 56 JUMP ~[] destination: B3 -> B5  <||@
  Comment 187 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 187 4  <||@
  Comment 193 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 193 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4821[java.util.RegularEnumSet.contains(Object)]"
  method "HotSpotCompilation-4821[java.util.RegularEnumSet.contains(Object)]"
  date 1527005160044
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1079732e0 448b560849c1e203493bc20f856f2be9fe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4a088b460c48c1e003483b04cd680000000f855100000048b8e8b702c007000000483b04cd300000000f85530000008b4a0c488b461849c7c20100000049d3e24985c2b80000000041ba01000000440f44d0418bc2488b6c24104883c418850591bcf1fcc5f877c341baeddaffff4589979c0200004d89a7a8020000e86c42e9fe9041baddd6ffffebe4e880722dff90e85a41e9fe90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4ba664e4 slotKind: QWORD  <||@
  Comment 48 10 rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 12 rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 54 14 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6133ebfb encoding: base: 0 shift: 3  <||@
  Comment 58 16 CMP (x: rax|QWORD[.], y: [rcx|DWORD * 8 + 104]) size: QWORD  <||@
  Comment 66 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 72 block B1 null  <||@
  Comment 72 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 22 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Enum;, resolved>}  <||@
  Comment 72 {meta{HotSpotType<Ljava/lang/Enum;, resolved>}}  <||@
  Comment 82 24 CMP (x: rax|QWORD, y: [rcx|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 90 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 96 block B2 null  <||@
  Comment 96 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 30 rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 99 32 rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD  <||@
  Comment 103 34 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 110 38 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 113 40 TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 116 42 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 121 44 r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 131 46 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 134 48 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 143 12  <||@
  Comment 153 block B4 null  <||@
  Comment 153 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 -1 r10|DWORD = MOVE input: int[-9491|0xffffffffffffdaed]  <||@
  Comment 159 52 JUMP ~[] destination: B4 -> B5  <||@
  Comment 159 block B5 null  <||@
  Comment 159 58 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 159 60 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 166 62 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 173 64 DEOPT info [bci:0]  <||@
  Comment 173 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 178 [rdx:0, rsi:0]at java.util.RegularEnumSet.contains(RegularEnumSet.java:141) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 179 block B3 null  <||@
  Comment 179 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 -1 r10|DWORD = MOVE input: int[-10531|0xffffffffffffd6dd]  <||@
  Comment 185 56 JUMP ~[] destination: B3 -> B5  <||@
  Comment 187 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 187 4  <||@
  Comment 193 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 193 5  <||@
  HexCodeFile>>> <|@
end_nmethod
