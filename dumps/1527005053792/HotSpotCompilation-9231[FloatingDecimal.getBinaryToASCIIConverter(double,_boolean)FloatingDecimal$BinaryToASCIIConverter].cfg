begin_compilation
  name " HotSpotCompilation-9231[sun.misc.FloatingDecimal.getBinaryToASCIIConverter(double, boolean)]"
  method "HotSpotCompilation-9231[sun.misc.FloatingDecimal.getBinaryToASCIIConverter(double, boolean)]"
  date 1527005200680
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a497 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a497  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@org.graalvm.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
a497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: JavaThread::_threadObj:final
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: a! Ljava/lang/Thread;
=== Inputs ===
stateBefore: - 
guard: - 
address: v506 
=== Succesors ===
next: a498 
=== Usages ===
v507 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v506 #next: a498  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a497 
index: - 
=== Succesors ===
=== Usages ===
a498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a497 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v507 
=== Succesors ===
next: v26 
=== Usages ===
a245 v298 v496 v508 
=== Predecessor ===
a497 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v507 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rawvalue: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 v476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$1;
stampKind: a -
value: Object[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 v271 ?89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 i494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 v432 v422 v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?168 v289 ?166 v297 ?145 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: f64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 1]
stamp: i64
=== Inputs ===
value: d1 
=== Succesors ===
=== Usages ===
v28 v10 j14 j16 j495 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d1  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 6]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
stamp: void
=== Inputs ===
x: j4 
y: j5 
=== Succesors ===
=== Usages ===
i12 v322 i494 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4 y: j5  <|@  <|@
f <@~|@floating>@ <|@
tid j13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 23]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j14 v28 j495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 30]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 33]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j4 
y: j15 
=== Succesors ===
=== Usages ===
j18 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4 y: j15  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 34]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
j18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 36]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j16 
y: i17 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 37]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j18 
=== Succesors ===
=== Usages ===
v21 v23 i156 i199 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j18  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 v23 i494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i9 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i19 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
stamp: void
trueSuccessorProbability: 0.1371868485109654
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
a498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v24 #falseSuccessor: v315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594110697409208356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
stamp: void
=== Inputs ===
x: j4 
y: j13 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4 y: j13  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
stamp: void
trueSuccessorProbability: 0.999745287824758
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594109438449167940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 86]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v319 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v319 #falseSuccessor: v321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4594109438449167940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid a33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 97]
rawvalue: FloatingDecimal.BinaryToASCIIBuffer@1898887381
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
stampKind: a -
value: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 100]
stamp: void
=== Inputs ===
result: a33 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a33 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -61715
stableDimension: 0
stamp: i32 [-61715] ⇊00000000ffff0eed ⇈00000000ffff0eed
stampKind: i32
value: int[-61715|0xffffffffffff0eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4540281525087633138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
value: a498 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a498  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
rawvalue: -1011
stableDimension: 0
stamp: i32 [-1011] ⇊00000000fffffc0d ⇈00000000fffffc0d
stampKind: i32
value: int[-1011|0xfffffffffffffc0d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j495 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j4 
y: j13 
=== Succesors ===
=== Usages ===
i36 j40 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4 y: j13  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfLeadingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 103]
stamp: i32 [12 - 64] ⇈000000000000007f
=== Inputs ===
value: j495 
=== Succesors ===
=== Usages ===
i39 i43 i77 i202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: j495  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
stamp: i32 [-1075 - -1023] ⇊00000000fffff800
=== Inputs ===
x: i201 
y: i36 
=== Succesors ===
=== Usages ===
i172 i173 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i201 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
rawvalue: -11
stableDimension: 0
stamp: i32 [-11] ⇊00000000fffffff5 ⇈00000000fffffff5
stampKind: i32
value: int[-11|0xfffffffffffffff5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
stamp: i32 [1 - 53] ⇈000000000000003f
=== Inputs ===
x: i36 
y: i38 
=== Succesors ===
=== Usages ===
j40 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i36 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j40 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1774) [bci: 119]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j495 
y: i39 
=== Succesors ===
=== Usages ===
j151 j152 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j495 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 128]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 132]
stamp: i32 [0 - 52] ⇈000000000000003f
=== Inputs ===
x: i42 
y: i36 
=== Succesors ===
=== Usages ===
i159 i160 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i42 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v84 #falseSuccessor: v85  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4468831778788311603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4540281437127610186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
stamp: i32 [-52 - 0]
=== Inputs ===
x: i76 
y: i36 
=== Succesors ===
=== Usages ===
i156 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i76 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
v85 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4605946749520349175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 42]
rawvalue: 2047
stableDimension: 0
stamp: i32 [2047] ⇊00000000000007ff ⇈00000000000007ff
stampKind: i32
value: int[2047|0x7ff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i20 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i19 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v317 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v317 #falseSuccessor: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -61459
stableDimension: 0
stamp: i32 [-61459] ⇊00000000ffff0fed ⇈00000000ffff0fed
stampKind: i32
value: int[-61459|0xffffffffffff0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-61715 - -61459] ⇊00000000ffff0eed ⇈00000000ffff0fed
valueDescription: i32
=== Inputs ===
merge: v400 
values: i402 i408 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v400 values: i402 i408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v401 v407 
=== Succesors ===
next: v406 
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v401 v407 #next: v406  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1750
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: d1 - i2 - - - - - - - - - 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: d1 - i2 - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i404 
speculation: a403 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i404 speculation: a403  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605946749520349175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 138]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
value: a498 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a498  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i19 
y: i55 
=== Succesors ===
=== Usages ===
i172 i173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j4 
y: j13 
=== Succesors ===
=== Usages ===
j46 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4 y: j13  <|@  <|@
f <@~|@floating>@ <|@
tid j45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 140]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j46 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 143]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j14 
y: j45 
=== Succesors ===
=== Usages ===
j151 j152 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j14 y: j45  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1779) [bci: 146]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i159 i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v193 #falseSuccessor: v194  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4534805227121771698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605946616958068681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" "B13" 
    successors "B15" "B34" 
    xhandlers
    flags 
    probability 4605946931692710131
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v143 
values: i43 i47 
=== Succesors ===
=== Usages ===
v289 i160 ?145 ?166 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v143 values: i43 i47  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v143 
values: i202 i199 
=== Succesors ===
=== Usages ===
v289 i173 ?166 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v143 values: i202 i199  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v143 
values: j40 j46 
=== Succesors ===
=== Usages ===
v289 j152 ?145 ?166 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v143 values: j40 j46  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-52 - 2047]
valueDescription: i32
=== Inputs ===
merge: v143 
values: i77 i19 
=== Succesors ===
=== Usages ===
?145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v143 values: i77 i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v144 v146 
=== Succesors ===
next: a499 
=== Usages ===
i159 i172 j151 i156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v144 v146 #next: a499  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a498 
=== Succesors ===
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v508 
=== Succesors ===
next: i500 
=== Usages ===
a252 v509 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v508 #next: i500  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v10 
trueValue: i9 
falseValue: i11 
=== Succesors ===
=== Usages ===
?166 i285 ?145 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v10 trueValue: i9 falseValue: i11  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 150
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1781
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - i2 - - i494 j151 - i156 i159 - - 
=== Succesors ===
=== Usages ===
v422 i500 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - i2 - - i494 j151 - i156 i159 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a499 
=== Succesors ===
=== Usages ===
i500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 8]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?145 
guard: - 
address: v509 
=== Succesors ===
next: v330 
=== Usages ===
i115 v260 
=== Predecessor ===
a499 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?145 guard: - address: v509 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i500 
y: i114 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i500 y: i114  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal.access$400(ThreadLocal.java:74) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rawvalue: -1401181199
stableDimension: 0
stamp: i32 [-1401181199] ⇊00000000ac7babf1 ⇈00000000ac7babf1
stampKind: i32
value: int[-1401181199|0xffffffffac7babf1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 11]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: i32 [-2147483648 - 746302449] ⇈00000000ac7babf1
=== Inputs ===
x: i115 
y: i133 
=== Succesors ===
=== Usages ===
v510 v271 v260 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i115 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i134 
y: i500 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i134 y: i500  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v327 
falseSuccessor: v329 
=== Usages ===
=== Predecessor ===
i500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v327 #falseSuccessor: v329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B25" 
    xhandlers
    flags 
    probability 4605946931692710131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: a501 
=== Usages ===
a501 
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a501  <|@  <|@
f <@~|@floating>@ <|@
tid a252 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a499 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a499  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a252 
index: i134 
=== Succesors ===
=== Usages ===
a501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a252 index: i134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v327 
address: v510 
=== Succesors ===
next: v121 
=== Usages ===
a270 v301 v511 
=== Predecessor ===
v327 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v327 address: v510 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid a270 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a501 
=== Succesors ===
=== Usages ===
v271 a237 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a501  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
value: a501 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a501  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - i2 - - i494 j151 - i172 i159 - - 
=== Succesors ===
=== Usages ===
?163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - i2 - - i494 j151 - i172 i159 - -  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?166 
=== Succesors ===
=== Usages ===
?89 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166  <|@  <|@
f <@~|@floating>@ <|@
tid a245 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a498 
=== Succesors ===
=== Usages ===
v271 ?89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a498  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: a57 - a245 - - 
=== Succesors ===
=== Usages ===
?208 ?135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: a57 - a245 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.3646055437100213E-4
=== Inputs ===
condition: v301 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
a501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v301 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B24" 
    xhandlers
    flags 
    probability 4548316303746290943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 34]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: a130 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a130  <|@  <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@47271e82
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a245 a57 i134 a270 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a245 a57 i134 a270  <|@  <|@
tid ?135 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?89 
values: - - 
=== Succesors ===
=== Usages ===
?394 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - -  <|@  <|@
tid ?394 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?135 
values: - - - - 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?135 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a130 <|@
d <@d|@=== Debug Properties ===
bci: 38
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v271 
stateDuring: ?394 
=== Succesors ===
next: v97 
=== Usages ===
v91 a237 
=== Predecessor ===
v119 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v271 stateDuring: ?394 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
value: a130 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a130  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.364582267253437E-4
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
a130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v96 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4490441170435821054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" "B17" "B12" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4534815063222751799
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j152 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v93 
values: j40 j151 j46 
=== Succesors ===
=== Usages ===
v297 ?168 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: j40 j151 j46  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v93 
values: i43 i159 i47 
=== Succesors ===
=== Usages ===
v297 ?168 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i43 i159 i47  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v93 
values: i202 i172 i199 
=== Succesors ===
=== Usages ===
v297 ?168 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i202 i172 i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 v200 
=== Succesors ===
next: a102 
=== Usages ===
j152 i160 i173 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 v200 #next: a102  <|@  <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@fc1c44
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a57 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a57  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v10 
trueValue: i9 
falseValue: i11 
=== Succesors ===
=== Usages ===
?168 i493 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v10 trueValue: i9 falseValue: i11  <|@  <|@
tid ?168 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - i2 - - i12 j152 - i173 i160 - - 
=== Succesors ===
=== Usages ===
?165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - i2 - - i12 j152 - i173 i160 - -  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?168 
=== Succesors ===
=== Usages ===
?103 ?395 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?168  <|@  <|@
tid ?395 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: ?165 
values: - - - - - 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?165 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v290 
stateDuring: ?395 
=== Succesors ===
next: v372 
=== Usages ===
?103 v65 v297 v516 v75 v514 ?396 
=== Predecessor ===
v93 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v290 stateDuring: ?395 #next: v372  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 1
=== Inputs ===
outerFrameState: ?165 
values: - - - - - a102 
=== Succesors ===
=== Usages ===
v414 v296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?165 values: - - - - - a102  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
stamp: void
=== Inputs ===
value: a102 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a102  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
a102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v371 #falseSuccessor: v370  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4519564776797559646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4533945319451211467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a102 
index: - 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a102 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v516 
=== Succesors ===
next: v482 
=== Usages ===
v476 
=== Predecessor ===
v370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v516 #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v502 
y: v474 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v502 y: v474  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v481 #falseSuccessor: v445  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4533945319451211467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4534815063222751799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v440 v448 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v440 v448 #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a102 
index: - 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a102 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i12 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v514 
value: i493 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?103 guard: - address: v514 value: i493 stateAfter: - lastLocationAccess: - #next: v73  <|@  <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@2a873045
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>
=== Inputs ===
arguments: a102 i173 j152 i160 i2 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a102 i173 j152 i160 i2  <|@  <|@
tid ?396 <|@
d <@d|@=== Debug Properties ===
bci: 177
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1785
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - a102 - 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - a102 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
bci: 177
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.access$100
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v297 
stateDuring: ?396 
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v297 stateDuring: ?396 #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1786) [bci: 182]
stamp: void
=== Inputs ===
result: a102 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a102 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75043
stableDimension: 0
stamp: i32 [-75043] ⇊00000000fffedadd ⇈00000000fffedadd
stampKind: i32
value: int[-75043|0xfffffffffffedadd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?103 
actionAndReason: i416 
speculation: a403 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?103 actionAndReason: i416 speculation: a403  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4548315118213679906
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 24]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" "B33" 
    xhandlers
    flags 
    probability 4605945871160562080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 24]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: a503 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a503  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a501 
=== Succesors ===
=== Usages ===
a503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v511 
=== Succesors ===
next: v342 
=== Usages ===
v303 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v511 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid a302 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: n!# Lsun/misc/FloatingDecimal$1;
stampKind: n -
value: NarrowOop[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a503 
y: a302 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a503 y: a302  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
a503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v339 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605945871160562080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v209  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605946931547991794
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a237 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v206 
values: a130 a270 
=== Succesors ===
=== Usages ===
v512 ?208 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a130 a270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v207 v209 
=== Succesors ===
next: a504 
=== Usages ===
a237 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v207 v209 #next: a504  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a237 
index: - 
=== Succesors ===
=== Usages ===
a504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a237 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v512 
=== Succesors ===
next: v355 
=== Usages ===
a279 v281 v513 v515 
=== Predecessor ===
v206 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v512 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
value: a504 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a504  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 1
=== Inputs ===
outerFrameState: ?89 
values: - - a237 
=== Succesors ===
=== Usages ===
v432 v288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - - a237  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v281 
=== Succesors ===
trueSuccessor: v354 
falseSuccessor: v353 
=== Usages ===
=== Predecessor ===
a504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v281 #trueSuccessor: v354 #falseSuccessor: v353  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590881790265337229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
v354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    probability 4605169760347720256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a504 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v515 
=== Succesors ===
next: v490 
=== Usages ===
v475 
=== Predecessor ===
v353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v515 #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v505 
y: v474 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v505 y: v474  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v475 
=== Succesors ===
trueSuccessor: v489 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v475 #trueSuccessor: v489 #falseSuccessor: v460  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605169760347720256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 4605946931547991794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v455 v463 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v455 v463 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a504 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a504  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i494 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?208 
guard: - 
address: v513 
value: i285 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?208 guard: - address: v513 value: i285 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid a279 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a504 
=== Succesors ===
=== Usages ===
v289 ?397 v232 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a504  <|@  <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@431ef7c
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>
=== Inputs ===
arguments: a279 i172 j151 i159 i2 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a279 i172 j151 i159 i2  <|@  <|@
tid ?397 <|@
d <@d|@=== Debug Properties ===
bci: 177
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1785
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - a279 - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - a279 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
bci: 177
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.access$100
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v289 
stateDuring: ?397 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v289 stateDuring: ?397 #next: v232  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1786) [bci: 182]
stamp: void
=== Inputs ===
result: a279 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a279 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72483
stableDimension: 0
stamp: i32 [-72483] ⇊00000000fffee4dd ⇈00000000fffee4dd
stampKind: i32
value: int[-72483|0xfffffffffffee4dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?208 
actionAndReason: i434 
speculation: a403 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?208 actionAndReason: i434 speculation: a403  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid i426 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70419
stableDimension: 0
stamp: i32 [-70419] ⇊00000000fffeeced ⇈00000000fffeeced
stampKind: i32
value: int[-70419|0xfffffffffffeeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -66843
stableDimension: 0
stamp: i32 [-66843] ⇊00000000fffefae5 ⇈00000000fffefae5
stampKind: i32
value: int[-66843|0xfffffffffffefae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-70419 - -65035] ⇊00000000fffe00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v417 
values: i424 i426 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v417 values: i424 i426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v423 v425 
=== Succesors ===
next: v422 
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v423 v425 #next: v422  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?145 
actionAndReason: i420 
speculation: a403 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?145 actionAndReason: i420 speculation: a403  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a497 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a497  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@org.graalvm.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
result [r15|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
a497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a497 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: JavaThread::_threadObj:final
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: a! Ljava/lang/Thread;
=== Inputs ===
stateBefore: - 
guard: - 
address: v506 
=== Succesors ===
next: a498 
=== Usages ===
v507 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v506 #next: a498  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
result [v2|QWORD[.] + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a497 
index: - 
=== Succesors ===
=== Usages ===
a498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a497 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a498 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v507 
=== Succesors ===
next: v26 
=== Usages ===
a245 v298 v496 v508 
=== Predecessor ===
a497 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v507 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
result meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rawvalue: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 v476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$1;
stampKind: a -
value: Object[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 v271 ?89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 i494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 v432 v422 v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?168 v289 ?166 v297 ?145 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d1 <|@
result v0|DOUBLE <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: f64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 j4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 1]
stamp: i64
=== Inputs ===
value: d1 
=== Succesors ===
=== Usages ===
v28 v10 j14 j16 j495 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d1  <|@  <|@
f <@~|@floating>@ <|@
tid j5 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 6]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
stamp: void
=== Inputs ===
x: j4 
y: j5 
=== Succesors ===
=== Usages ===
i12 v322 i494 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4 y: j5  <|@  <|@
f <@~|@floating>@ <|@
tid j13 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 23]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j14 v28 j495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 30]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 33]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j4 
y: j15 
=== Succesors ===
=== Usages ===
j18 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4 y: j15  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[52|0x34] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 34]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
j18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j18 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 36]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j16 
y: i17 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 37]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j18 
=== Succesors ===
=== Usages ===
v21 v23 i156 i199 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j18  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 v23 i494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i9 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i19 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
stamp: void
trueSuccessorProbability: 0.1371868485109654
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
a498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v24 #falseSuccessor: v315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [xmm0|DOUBLE, rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b1d3276 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = VMOVQ v0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND (x: v5|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR v9|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1371868485109654 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594110697409208356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
stamp: void
=== Inputs ===
x: j4 
y: j13 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4 y: j13  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
stamp: void
trueSuccessorProbability: 0.999745287824758
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.999745287824758 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594109438449167940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 86]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v319 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v319 #falseSuccessor: v321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4594109438449167940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid a33 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 97]
rawvalue: FloatingDecimal.BinaryToASCIIBuffer@1898887381
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
stampKind: a -
value: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 100]
stamp: void
=== Inputs ===
result: a33 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a33 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
result int[-61715|0xffffffffffff0eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -61715
stableDimension: 0
stamp: i32 [-61715] ⇊00000000ffff0eed ⇈00000000ffff0eed
stampKind: i32
value: int[-61715|0xffffffffffff0eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61715|0xffffffffffff0eed]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4540281525087633138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
value: a498 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a498  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result int[-1011|0xfffffffffffffc0d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
rawvalue: -1011
stableDimension: 0
stamp: i32 [-1011] ⇊00000000fffffc0d ⇈00000000fffffc0d
stampKind: i32
value: int[-1011|0xfffffffffffffc0d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j495 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j4 
y: j13 
=== Succesors ===
=== Usages ===
i36 j40 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4 y: j13  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfLeadingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 103]
stamp: i32 [12 - 64] ⇈000000000000007f
=== Inputs ===
value: j495 
=== Succesors ===
=== Usages ===
i39 i43 i77 i202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: j495  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
stamp: i32 [-1075 - -1023] ⇊00000000fffff800
=== Inputs ===
x: i201 
y: i36 
=== Succesors ===
=== Usages ===
i172 i173 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i201 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result int[-11|0xfffffffffffffff5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
rawvalue: -11
stableDimension: 0
stamp: i32 [-11] ⇊00000000fffffff5 ⇈00000000fffffff5
stampKind: i32
value: int[-11|0xfffffffffffffff5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
stamp: i32 [1 - 53] ⇈000000000000003f
=== Inputs ===
x: i36 
y: i38 
=== Succesors ===
=== Usages ===
j40 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i36 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j40 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1774) [bci: 119]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j495 
y: i39 
=== Succesors ===
=== Usages ===
j151 j152 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j495 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 128]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 132]
stamp: i32 [0 - 52] ⇈000000000000003f
=== Inputs ===
x: i42 
y: i36 
=== Succesors ===
=== Usages ===
i159 i160 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i42 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v84 #falseSuccessor: v85  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = AND (x: v5|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LZCNT v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA [v14|DWORD - 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = SHL (x: v13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4468831778788311603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD, v20|DWORD, v16|DWORD] destination: B6 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4540281437127610186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
stamp: i32 [-52 - 0]
=== Inputs ===
x: i76 
y: i36 
=== Succesors ===
=== Usages ===
i156 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i76 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
v85 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v16|DWORD, v18|QWORD, v22|DWORD] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4605946749520349175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[2047|0x7ff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 42]
rawvalue: 2047
stableDimension: 0
stamp: i32 [2047] ⇊00000000000007ff ⇈00000000000007ff
stampKind: i32
value: int[2047|0x7ff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i20 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i19 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v317 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v317 #falseSuccessor: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 2047 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
result int[-61459|0xffffffffffff0fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -61459
stableDimension: 0
stamp: i32 [-61459] ⇊00000000ffff0fed ⇈00000000ffff0fed
stampKind: i32
value: int[-61459|0xffffffffffff0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61459|0xffffffffffff0fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i404 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-61715 - -61459] ⇊00000000ffff0eed ⇈00000000ffff0fed
valueDescription: i32
=== Inputs ===
merge: v400 
values: i402 i408 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v400 values: i402 i408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v401 v407 
=== Succesors ===
next: v406 
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v401 v407 #next: v406  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1750
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: d1 - i2 - - - - - - - - - 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: d1 - i2 - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i404 
speculation: a403 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i404 speculation: a403  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 0]
locals: v0|DOUBLE - v1|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605946749520349175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 138]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
value: a498 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a498  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result int[-1023|0xfffffffffffffc01] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i19 
y: i55 
=== Succesors ===
=== Usages ===
i172 i173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i55  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j4 
y: j13 
=== Succesors ===
=== Usages ===
j46 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4 y: j13  <|@  <|@
f <@~|@floating>@ <|@
tid j45 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 140]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j46 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 143]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j14 
y: j45 
=== Succesors ===
=== Usages ===
j151 j152 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j14 y: j45  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[53|0x35] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1779) [bci: 146]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i159 i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v193 #falseSuccessor: v194  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA [v11|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = AND (x: v5|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = OR (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4534805227121771698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD, int[53|0x35], v24|DWORD] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605946616958068681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[53|0x35], v24|DWORD, v27|QWORD, v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" "B13" 
    successors "B15" "B34" 
    xhandlers
    flags 
    probability 4605946931692710131
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i159 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v143 
values: i43 i47 
=== Succesors ===
=== Usages ===
v289 i160 ?145 ?166 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v143 values: i43 i47  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v143 
values: i202 i199 
=== Succesors ===
=== Usages ===
v289 i173 ?166 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v143 values: i202 i199  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v143 
values: j40 j46 
=== Succesors ===
=== Usages ===
v289 j152 ?145 ?166 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v143 values: j40 j46  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-52 - 2047]
valueDescription: i32
=== Inputs ===
merge: v143 
values: i77 i19 
=== Succesors ===
=== Usages ===
?145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v143 values: i77 i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v144 v146 
=== Succesors ===
next: a499 
=== Usages ===
i159 i172 j151 i156 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v144 v146 #next: a499  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
result [v3|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a498 
=== Succesors ===
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a499 <|@
result v32|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v508 
=== Succesors ===
next: i500 
=== Usages ===
a252 v509 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v508 #next: i500  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v10 
trueValue: i9 
falseValue: i11 
=== Succesors ===
=== Usages ===
?166 i285 ?145 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v10 trueValue: i9 falseValue: i11  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 150
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1781
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - i2 - - i494 j151 - i156 i159 - - 
=== Succesors ===
=== Usages ===
v422 i500 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - i2 - - i494 j151 - i156 i159 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
result [v32|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a499 
=== Succesors ===
=== Usages ===
i500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i500 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 8]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?145 
guard: - 
address: v509 
=== Succesors ===
next: v330 
=== Usages ===
i115 v260 
=== Predecessor ===
a499 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?145 guard: - address: v509 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i500 
y: i114 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i500 y: i114  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result int[-1401181199|0xffffffffac7babf1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal.access$400(ThreadLocal.java:74) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rawvalue: -1401181199
stableDimension: 0
stamp: i32 [-1401181199] ⇊00000000ac7babf1 ⇈00000000ac7babf1
stampKind: i32
value: int[-1401181199|0xffffffffac7babf1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 11]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: i32 [-2147483648 - 746302449] ⇈00000000ac7babf1
=== Inputs ===
x: i115 
y: i133 
=== Succesors ===
=== Usages ===
v510 v271 v260 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i115 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i134 
y: i500 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i134 y: i500  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v327 
falseSuccessor: v329 
=== Usages ===
=== Predecessor ===
i500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v327 #falseSuccessor: v329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|QWORD, v31|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v3|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v34|DWORD) condition: = <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - v1|DWORD - - v33|DWORD v30|QWORD - v31|DWORD v28|DWORD - - 
>@ <|@ instruction v35|DWORD = MOV [v32|DWORD[.] * 8 + 12] size: DWORD state [bci:150] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = DEC v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = AND v36|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B25" 
    xhandlers
    flags 
    probability 4605946931692710131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: a501 
=== Usages ===
a501 
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a501  <|@  <|@
f <@~|@floating>@ <|@
tid a252 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a499 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a499  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
result [v38|QWORD[.] + v37|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a252 
index: i134 
=== Succesors ===
=== Usages ===
a501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a252 index: i134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a501 <|@
result v39|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v327 
address: v510 
=== Succesors ===
next: v121 
=== Usages ===
a270 v301 v511 
=== Predecessor ===
v327 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v327 address: v510 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid a270 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a501 
=== Succesors ===
=== Usages ===
v271 a237 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a501  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
value: a501 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a501  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - i2 - - i494 j151 - i172 i159 - - 
=== Succesors ===
=== Usages ===
?163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - i2 - - i494 j151 - i172 i159 - -  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?166 
=== Succesors ===
=== Usages ===
?89 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166  <|@  <|@
f <@~|@floating>@ <|@
tid a245 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a498 
=== Succesors ===
=== Usages ===
v271 ?89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a498  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: a57 - a245 - - 
=== Succesors ===
=== Usages ===
?208 ?135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: a57 - a245 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.3646055437100213E-4
=== Inputs ===
condition: v301 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
a501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v301 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v38|QWORD[.] + v37|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD[.], y: v39|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B24" 
    xhandlers
    flags 
    probability 4548316303746290943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 34]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: a130 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a130  <|@  <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@47271e82
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a245 a57 i134 a270 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a245 a57 i134 a270  <|@  <|@
tid ?135 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?89 
values: - - 
=== Succesors ===
=== Usages ===
?394 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - -  <|@  <|@
tid ?394 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?135 
values: - - - - 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?135 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a130 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 38
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v271 
stateDuring: ?394 
=== Succesors ===
next: v97 
=== Usages ===
v91 a237 
=== Predecessor ===
v119 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v271 stateDuring: ?394 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
value: a130 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a130  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.364582267253437E-4
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
a130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v96 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v41|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v33|DWORD v30|QWORD - v29|DWORD v28|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD[.], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4490441170435821054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD, v28|DWORD, v29|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" "B17" "B12" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4534815063222751799
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j152 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v93 
values: j40 j151 j46 
=== Succesors ===
=== Usages ===
v297 ?168 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: j40 j151 j46  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v93 
values: i43 i159 i47 
=== Succesors ===
=== Usages ===
v297 ?168 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i43 i159 i47  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v93 
values: i202 i172 i199 
=== Succesors ===
=== Usages ===
v297 ?168 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i202 i172 i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 v200 
=== Succesors ===
next: a102 
=== Usages ===
j152 i160 i173 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 v200 #next: a102  <|@  <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@fc1c44
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a57 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a57  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v10 
trueValue: i9 
falseValue: i11 
=== Succesors ===
=== Usages ===
?168 i493 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v10 trueValue: i9 falseValue: i11  <|@  <|@
tid ?168 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - i2 - - i12 j152 - i173 i160 - - 
=== Succesors ===
=== Usages ===
?165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - i2 - - i12 j152 - i173 i160 - -  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?168 
=== Succesors ===
=== Usages ===
?103 ?395 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?168  <|@  <|@
tid ?395 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: ?165 
values: - - - - - 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?165 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v290 
stateDuring: ?395 
=== Succesors ===
next: v372 
=== Usages ===
?103 v65 v297 v516 v75 v514 ?396 
=== Predecessor ===
v93 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v290 stateDuring: ?395 #next: v372  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 1
=== Inputs ===
outerFrameState: ?165 
values: - - - - - a102 
=== Succesors ===
=== Usages ===
v414 v296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?165 values: - - - - - a102  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
stamp: void
=== Inputs ===
value: a102 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a102  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
a102 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v371 #falseSuccessor: v370  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD, v44|DWORD, v45|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v47|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v46|DWORD v43|QWORD - v45|DWORD v44|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4519564776797559646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4533945319451211467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
result [v48|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a102 
index: - 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a102 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v516 
=== Succesors ===
next: v482 
=== Usages ===
v476 
=== Predecessor ===
v370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v516 #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v502 
y: v474 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v502 y: v474  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v481 #falseSuccessor: v445  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v48|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4533945319451211467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4534815063222751799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v440 v448 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v440 v448 #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
result [v48|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a102 
index: - 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a102 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i12 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v514 
value: i493 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?103 guard: - address: v514 value: i493 stateAfter: - lastLocationAccess: - #next: v73  <|@  <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@2a873045
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>
=== Inputs ===
arguments: a102 i173 j152 i160 i2 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a102 i173 j152 i160 i2  <|@  <|@
tid ?396 <|@
d <@d|@=== Debug Properties ===
bci: 177
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1785
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - a102 - 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - a102 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
bci: 177
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.access$100
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v297 
stateDuring: ?396 
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v297 stateDuring: ?396 #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1786) [bci: 182]
stamp: void
=== Inputs ===
result: a102 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a102 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: v48|QWORD[.] 
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v46|DWORD v43|QWORD - v45|DWORD v44|DWORD - - 
>@ <|@ instruction MOVB (x: [v48|QWORD[.] + 24], y: v46|DWORD) size: BYTE state [bci:37, 3, 156] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - v48|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
result int[-75043|0xfffffffffffedadd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75043
stableDimension: 0
stamp: i32 [-75043] ⇊00000000fffedadd ⇈00000000fffedadd
stampKind: i32
value: int[-75043|0xfffffffffffedadd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?103 
actionAndReason: i416 
speculation: a403 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?103 actionAndReason: i416 speculation: a403  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -75043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: v48|QWORD[.] 
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v46|DWORD v43|QWORD - v45|DWORD v44|DWORD - - 
>@ <|@ instruction DEOPT info [bci:37, 3, 156] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4548315118213679906
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 24]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" "B33" 
    xhandlers
    flags 
    probability 4605945871160562080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 24]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: a503 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a503  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
result [v39|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a501 
=== Succesors ===
=== Usages ===
a503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a503 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v511 
=== Succesors ===
next: v342 
=== Usages ===
v303 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v511 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid a302 <|@
result NarrowOop[FloatingDecimal$1@1399508980] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: n!# Lsun/misc/FloatingDecimal$1;
stampKind: n -
value: NarrowOop[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a503 
y: a302 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a503 y: a302  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
a503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v339 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v39|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605945871160562080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v209  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605946931547991794
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a237 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v206 
values: a130 a270 
=== Succesors ===
=== Usages ===
v512 ?208 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a130 a270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v207 v209 
=== Succesors ===
next: a504 
=== Usages ===
a237 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v207 v209 #next: a504  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
result [v49|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a237 
index: - 
=== Succesors ===
=== Usages ===
a504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a237 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a504 <|@
result v50|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v512 
=== Succesors ===
next: v355 
=== Usages ===
a279 v281 v513 v515 
=== Predecessor ===
v206 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v512 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
value: a504 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a504  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 1
=== Inputs ===
outerFrameState: ?89 
values: - - a237 
=== Succesors ===
=== Usages ===
v432 v288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - - a237  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v281 
=== Succesors ===
trueSuccessor: v354 
falseSuccessor: v353 
=== Usages ===
=== Predecessor ===
a504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v281 #trueSuccessor: v354 #falseSuccessor: v353  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = MOV [v49|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v50|DWORD[.], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590881790265337229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
v354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    probability 4605169760347720256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
result [v50|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a504 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v515 
=== Succesors ===
next: v490 
=== Usages ===
v475 
=== Predecessor ===
v353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v515 #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v505 
y: v474 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v505 y: v474  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v475 
=== Succesors ===
trueSuccessor: v489 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v475 #trueSuccessor: v489 #falseSuccessor: v460  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v50|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605169760347720256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 4605946931547991794
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v455 v463 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v455 v463 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
result [v50|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a504 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a504  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i494 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?208 
guard: - 
address: v513 
value: i285 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?208 guard: - address: v513 value: i285 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid a279 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a504 
=== Succesors ===
=== Usages ===
v289 ?397 v232 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a504  <|@  <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@431ef7c
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>
=== Inputs ===
arguments: a279 i172 j151 i159 i2 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a279 i172 j151 i159 i2  <|@  <|@
tid ?397 <|@
d <@d|@=== Debug Properties ===
bci: 177
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1785
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - a279 - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - a279 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
bci: 177
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.access$100
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v289 
stateDuring: ?397 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v289 stateDuring: ?397 #next: v232  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1786) [bci: 182]
stamp: void
=== Inputs ===
result: a279 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a279 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: v49|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v41|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v33|DWORD v30|QWORD - v29|DWORD v28|DWORD - - 
>@ <|@ instruction MOVB (x: [v50|DWORD[.] * 8 + 24], y: v33|DWORD) size: BYTE state [bci:5, 16, 3, 156] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - v51|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
result int[-72483|0xfffffffffffee4dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72483
stableDimension: 0
stamp: i32 [-72483] ⇊00000000fffee4dd ⇈00000000fffee4dd
stampKind: i32
value: int[-72483|0xfffffffffffee4dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?208 
actionAndReason: i434 
speculation: a403 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?208 actionAndReason: i434 speculation: a403  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -72483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: v49|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v41|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v33|DWORD v30|QWORD - v29|DWORD v28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:5, 16, 3, 156] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid i426 <|@
result int[-70419|0xfffffffffffeeced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70419
stableDimension: 0
stamp: i32 [-70419] ⇊00000000fffeeced ⇈00000000fffeeced
stampKind: i32
value: int[-70419|0xfffffffffffeeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70419|0xfffffffffffeeced]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
result int[-66843|0xfffffffffffefae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -66843
stableDimension: 0
stamp: i32 [-66843] ⇊00000000fffefae5 ⇈00000000fffefae5
stampKind: i32
value: int[-66843|0xfffffffffffefae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-66843|0xfffffffffffefae5]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i420 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-70419 - -65035] ⇊00000000fffe00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v417 
values: i424 i426 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v417 values: i424 i426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v423 v425 
=== Succesors ===
next: v422 
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v423 v425 #next: v422  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?145 
actionAndReason: i420 
speculation: a403 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?145 actionAndReason: i420 speculation: a403  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - v1|DWORD - - v33|DWORD v30|QWORD - v31|DWORD v28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:150] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [xmm0|DOUBLE, rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b1d3276 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = VMOVQ v0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND (x: v5|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR v9|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1371868485109654 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4605946749520349175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 2047 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605946749520349175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA [v11|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = AND (x: v5|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = OR (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605946616958068681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[53|0x35], v24|DWORD, v27|QWORD, v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" "B13" 
    successors "B15" "B34" 
    xhandlers
    flags 
    probability 4605946931692710131
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|QWORD, v31|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v3|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v34|DWORD) condition: = <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - v1|DWORD - - v33|DWORD v30|QWORD - v31|DWORD v28|DWORD - - 
>@ <|@ instruction v35|DWORD = MOV [v32|DWORD[.] * 8 + 12] size: DWORD state [bci:150] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = DEC v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = AND v36|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B25" 
    xhandlers
    flags 
    probability 4605946931692710131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v38|QWORD[.] + v37|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD[.], y: v39|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" "B33" 
    xhandlers
    flags 
    probability 4605945871160562080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v39|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605945871160562080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605946931547991794
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = MOV [v49|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v50|DWORD[.], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    probability 4605169760347720256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v50|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605169760347720256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 4605946931547991794
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: v49|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v41|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v33|DWORD v30|QWORD - v29|DWORD v28|DWORD - - 
>@ <|@ instruction MOVB (x: [v50|DWORD[.] * 8 + 24], y: v33|DWORD) size: BYTE state [bci:5, 16, 3, 156] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - v51|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594110697409208356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.999745287824758 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594109438449167940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4594109438449167940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590881790265337229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B24" 
    xhandlers
    flags 
    probability 4548316303746290943
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v41|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v33|DWORD v30|QWORD - v29|DWORD v28|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|QWORD[.], y: v42|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4548315118213679906
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4540281525087633138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = AND (x: v5|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LZCNT v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v15|DWORD, ~y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA [v14|DWORD - 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = SHL (x: v13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4540281437127610186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v21|DWORD, ~y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v16|DWORD, v18|QWORD, v22|DWORD] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4534805227121771698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD, int[53|0x35], v24|DWORD] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" "B17" "B12" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4534815063222751799
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD, v44|DWORD, v45|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v47|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v46|DWORD v43|QWORD - v45|DWORD v44|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v48|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4533945319451211467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v48|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4533945319451211467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4534815063222751799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: v48|QWORD[.] 
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v46|DWORD v43|QWORD - v45|DWORD v44|DWORD - - 
>@ <|@ instruction MOVB (x: [v48|QWORD[.] + 24], y: v46|DWORD) size: BYTE state [bci:37, 3, 156] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - v48|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4519564776797559646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4490441170435821054
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD, v28|DWORD, v29|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4468831778788311603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD, v20|DWORD, v16|DWORD] destination: B6 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -72483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: v49|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v41|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v33|DWORD v30|QWORD - v29|DWORD v28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:5, 16, 3, 156] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70419|0xfffffffffffeeced]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - v1|DWORD - - v33|DWORD v30|QWORD - v31|DWORD v28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-66843|0xfffffffffffefae5]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -75043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: v48|QWORD[.] 
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - v1|DWORD - - v46|DWORD v43|QWORD - v45|DWORD v44|DWORD - - 
>@ <|@ instruction DEOPT info [bci:37, 3, 156] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61715|0xffffffffffff0eed]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 0]
locals: v0|DOUBLE - v1|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61459|0xffffffffffff0fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: dload_0       
     1: invokestatic  #11         // java.lang.Double.doubleToRawLongBits:(double)long
     4: lstore_3      
     5: lload_3       
     6: ldc2_w        #17         // -9223372036854775808
     9: land          
    10: lconst_0      
    11: lcmp          
    12: ifeq          19
    15: iconst_1      
    16: goto          20
    19: iconst_0      
    20: istore        5
    22: lload_3       
    23: ldc2_w        #19         // 4503599627370495
    26: land          
    27: lstore        6
    29: lload_3       
    30: ldc2_w        #21         // 9218868437227405312
    33: land          
    34: bipush        52
    36: lshr          
    37: l2i           
    38: istore        8
    40: iload         8
    42: sipush        2047
    45: if_icmpne     74
    48: lload         6
    50: lconst_0      
    51: lcmp          
    52: ifne          70
    55: iload         5
    57: ifeq          66
    60: getstatic     #12         // B2AC_NEGATIVE_INFINITY:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    63: goto          69
    66: getstatic     #13         // B2AC_POSITIVE_INFINITY:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    69: areturn       
    70: getstatic     #14         // B2AC_NOT_A_NUMBER:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    73: areturn       
    74: iload         8
    76: ifne          138
    79: lload         6
    81: lconst_0      
    82: lcmp          
    83: ifne          101
    86: iload         5
    88: ifeq          97
    91: getstatic     #15         // B2AC_NEGATIVE_ZERO:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    94: goto          100
    97: getstatic     #16         // B2AC_POSITIVE_ZERO:sun.misc.FloatingDecimal$BinaryToASCIIConverter
   100: areturn       
   101: lload         6
   103: invokestatic  #17         // java.lang.Long.numberOfLeadingZeros:(long)int
   106: istore        10
   108: iload         10
   110: bipush        11
   112: isub          
   113: istore        11
   115: lload         6
   117: iload         11
   119: lshl          
   120: lstore        6
   122: iconst_1      
   123: iload         11
   125: isub          
   126: istore        8
   128: bipush        64
   130: iload         10
   132: isub          
   133: istore        9
   135: goto          150
   138: lload         6
   140: ldc2_w        #29         // 4503599627370496
   143: lor           
   144: lstore        6
   146: bipush        53
   148: istore        9
   150: iinc          
   156: invokestatic  #18         // getBinaryToASCIIBuffer:()sun.misc.FloatingDecimal$BinaryToASCIIBuffer
   159: astore        10
   161: aload         10
   163: iload         5
   165: invokestatic  #19         // sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000:(sun.misc.FloatingDecimal$BinaryToASCIIBuffer, boolean)void
   168: aload         10
   170: iload         8
   172: lload         6
   174: iload         9
   176: iload_2       
   177: invokestatic  #20         // sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100:(sun.misc.FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)void
   180: aload         10
   182: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|DOUBLE, rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b1d3276 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr   12  <|@ instruction r9|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   14  <|@ instruction r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   18  <|@ instruction rax|QWORD = AND (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rax|QWORD = SHR rax|QWORD y: 52 size: QWORD <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.1371868485109654 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4605946749520349175
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction CMP rax|DWORD y: 2047 size: DWORD <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605946749520349175
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = LEA [rax|DWORD - 1023] size: DWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  142  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605946616958068681
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rbx|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" "B13" 
    successors "B15" "B34" 
    xhandlers
    flags 
    probability 4605946931692710131
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  172  <|@ instruction TEST (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rbp|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rdi|DWORD) condition: = <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [r8:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - rsi|DWORD - - rbp|DWORD rdx|QWORD - rax|DWORD rbx|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:150] <|@ <|@
      nr  180  <|@ instruction r13|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction r13|DWORD = AND r13|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr  184  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B25" 
    xhandlers
    flags 
    probability 4605946931692710131
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction r8|DWORD[.] = MOV [r8|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B26" "B33" 
    xhandlers
    flags 
    probability 4605945871160562080
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction CMP [r8|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605945871160562080
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605946931547991794
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction r8|DWORD[.] = MOV [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    probability 4605169760347720256
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605169760347720256
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 4605946931547991794
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [rdi:0, r8:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: rdi|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - r10|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - rsi|DWORD - - rbp|DWORD rdx|QWORD - rcx|DWORD rbx|DWORD - - 
>@ <|@ instruction MOVB (x: [r8|DWORD[.] * 8 + 24], y: rbp|DWORD) size: BYTE state [bci:5, 16, 3, 156] <|@ <|@
      nr  374  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r9|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - stack:96|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177] <|@ <|@
      nr  394  <|@ instruction rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594110697409208356
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.999745287824758 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594109438449167940
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction TEST (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4594109438449167940
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   44  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590881790265337229
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B24" 
    xhandlers
    flags 
    probability 4548316303746290943
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction stack:80|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r8|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - stack:96|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - stack:44|DWORD - - stack:68|DWORD stack:80|QWORD - stack:84|DWORD stack:88|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156] <|@ <|@
      nr  230  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4548315118213679906
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4540281525087633138
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction r11|QWORD = AND (x: stack:40|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|DWORD = LZCNT r11|QWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr   64  <|@ instruction r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD <|@ <|@
      nr   68  <|@ instruction r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction r9|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr   72  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4540281437127610186
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4534805227121771698
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:52|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" "B17" "B12" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4534815063222751799
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  250  <|@ instruction TEST (x: r10|QWORD, y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction r11|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r10|DWORD) condition: = <|@ <|@
      nr  256  <|@ instruction stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - stack:44|DWORD - - stack:100|DWORD stack:64|QWORD - stack:48|DWORD stack:52|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156] <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4533945319451211467
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4533945319451211467
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4534815063222751799
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: rax|QWORD[.] 
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - stack:44|DWORD - - r11|DWORD stack:64|QWORD - stack:48|DWORD stack:52|DWORD - - 
>@ <|@ instruction MOVB (x: [rax|QWORD[.] + 24], y: r11|DWORD) size: BYTE state [bci:37, 3, 156] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ st <@st|@reference-map: [stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177] <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4519564776797559646
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4490441170435821054
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction stack:48|DWORD = STACKMOVE (input: stack:84|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  238  <|@ instruction stack:52|DWORD = STACKMOVE (input: stack:88|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  240  <|@ instruction stack:64|QWORD = STACKMOVE stack:80|QWORD size: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4468831778788311603
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction stack:80|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 668] y: -72483 size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  412  <|@ st <@st|@reference-map: [rdi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: rdi|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - r10|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - stack:44|DWORD - - stack:68|DWORD stack:80|QWORD - rcx|DWORD stack:88|DWORD - - 
>@ <|@ instruction DEOPT info [bci:5, 16, 3, 156] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  418  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  436  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - stack:44|DWORD - - rbp|DWORD rdx|QWORD - rax|DWORD rbx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction r10|DWORD = MOVE input: int[-66843|0xfffffffffffefae5] <|@ <|@
      nr  426  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction MOV [r15|QWORD + 668] y: -75043 size: DWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: rax|QWORD[.] 
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - stack:44|DWORD - - r11|DWORD r8|QWORD - r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:37, 3, 156] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-61715|0xffffffffffff0eed] <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 0]
locals: xmm0|DOUBLE - rsi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: dload_0       
     1: invokestatic  #11         // java.lang.Double.doubleToRawLongBits:(double)long
     4: lstore_3      
     5: lload_3       
     6: ldc2_w        #17         // -9223372036854775808
     9: land          
    10: lconst_0      
    11: lcmp          
    12: ifeq          19
    15: iconst_1      
    16: goto          20
    19: iconst_0      
    20: istore        5
    22: lload_3       
    23: ldc2_w        #19         // 4503599627370495
    26: land          
    27: lstore        6
    29: lload_3       
    30: ldc2_w        #21         // 9218868437227405312
    33: land          
    34: bipush        52
    36: lshr          
    37: l2i           
    38: istore        8
    40: iload         8
    42: sipush        2047
    45: if_icmpne     74
    48: lload         6
    50: lconst_0      
    51: lcmp          
    52: ifne          70
    55: iload         5
    57: ifeq          66
    60: getstatic     #12         // B2AC_NEGATIVE_INFINITY:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    63: goto          69
    66: getstatic     #13         // B2AC_POSITIVE_INFINITY:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    69: areturn       
    70: getstatic     #14         // B2AC_NOT_A_NUMBER:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    73: areturn       
    74: iload         8
    76: ifne          138
    79: lload         6
    81: lconst_0      
    82: lcmp          
    83: ifne          101
    86: iload         5
    88: ifeq          97
    91: getstatic     #15         // B2AC_NEGATIVE_ZERO:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    94: goto          100
    97: getstatic     #16         // B2AC_POSITIVE_ZERO:sun.misc.FloatingDecimal$BinaryToASCIIConverter
   100: areturn       
   101: lload         6
   103: invokestatic  #17         // java.lang.Long.numberOfLeadingZeros:(long)int
   106: istore        10
   108: iload         10
   110: bipush        11
   112: isub          
   113: istore        11
   115: lload         6
   117: iload         11
   119: lshl          
   120: lstore        6
   122: iconst_1      
   123: iload         11
   125: isub          
   126: istore        8
   128: bipush        64
   130: iload         10
   132: isub          
   133: istore        9
   135: goto          150
   138: lload         6
   140: ldc2_w        #29         // 4503599627370496
   143: lor           
   144: lstore        6
   146: bipush        53
   148: istore        9
   150: iinc          
   156: invokestatic  #18         // getBinaryToASCIIBuffer:()sun.misc.FloatingDecimal$BinaryToASCIIBuffer
   159: astore        10
   161: aload         10
   163: iload         5
   165: invokestatic  #19         // sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000:(sun.misc.FloatingDecimal$BinaryToASCIIBuffer, boolean)void
   168: aload         10
   170: iload         8
   172: lload         6
   174: iload         9
   176: iload_2       
   177: invokestatic  #20         // sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100:(sun.misc.FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)void
   180: aload         10
   182: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|DOUBLE, rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b1d3276 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr   12  <|@ instruction r9|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   14  <|@ instruction r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   16  <|@ instruction rax|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   18  <|@ instruction rax|QWORD = AND (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rax|QWORD = SHR rax|QWORD y: 52 size: QWORD <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.1371868485109654 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4605946749520349175
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction CMP rax|DWORD y: 2047 size: DWORD <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605946749520349175
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = LEA [rax|DWORD - 1023] size: DWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  142  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605946616958068681
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rbx|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" "B13" 
    successors "B15" "B34" 
    xhandlers
    flags 
    probability 4605946931692710131
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  172  <|@ instruction TEST (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  176  <|@ instruction rbp|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rdi|DWORD) condition: = <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [r8:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - rsi|DWORD - - rbp|DWORD rdx|QWORD - rax|DWORD rbx|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:150] <|@ <|@
      nr  180  <|@ instruction r13|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction r13|DWORD = AND r13|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr  184  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B25" 
    xhandlers
    flags 
    probability 4605946931692710131
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction r8|DWORD[.] = MOV [r8|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4605945871160562080
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction CMP [r8|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B31" "B29" 
    xhandlers
    flags 
    probability 4605946931547991794
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction r8|DWORD[.] = MOV [rdi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B31 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605169760347720256
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B31 falseDestination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 4605946931547991794
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [rdi:0, r8:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: rdi|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - r10|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - rsi|DWORD - - rbp|DWORD rdx|QWORD - rcx|DWORD rbx|DWORD - - 
>@ <|@ instruction MOVB (x: [r8|DWORD[.] * 8 + 24], y: rbp|DWORD) size: BYTE state [bci:5, 16, 3, 156] <|@ <|@
      nr  374  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r9|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - stack:96|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177] <|@ <|@
      nr  394  <|@ instruction rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594110697409208356
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.999745287824758 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594109438449167940
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction TEST (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4594109438449167940
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   44  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B24" 
    xhandlers
    flags 
    probability 4548316303746290943
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction stack:80|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r8|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - stack:96|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - stack:44|DWORD - - stack:68|DWORD stack:80|QWORD - stack:84|DWORD stack:88|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156] <|@ <|@
      nr  230  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4548315118213679906
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4540281525087633138
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction r11|QWORD = AND (x: stack:40|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|DWORD = LZCNT r11|QWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr   64  <|@ instruction r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD <|@ <|@
      nr   68  <|@ instruction r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction r9|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr   72  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4540281437127610186
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4534805227121771698
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:52|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" "B17" "B12" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4534815063222751799
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  250  <|@ instruction TEST (x: r10|QWORD, y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction r11|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r10|DWORD) condition: = <|@ <|@
      nr  256  <|@ instruction stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - stack:44|DWORD - - stack:100|DWORD stack:64|QWORD - stack:48|DWORD stack:52|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156] <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4533945319451211467
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B22 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors 
    xhandlers
    flags 
    probability 4534815063222751799
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: rax|QWORD[.] 
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - stack:44|DWORD - - r11|DWORD stack:64|QWORD - stack:48|DWORD stack:52|DWORD - - 
>@ <|@ instruction MOVB (x: [rax|QWORD[.] + 24], y: r11|DWORD) size: BYTE state [bci:37, 3, 156] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ st <@st|@reference-map: [stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - stack:40|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177] <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4490441170435821054
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction [stack:48|DWORD, stack:52|DWORD] = MULTISTACKMOVE (inputs: [stack:84|DWORD, stack:88|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  240  <|@ instruction stack:64|QWORD = STACKMOVE stack:80|QWORD size: QWORD <|@ <|@
      nr  242  <|@ instruction r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4468831778788311603
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction stack:80|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 668] y: -72483 size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  412  <|@ st <@st|@reference-map: [rdi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: rdi|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - r10|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - stack:44|DWORD - - stack:68|DWORD stack:80|QWORD - rcx|DWORD stack:88|DWORD - - 
>@ <|@ instruction DEOPT info [bci:5, 16, 3, 156] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  426  <|@ instruction stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  436  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - stack:44|DWORD - - rbp|DWORD rdx|QWORD - rax|DWORD rbx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:150] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction r10|DWORD = MOVE input: int[-66843|0xfffffffffffefae5] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction MOV [r15|QWORD + 668] y: -75043 size: DWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: rax|QWORD[.] 
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - stack:44|DWORD - - r11|DWORD r8|QWORD - r9|DWORD r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:37, 3, 156] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE input: int[-61715|0xffffffffffff0eed] <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 0]
locals: xmm0|DOUBLE - rsi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed] <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: dload_0       
     1: invokestatic  #11         // java.lang.Double.doubleToRawLongBits:(double)long
     4: lstore_3      
     5: lload_3       
     6: ldc2_w        #17         // -9223372036854775808
     9: land          
    10: lconst_0      
    11: lcmp          
    12: ifeq          19
    15: iconst_1      
    16: goto          20
    19: iconst_0      
    20: istore        5
    22: lload_3       
    23: ldc2_w        #19         // 4503599627370495
    26: land          
    27: lstore        6
    29: lload_3       
    30: ldc2_w        #21         // 9218868437227405312
    33: land          
    34: bipush        52
    36: lshr          
    37: l2i           
    38: istore        8
    40: iload         8
    42: sipush        2047
    45: if_icmpne     74
    48: lload         6
    50: lconst_0      
    51: lcmp          
    52: ifne          70
    55: iload         5
    57: ifeq          66
    60: getstatic     #12         // B2AC_NEGATIVE_INFINITY:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    63: goto          69
    66: getstatic     #13         // B2AC_POSITIVE_INFINITY:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    69: areturn       
    70: getstatic     #14         // B2AC_NOT_A_NUMBER:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    73: areturn       
    74: iload         8
    76: ifne          138
    79: lload         6
    81: lconst_0      
    82: lcmp          
    83: ifne          101
    86: iload         5
    88: ifeq          97
    91: getstatic     #15         // B2AC_NEGATIVE_ZERO:sun.misc.FloatingDecimal$BinaryToASCIIConverter
    94: goto          100
    97: getstatic     #16         // B2AC_POSITIVE_ZERO:sun.misc.FloatingDecimal$BinaryToASCIIConverter
   100: areturn       
   101: lload         6
   103: invokestatic  #17         // java.lang.Long.numberOfLeadingZeros:(long)int
   106: istore        10
   108: iload         10
   110: bipush        11
   112: isub          
   113: istore        11
   115: lload         6
   117: iload         11
   119: lshl          
   120: lstore        6
   122: iconst_1      
   123: iload         11
   125: isub          
   126: istore        8
   128: bipush        64
   130: iload         10
   132: isub          
   133: istore        9
   135: goto          150
   138: lload         6
   140: ldc2_w        #29         // 4503599627370496
   143: lor           
   144: lstore        6
   146: bipush        53
   148: istore        9
   150: iinc          
   156: invokestatic  #18         // getBinaryToASCIIBuffer:()sun.misc.FloatingDecimal$BinaryToASCIIBuffer
   159: astore        10
   161: aload         10
   163: iload         5
   165: invokestatic  #19         // sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000:(sun.misc.FloatingDecimal$BinaryToASCIIBuffer, boolean)void
   168: aload         10
   170: iload         8
   172: lload         6
   174: iload         9
   176: iload_2       
   177: invokestatic  #20         // sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100:(sun.misc.FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)void
   180: aload         10
   182: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec6848896c2460498b87d0010000448b5050c4c1f97ec349b9000000000000008049b8ffffffffffff0f0048b8000000000000f07f4923c348c1e8348bc085c00f84fe00000081f8ff0700000f84780300008d8801fcffff498bd34923d049b80000000000001000490bd04585d20f84ce010000bb35000000468b04d5140000004d85cbbf00000000bd010000000f44ef428b3cc50c000000448bef41ffcd4181e5f1ab7bac413bfd0f86cd02000049c1e003478b44a810418bf848c1e70349c1e2034585c00f84a700000042813cc50c000000addeadde0f8580020000448b471c4585c00f841200000042813cc508000000addeadde0f853802000042882cc51800000049c1e003448bde498bf04c8bca8bd1498bc94c89442410448bc3458bcb0f1f4000e80000000090488b442410488b6c24604883c468850500000000c5f877c34d85c30f85920000004d85cb0f855a02000048b8addeaddeaddeadde488b6c24604883c468850500000000c5f877c3896c242c4889542420894c241c895c24184c895c24488974244449b8addeaddeaddeadde498bf2498bd0418bcd4c8bc74c89542410660f1f440000e800000000904885c00f8427010000488bf84c8b5424108b6c242c488b5424208b4c241c8b5c24188b742444e9fffeffff4c895c2448897424444c8b5c24484d23d8f3490fbdf3b90dfcffff448bc1442bc68d4ef549d3e341b940000000442bce4585d20f84ff000000b90c0000002bce8bc1498bd3418bc8418bd949b900000000000000804c8b5c24488b742444e937feffff894c2440c744243c3500000048895424304d8bd14c895c24488974244448beaddeaddeaddeadde4c8554244841ba0000000041bb01000000450f44da44895c240c666690e800000000904885c00f840d000000817808addeadde0f85e2000000448b5c240c44885818488bf08b542440488b4c2430448b44243c448b4c24444889442448e80000000090488b442448488b6c24604883c468850500000000c5f877c348894424508b44241c894424408b4424188944243c488b44245048ff742420488f44243049ba0000000000000080e948ffffff448944244044894c243c4c895c243049ba0000000000000080e92affffff896c242c4889542420895c24188974244441c7879c020000dde4feff4d89a7a8020000e8000000009041baedecfeff897424444589979c0200004d89a7a8020000e8000000009041bae5fafeffebe0448b5c240c448b4c2440448b54243c4c8b44243041c7879c020000dddafeff4d89a7a8020000e8000000009041baed0effff4589979c0200004d89a7a8020000e8000000009041baed0fffffebe4e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [xmm0|DOUBLE, rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b1d3276 slotKind: QWORD  <||@
  Comment 16 6 rax|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD  <||@
  Comment 23 8 r10|DWORD[.] = MOV [rax|QWORD[.] + 80] size: DWORD  <||@
  Comment 27 10 r11|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 32 12 r9|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 42 14 r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 52 16 rax|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 62 18 rax|QWORD = AND (x: r11|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 65 20 rax|QWORD = SHR rax|QWORD y: 52 size: QWORD  <||@
  Comment 69 22 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 71 24 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 73 26 BRANCH trueDestinationProbability: 0.1371868485109654 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 79 block B8 null  <||@
  Comment 79 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 114 CMP rax|DWORD y: 2047 size: DWORD  <||@
  Comment 85 116 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11  <||@
  Comment 91 block B11 null  <||@
  Comment 91 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 91 134 rcx|DWORD = LEA [rax|DWORD - 1023] size: DWORD  <||@
  Comment 97 136 rdx|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 103 138 r8|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 113 140 rdx|QWORD = OR (x: rdx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 116 142 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 119 144 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 125 block B13 null  <||@
  Comment 125 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 164 rbx|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 130 166 JUMP ~[] destination: B13 -> B14  <||@
  Comment 130 block B14 null  <||@
  Comment 130 168 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 130 170 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 138 172 TEST (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 141 174 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 146 176 rbp|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rdi|DWORD) condition: =  <||@
  Comment 154 178 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:150]  <||@
  Comment 154 [r8:0, r10:0]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2          |3  |4  |5          |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |rsi|DWORD  |-  |-  |rbp|DWORD  |rdx|QWORD  |-  |rax|DWORD  |rbx|DWORD  |-   |-    <||@
  Comment 154 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 162 180 r13|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 168 182 r13|DWORD = AND r13|DWORD y: -1401181199 size: DWORD  <||@
  Comment 175 184 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 178 186 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B34  <||@
  Comment 184 block B15 null  <||@
  Comment 184 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 190 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3  <||@
  Comment 188 192 r8|DWORD[.] = MOV [r8|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 193 194 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3  <||@
  Comment 200 196 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3  <||@
  Comment 204 198 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 207 200 BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B25  <||@
  Comment 213 block B25 null  <||@
  Comment 213 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 340 CMP [r8|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980]  <||@
  Comment 213 {NarrowOop[FloatingDecimal$1@1399508980]}  <||@
  Comment 225 342 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B33  <||@
  Comment 231 block B27 null  <||@
  Comment 231 348 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 231 350 r8|DWORD[.] = MOV [rdi|QWORD[.] + 28] size: DWORD  <||@
  Comment 235 352 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 238 354 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B31 falseDestination: B27 -> B29  <||@
  Comment 244 block B29 null  <||@
  Comment 244 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 362 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}  <||@
  Comment 244 {meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}}  <||@
  Comment 256 364 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B31 falseDestination: B29 -> B32  <||@
  Comment 262 block B31 null  <||@
  Comment 262 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 262 372 MOVB (x: [r8|DWORD[.] * 8 + 24], y: rbp|DWORD) size: BYTE state [bci:5, 16, 3, 156]  <||@
  Comment 262 [rdi:0, r8:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rdi|QWORD[.]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2             |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |r10|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2          |3  |4  |5          |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |rsi|DWORD  |-  |-  |rbp|DWORD  |rdx|QWORD  |-  |rcx|DWORD  |rbx|DWORD  |-   |-    <||@
  Comment 262 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 374 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3  <||@
  Comment 274 376 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 277 378 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 280 380 r9|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 283 382 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 285 384 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 288 386 stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 293 388 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 296 390 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 299 392 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177]  <||@
  Comment 299 8  <||@
  Comment 303 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>}  <||@
  Comment 308 [stack:16]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10                 |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |stack:96|QWORD[.]  |-    <||@
  Comment 309 394 rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 314 396 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 323 12  <||@
  Comment 333 block B1 null  <||@
  Comment 333 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 30 TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 336 32 BRANCH trueDestinationProbability: 0.999745287824758 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 342 block B2 null  <||@
  Comment 342 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 342 36 TEST (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 345 38 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 351 block B3 null  <||@
  Comment 351 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 42 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]  <||@
  Comment 351 {Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]}  <||@
  Comment 361 44 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 370 12  <||@
  Comment 380 block B16 null  <||@
  Comment 380 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 204 stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 384 206 stack:80|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 389 208 stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 393 210 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 397 212 stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 402 214 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 406 216 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 406 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 416 218 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 419 220 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 422 222 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 425 224 r8|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 428 226 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 433 228 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156]  <||@
  Comment 433 9  <||@
  Comment 439 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 444 [stack:16]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2                  |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |stack:96|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5               |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |stack:68|DWORD  |stack:80|QWORD  |-  |stack:84|DWORD  |stack:88|DWORD  |-   |-    <||@
  Comment 445 230 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 448 232 BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B24  <||@
  Comment 454 block B24 null  <||@
  Comment 454 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 454 322 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 457 324 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 462 326 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 466 328 rdx|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 471 330 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 475 332 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 479 334 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 483 336 JUMP ~[] destination: B24 -> B27  <||@
  Comment 488 block B5 null  <||@
  Comment 488 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 54 stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 493 56 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 497 58 r11|QWORD = AND (x: stack:40|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 505 60 rsi|DWORD = LZCNT r11|QWORD size: QWORD  <||@
  Comment 510 62 rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d]  <||@
  Comment 515 64 r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 521 66 rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD  <||@
  Comment 524 68 r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 527 70 r9|DWORD = MOVE input: int[64|0x40]  <||@
  Comment 533 72 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 536 74 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 539 76 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 545 block B7 null  <||@
  Comment 545 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 545 92 rcx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 550 94 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 552 96 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 554 98 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 557 100 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 560 102 rbx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 563 104 r9|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 573 106 r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 578 108 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 582 110 JUMP ~[] destination: B7 -> B14  <||@
  Comment 587 block B12 null  <||@
  Comment 587 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 587 148 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 591 150 stack:52|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 599 152 stack:64|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 604 154 r10|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 607 156 stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 612 158 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 616 160 JUMP ~[] destination: B12 -> B18  <||@
  Comment 616 block B18 null  <||@
  Comment 616 246 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 616 248 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 616 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 626 250 TEST (x: r10|QWORD, y: stack:40|QWORD) size: QWORD  <||@
  Comment 631 252 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 637 254 r11|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r10|DWORD) condition: =  <||@
  Comment 647 256 stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 652 258 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156]  <||@
  Comment 652 9  <||@
  Comment 655 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 660 []at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5                |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |stack:100|DWORD  |stack:64|QWORD  |-  |stack:48|DWORD  |stack:52|DWORD  |-   |-    <||@
  Comment 661 260 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 664 262 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B20  <||@
  Comment 670 block B20 null  <||@
  Comment 670 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 670 272 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}  <||@
  Comment 670 {meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}}  <||@
  Comment 677 274 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B22 falseDestination: B20 -> B23  <||@
  Comment 683 block B22 null  <||@
  Comment 683 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 683 266 r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 688 284 MOVB (x: [rax|QWORD[.] + 24], y: r11|DWORD) size: BYTE state [bci:37, 3, 156]  <||@
  Comment 688 [rax:0]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |-             |-  |-  |-  |- 
     stack:   |rax|QWORD[.]  |   |   |   |  
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5          |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |r11|DWORD  |stack:64|QWORD  |-  |stack:48|DWORD  |stack:52|DWORD  |-   |-    <||@
  Comment 688 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 692 286 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 695 288 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 699 290 rcx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 704 292 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 709 294 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 714 296 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 719 298 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177]  <||@
  Comment 719 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>}  <||@
  Comment 719 8  <||@
  Comment 724 [stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10                 |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |stack:40|QWORD[.]  |-    <||@
  Comment 725 300 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 730 302 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 739 12  <||@
  Comment 749 block B17 null  <||@
  Comment 749 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 -1 [stack:48|DWORD, stack:52|DWORD] = MULTISTACKMOVE (inputs: [stack:84|DWORD, stack:88|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 775 240 stack:64|QWORD = STACKMOVE stack:80|QWORD size: QWORD  <||@
  Comment 785 242 r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 795 244 JUMP ~[] destination: B17 -> B18  <||@
  Comment 800 block B6 null  <||@
  Comment 800 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 800 80 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 805 82 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 810 84 stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 815 86 r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 825 88 JUMP ~[] destination: B6 -> B18  <||@
  Comment 830 block B32 null  <||@
  Comment 830 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 830 400 stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 834 402 stack:80|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 839 404 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 843 406 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 847 408 MOV [r15|QWORD + 668] y: -72483 size: DWORD  <||@
  Comment 858 410 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 865 412 DEOPT info [bci:5, 16, 3, 156]  <||@
  Comment 865 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 870 [rdi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rdi|QWORD[.]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2             |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |r10|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5               |6               |7  |8          |9               |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |stack:68|DWORD  |stack:80|QWORD  |-  |rcx|DWORD  |stack:88|DWORD  |-   |-    <||@
  Comment 871 block B33 null  <||@
  Comment 871 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 871 416 r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced]  <||@
  Comment 877 420 JUMP ~[] destination: B33 -> B35  <||@
  Comment 877 block B35 null  <||@
  Comment 877 430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 877 426 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 881 432 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 888 434 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 895 436 DEOPT info [bci:150]  <||@
  Comment 895 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 900 []at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2               |3  |4  |5          |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |rbp|DWORD  |rdx|QWORD  |-  |rax|DWORD  |rbx|DWORD  |-   |-    <||@
  Comment 901 block B34 null  <||@
  Comment 901 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 424 r10|DWORD = MOVE input: int[-66843|0xfffffffffffefae5]  <||@
  Comment 907 428 JUMP ~[] destination: B34 -> B35  <||@
  Comment 909 block B23 null  <||@
  Comment 909 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 909 306 r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 914 308 r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 919 310 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 924 312 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 929 314 MOV [r15|QWORD + 668] y: -75043 size: DWORD  <||@
  Comment 940 316 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 947 318 DEOPT info [bci:37, 3, 156]  <||@
  Comment 947 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 952 [rax:0]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |-             |-  |-  |-  |- 
     stack:   |rax|QWORD[.]  |   |   |   |  
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5          |6         |7  |8         |9          |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |r11|DWORD  |r8|QWORD  |-  |r9|DWORD  |r10|DWORD  |-   |-    <||@
  Comment 953 block B4 null  <||@
  Comment 953 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 953 48 r10|DWORD = MOVE input: int[-61715|0xffffffffffff0eed]  <||@
  Comment 959 50 JUMP ~[] destination: B4 -> B10  <||@
  Comment 959 block B10 null  <||@
  Comment 959 124 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 959 126 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 966 128 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 973 130 DEOPT info [bci:0]  <||@
  Comment 973 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 978 []at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 0, duringCall: false, rethrow: false]
              |0            |1  |2          |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |xmm0|DOUBLE  |-  |rsi|DWORD  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 979 block B9 null  <||@
  Comment 979 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 979 120 r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed]  <||@
  Comment 985 122 JUMP ~[] destination: B9 -> B10  <||@
  Comment 987 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 987 4  <||@
  Comment 993 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 993 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9231[sun.misc.FloatingDecimal.getBinaryToASCIIConverter(double, boolean)]"
  method "HotSpotCompilation-9231[sun.misc.FloatingDecimal.getBinaryToASCIIConverter(double, boolean)]"
  date 1527005200858
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1079643a0 89842400c0feff4883ec6848896c2460498b87d0010000448b5050c4c1f97ec349b9000000000000008049b8ffffffffffff0f0048b8000000000000f07f4923c348c1e8348bc085c00f84fe00000081f8ff0700000f84780300008d8801fcffff498bd34923d049b80000000000001000490bd04585d20f84ce010000bb35000000468b04d5140000004d85cbbf00000000bd010000000f44ef428b3cc50c000000448bef41ffcd4181e5f1ab7bac413bfd0f86cd02000049c1e003478b44a810418bf848c1e70349c1e2034585c00f84a700000042813cc50c0000003c4c04d80f8580020000448b471c4585c00f841200000042813cc508000000f44501f80f853802000042882cc51800000049c1e003448bde498bf04c8bca8bd1498bc94c89442410448bc3458bcb0f1f4000e84c20eafe90488b442410488b6c24604883c46885051dabf2fcc5f877c34d85c30f85920000004d85cb0f855a02000048b8786222c006000000488b6c24604883c4688505eeaaf2fcc5f877c3896c242c4889542420894c241c895c24184c895c24488974244449b8e06122c006000000498bf2498bd0418bcd4c8bc74c89542410660f1f440000e8441beafe904885c00f8427010000488bf84c8b5424108b6c242c488b5424208b4c241c8b5c24188b742444e9fffeffff4c895c2448897424444c8b5c24484d23d8f3490fbdf3b90dfcffff448bc1442bc68d4ef549d3e341b940000000442bce4585d20f84ff000000b90c0000002bce8bc1498bd3418bc8418bd949b900000000000000804c8b5c24488b742444e937feffff894c2440c744243c3500000048895424304d8bd14c895c24488974244448bee06122c0060000004c8554244841ba0000000041bb01000000450f44da44895c240c666690e86c1aeafe904885c00f840d000000817808f44501f80f85e2000000448b5c240c44885818488bf08b542440488b4c2430448b44243c448b4c24444889442448e8ac1eeafe90488b442448488b6c24604883c46885057da9f2fcc5f877c348894424508b44241c894424408b4424188944243c488b44245048ff742420488f44243049ba0000000000000080e948ffffff448944244044894c243c4c895c243049ba0000000000000080e92affffff896c242c4889542420895c24188974244441c7879c020000dde4feff4d89a7a8020000e8f82eeafe9041baedecfeff897424444589979c0200004d89a7a8020000e8da2eeafe9041bae5fafeffebe0448b5c240c448b4c2440448b54243c4c8b44243041c7879c020000dddafeff4d89a7a8020000e8a62eeafe9041baed0effff4589979c0200004d89a7a8020000e88c2eeafe9041baed0fffffebe4e8a05e2eff90e87a2deafe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [xmm0|DOUBLE, rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7b1d3276 slotKind: QWORD  <||@
  Comment 16 6 rax|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD  <||@
  Comment 23 8 r10|DWORD[.] = MOV [rax|QWORD[.] + 80] size: DWORD  <||@
  Comment 27 10 r11|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 32 12 r9|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 42 14 r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 52 16 rax|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 62 18 rax|QWORD = AND (x: r11|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 65 20 rax|QWORD = SHR rax|QWORD y: 52 size: QWORD  <||@
  Comment 69 22 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 71 24 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 73 26 BRANCH trueDestinationProbability: 0.1371868485109654 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 79 block B8 null  <||@
  Comment 79 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 114 CMP rax|DWORD y: 2047 size: DWORD  <||@
  Comment 85 116 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11  <||@
  Comment 91 block B11 null  <||@
  Comment 91 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 91 134 rcx|DWORD = LEA [rax|DWORD - 1023] size: DWORD  <||@
  Comment 97 136 rdx|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 103 138 r8|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 113 140 rdx|QWORD = OR (x: rdx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 116 142 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 119 144 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 125 block B13 null  <||@
  Comment 125 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 164 rbx|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 130 166 JUMP ~[] destination: B13 -> B14  <||@
  Comment 130 block B14 null  <||@
  Comment 130 168 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 130 170 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 138 172 TEST (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 141 174 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 146 176 rbp|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rdi|DWORD) condition: =  <||@
  Comment 154 178 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:150]  <||@
  Comment 154 [r8:0, r10:0]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2          |3  |4  |5          |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |rsi|DWORD  |-  |-  |rbp|DWORD  |rdx|QWORD  |-  |rax|DWORD  |rbx|DWORD  |-   |-    <||@
  Comment 154 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 162 180 r13|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 168 182 r13|DWORD = AND r13|DWORD y: -1401181199 size: DWORD  <||@
  Comment 175 184 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 178 186 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B34  <||@
  Comment 184 block B15 null  <||@
  Comment 184 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 190 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3  <||@
  Comment 188 192 r8|DWORD[.] = MOV [r8|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 193 194 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3  <||@
  Comment 200 196 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3  <||@
  Comment 204 198 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 207 200 BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B25  <||@
  Comment 213 block B25 null  <||@
  Comment 213 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 340 CMP [r8|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980]  <||@
  Comment 213 {NarrowOop[FloatingDecimal$1@1399508980]}  <||@
  Comment 225 342 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B33  <||@
  Comment 231 block B27 null  <||@
  Comment 231 348 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 231 350 r8|DWORD[.] = MOV [rdi|QWORD[.] + 28] size: DWORD  <||@
  Comment 235 352 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 238 354 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B31 falseDestination: B27 -> B29  <||@
  Comment 244 block B29 null  <||@
  Comment 244 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 362 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}  <||@
  Comment 244 {meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}}  <||@
  Comment 256 364 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B31 falseDestination: B29 -> B32  <||@
  Comment 262 block B31 null  <||@
  Comment 262 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 262 372 MOVB (x: [r8|DWORD[.] * 8 + 24], y: rbp|DWORD) size: BYTE state [bci:5, 16, 3, 156]  <||@
  Comment 262 [rdi:0, r8:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rdi|QWORD[.]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2             |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |r10|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2          |3  |4  |5          |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |rsi|DWORD  |-  |-  |rbp|DWORD  |rdx|QWORD  |-  |rcx|DWORD  |rbx|DWORD  |-   |-    <||@
  Comment 262 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 374 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b630f6d encoding: base: 0 shift: 3  <||@
  Comment 274 376 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 277 378 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 280 380 r9|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 283 382 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 285 384 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 288 386 stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 293 388 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 296 390 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 299 392 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177]  <||@
  Comment 299 8  <||@
  Comment 303 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>}  <||@
  Comment 308 [stack:16]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10                 |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |stack:96|QWORD[.]  |-    <||@
  Comment 309 394 rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 314 396 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 323 12  <||@
  Comment 333 block B1 null  <||@
  Comment 333 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 30 TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 336 32 BRANCH trueDestinationProbability: 0.999745287824758 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 342 block B2 null  <||@
  Comment 342 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 342 36 TEST (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 345 38 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 351 block B3 null  <||@
  Comment 351 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 42 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]  <||@
  Comment 351 {Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]}  <||@
  Comment 361 44 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 370 12  <||@
  Comment 380 block B16 null  <||@
  Comment 380 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 204 stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 384 206 stack:80|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 389 208 stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 393 210 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 397 212 stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 402 214 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 406 216 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 406 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 416 218 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 419 220 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 422 222 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 425 224 r8|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 428 226 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 433 228 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156]  <||@
  Comment 433 9  <||@
  Comment 439 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 444 [stack:16]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2                  |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |stack:96|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5               |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |stack:68|DWORD  |stack:80|QWORD  |-  |stack:84|DWORD  |stack:88|DWORD  |-   |-    <||@
  Comment 445 230 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 448 232 BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B24  <||@
  Comment 454 block B24 null  <||@
  Comment 454 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 454 322 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 457 324 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 462 326 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 466 328 rdx|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 471 330 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 475 332 rbx|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 479 334 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 483 336 JUMP ~[] destination: B24 -> B27  <||@
  Comment 488 block B5 null  <||@
  Comment 488 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 54 stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 493 56 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 497 58 r11|QWORD = AND (x: stack:40|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 505 60 rsi|DWORD = LZCNT r11|QWORD size: QWORD  <||@
  Comment 510 62 rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d]  <||@
  Comment 515 64 r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 521 66 rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD  <||@
  Comment 524 68 r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 527 70 r9|DWORD = MOVE input: int[64|0x40]  <||@
  Comment 533 72 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 536 74 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 539 76 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 545 block B7 null  <||@
  Comment 545 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 545 92 rcx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 550 94 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 552 96 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 554 98 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 557 100 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 560 102 rbx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 563 104 r9|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 573 106 r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 578 108 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 582 110 JUMP ~[] destination: B7 -> B14  <||@
  Comment 587 block B12 null  <||@
  Comment 587 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 587 148 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 591 150 stack:52|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 599 152 stack:64|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 604 154 r10|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 607 156 stack:40|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 612 158 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 616 160 JUMP ~[] destination: B12 -> B18  <||@
  Comment 616 block B18 null  <||@
  Comment 616 246 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 616 248 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 616 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 626 250 TEST (x: r10|QWORD, y: stack:40|QWORD) size: QWORD  <||@
  Comment 631 252 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 637 254 r11|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: r10|DWORD) condition: =  <||@
  Comment 647 256 stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 652 258 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156]  <||@
  Comment 652 9  <||@
  Comment 655 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 660 []at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5                |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |stack:100|DWORD  |stack:64|QWORD  |-  |stack:48|DWORD  |stack:52|DWORD  |-   |-    <||@
  Comment 661 260 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 664 262 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B20  <||@
  Comment 670 block B20 null  <||@
  Comment 670 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 670 272 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}  <||@
  Comment 670 {meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}}  <||@
  Comment 677 274 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B22 falseDestination: B20 -> B23  <||@
  Comment 683 block B22 null  <||@
  Comment 683 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 683 266 r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 688 284 MOVB (x: [rax|QWORD[.] + 24], y: r11|DWORD) size: BYTE state [bci:37, 3, 156]  <||@
  Comment 688 [rax:0]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |-             |-  |-  |-  |- 
     stack:   |rax|QWORD[.]  |   |   |   |  
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5          |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |r11|DWORD  |stack:64|QWORD  |-  |stack:48|DWORD  |stack:52|DWORD  |-   |-    <||@
  Comment 688 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 692 286 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 695 288 rdx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 699 290 rcx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 704 292 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 709 294 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 714 296 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 719 298 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:177]  <||@
  Comment 719 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>}  <||@
  Comment 719 8  <||@
  Comment 724 [stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10                 |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |stack:40|QWORD[.]  |-    <||@
  Comment 725 300 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 730 302 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 739 12  <||@
  Comment 749 block B17 null  <||@
  Comment 749 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 -1 [stack:48|DWORD, stack:52|DWORD] = MULTISTACKMOVE (inputs: [stack:84|DWORD, stack:88|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 775 240 stack:64|QWORD = STACKMOVE stack:80|QWORD size: QWORD  <||@
  Comment 785 242 r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 795 244 JUMP ~[] destination: B17 -> B18  <||@
  Comment 800 block B6 null  <||@
  Comment 800 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 800 80 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 805 82 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 810 84 stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 815 86 r10|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 825 88 JUMP ~[] destination: B6 -> B18  <||@
  Comment 830 block B32 null  <||@
  Comment 830 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 830 400 stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 834 402 stack:80|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 839 404 stack:88|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 843 406 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 847 408 MOV [r15|QWORD + 668] y: -72483 size: DWORD  <||@
  Comment 858 410 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 865 412 DEOPT info [bci:5, 16, 3, 156]  <||@
  Comment 865 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 870 [rdi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rdi|QWORD[.]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2             |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |r10|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5               |6               |7  |8          |9               |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |stack:68|DWORD  |stack:80|QWORD  |-  |rcx|DWORD  |stack:88|DWORD  |-   |-    <||@
  Comment 871 block B33 null  <||@
  Comment 871 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 871 416 r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced]  <||@
  Comment 877 420 JUMP ~[] destination: B33 -> B35  <||@
  Comment 877 block B35 null  <||@
  Comment 877 430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 877 426 stack:44|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 881 432 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 888 434 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 895 436 DEOPT info [bci:150]  <||@
  Comment 895 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 900 []at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2               |3  |4  |5          |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |rbp|DWORD  |rdx|QWORD  |-  |rax|DWORD  |rbx|DWORD  |-   |-    <||@
  Comment 901 block B34 null  <||@
  Comment 901 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 424 r10|DWORD = MOVE input: int[-66843|0xfffffffffffefae5]  <||@
  Comment 907 428 JUMP ~[] destination: B34 -> B35  <||@
  Comment 909 block B23 null  <||@
  Comment 909 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 909 306 r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 914 308 r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 919 310 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 924 312 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 929 314 MOV [r15|QWORD + 668] y: -75043 size: DWORD  <||@
  Comment 940 316 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 947 318 DEOPT info [bci:37, 3, 156]  <||@
  Comment 947 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 952 [rax:0]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |-             |-  |-  |-  |- 
     stack:   |rax|QWORD[.]  |   |   |   |  
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2               |3  |4  |5          |6         |7  |8         |9          |10  |11 
     locals:  |-  |-  |stack:44|DWORD  |-  |-  |r11|DWORD  |r8|QWORD  |-  |r9|DWORD  |r10|DWORD  |-   |-    <||@
  Comment 953 block B4 null  <||@
  Comment 953 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 953 48 r10|DWORD = MOVE input: int[-61715|0xffffffffffff0eed]  <||@
  Comment 959 50 JUMP ~[] destination: B4 -> B10  <||@
  Comment 959 block B10 null  <||@
  Comment 959 124 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 959 126 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 966 128 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 973 130 DEOPT info [bci:0]  <||@
  Comment 973 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 978 []at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 0, duringCall: false, rethrow: false]
              |0            |1  |2          |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |xmm0|DOUBLE  |-  |rsi|DWORD  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 979 block B9 null  <||@
  Comment 979 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 979 120 r10|DWORD = MOVE input: int[-61459|0xffffffffffff0fed]  <||@
  Comment 985 122 JUMP ~[] destination: B9 -> B10  <||@
  Comment 987 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 987 4  <||@
  Comment 993 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 993 5  <||@
  HexCodeFile>>> <|@
end_nmethod
