begin_compilation
  name " HotSpotCompilation-9284[java.util.ArrayDeque.calculateSize(int)]"
  method "HotSpotCompilation-9284[java.util.ArrayDeque.calculateSize(int)]"
  date 1527005203603
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v4 i9 i10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:123) [bci: 0]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4 i17 v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:126) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i3 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:126) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010619699934768427
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v5 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v5 #falseSuccessor: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4577275461994686665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:138) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:138) [bci: 53]
stamp: void
=== Inputs ===
result: i3 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i3 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607086765046679389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:127) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:128) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 i22 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:128) [bci: 13]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
x: i1 
y: i8 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:128) [bci: 14]
stamp: i32
=== Inputs ===
x: i1 
y: i9 
=== Succesors ===
=== Usages ===
i12 i13 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i1 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:129) [bci: 18]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:129) [bci: 19]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i10 
y: i11 
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i10 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:129) [bci: 20]
stamp: i32
=== Inputs ===
x: i10 
y: i12 
=== Succesors ===
=== Usages ===
i15 i16 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i10 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:130) [bci: 24]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:130) [bci: 25]
stamp: i32 [0 - 268435455] ⇈000000000fffffff
=== Inputs ===
x: i13 
y: i14 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i13 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:130) [bci: 26]
stamp: i32
=== Inputs ===
x: i13 
y: i15 
=== Succesors ===
=== Usages ===
i17 i18 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i13 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:131) [bci: 32]
stamp: i32 [0 - 16777215] ⇈0000000000ffffff
=== Inputs ===
x: i16 
y: i3 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i16 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:131) [bci: 33]
stamp: i32
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
i20 i21 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:132) [bci: 37]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:132) [bci: 39]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i18 
y: i19 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i18 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:132) [bci: 40]
stamp: i32
=== Inputs ===
x: i18 
y: i20 
=== Succesors ===
=== Usages ===
i22 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i18 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:133) [bci: 42]
stamp: i32
=== Inputs ===
x: i21 
y: i8 
=== Succesors ===
=== Usages ===
v24 v33 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i21 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i22 
y: i23 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i22 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v37 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v36  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayDeque.calculateSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 123
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 34
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607086765046679389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:138) [bci: 53]
stamp: void
=== Inputs ===
result: i22 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i22 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v4 i9 i10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:123) [bci: 0]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4 i17 v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:126) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i3 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:126) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010619699934768427
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v5 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v5 #falseSuccessor: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@546b5e2a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v0|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010619699934768427 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4577275461994686665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:138) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:138) [bci: 53]
stamp: void
=== Inputs ===
result: i3 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i3 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607086765046679389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:127) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:128) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 i22 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:128) [bci: 13]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
x: i1 
y: i8 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:128) [bci: 14]
stamp: i32
=== Inputs ===
x: i1 
y: i9 
=== Succesors ===
=== Usages ===
i12 i13 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i1 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:129) [bci: 18]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:129) [bci: 19]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i10 
y: i11 
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i10 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:129) [bci: 20]
stamp: i32
=== Inputs ===
x: i10 
y: i12 
=== Succesors ===
=== Usages ===
i15 i16 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i10 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:130) [bci: 24]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:130) [bci: 25]
stamp: i32 [0 - 268435455] ⇈000000000fffffff
=== Inputs ===
x: i13 
y: i14 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i13 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:130) [bci: 26]
stamp: i32
=== Inputs ===
x: i13 
y: i15 
=== Succesors ===
=== Usages ===
i17 i18 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i13 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:131) [bci: 32]
stamp: i32 [0 - 16777215] ⇈0000000000ffffff
=== Inputs ===
x: i16 
y: i3 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i16 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:131) [bci: 33]
stamp: i32
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
i20 i21 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:132) [bci: 37]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:132) [bci: 39]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i18 
y: i19 
=== Succesors ===
=== Usages ===
i21 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i18 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:132) [bci: 40]
stamp: i32
=== Inputs ===
x: i18 
y: i20 
=== Succesors ===
=== Usages ===
i22 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i18 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:133) [bci: 42]
stamp: i32
=== Inputs ===
x: i21 
y: i8 
=== Succesors ===
=== Usages ===
v24 v33 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i21 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i22 
y: i23 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i22 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v37 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = SHR v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = OR (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHR v2|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHR v4|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v6|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = OR (x: v6|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR v8|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = OR (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v36  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayDeque.calculateSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 123
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 34
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -8723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.calculateSize(ArrayDeque.java:123) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607086765046679389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:135) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.calculateSize(ArrayDeque.java:138) [bci: 53]
stamp: void
=== Inputs ===
result: i22 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i22 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@546b5e2a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v0|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010619699934768427 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607086765046679389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = SHR v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = OR (x: v0|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHR v2|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHR v4|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = OR (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v6|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = OR (x: v6|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR v8|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = OR (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607086765046679389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4577275461994686665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -8723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.calculateSize(ArrayDeque.java:123) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        8
     2: istore_1      
     3: iload_0       
     4: iload_1       
     5: if_icmplt     53
     8: iload_0       
     9: istore_1      
    10: iload_1       
    11: iload_1       
    12: iconst_1      
    13: iushr         
    14: ior           
    15: istore_1      
    16: iload_1       
    17: iload_1       
    18: iconst_2      
    19: iushr         
    20: ior           
    21: istore_1      
    22: iload_1       
    23: iload_1       
    24: iconst_4      
    25: iushr         
    26: ior           
    27: istore_1      
    28: iload_1       
    29: iload_1       
    30: bipush        8
    32: iushr         
    33: ior           
    34: istore_1      
    35: iload_1       
    36: iload_1       
    37: bipush        16
    39: iushr         
    40: ior           
    41: istore_1      
    42: iinc          
    45: iload_1       
    46: ifge          53
    49: iload_1       
    50: iconst_1      
    51: iushr         
    52: istore_1      
    53: iload_1       
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@546b5e2a slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMP rsi|DWORD y: 8 size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.010619699934768427 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607086765046679389
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD = SHR rsi|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction r10|DWORD = SHR rax|DWORD y: 2 size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD = SHR rax|DWORD y: 4 size: DWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = SHR rax|DWORD y: 8 size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607086765046679389
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4577275461994686665
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV [r15|QWORD + 668] y: -8723 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.ArrayDeque.calculateSize(ArrayDeque.java:123) [bci: 0]
locals: rsi|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        8
     2: istore_1      
     3: iload_0       
     4: iload_1       
     5: if_icmplt     53
     8: iload_0       
     9: istore_1      
    10: iload_1       
    11: iload_1       
    12: iconst_1      
    13: iushr         
    14: ior           
    15: istore_1      
    16: iload_1       
    17: iload_1       
    18: iconst_2      
    19: iushr         
    20: ior           
    21: istore_1      
    22: iload_1       
    23: iload_1       
    24: iconst_4      
    25: iushr         
    26: ior           
    27: istore_1      
    28: iload_1       
    29: iload_1       
    30: bipush        8
    32: iushr         
    33: ior           
    34: istore_1      
    35: iload_1       
    36: iload_1       
    37: bipush        16
    39: iushr         
    40: ior           
    41: istore_1      
    42: iinc          
    45: iload_1       
    46: ifge          53
    49: iload_1       
    50: iconst_1      
    51: iushr         
    52: istore_1      
    53: iload_1       
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@546b5e2a slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMP rsi|DWORD y: 8 size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.010619699934768427 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607086765046679389
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|DWORD = SHR rsi|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = OR (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction r10|DWORD = SHR rax|DWORD y: 2 size: DWORD <|@ <|@
      nr   20  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD = SHR rax|DWORD y: 4 size: DWORD <|@ <|@
      nr   24  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = SHR rax|DWORD y: 8 size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607086765046679389
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4577275461994686665
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV [r15|QWORD + 668] y: -8723 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.ArrayDeque.calculateSize(ArrayDeque.java:123) [bci: 0]
locals: rsi|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        8
     2: istore_1      
     3: iload_0       
     4: iload_1       
     5: if_icmplt     53
     8: iload_0       
     9: istore_1      
    10: iload_1       
    11: iload_1       
    12: iconst_1      
    13: iushr         
    14: ior           
    15: istore_1      
    16: iload_1       
    17: iload_1       
    18: iconst_2      
    19: iushr         
    20: ior           
    21: istore_1      
    22: iload_1       
    23: iload_1       
    24: iconst_4      
    25: iushr         
    26: ior           
    27: istore_1      
    28: iload_1       
    29: iload_1       
    30: bipush        8
    32: iushr         
    33: ior           
    34: istore_1      
    35: iload_1       
    36: iload_1       
    37: bipush        16
    39: iushr         
    40: ior           
    41: istore_1      
    42: iinc          
    45: iload_1       
    46: ifge          53
    49: iload_1       
    50: iconst_1      
    51: iushr         
    52: istore_1      
    53: iload_1       
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c241083fe080f8c4b0000008bc6d1e80bc6448bd041c1ea02410bc2448bd041c1ea04410bc2448bd041c1ea08410bc2448bd041c1ea10410bc2ffc085c00f8c2b000000488b6c24104883c418850500000000c5f877c3b808000000488b6c24104883c418850500000000c5f877c341c7879c020000edddffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@546b5e2a slotKind: QWORD  <||@
  Comment 16 8 CMP rsi|DWORD y: 8 size: DWORD  <||@
  Comment 19 10 BRANCH trueDestinationProbability: 0.010619699934768427 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 25 block B2 null  <||@
  Comment 25 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 25 14 rax|DWORD = SHR rsi|DWORD size: DWORD  <||@
  Comment 29 16 rax|DWORD = OR (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 31 18 r10|DWORD = SHR rax|DWORD y: 2 size: DWORD  <||@
  Comment 38 20 rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 41 22 r10|DWORD = SHR rax|DWORD y: 4 size: DWORD  <||@
  Comment 48 24 rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 51 26 r10|DWORD = SHR rax|DWORD y: 8 size: DWORD  <||@
  Comment 58 28 rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 61 30 r10|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 68 32 rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 71 34 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 73 36 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 75 38 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 81 block B4 null  <||@
  Comment 81 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 44 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 90 12  <||@
  Comment 100 block B1 null  <||@
  Comment 100 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 48 rax|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 105 50 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 114 12  <||@
  Comment 124 block B3 null  <||@
  Comment 124 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 54 MOV [r15|QWORD + 668] y: -8723 size: DWORD  <||@
  Comment 135 56 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 142 58 DEOPT info [bci:0]  <||@
  Comment 142 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 147 []at java.util.ArrayDeque.calculateSize(ArrayDeque.java:123) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |rsi|DWORD  |-   <||@
  Comment 148 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 148 4  <||@
  Comment 154 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 154 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9284[java.util.ArrayDeque.calculateSize(int)]"
  method "HotSpotCompilation-9284[java.util.ArrayDeque.calculateSize(int)]"
  date 1527005203657
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107a53d60 89842400c0feff4883ec1848896c241083fe080f8c4b0000008bc6d1e80bc6448bd041c1ea02410bc2448bd041c1ea04410bc2448bd041c1ea08410bc2448bd041c1ea10410bc2ffc085c00f8c2b000000488b6c24104883c418850546b2e3fcc5f877c3b808000000488b6c24104883c41885052eb2e3fcc5f877c341c7879c020000edddffff4d89a7a8020000e80b38dbfe90e827681fff90e80137dbfe90  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@546b5e2a slotKind: QWORD  <||@
  Comment 16 8 CMP rsi|DWORD y: 8 size: DWORD  <||@
  Comment 19 10 BRANCH trueDestinationProbability: 0.010619699934768427 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 25 block B2 null  <||@
  Comment 25 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 25 14 rax|DWORD = SHR rsi|DWORD size: DWORD  <||@
  Comment 29 16 rax|DWORD = OR (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 31 18 r10|DWORD = SHR rax|DWORD y: 2 size: DWORD  <||@
  Comment 38 20 rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 41 22 r10|DWORD = SHR rax|DWORD y: 4 size: DWORD  <||@
  Comment 48 24 rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 51 26 r10|DWORD = SHR rax|DWORD y: 8 size: DWORD  <||@
  Comment 58 28 rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 61 30 r10|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 68 32 rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 71 34 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 73 36 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 75 38 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 81 block B4 null  <||@
  Comment 81 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 44 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 90 12  <||@
  Comment 100 block B1 null  <||@
  Comment 100 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 48 rax|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 105 50 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 114 12  <||@
  Comment 124 block B3 null  <||@
  Comment 124 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 54 MOV [r15|QWORD + 668] y: -8723 size: DWORD  <||@
  Comment 135 56 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 142 58 DEOPT info [bci:0]  <||@
  Comment 142 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 147 []at java.util.ArrayDeque.calculateSize(ArrayDeque.java:123) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |rsi|DWORD  |-   <||@
  Comment 148 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 148 4  <||@
  Comment 154 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 154 5  <||@
  HexCodeFile>>> <|@
end_nmethod
