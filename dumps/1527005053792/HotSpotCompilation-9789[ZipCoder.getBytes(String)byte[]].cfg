begin_compilation
  name " HotSpotCompilation-9789[java.util.zip.ZipCoder.getBytes(String)]"
  method "HotSpotCompilation-9789[java.util.zip.ZipCoder.getBytes(String)]"
  date 1527005222592
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1639 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/zip/ZipCoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?61 ?64 ?71 ?84 v1558 v1553 v1565 ?48 ?48 ?553 ?553 j692 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?64 ?71 v1555 v1639 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ZipCoder.getBytes(String)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 77
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - 
=== Succesors ===
=== Usages ===
v639 v1639 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a1538 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a1538  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1538 v398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipCoder.enc
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:152) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: n# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1553 
=== Succesors ===
next: v44 
=== Usages ===
a223 v399 
=== Predecessor ===
v1639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1553 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:152) [bci: 4]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
value: a1538 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1538  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v696 v689 v1450 v1451 v1452 v1474 v1475 v1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?64 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ZipCoder.getBytes(String)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 77
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - 
=== Succesors ===
=== Usages ===
?48 ?61 ?553 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a636 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 v666 a654 v647 ?48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:152) [bci: 4]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
trueSuccessorProbability: 5.047591577732602E-4
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
a1538 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v42 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4557794804772723712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 7]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1539 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1539  <|@  <|@
f <@~|@floating>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipCoder.cs
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 9]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: n Ljava/nio/charset/Charset;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1565 
=== Succesors ===
next: v494 
=== Usages ===
a384 v385 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1565 #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
value: a1539 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1539  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
a1539 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v493 #falseSuccessor: v491  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid i641 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98827
stableDimension: 0
stamp: i32 [-98827] ⇊00000000fffe7df5 ⇈00000000fffe7df5
stampKind: i32
value: int[-98827|0xfffffffffffe7df5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i641 
speculation: a636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i641 speculation: a636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4557794804772723712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a47 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a47  <|@  <|@
f <@~|@floating>@ <|@
tid a384 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 9]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
op: Uncompress
stamp: a Ljava/nio/charset/Charset;
=== Inputs ===
value: a1539 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1539  <|@  <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
returnStamp: a# Lsun/nio/cs/UTF_8$Encoder;
signature: [Ljdk.vm.ci.meta.JavaType;@93dd348
stamp: void
targetMethod: HotSpotMethod<Charset.newEncoder()>
=== Inputs ===
arguments: a384 
=== Succesors ===
=== Usages ===
a47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a384  <|@  <|@
tid ?553 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ZipCoder.encoder()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 153
stackSize: 1
=== Inputs ===
outerFrameState: ?64 
values: a1 a1 
=== Succesors ===
=== Usages ===
a47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?64 values: a1 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a47 <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
polymorphic: false
stamp: a# Lsun/nio/cs/UTF_8$Encoder;
targetMethod: Direct#Charset.newEncoder
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v388 
stateDuring: ?553 
=== Succesors ===
next: v393 
=== Usages ===
a397 j683 v1566 v1567 a215 
=== Predecessor ===
v491 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v388 stateDuring: ?553 #next: v393  <|@  <|@
tid ?48 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ZipCoder.encoder()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 153
stackSize: 2
=== Inputs ===
outerFrameState: ?64 
values: a1 a1 a636 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?64 values: a1 a1 a636  <|@  <|@
f <@~|@floating>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a47 
index: - 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a47 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a415 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
rawvalue: CodingErrorAction@250144264
stableDimension: 0
stamp: n!# Ljava/nio/charset/CodingErrorAction;
stampKind: n -
value: NarrowOop[CodingErrorAction@250144264]
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 v396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: CharsetEncoder.malformedInputAction
nodeSourcePosition: at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?48 
guard: - 
address: v1566 
value: a415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j683 
=== Usages ===
=== Predecessor ===
a47 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?48 guard: - address: v1566 value: a415 stateAfter: - lastLocationAccess: - #next: j683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a47 
=== Succesors ===
next: v689 
=== Usages ===
j685 
=== Predecessor ===
v393 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a47 #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j685 j693 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j685 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j683 
y: i684 
=== Succesors ===
=== Usages ===
v1572 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j683 y: i684  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1572 v1573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: j688 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: j688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1572 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
j683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1572 value: i404 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a47 
index: - 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a47 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: CharsetEncoder.unmappableCharacterAction
nodeSourcePosition: at java.nio.charset.CharsetEncoder.onUnmappableCharacter(CharsetEncoder.java:428) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 24]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1567 
value: a415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1567 value: a415 stateAfter: - lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid a397 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
op: Compress
stamp: n# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
value: a47 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ZipCoder.enc
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1553 
value: a397 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j692 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1553 value: a397 stateAfter: - lastLocationAccess: - #next: j692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v696 
=== Usages ===
j693 
=== Predecessor ===
v398 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid j693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j692 
y: i684 
=== Succesors ===
=== Usages ===
v1573 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j692 y: i684  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j693 
index: j688 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j693 index: j688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1573 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
j692 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1573 value: i404 stateAfter: - lastLocationAccess: - #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607177872333707689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid a223 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:152) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
op: Uncompress
stamp: a# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
value: a1538 
=== Succesors ===
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1538  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
valueDescription: a -
=== Inputs ===
merge: v59 
values: a223 a47 
=== Succesors ===
=== Usages ===
?129 ?124 v1554 ?69 ?84 v1557 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v59 values: a223 a47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v58 v60 
=== Succesors ===
next: a1540 
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v58 v60 #next: a1540  <|@  <|@
f <@~|@floating>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1540 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1555 
=== Succesors ===
next: v1640 
=== Usages ===
a231 v1640 v1556 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1555 #next: v1640  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<ZipCoder.encoder()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 157
stackSize: 0
=== Inputs ===
outerFrameState: ?64 
values: a1 
=== Succesors ===
=== Usages ===
v647 v1640 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?64 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?61 
object: a1540 
=== Succesors ===
next: i1541 
=== Usages ===
=== Predecessor ===
a1540 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?61 object: a1540 #next: i1541  <|@  <|@
f <@~|@floating>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipCoder.isUTF8
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 39]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1558 
=== Succesors ===
next: v506 
=== Usages ===
i313 
=== Predecessor ===
v1640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1558 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 39]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1541 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1541  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:81) [bci: 32]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 v26 i91 v562 v226 v569 a725 i303 v477 a793 a845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i313 
y: i22 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i313 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 42]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v505 
falseSuccessor: v503 
=== Usages ===
=== Predecessor ===
i1541 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v505 #falseSuccessor: v503  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -80403
stableDimension: 0
stamp: i32 [-80403] ⇊00000000fffec5ed ⇈00000000fffec5ed
stampKind: i32
value: int[-80403|0xfffffffffffec5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?61 
actionAndReason: i649 
speculation: a636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?61 actionAndReason: i649 speculation: a636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a215 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.reset(CharsetEncoder.java:710) [bci: 6]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1554 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j704 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1554 value: i22 stateAfter: - lastLocationAccess: - #next: j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j704 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j748 
=== Usages ===
v1574 v1575 
=== Predecessor ===
v226 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j748  <|@  <|@
f <@~|@floating>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
j748 v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1574 
=== Succesors ===
next: j749 
=== Usages ===
j708 v1576 v1577 a724 v1582 v1578 v1579 v1580 v1581 
=== Predecessor ===
j704 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1574 #next: j749  <|@  <|@
f <@~|@floating>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
j749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1575 
=== Succesors ===
next: i1542 
=== Usages ===
v714 
=== Predecessor ===
j748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1575 #next: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1540 
=== Succesors ===
=== Usages ===
i1542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 4]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1556 
=== Succesors ===
next: v713 
=== Usages ===
a725 f14 v191 i418 v472 v477 v710 v469 j441 ?124 ?129 v130 i463 v751 i701 
=== Predecessor ===
j749 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1556 #next: v713  <|@  <|@
f <@~|@floating>@ <|@
tid i709 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v710 v778 v830 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1542 
y: i709 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1542 y: i709  <|@  <|@
f <@~|@floating>@ <|@
tid j700 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v752 v813 v865 v1031 j1378 j1250 j1310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 i117 i136 v1181 i701 v480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i733 i800 i852 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 i772 i824 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v710 
=== Succesors ===
trueSuccessor: v712 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
i1542 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v710 #trueSuccessor: v712 #falseSuccessor: v711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid i701 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1542 
y: i115 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1542 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i701 
y: i732 
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i701 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid i703 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i733 
y: i702 
=== Succesors ===
=== Usages ===
j707 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i733 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid j707 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i703 
=== Succesors ===
=== Usages ===
j708 v1578 v1579 v1580 v1581 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i703  <|@  <|@
f <@~|@floating>@ <|@
tid j708 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i64
=== Inputs ===
x: j707 
y: j748 
=== Succesors ===
=== Usages ===
v714 v750 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j707 y: j748  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j749 
y: j708 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j749 y: j708  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v714 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v714 #trueSuccessor: v719 #falseSuccessor: v718  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1574 
value: j708 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1574 value: j708 stateAfter: - lastLocationAccess: - #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j707 
index: j748 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
address: v1578 
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1578 #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j707 
index: j748 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
address: v1579 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1579 #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j707 
index: j748 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
address: v1580 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1580 #next: v746  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j707 
index: j748 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
address: v1581 
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1581 #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j748 
index: - 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j748 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1576 
value: i1542 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1576 value: i1542 stateAfter: - lastLocationAccess: - #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j748 
index: - 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j748 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1577 
value: j700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1577 value: j700 stateAfter: - lastLocationAccess: - #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j748 
index: - 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j748 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1582 
value: v876 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1582 value: v876 stateAfter: - lastLocationAccess: - #next: v723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a724 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j748 
=== Succesors ===
next: v726 
=== Usages ===
a729 
=== Predecessor ===
v723 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j748 #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
a724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v715 v717 
=== Succesors ===
next: a725 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v715 v717 #next: a725  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ZipCoder.getBytes(String)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 77
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - 
=== Succesors ===
=== Usages ===
?69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - -  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<CharsetEncoder.reset()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.reset(CharsetEncoder.java:710) [bci: 6]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 4]
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 711
stackSize: 0
=== Inputs ===
outerFrameState: ?71 
values: a215 
=== Succesors ===
=== Usages ===
a725 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?71 values: a215  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a725 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a725 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?69 
arguments: v699 i1542 i22 
=== Succesors ===
next: v728 
=== Usages ===
a729 
=== Predecessor ===
v716 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?69 arguments: v699 i1542 i22 #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
a725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v727 
values: a724 a725 
=== Succesors ===
=== Usages ===
v1570 a614 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v727 values: a724 a725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v726 v728 
=== Succesors ===
next: v1186 
=== Usages ===
a729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v726 v728 #next: v1186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v892 
=== Usages ===
j1188 
=== Predecessor ===
v727 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid j441 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1542 
=== Succesors ===
=== Usages ===
v448 v468 v770 j1239 j1222 j1228 j1232 j1236 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1542 
y: i22 
=== Succesors ===
=== Usages ===
v1519 v892 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1542 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j446 j465 j1239 j1292 j1363 j1419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1201 j1426 j1427 j1428 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1208 j1261 j1327 j1389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1232 j1289 j1360 j1416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1394 j1334 j1266 j1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1228 j1286 j1357 j1413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.maxBytesPerChar(CharsetEncoder.java:465) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 17]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1399 j1341 j1271 j1220 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1222 j1283 j1354 j1410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j557 v1350 j1335 j1342 v1406 j1209 j1215 v1223 j1400 j1267 j1272 v1279 j1395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v890 
falseSuccessor: v891 
=== Usages ===
=== Predecessor ===
v1186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v890 #falseSuccessor: v891  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v909  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a729 
index: - 
=== Succesors ===
=== Usages ===
j1188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1188 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1186 
address: v1570 
=== Succesors ===
=== Usages ===
v1604 v1605 v1606 v1607 v1608 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1186 address: v1570  <|@  <|@
f <@~|@floating>@ <|@
tid j1222 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-16 - 2147483631]
=== Inputs ===
x: j441 
y: j1221 
=== Succesors ===
=== Usages ===
v1223 v1225 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1222 
y: j554 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1222 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1223 
=== Succesors ===
trueSuccessor: v893 
falseSuccessor: v894 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1223 #trueSuccessor: v893 #falseSuccessor: v894  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v905  <|@  <|@
f <@*|@fixed>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v894 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B177" 
    successors "B19" "B177" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1215 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v897 
values: j554 j1220 
=== Succesors ===
=== Usages ===
v1608 j1220 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v897 values: j554 j1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v896 
=== Succesors ===
next: v1447 
=== Usages ===
j1215 v901 v902 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v896 #next: v1447  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1188 
index: j1215 
=== Succesors ===
=== Usages ===
v1447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1188 index: j1215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1608 
value: v1481 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1608 value: v1481 stateAfter: - lastLocationAccess: - #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid j1220 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1215 
y: j282 
=== Succesors ===
=== Usages ===
j1209 j1215 v1225 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1215 y: j282  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1222 
y: j1220 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1222 y: j1220  <|@  <|@
f <@*|@fixed>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1225 
=== Succesors ===
trueSuccessor: v901 
falseSuccessor: v903 
=== Usages ===
=== Predecessor ===
v1447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1225 #trueSuccessor: v901 #falseSuccessor: v903  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v897 
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v897 #next: v907  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1209 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v906 
values: j554 j1220 
=== Succesors ===
=== Usages ===
v1607 j1214 j1202 v1229 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v906 values: j554 j1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v905 v907 
=== Succesors ===
next: v929 
=== Usages ===
j1209 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v905 v907 #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid j1228 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j441 
y: j1227 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1228 
y: j1209 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1228 y: j1209  <|@  <|@
f <@*|@fixed>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1229 
=== Succesors ===
trueSuccessor: v928 
falseSuccessor: v927 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1229 #trueSuccessor: v928 #falseSuccessor: v927  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v928 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1446 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1188 
index: j1209 
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1188 index: j1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
value: v1485 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1607 value: v1485 stateAfter: - lastLocationAccess: - #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid j1214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1209 
y: j754 
=== Succesors ===
=== Usages ===
j1202 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1209 y: j754  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v1446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1202 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v917 
values: j1214 j1209 
=== Succesors ===
=== Usages ===
v1606 j1208 j1196 v1233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v917 values: j1214 j1209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v916 v932 
=== Succesors ===
next: v935 
=== Usages ===
j1202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v916 v932 #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid j1232 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j441 
y: j1231 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1232 
y: j1202 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1232 y: j1202  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1233 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v933 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1233 #trueSuccessor: v934 #falseSuccessor: v933  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1444 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1444  <|@  <|@
f <@~|@floating>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1188 
index: j1202 
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1188 index: j1202  <|@  <|@
f <@~|@floating>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1606 
value: v1484 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1606 value: v1484 stateAfter: - lastLocationAccess: - #next: v920  <|@  <|@
f <@~|@floating>@ <|@
tid j1208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1202 
y: j1207 
=== Succesors ===
=== Usages ===
j1196 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1202 y: j1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
v1444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1196 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v921 
values: j1208 j1202 
=== Succesors ===
=== Usages ===
v1605 j1201 j1189 v1237 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v921 values: j1208 j1202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v920 v938 
=== Succesors ===
next: v941 
=== Usages ===
j1196 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v920 v938 #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid j1235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j441 
y: j1235 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j1235  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1236 
y: j1196 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1236 y: j1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1237 
=== Succesors ===
trueSuccessor: v940 
falseSuccessor: v939 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1237 #trueSuccessor: v940 #falseSuccessor: v939  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v944 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v940 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1442 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1442  <|@  <|@
f <@~|@floating>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1188 
index: j1196 
=== Succesors ===
=== Usages ===
v1442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1188 index: j1196  <|@  <|@
f <@~|@floating>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1605 
value: v1483 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v923 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1605 value: v1483 stateAfter: - lastLocationAccess: - #next: v923  <|@  <|@
f <@~|@floating>@ <|@
tid j1201 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1196 
y: j1191 
=== Succesors ===
=== Usages ===
j1189 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1196 y: j1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v1442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1189 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v924 
values: j1201 j1196 
=== Succesors ===
=== Usages ===
v1604 v1240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v924 values: j1201 j1196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v923 v944 
=== Succesors ===
next: v947 
=== Usages ===
j1189 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v923 v944 #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid j1239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j441 
y: j445 
=== Succesors ===
=== Usages ===
v1240 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1239 
y: j1189 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1239 y: j1189  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1240 
=== Succesors ===
trueSuccessor: v946 
falseSuccessor: v945 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1240 #trueSuccessor: v946 #falseSuccessor: v945  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
v946 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1440 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1440  <|@  <|@
f <@~|@floating>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1188 
index: j1189 
=== Succesors ===
=== Usages ===
v1440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1188 index: j1189  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1604 
value: i1482 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v945 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1604 value: i1482 stateAfter: - lastLocationAccess: - #next: v926  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
v1440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v909 v926 v950 
=== Succesors ===
next: a614 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v909 v926 v950 #next: a614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a729 
=== Succesors ===
next: j764 
=== Usages ===
j768 ?82 ?129 v1559 v1561 ?124 
=== Predecessor ===
v910 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a729 #next: j764  <|@  <|@
f <@~|@floating>@ <|@
tid a231 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1540 
=== Succesors ===
=== Usages ===
j764 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i64
=== Inputs ===
object: a231 
=== Succesors ===
next: j768 
=== Usages ===
v1583 
=== Predecessor ===
a614 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a231 #next: j768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i64
=== Inputs ===
object: a614 
=== Succesors ===
next: v770 
=== Usages ===
v1584 
=== Predecessor ===
j764 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a614 #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j768 
index: - 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j768 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1583 v1584 j441 
=== Succesors ===
next: f1543 
=== Usages ===
=== Predecessor ===
j768 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1583 v1584 j441 #next: f1543  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a215 
index: - 
=== Succesors ===
=== Usages ===
f1543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f1543 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.maxBytesPerChar
nodeSourcePosition: at java.nio.charset.CharsetEncoder.maxBytesPerChar(CharsetEncoder.java:465) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 17]
nullCheck: false
stamp: f32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1557 
=== Succesors ===
next: v290 
=== Usages ===
f19 
=== Predecessor ===
v770 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1557 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid f14 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@75ad9794
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 15]
op: I2F
stamp: f32! [0.0 - 2.147483648E9]
=== Inputs ===
value: i1542 
=== Succesors ===
=== Usages ===
f19 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid f19 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 20]
stamp: f32
=== Inputs ===
x: f14 
y: f1543 
=== Succesors ===
=== Usages ===
v296 i285 v291 v291 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: f14 y: f1543  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.amd64.AMD64FloatConvertNode$$Lambda$199/890056911@5276be38
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
op: F2I
stamp: i32
=== Inputs ===
value: f19 
=== Succesors ===
=== Usages ===
v287 i303 i303 j556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64FloatConvert|@org.graalvm.compiler.replacements.amd64.AMD64FloatConvertNode>@ value: f19  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i285 
=== Succesors ===
=== Usages ===
j557 j557 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i285  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:64) [bci: 4]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
rawvalue: -2147483648
stableDimension: 0
stamp: i32 [-2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i32
value: int[-2147483648|0xffffffff80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:64) [bci: 6]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i286 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i285 y: i286  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:64) [bci: 17]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v288 
=== Usages ===
=== Predecessor ===
f1543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v289 #falseSuccessor: v288  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:65) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Float.isNaN(Float.java:463) [bci: 3]
at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:65) [bci: 21]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: f19 
y: f19 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: f19 y: f19  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:65) [bci: 24]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v291 
=== Succesors ===
trueSuccessor: v292 
falseSuccessor: v293 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v291 #trueSuccessor: v292 #falseSuccessor: v293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:68) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid f295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:68) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
rawvalue: 0.0
stableDimension: 0
stamp: f32! [0.0]
stampKind: f32
value: float[0.0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:68) [bci: 32]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: f295 
y: f19 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.FloatLessThanNode>@ x: f295 y: f19  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:68) [bci: 32]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v297 #falseSuccessor: v298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:70) [bci: 35]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i64 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i64
value: long[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j557 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:70) [bci: 35]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:73) [bci: 38]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:67) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:73) [bci: 38]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v288 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" "B38" "B36" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v301 
values: i22 i300 i285 i285 
=== Succesors ===
=== Usages ===
i418 j951 v23 i603 v191 v372 v344 v363 v569 v576 v812 v778 a793 v1181 i800 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: i22 i300 i285 i285  <|@  <|@
f <@~|@floating>@ <|@
tid j557 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v301 
values: j554 j555 j556 j556 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: j554 j555 j556 j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v302 v304 v305 v306 
=== Succesors ===
next: v1513 
=== Usages ===
i303 j557 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v302 v304 v305 v306 #next: v1513  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 14]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i1542 
=== Succesors ===
=== Usages ===
i418 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v191 
trueValue: i303 
falseValue: i1542 
=== Succesors ===
=== Usages ===
v480 v94 j444 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v191 trueValue: i303 falseValue: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i418 
=== Succesors ===
=== Usages ===
j446 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i418  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j444 
y: j445 
=== Succesors ===
=== Usages ===
v456 v448 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j444 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i418 
y: i115 
=== Succesors ===
=== Usages ===
v1529 v1513 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i418 y: i115  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ZipCoder.getBytes(String)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 78
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a215 - - - - - - 
=== Succesors ===
=== Usages ===
?82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a215 - - - - - -  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<String.toCharArray()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rethrowException: false
sourceFile: String.java
sourceLine: 2901
stackSize: 0
=== Inputs ===
outerFrameState: ?84 
values: - a614 
=== Succesors ===
=== Usages ===
v655 a793 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?84 values: - a614  <|@  <|@
f <@~|@floating>@ <|@
tid a658 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1415578595
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1415578595]
=== Inputs ===
=== Succesors ===
=== Usages ===
a654 a654 a654 a654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v1509 
falseSuccessor: v1512 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v1509 #falseSuccessor: v1512  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
v1513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
v1509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B175" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1521 
=== Usages ===
=== Predecessor ===
v1513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1521  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j446 
y: j441 
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j446 y: j441  <|@  <|@
f <@~|@floating>@ <|@
tid i657 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -80923
stableDimension: 0
stamp: i32 [-80923] ⇊00000000fffec3e5 ⇈00000000fffec3e5
stampKind: i32
value: int[-80923|0xfffffffffffec3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i653 i653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v448 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1517 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v448 #trueSuccessor: v1520 #falseSuccessor: v1517  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1519 
=== Usages ===
=== Predecessor ===
v1521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1519  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v1518 
falseSuccessor: v1510 
=== Usages ===
=== Predecessor ===
v1520 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v1518 #falseSuccessor: v1510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1637 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1637  <|@  <|@
f <@*|@fixed>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v1518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1508 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1508  <|@  <|@
f <@*|@fixed>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
v1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1507 v1508 
=== Succesors ===
next: v1529 
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1507 v1508 #next: v1529  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:81) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i22 
=== Succesors ===
=== Usages ===
v518 v1535 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i303 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v1525 
falseSuccessor: v1528 
=== Usages ===
=== Predecessor ===
v1506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v1525 #falseSuccessor: v1528  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1523 
=== Usages ===
=== Predecessor ===
v1529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1523  <|@  <|@
f <@*|@fixed>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1522 
=== Predecessor ===
v1525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B174" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1537 
=== Usages ===
=== Predecessor ===
v1529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1537  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j446 
y: j557 
=== Succesors ===
=== Usages ===
v1537 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j446 y: j557  <|@  <|@
f <@~|@floating>@ <|@
tid i660 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -83739
stableDimension: 0
stamp: i32 [-83739] ⇊00000000fffeb8e5 ⇈00000000fffeb8e5
stampKind: i32
value: int[-83739|0xfffffffffffeb8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i653 i653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v1536 
falseSuccessor: v1533 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v1536 #falseSuccessor: v1533  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1535 
=== Usages ===
=== Predecessor ===
v1537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1535  <|@  <|@
f <@*|@fixed>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v1534 
falseSuccessor: v1526 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v1534 #falseSuccessor: v1526  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1638 
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1638  <|@  <|@
f <@*|@fixed>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v1534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1524 
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1522 
=== Predecessor ===
v1526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1523 v1524 
=== Succesors ===
next: v518 
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1523 v1524 #next: v518  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:81) [bci: 32]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v517 #falseSuccessor: v515  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:81) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v651  <|@  <|@
f <@~|@floating>@ <|@
tid i652 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79379
stableDimension: 0
stamp: i32 [-79379] ⇊00000000fffec9ed ⇈00000000fffec9ed
stampKind: i32
value: int[-79379|0xfffffffffffec9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:81) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j773 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j773 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j809 
=== Usages ===
v1585 v1586 
=== Predecessor ===
v515 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j809  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j773 
index: - 
=== Succesors ===
=== Usages ===
j809 v811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j773 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j809 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
=== Succesors ===
next: j810 
=== Usages ===
j777 v1587 v1588 a792 v1593 v1589 v1590 v1591 v1592 
=== Predecessor ===
j773 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1585 #next: j810  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j773 
index: - 
=== Succesors ===
=== Usages ===
j810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j773 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1586 
=== Succesors ===
next: v781 
=== Usages ===
v782 
=== Predecessor ===
j809 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1586 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i709 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i709  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a793 a845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 v868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v778 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v779 
=== Usages ===
=== Predecessor ===
j810 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v778 #trueSuccessor: v780 #falseSuccessor: v779  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v788  <|@  <|@
f <@~|@floating>@ <|@
tid i800 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: i32
=== Inputs ===
x: i303 
y: i732 
=== Succesors ===
=== Usages ===
i772 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid i772 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i800 
y: i702 
=== Succesors ===
=== Usages ===
j776 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i800 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid j776 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i772 
=== Succesors ===
=== Usages ===
j777 v1589 v1590 v1591 v1592 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i772  <|@  <|@
f <@~|@floating>@ <|@
tid j777 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: i64
=== Inputs ===
x: j776 
y: j809 
=== Succesors ===
=== Usages ===
v782 v811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j776 y: j809  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j810 
y: j777 
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j810 y: j777  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v782 
=== Succesors ===
trueSuccessor: v787 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v782 #trueSuccessor: v787 #falseSuccessor: v786  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
value: j777 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1585 value: j777 stateAfter: - lastLocationAccess: - #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: j809 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
address: v1589 
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1589 #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: j809 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
address: v1590 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1590 #next: v806  <|@  <|@
f <@~|@floating>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: j809 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
address: v1591 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1591 #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: j809 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
address: v1592 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1592 #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1587 
value: i303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1587 value: i303 stateAfter: - lastLocationAccess: - #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1588 
value: j700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1588 value: j700 stateAfter: - lastLocationAccess: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1593 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1593 value: v877 stateAfter: - lastLocationAccess: - #next: v791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a792 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j809 
=== Succesors ===
next: v794 
=== Usages ===
a797 
=== Predecessor ===
v791 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j809 #next: v794  <|@  <|@
f <@*|@fixed>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
a792 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v783 v785 
=== Succesors ===
next: a793 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v783 v785 #next: a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a793 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?82 
arguments: v771 i303 i22 
=== Succesors ===
next: v796 
=== Usages ===
a797 
=== Predecessor ===
v784 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?82 arguments: v771 i303 i22 #next: v796  <|@  <|@
f <@*|@fixed>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
a793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v795 
values: a792 a793 
=== Succesors ===
=== Usages ===
v1571 a618 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v795 values: a792 a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v794 v796 
=== Succesors ===
next: v1243 
=== Usages ===
a797 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v794 v796 #next: v1243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v959 
=== Usages ===
j1245 
=== Predecessor ===
v795 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i115 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1454 v1477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1456 v1478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1458 v1479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1404 j1276 j1348 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1480 v1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32
stableDimension: 0
stamp: i64 [-32] ⇊ffffffffffffffe0 ⇈ffffffffffffffe0
stampKind: i64
value: long[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1278 j1349 j1405 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1181 
=== Succesors ===
trueSuccessor: v957 
falseSuccessor: v958 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1181 #trueSuccessor: v957 #falseSuccessor: v958  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v957 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v962 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v962  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a797 
index: - 
=== Succesors ===
=== Usages ===
j1245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a797 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1245 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1243 
address: v1571 
=== Succesors ===
=== Usages ===
v1609 v1610 v1611 v1612 v1613 v1614 v1615 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1243 address: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid j951 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
j1292 j1278 j1283 j1286 j1289 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i303  <|@  <|@
f <@~|@floating>@ <|@
tid j1278 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483615]
=== Inputs ===
x: j951 
y: j1277 
=== Succesors ===
=== Usages ===
v1279 v1281 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j951 y: j1277  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1278 
y: j554 
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1278 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1279 
=== Succesors ===
trueSuccessor: v960 
falseSuccessor: v961 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1279 #trueSuccessor: v960 #falseSuccessor: v961  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v971 
=== Usages ===
=== Predecessor ===
v962 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v971  <|@  <|@
f <@*|@fixed>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
v960 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
v962 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v963  <|@  <|@
f <@*|@fixed>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
v961 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B173" 
    successors "B65" "B173" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1272 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v964 
values: j554 j1276 
=== Succesors ===
=== Usages ===
v1615 j1276 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v964 values: j554 j1276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v963 
=== Succesors ===
next: v1459 
=== Usages ===
j1272 v967 v968 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v963 #next: v1459  <|@  <|@
f <@~|@floating>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1272 
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1615 
value: v1486 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1615 value: v1486 stateAfter: - lastLocationAccess: - #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid j1276 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1272 
y: j391 
=== Succesors ===
=== Usages ===
j1267 j1272 v1281 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1272 y: j391  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1278 
y: j1276 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1278 y: j1276  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1281 
=== Succesors ===
trueSuccessor: v967 
falseSuccessor: v969 
=== Usages ===
=== Predecessor ===
v1459 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1281 #trueSuccessor: v967 #falseSuccessor: v969  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v964 
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v964 #next: v973  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1267 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v972 
values: j554 j1276 
=== Succesors ===
=== Usages ===
v1614 j1271 j1262 v1284 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v972 values: j554 j1276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v971 v973 
=== Succesors ===
next: v994 
=== Usages ===
j1267 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v971 v973 #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid j1283 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j951 
y: j1221 
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j951 y: j1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1283 
y: j1267 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1283 y: j1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1284 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v992 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1284 #trueSuccessor: v993 #falseSuccessor: v992  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v997  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1458 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1458  <|@  <|@
f <@~|@floating>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1267 
=== Succesors ===
=== Usages ===
v1458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1614 
value: v1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1614 value: v1489 stateAfter: - lastLocationAccess: - #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid j1271 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1267 
y: j282 
=== Succesors ===
=== Usages ===
j1262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1267 y: j282  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v1458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1262 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v983 
values: j1271 j1267 
=== Succesors ===
=== Usages ===
v1613 j1266 j1257 v1287 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v983 values: j1271 j1267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v982 v997 
=== Succesors ===
next: v1000 
=== Usages ===
j1262 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v982 v997 #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid j1286 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j951 
y: j1227 
=== Succesors ===
=== Usages ===
v1287 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j951 y: j1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1286 
y: j1262 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1286 y: j1262  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1287 
=== Succesors ===
trueSuccessor: v999 
falseSuccessor: v998 
=== Usages ===
=== Predecessor ===
v983 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1287 #trueSuccessor: v999 #falseSuccessor: v998  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
v999 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1456 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1456  <|@  <|@
f <@~|@floating>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1262 
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1613 
value: v1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1613 value: v1488 stateAfter: - lastLocationAccess: - #next: v985  <|@  <|@
f <@~|@floating>@ <|@
tid j1266 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1262 
y: j754 
=== Succesors ===
=== Usages ===
j1257 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1262 y: j754  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
v1456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1257 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v986 
values: j1266 j1262 
=== Succesors ===
=== Usages ===
v1612 j1261 j1246 v1290 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v986 values: j1266 j1262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v985 v1003 
=== Succesors ===
next: v1006 
=== Usages ===
j1257 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v985 v1003 #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid j1289 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j951 
y: j1231 
=== Succesors ===
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j951 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1289 
y: j1257 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1289 y: j1257  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1290 
=== Succesors ===
trueSuccessor: v1005 
falseSuccessor: v1004 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1290 #trueSuccessor: v1005 #falseSuccessor: v1004  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
v1005 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1257 
=== Succesors ===
=== Usages ===
v1454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1612 
value: v1487 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1612 value: v1487 stateAfter: - lastLocationAccess: - #next: v988  <|@  <|@
f <@~|@floating>@ <|@
tid j1261 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1257 
y: j1207 
=== Succesors ===
=== Usages ===
j1246 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1257 y: j1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
v1454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1246 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v989 
values: j1261 j1257 
=== Succesors ===
=== Usages ===
v1609 j1250 v1293 j1426 v1610 v1611 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v989 values: j1261 j1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v988 v1009 
=== Succesors ===
next: v1012 
=== Usages ===
j1246 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v988 v1009 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid j1292 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j951 
y: j445 
=== Succesors ===
=== Usages ===
v1293 v1295 v1297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j951 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1292 
y: j1246 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1292 y: j1246  <|@  <|@
f <@*|@fixed>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1293 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1010 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1293 #trueSuccessor: v1011 #falseSuccessor: v1010  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v1011 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1450 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1246 
=== Succesors ===
=== Usages ===
v1450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1609 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1609 value: i404 stateAfter: - lastLocationAccess: - #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid j1250 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1246 
y: j700 
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1246 y: j700  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1292 
y: j1250 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1292 y: j1250  <|@  <|@
f <@*|@fixed>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1295 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1016 
=== Usages ===
=== Predecessor ===
v1450 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1295 #trueSuccessor: v1017 #falseSuccessor: v1016  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4591419820104220672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v1017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4598738169498697728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1451 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1451  <|@  <|@
f <@~|@floating>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1246 
=== Succesors ===
=== Usages ===
v1451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1610 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1610 value: i404 stateAfter: - lastLocationAccess: - #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid j1426 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1246 
y: j1191 
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1246 y: j1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1292 
y: j1426 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1292 y: j1426  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1297 
=== Succesors ===
trueSuccessor: v1023 
falseSuccessor: v1022 
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1297 #trueSuccessor: v1023 #falseSuccessor: v1022  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4589730970243956736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1027  <|@  <|@
f <@*|@fixed>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v1023 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4596767844661723136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1452 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1452  <|@  <|@
f <@~|@floating>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1246 
=== Succesors ===
=== Usages ===
v1452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1611 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1611 value: i404 stateAfter: - lastLocationAccess: - #next: v991  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v1452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B60" "B81" "B76" "B78" "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v975 v991 v1015 v1021 v1027 
=== Succesors ===
next: a618 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v975 v991 v1015 v1021 v1027 #next: a618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a797 
=== Succesors ===
next: v89 
=== Usages ===
v1560 ?185 v1568 v1564 v1562 ?129 v1563 ?124 
=== Predecessor ===
v976 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a797 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i406 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
a618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B85" 
    successors "B84" "B87" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4633717132025923255
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v90 
values: i22 i117 
=== Succesors ===
=== Usages ===
i127 v1560 v1559 v469 i117 i463 ?124 v94 v472 j462 ?124 i128 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v90 values: i22 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 60.54047728144854
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v89 
=== Succesors ===
next: v100 
=== Usages ===
i91 v123 v96 v108 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v89 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i418 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i91 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.9835900530402635
=== Inputs ===
condition: v94 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v94 #trueSuccessor: v95 #falseSuccessor: v96  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4633577314113346477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1544 
=== Usages ===
v454 v461 
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1544  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1506 v95 
=== Succesors ===
=== Usages ===
i1544 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1506 v95  <|@  <|@
f <@~|@floating>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a614 
index: i91 
=== Succesors ===
=== Usages ===
i1544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a614 index: i91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1544 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v454 
address: v1559 
=== Succesors ===
next: v114 
=== Usages ===
v407 i408 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v454 address: v1559 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1544 
y: i406 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1544 y: i406  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.9998902719253914
=== Inputs ===
condition: v407 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
i1544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v407 #trueSuccessor: v104 #falseSuccessor: v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B83" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4633576394537567927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 36]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1522 v95 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1522 v95  <|@  <|@
f <@~|@floating>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a618 
index: i91 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a618 index: i91  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 49]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1544 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v461 
address: v1560 
value: i408 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v461 address: v1560 value: i408 stateAfter: - lastLocationAccess: - #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 45]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32
=== Inputs ===
x: i91 
y: i115 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i91 y: i115  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
loopBegin: v90 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v90  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B88" 
    xhandlers
    flags 
    probability 4574183186931563751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v90 
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v90 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B88" 
    xhandlers
    flags 
    probability 4607123565950190215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v90 
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v90 #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v105 v107 
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v105 v107 #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i1542 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i91 y: i1542  <|@  <|@
tid ?185 <|@
d <@d|@=== Debug Properties ===
bci: 62
code: ResolvedJavaMethodBytecode<ZipCoder.getBytes(String)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 86
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - a618 - - - 
=== Succesors ===
=== Usages ===
?124 ?129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - a618 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v472 
=== Succesors ===
trueSuccessor: v1496 
falseSuccessor: v1493 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v472 #trueSuccessor: v1496 #falseSuccessor: v1493  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1505  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i91 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i91  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i1542 
y: i91 
=== Succesors ===
=== Usages ===
j464 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1542 y: i91  <|@  <|@
f <@~|@floating>@ <|@
tid j464 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i463 
=== Succesors ===
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i463  <|@  <|@
f <@~|@floating>@ <|@
tid j465 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j464 
y: j445 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j464 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j462 
y: j465 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j462 y: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j466 
y: j441 
=== Succesors ===
=== Usages ===
v1505 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j466 y: j441  <|@  <|@
f <@*|@fixed>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v468 
=== Succesors ===
trueSuccessor: v1504 
falseSuccessor: v1501 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v468 #trueSuccessor: v1504 #falseSuccessor: v1501  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1503 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1503  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i1542 
=== Succesors ===
=== Usages ===
v1503 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i91 y: i1542  <|@  <|@
f <@*|@fixed>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v469 
=== Succesors ===
trueSuccessor: v1494 
falseSuccessor: v1502 
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v469 #trueSuccessor: v1494 #falseSuccessor: v1502  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1492 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1492  <|@  <|@
f <@*|@fixed>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
v1494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1500 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1500  <|@  <|@
f <@*|@fixed>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1498 
=== Predecessor ===
v1502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1499 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1499  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1498 
=== Predecessor ===
v1501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1499 v1500 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1499 v1500 #next: v520  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: ?185 
values: a215 a614 i91 - a618 i1542 i91 - - - 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?185 values: a215 a614 i91 - a618 i1542 i91 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 336
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
reason: BoundsCheckException
speculation: Object[d.a@1023872315]
stamp: void
=== Inputs ===
stateBefore: ?124 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B96" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1491  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
v1493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1491 v1492 
=== Succesors ===
next: v125 
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1491 v1492 #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
v1490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B100" "B106" 
    successors "B98" "B111" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608053799174313579
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v126 
values: i91 i136 i136 
=== Succesors ===
=== Usages ===
?129 v130 i136 v1561 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v126 values: i91 i136 i136  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v126 
values: i91 i142 i183 
=== Succesors ===
=== Usages ===
?129 v36 i142 v344 i183 v1562 i181 j878 v562 v576 i603 i852 v864 v830 a845 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v126 values: i91 i142 i183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1934853109500192
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v125 
=== Succesors ===
next: v135 
=== Usages ===
i127 i128 v132 v178 v184 v546 v526 v531 v536 v541 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v125 #next: v135  <|@  <|@
tid ?129 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: ?185 
values: a215 a614 i127 - a618 i1542 i128 - - - 
=== Succesors ===
=== Usages ===
v666 a845 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?185 values: a215 a614 i127 - a618 i1542 i128 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i1542 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i127 y: i1542  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.16211788211788214
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v132  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B110" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4596139063284904789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 60]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
v474 
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i303 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i128 y: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v523 
falseSuccessor: v526 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v523 #falseSuccessor: v526  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4596139063284904789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1545 
=== Usages ===
v362 v352 
=== Predecessor ===
v527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1545  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1490 v131 
=== Succesors ===
=== Usages ===
i1545 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1490 v131  <|@  <|@
f <@~|@floating>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a614 
index: i127 
=== Succesors ===
=== Usages ===
i1545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a614 index: i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1545 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v474 
address: v1561 
=== Succesors ===
next: v141 
=== Usages ===
i343 
=== Predecessor ===
v523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v474 address: v1561 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1545 
=== Succesors ===
=== Usages ===
v138 i143 i164 v148 i172 v209 i157 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1545  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 v138 i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i102 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i343 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 62]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32
=== Inputs ===
x: i127 
y: i115 
=== Succesors ===
=== Usages ===
i127 i127 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i127 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 80]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32
=== Inputs ===
x: i128 
y: i115 
=== Succesors ===
=== Usages ===
i128 v363 v1563 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a618 
index: i128 
=== Succesors ===
=== Usages ===
v362 v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a618 index: i128  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.942568400295785
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
i1545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v139 #falseSuccessor: v140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B97" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4595738705134131296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 76]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 85]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 8
stamp: i8
=== Inputs ===
value: i343 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v523 
address: v1562 
value: i143 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v523 address: v1562 value: i143 stateAfter: - lastLocationAccess: - #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
loopBegin: v126 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 90]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 92]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i147 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i343 y: i147  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v148 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v148 #trueSuccessor: v531 #falseSuccessor: v528  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid i670 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90387
stableDimension: 0
stamp: i32 [-90387] ⇊00000000fffe9eed ⇈00000000fffe9eed
stampKind: i32
value: int[-90387|0xfffffffffffe9eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B109" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i208 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i343 y: i208  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v533 #falseSuccessor: v536  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B108" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i303 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i142 y: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v363 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v363 #trueSuccessor: v538 #falseSuccessor: v541  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
v371 
=== Predecessor ===
v542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32
=== Inputs ===
x: i128 
y: i180 
=== Succesors ===
=== Usages ===
v372 v1564 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i180  <|@  <|@
f <@~|@floating>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i303 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i181 y: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v372 
=== Succesors ===
trueSuccessor: v543 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v372 #trueSuccessor: v543 #falseSuccessor: v546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B97" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
v380 
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 308]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i157 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 310]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i343 
y: i156 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i343 y: i156  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 303]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 311]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i157 
y: i155 
=== Succesors ===
=== Usages ===
i159 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i157 y: i155  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 312]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i158 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v523 
address: v1562 
value: i159 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v523 address: v1562 value: i159 stateAfter: - lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a618 
index: i142 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a618 index: i142  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 326]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 328]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i343 
y: i163 
=== Succesors ===
=== Usages ===
i166 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i343 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 329]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i166 i172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 331]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i164 
y: i165 
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i164 y: i165  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 332]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i166 
y: i102 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i166 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 333]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i167 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v538 
address: v1563 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v538 address: v1563 value: i168 stateAfter: - lastLocationAccess: - #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a618 
index: i181 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a618 index: i181  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 349]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i343 
y: i165 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i343 y: i165  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 350]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i172 
y: i102 
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i172 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 351]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i173 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v543 
address: v1564 
value: i174 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v543 address: v1564 value: i174 stateAfter: - lastLocationAccess: - #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32
=== Inputs ===
x: i128 
y: i182 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i182  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:742) [bci: 353]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
loopBegin: v126 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -95515
stableDimension: 0
stamp: i32 [-95515] ⇊00000000fffe8ae5 ⇈00000000fffe8ae5
stampKind: i32
value: int[-95515|0xfffffffffffe8ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93211
stableDimension: 0
stamp: i32 [-93211] ⇊00000000fffe93e5 ⇈00000000fffe93e5
stampKind: i32
value: int[-93211|0xfffffffffffe93e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90643
stableDimension: 0
stamp: i32 [-90643] ⇊00000000fffe9ded ⇈00000000fffe9ded
stampKind: i32
value: int[-90643|0xfffffffffffe9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -110875
stableDimension: 0
stamp: i32 [-110875] ⇊00000000fffe4ee5 ⇈00000000fffe4ee5
stampKind: i32
value: int[-110875|0xfffffffffffe4ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 356]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:87) [bci: 71]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:87) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i35 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i128 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:87) [bci: 72]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v550 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v550 #falseSuccessor: v548  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:87) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@~|@floating>@ <|@
tid i663 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -97555
stableDimension: 0
stamp: i32 [-97555] ⇊00000000fffe82ed ⇈00000000fffe82ed
stampKind: i32
value: int[-97555|0xfffffffffffe82ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:87) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i22 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i128 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147041
stableDimension: 0
stamp: i32 [-147041] ⇊00000000fffdc19f ⇈00000000fffdc19f
stampKind: i32
value: int[-147041|0xfffffffffffdc19f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v562 
=== Succesors ===
trueSuccessor: v567 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v562 #trueSuccessor: v567 #falseSuccessor: v563  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    probability 4547007122018942976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v567 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B118" 
    xhandlers
    flags 
    probability 4607181518080091934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 41]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i22 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v569 
=== Succesors ===
trueSuccessor: v572 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v569 #trueSuccessor: v572 #falseSuccessor: v570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 4547006384149180028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B112" "B110" "B102" "B109" "B108" "B107" "B114" "B116" 
    successors 
    xhandlers
    flags 
    probability 4551510352711431998
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i664 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-147041 - -90387] ⇊00000000fffc0085 ⇈00000000ffffdfff
valueDescription: i32
=== Inputs ===
merge: v661 
values: i663 i668 i670 i672 i674 i676 i678 i678 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v661 values: i663 i668 i670 i672 i674 i676 i678 i678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v662 v667 v669 v671 v673 v675 v677 v679 
=== Succesors ===
next: v666 
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v662 v667 v669 v671 v673 v675 v677 v679 #next: v666  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?129 
actionAndReason: i664 
speculation: a636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?129 actionAndReason: i664 speculation: a636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" "B122" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: j825 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j825 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j861 
=== Usages ===
v1594 v1595 
=== Predecessor ===
v570 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j861  <|@  <|@
f <@~|@floating>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
j861 v863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1594 
=== Succesors ===
next: j862 
=== Usages ===
j829 v1596 v1597 a844 v1602 v1598 v1599 v1600 v1601 
=== Predecessor ===
j825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1594 #next: j862  <|@  <|@
f <@~|@floating>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
j862 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j862 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1595 
=== Succesors ===
next: v833 
=== Usages ===
v834 
=== Predecessor ===
j861 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1595 #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i709 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i128 y: i709  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v830 
=== Succesors ===
trueSuccessor: v832 
falseSuccessor: v831 
=== Usages ===
=== Predecessor ===
j862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v830 #trueSuccessor: v832 #falseSuccessor: v831  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4606280077659742249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v840  <|@  <|@
f <@~|@floating>@ <|@
tid i852 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: i32
=== Inputs ===
x: i128 
y: i732 
=== Succesors ===
=== Usages ===
i824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid i824 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i852 
y: i702 
=== Succesors ===
=== Usages ===
j828 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i852 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i824 
=== Succesors ===
=== Usages ===
j829 v1598 v1599 v1600 v1601 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i824  <|@  <|@
f <@~|@floating>@ <|@
tid j829 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: i64
=== Inputs ===
x: j828 
y: j861 
=== Succesors ===
=== Usages ===
v834 v863 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j828 y: j861  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j862 
y: j829 
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j862 y: j829  <|@  <|@
f <@*|@fixed>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v834 
=== Succesors ===
trueSuccessor: v839 
falseSuccessor: v838 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v834 #trueSuccessor: v839 #falseSuccessor: v838  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B123" 
    xhandlers
    flags 
    probability 4576340730974311578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v839 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4606199029078597591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1594 
value: j829 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1594 value: j829 stateAfter: - lastLocationAccess: - #next: v854  <|@  <|@
f <@~|@floating>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j828 
index: j861 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j828 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
address: v1598 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1598 #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j828 
index: j861 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j828 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
address: v1599 
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1599 #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j828 
index: j861 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j828 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
address: v1600 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1600 #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j828 
index: j861 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j828 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
address: v1601 
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1601 #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j861 
index: - 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j861 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1596 
value: i128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1596 value: i128 stateAfter: - lastLocationAccess: - #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j861 
index: - 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j861 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1597 
value: j700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1597 value: j700 stateAfter: - lastLocationAccess: - #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j861 
index: - 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j861 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1602 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v843 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1602 value: v877 stateAfter: - lastLocationAccess: - #next: v843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: a844 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j861 
=== Succesors ===
next: v846 
=== Usages ===
a849 
=== Predecessor ===
v843 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j861 #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
a844 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B123" 
    xhandlers
    flags 
    probability 4591868738987134556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v831 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 4592517127636291823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v835 v837 
=== Succesors ===
next: a845 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v835 v837 #next: a845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a845 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?129 
arguments: v771 i128 i22 
=== Succesors ===
next: v848 
=== Usages ===
a849 
=== Predecessor ===
v836 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?129 arguments: v771 i128 i22 #next: v848  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
a845 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B121" "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v847 
values: a844 a845 
=== Succesors ===
=== Usages ===
v1603 a610 v1569 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v847 values: a844 a845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v846 v848 
=== Succesors ===
next: v1300 
=== Usages ===
a849 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v846 v848 #next: v1300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1034 
=== Usages ===
j1301 j1303 
=== Predecessor ===
v847 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1034  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:74) [bci: 9]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i128 
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i603 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v576 
trueValue: i303 
falseValue: i128 
=== Succesors ===
=== Usages ===
j879 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v576 trueValue: i303 falseValue: i128  <|@  <|@
f <@~|@floating>@ <|@
tid j879 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i603 
=== Succesors ===
=== Usages ===
j1363 v1603 j883 v1031 v1182 j1349 j1354 j1357 j1360 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i603  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j879 
y: j700 
=== Succesors ===
=== Usages ===
v1034 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j879 y: j700  <|@  <|@
f <@*|@fixed>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1031 
=== Succesors ===
trueSuccessor: v1032 
falseSuccessor: v1033 
=== Usages ===
=== Predecessor ===
v1300 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1031 #trueSuccessor: v1032 #falseSuccessor: v1033  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B147" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1050  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v1034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a849 
index: - 
=== Succesors ===
=== Usages ===
j1303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a849 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1303 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1300 
address: v1569 
=== Succesors ===
=== Usages ===
v1616 v1618 v1620 v1622 v1624 v1626 v1628 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1300 address: v1569  <|@  <|@
f <@~|@floating>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a618 
index: - 
=== Succesors ===
=== Usages ===
j1301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a618 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1301 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1300 
address: v1568 
=== Succesors ===
=== Usages ===
v1617 v1619 v1621 v1623 v1625 v1627 v1629 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1300 address: v1568  <|@  <|@
f <@~|@floating>@ <|@
tid j1349 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483615]
=== Inputs ===
x: j879 
y: j1277 
=== Succesors ===
=== Usages ===
v1350 v1352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j879 y: j1277  <|@  <|@
f <@~|@floating>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1349 
y: j554 
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1349 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1350 
=== Succesors ===
trueSuccessor: v1035 
falseSuccessor: v1036 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1350 #trueSuccessor: v1035 #falseSuccessor: v1036  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
v1035 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1038  <|@  <|@
f <@*|@fixed>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
v1036 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B172" 
    successors "B130" "B172" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1342 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1039 
values: j554 j1348 
=== Succesors ===
=== Usages ===
v1628 v1629 j1348 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1039 values: j554 j1348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1038 
=== Succesors ===
next: v1546 
=== Usages ===
v1546 v1042 v1043 j1342 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1038 #next: v1546  <|@  <|@
f <@~|@floating>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1342 
=== Succesors ===
=== Usages ===
v1546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1039 
address: v1629 
=== Succesors ===
next: v1473 
=== Usages ===
v1473 
=== Predecessor ===
v1039 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1039 address: v1629 #next: v1473  <|@  <|@
f <@~|@floating>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1342 
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1628 
value: v1546 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1546 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1628 value: v1546 stateAfter: - lastLocationAccess: - #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid j1348 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1342 
y: j391 
=== Succesors ===
=== Usages ===
j1335 j1342 v1352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1342 y: j391  <|@  <|@
f <@~|@floating>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1349 
y: j1348 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1349 y: j1348  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1352 
=== Succesors ===
trueSuccessor: v1042 
falseSuccessor: v1044 
=== Usages ===
=== Predecessor ===
v1473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1352 #trueSuccessor: v1042 #falseSuccessor: v1044  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1039 
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1039 #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
v1042 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B127" "B130" 
    successors "B132" "B133" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1335 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1047 
values: j554 j1348 
=== Succesors ===
=== Usages ===
v1626 v1627 j1341 j1328 v1355 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1047 values: j554 j1348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1046 v1048 
=== Succesors ===
next: v1069 
=== Usages ===
j1335 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1046 v1048 #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid j1354 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j879 
y: j1221 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j879 y: j1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1354 
y: j1335 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1354 y: j1335  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1355 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1067 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1355 #trueSuccessor: v1068 #falseSuccessor: v1067  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1072 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B134" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1547 
=== Usages ===
v1547 
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1547  <|@  <|@
f <@~|@floating>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1335 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1067 
address: v1627 
=== Succesors ===
next: v1471 
=== Usages ===
v1471 
=== Predecessor ===
v1067 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1067 address: v1627 #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1335 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1626 
value: v1547 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1057 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1626 value: v1547 stateAfter: - lastLocationAccess: - #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid j1341 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1335 
y: j282 
=== Succesors ===
=== Usages ===
j1328 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1335 y: j282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v1471 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1328 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1058 
values: j1341 j1335 
=== Succesors ===
=== Usages ===
v1624 v1625 j1334 j1321 v1358 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1058 values: j1341 j1335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1057 v1072 
=== Succesors ===
next: v1075 
=== Usages ===
j1328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1057 v1072 #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid j1357 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j879 
y: j1227 
=== Succesors ===
=== Usages ===
v1358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j879 y: j1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1357 
y: j1328 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1357 y: j1328  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1358 
=== Succesors ===
trueSuccessor: v1074 
falseSuccessor: v1073 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1358 #trueSuccessor: v1074 #falseSuccessor: v1073  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1078  <|@  <|@
f <@*|@fixed>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
v1074 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1548 
=== Usages ===
v1548 
=== Predecessor ===
v1075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1328 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1073 
address: v1625 
=== Succesors ===
next: v1469 
=== Usages ===
v1469 
=== Predecessor ===
v1073 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1073 address: v1625 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1328 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1624 
value: v1548 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1624 value: v1548 stateAfter: - lastLocationAccess: - #next: v1060  <|@  <|@
f <@~|@floating>@ <|@
tid j1334 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1328 
y: j754 
=== Succesors ===
=== Usages ===
j1321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1328 y: j754  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
v1469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1321 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1061 
values: j1334 j1328 
=== Succesors ===
=== Usages ===
v1622 v1623 j1327 j1304 v1361 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1061 values: j1334 j1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1060 v1078 
=== Succesors ===
next: v1081 
=== Usages ===
j1321 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1060 v1078 #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid j1360 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j879 
y: j1231 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j879 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1360 
y: j1321 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1360 y: j1321  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1361 
=== Succesors ===
trueSuccessor: v1080 
falseSuccessor: v1079 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1361 #trueSuccessor: v1080 #falseSuccessor: v1079  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1084 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1084  <|@  <|@
f <@*|@fixed>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1064 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1549 
=== Usages ===
v1549 
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1549  <|@  <|@
f <@~|@floating>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1321 
=== Succesors ===
=== Usages ===
v1549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1079 
address: v1623 
=== Succesors ===
next: v1467 
=== Usages ===
v1467 
=== Predecessor ===
v1079 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1079 address: v1623 #next: v1467  <|@  <|@
f <@~|@floating>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1321 
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1622 
value: v1549 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1063 
=== Usages ===
=== Predecessor ===
v1549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1622 value: v1549 stateAfter: - lastLocationAccess: - #next: v1063  <|@  <|@
f <@~|@floating>@ <|@
tid j1327 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1321 
y: j1207 
=== Succesors ===
=== Usages ===
j1304 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1321 y: j1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1064 
=== Predecessor ===
v1467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1304 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1064 
values: j1327 j1321 
=== Succesors ===
=== Usages ===
v1616 v1617 j1310 v1364 j1427 v1618 v1619 v1620 v1621 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1064 values: j1327 j1321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1063 v1084 
=== Succesors ===
next: v1087 
=== Usages ===
j1304 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1063 v1084 #next: v1087  <|@  <|@
f <@~|@floating>@ <|@
tid j1363 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j879 
y: j445 
=== Succesors ===
=== Usages ===
v1364 v1366 v1368 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j879 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1363 
y: j1304 
=== Succesors ===
=== Usages ===
v1087 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1363 y: j1304  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1364 
=== Succesors ===
trueSuccessor: v1086 
falseSuccessor: v1085 
=== Usages ===
=== Predecessor ===
v1064 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1364 #trueSuccessor: v1086 #falseSuccessor: v1085  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B147" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1090  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1550 
=== Usages ===
i1550 
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1304 
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1550 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1085 
address: v1617 
=== Succesors ===
next: v1461 
=== Usages ===
v1461 
=== Predecessor ===
v1085 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1085 address: v1617 #next: v1461  <|@  <|@
f <@~|@floating>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1304 
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1616 
value: i1550 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1093 
=== Usages ===
=== Predecessor ===
i1550 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1616 value: i1550 stateAfter: - lastLocationAccess: - #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid j1310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1304 
y: j700 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1304 y: j700  <|@  <|@
f <@~|@floating>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1363 
y: j1310 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1363 y: j1310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1366 
=== Succesors ===
trueSuccessor: v1092 
falseSuccessor: v1091 
=== Usages ===
=== Predecessor ===
v1461 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1366 #trueSuccessor: v1092 #falseSuccessor: v1091  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 4591418469091886456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
v1092 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4598737156239447066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1551 
=== Usages ===
i1551 
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1304 
=== Succesors ===
=== Usages ===
i1551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1551 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1091 
address: v1619 
=== Succesors ===
next: v1463 
=== Usages ===
v1463 
=== Predecessor ===
v1091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1091 address: v1619 #next: v1463  <|@  <|@
f <@~|@floating>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1304 
=== Succesors ===
=== Usages ===
v1463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1618 
value: i1551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
i1551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1618 value: i1551 stateAfter: - lastLocationAccess: - #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid j1427 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1304 
y: j1191 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1304 y: j1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1363 
y: j1427 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1363 y: j1427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1368 
=== Succesors ===
trueSuccessor: v1098 
falseSuccessor: v1097 
=== Usages ===
=== Predecessor ===
v1463 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1368 #trueSuccessor: v1098 #falseSuccessor: v1097  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" 
    xhandlers
    flags 
    probability 4589729956984706074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
v1098 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" 
    xhandlers
    flags 
    probability 4596766324772847143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1552 
=== Usages ===
i1552 
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1304 
=== Succesors ===
=== Usages ===
i1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1552 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1097 
address: v1621 
=== Succesors ===
next: v1465 
=== Usages ===
v1465 
=== Predecessor ===
v1097 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1097 address: v1621 #next: v1465  <|@  <|@
f <@~|@floating>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1304 
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1620 
value: i1552 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
i1552 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1620 value: i1552 stateAfter: - lastLocationAccess: - #next: v1066  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
v1465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B125" "B146" "B141" "B143" "B145" 
    successors "B148" "B170" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1050 v1066 v1090 v1096 v1102 
=== Succesors ===
next: v1371 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1050 v1066 v1090 v1096 v1102 #next: v1371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1109 
=== Usages ===
j1373 
=== Predecessor ===
v1051 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid j878 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i128 
=== Succesors ===
=== Usages ===
j883 v1182 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i128  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j879 
y: j878 
=== Succesors ===
=== Usages ===
v1109 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j879 y: j878  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1182 
=== Succesors ===
trueSuccessor: v1108 
falseSuccessor: v1107 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1182 #trueSuccessor: v1108 #falseSuccessor: v1107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a849 
index: j879 
=== Succesors ===
=== Usages ===
j1373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a849 index: j879  <|@  <|@
f <@~|@floating>@ <|@
tid j1373 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1371 
address: v1603 
=== Succesors ===
=== Usages ===
v1630 v1631 v1632 v1633 v1634 v1635 v1636 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1371 address: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid j883 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j878 
y: j879 
=== Succesors ===
=== Usages ===
j1419 j1405 j1410 j1413 j1416 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j878 y: j879  <|@  <|@
f <@~|@floating>@ <|@
tid j1405 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967327 - 4294967263]
=== Inputs ===
x: j883 
y: j1277 
=== Succesors ===
=== Usages ===
v1406 v1408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j883 y: j1277  <|@  <|@
f <@~|@floating>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1405 
y: j554 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1405 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1406 
=== Succesors ===
trueSuccessor: v1110 
falseSuccessor: v1111 
=== Usages ===
=== Predecessor ===
v1108 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1406 #trueSuccessor: v1110 #falseSuccessor: v1111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
v1110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1113  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B169" 
    successors "B152" "B169" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1400 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1114 
values: j554 j1404 
=== Succesors ===
=== Usages ===
v1636 j1404 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1114 values: j554 j1404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1113 
=== Succesors ===
next: v1480 
=== Usages ===
j1400 v1117 v1118 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1113 #next: v1480  <|@  <|@
f <@~|@floating>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1400 
=== Succesors ===
=== Usages ===
v1480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1636 
value: v1486 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1120 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1636 value: v1486 stateAfter: - lastLocationAccess: - #next: v1120  <|@  <|@
f <@~|@floating>@ <|@
tid j1404 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1400 
y: j391 
=== Succesors ===
=== Usages ===
j1395 j1400 v1408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1400 y: j391  <|@  <|@
f <@~|@floating>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1405 
y: j1404 
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1405 y: j1404  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1408 
=== Succesors ===
trueSuccessor: v1117 
falseSuccessor: v1119 
=== Usages ===
=== Predecessor ===
v1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1408 #trueSuccessor: v1117 #falseSuccessor: v1119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1114 
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1114 #next: v1123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
v1117 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B149" "B152" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1395 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1122 
values: j554 j1404 
=== Succesors ===
=== Usages ===
v1635 j1399 j1390 v1411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1122 values: j554 j1404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1121 v1123 
=== Succesors ===
next: v1144 
=== Usages ===
j1395 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1121 v1123 #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid j1410 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j883 
y: j1221 
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j883 y: j1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1410 
y: j1395 
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1410 y: j1395  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1411 
=== Succesors ===
trueSuccessor: v1143 
falseSuccessor: v1142 
=== Usages ===
=== Predecessor ===
v1122 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1411 #trueSuccessor: v1143 #falseSuccessor: v1142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1147  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
v1143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1395 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1635 
value: v1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1635 value: v1489 stateAfter: - lastLocationAccess: - #next: v1132  <|@  <|@
f <@~|@floating>@ <|@
tid j1399 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1395 
y: j282 
=== Succesors ===
=== Usages ===
j1390 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1395 y: j282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
v1479 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" "B154" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1390 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1133 
values: j1399 j1395 
=== Succesors ===
=== Usages ===
v1634 j1394 j1385 v1414 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1133 values: j1399 j1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1132 v1147 
=== Succesors ===
next: v1150 
=== Usages ===
j1390 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1132 v1147 #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid j1413 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j883 
y: j1227 
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j883 y: j1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1413 
y: j1390 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1413 y: j1390  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1414 
=== Succesors ===
trueSuccessor: v1149 
falseSuccessor: v1148 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1414 #trueSuccessor: v1149 #falseSuccessor: v1148  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
v1149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1478 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1478  <|@  <|@
f <@~|@floating>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1390 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1634 
value: v1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v1148 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1634 value: v1488 stateAfter: - lastLocationAccess: - #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid j1394 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1390 
y: j754 
=== Succesors ===
=== Usages ===
j1385 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1390 y: j754  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
v1478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1385 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1136 
values: j1394 j1390 
=== Succesors ===
=== Usages ===
v1633 j1389 j1374 v1417 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1136 values: j1394 j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1135 v1153 
=== Succesors ===
next: v1156 
=== Usages ===
j1385 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1135 v1153 #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid j1416 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j883 
y: j1231 
=== Succesors ===
=== Usages ===
v1417 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j883 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1416 
y: j1385 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1416 y: j1385  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1417 
=== Succesors ===
trueSuccessor: v1155 
falseSuccessor: v1154 
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1417 #trueSuccessor: v1155 #falseSuccessor: v1154  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B162" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
v1155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B162" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1477 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1477  <|@  <|@
f <@~|@floating>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1385 
=== Succesors ===
=== Usages ===
v1477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1633 
value: v1487 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1138 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1633 value: v1487 stateAfter: - lastLocationAccess: - #next: v1138  <|@  <|@
f <@~|@floating>@ <|@
tid j1389 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1385 
y: j1207 
=== Succesors ===
=== Usages ===
j1374 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1385 y: j1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
v1477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1374 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1139 
values: j1389 j1385 
=== Succesors ===
=== Usages ===
v1630 j1378 v1420 j1428 v1631 v1632 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1139 values: j1389 j1385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1138 v1159 
=== Succesors ===
next: v1162 
=== Usages ===
j1374 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1138 v1159 #next: v1162  <|@  <|@
f <@~|@floating>@ <|@
tid j1419 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j883 
y: j445 
=== Succesors ===
=== Usages ===
v1420 v1422 v1424 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j883 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1419 
y: j1374 
=== Succesors ===
=== Usages ===
v1162 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1419 y: j1374  <|@  <|@
f <@*|@fixed>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1420 
=== Succesors ===
trueSuccessor: v1161 
falseSuccessor: v1160 
=== Usages ===
=== Predecessor ===
v1139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1420 #trueSuccessor: v1161 #falseSuccessor: v1160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B171" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1165 
=== Usages ===
=== Predecessor ===
v1162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1165  <|@  <|@
f <@*|@fixed>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
v1161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v1162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1374 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1630 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1630 value: i404 stateAfter: - lastLocationAccess: - #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid j1378 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1374 
y: j700 
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1374 y: j700  <|@  <|@
f <@~|@floating>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1419 
y: j1378 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1419 y: j1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1422 
=== Succesors ===
trueSuccessor: v1167 
falseSuccessor: v1166 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1422 #trueSuccessor: v1167 #falseSuccessor: v1166  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B171" 
    xhandlers
    flags 
    probability 4591418469091886456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1171  <|@  <|@
f <@*|@fixed>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
v1167 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4598737156239447066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1475 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1475  <|@  <|@
f <@~|@floating>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1374 
=== Succesors ===
=== Usages ===
v1475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1631 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1174 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1631 value: i404 stateAfter: - lastLocationAccess: - #next: v1174  <|@  <|@
f <@~|@floating>@ <|@
tid j1428 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1374 
y: j1191 
=== Succesors ===
=== Usages ===
v1424 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1374 y: j1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1424 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1419 
y: j1428 
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1419 y: j1428  <|@  <|@
f <@*|@fixed>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1424 
=== Succesors ===
trueSuccessor: v1173 
falseSuccessor: v1172 
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1424 #trueSuccessor: v1173 #falseSuccessor: v1172  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4589729956984706074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1177 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1177  <|@  <|@
f <@*|@fixed>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
v1173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4596766324772847143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1476 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1374 
=== Succesors ===
=== Usages ===
v1476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1632 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1141 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1632 value: i404 stateAfter: - lastLocationAccess: - #next: v1141  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
v1476 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B151" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B171" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
v1107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B168" "B163" "B165" "B167" 
    successors 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1125 v1141 v1165 v1171 v1177 
=== Succesors ===
next: a610 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1125 v1141 v1165 v1171 v1177 #next: a610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a849 
=== Succesors ===
next: v39 
=== Usages ===
v39 
=== Predecessor ===
v1126 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a849 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 92]
stamp: void
=== Inputs ===
result: a610 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a610 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a610 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B129" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1043 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1043  <|@  <|@
f <@*|@fixed>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1039 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1039  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v964 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v964  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v1537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v659  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v1533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v1521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v1517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B52" "B175" "B174" "B43" "B49" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i653 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-83739 - -79379] ⇊00000000fffe80e5 ⇈00000000fffefbed
valueDescription: i32
=== Inputs ===
merge: v650 
values: i652 i657 i660 i657 i660 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v650 values: i652 i657 i660 i657 i660  <|@  <|@
f <@~|@floating>@ <|@
tid a654 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v650 
values: a636 a658 a658 a658 a658 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v650 values: a636 a658 a658 a658 a658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v651 v656 v659 v1637 v1638 
=== Succesors ===
next: v655 
=== Usages ===
i653 a654 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v651 v656 v659 v1637 v1638 #next: v655  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?82 
actionAndReason: i653 
speculation: a654 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?82 actionAndReason: i653 speculation: a654  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v902  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v897 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v897  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1639 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/zip/ZipCoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?61 ?64 ?71 ?84 v1558 v1553 v1565 ?48 ?48 ?553 ?553 j692 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?64 ?71 v1555 v1639 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ZipCoder.getBytes(String)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 77
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - 
=== Succesors ===
=== Usages ===
v639 v1639 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a1538 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a1538  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1538 v398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1538 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipCoder.enc
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:152) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: n# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1553 
=== Succesors ===
next: v44 
=== Usages ===
a223 v399 
=== Predecessor ===
v1639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1553 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:152) [bci: 4]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
value: a1538 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1538  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v696 v689 v1450 v1451 v1452 v1474 v1475 v1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?64 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ZipCoder.getBytes(String)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 77
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - 
=== Succesors ===
=== Usages ===
?48 ?61 ?553 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a636 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 v666 a654 v647 ?48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:152) [bci: 4]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
trueSuccessorProbability: 5.047591577732602E-4
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
a1538 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v42 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6edd3b29 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 5.047591577732602E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4557794804772723712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 7]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1539 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1539  <|@  <|@
f <@~|@floating>@ <|@
tid v1565 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1539 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipCoder.cs
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 9]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: n Ljava/nio/charset/Charset;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1565 
=== Succesors ===
next: v494 
=== Usages ===
a384 v385 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1565 #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
value: a1539 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1539  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
a1539 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v493 #falseSuccessor: v491  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid i641 <|@
result int[-98827|0xfffffffffffe7df5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98827
stableDimension: 0
stamp: i32 [-98827] ⇊00000000fffe7df5 ⇈00000000fffe7df5
stampKind: i32
value: int[-98827|0xfffffffffffe7df5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i641 
speculation: a636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i641 speculation: a636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -98827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4557794804772723712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a47 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a47  <|@  <|@
f <@~|@floating>@ <|@
tid a384 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 9]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
op: Uncompress
stamp: a Ljava/nio/charset/Charset;
=== Inputs ===
value: a1539 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1539  <|@  <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
returnStamp: a# Lsun/nio/cs/UTF_8$Encoder;
signature: [Ljdk.vm.ci.meta.JavaType;@93dd348
stamp: void
targetMethod: HotSpotMethod<Charset.newEncoder()>
=== Inputs ===
arguments: a384 
=== Succesors ===
=== Usages ===
a47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a384  <|@  <|@
tid ?553 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ZipCoder.encoder()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 153
stackSize: 1
=== Inputs ===
outerFrameState: ?64 
values: a1 a1 
=== Succesors ===
=== Usages ===
a47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?64 values: a1 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a47 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
polymorphic: false
stamp: a# Lsun/nio/cs/UTF_8$Encoder;
targetMethod: Direct#Charset.newEncoder
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v388 
stateDuring: ?553 
=== Succesors ===
next: v393 
=== Usages ===
a397 j683 v1566 v1567 a215 
=== Predecessor ===
v491 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v388 stateDuring: ?553 #next: v393  <|@  <|@
tid ?48 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ZipCoder.encoder()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 153
stackSize: 2
=== Inputs ===
outerFrameState: ?64 
values: a1 a1 a636 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?64 values: a1 a1 a636  <|@  <|@
f <@~|@floating>@ <|@
tid v1566 <|@
result [v5|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a47 
index: - 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a47 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a415 <|@
result NarrowOop[CodingErrorAction@250144264] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
rawvalue: CodingErrorAction@250144264
stableDimension: 0
stamp: n!# Ljava/nio/charset/CodingErrorAction;
stampKind: n -
value: NarrowOop[CodingErrorAction@250144264]
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 v396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: CharsetEncoder.malformedInputAction
nodeSourcePosition: at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?48 
guard: - 
address: v1566 
value: a415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j683 
=== Usages ===
=== Predecessor ===
a47 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?48 guard: - address: v1566 value: a415 stateAfter: - lastLocationAccess: - #next: j683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j683 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a47 
=== Succesors ===
next: v689 
=== Usages ===
j685 
=== Predecessor ===
v393 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a47 #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j685 j693 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j685 <|@
result v6|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j683 
y: i684 
=== Succesors ===
=== Usages ===
v1572 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j683 y: i684  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1572 v1573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1572 <|@
result [v6|QWORD[*] + v7|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j685 
index: j688 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j685 index: j688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1572 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
j683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1572 value: i404 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
result [v5|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a47 
index: - 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a47 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: CharsetEncoder.unmappableCharacterAction
nodeSourcePosition: at java.nio.charset.CharsetEncoder.onUnmappableCharacter(CharsetEncoder.java:428) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 24]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1567 
value: a415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1567 value: a415 stateAfter: - lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid a397 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
op: Compress
stamp: n# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
value: a47 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ZipCoder.enc
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1553 
value: a397 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j692 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1553 value: a397 stateAfter: - lastLocationAccess: - #next: j692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j692 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v696 
=== Usages ===
j693 
=== Predecessor ===
v398 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid j693 <|@
result v9|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j692 
y: i684 
=== Succesors ===
=== Usages ===
v1573 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j692 y: i684  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
result [v9|QWORD[*] + v7|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j693 
index: j688 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j693 index: j688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:155) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1573 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
j692 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1573 value: i404 stateAfter: - lastLocationAccess: - #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Charset.newEncoder()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 1] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 15]
stack: v0|QWORD[.] Object[null] 
locals: v0|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction MOV [v5|QWORD[.] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] state [bci:15, 1] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = SHR v5|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD[.] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v9|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607177872333707689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid a223 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:152) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
op: Uncompress
stamp: a# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
value: a1538 
=== Succesors ===
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1538  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a215 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
valueDescription: a -
=== Inputs ===
merge: v59 
values: a223 a47 
=== Succesors ===
=== Usages ===
?129 ?124 v1554 ?69 ?84 v1557 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v59 values: a223 a47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v58 v60 
=== Succesors ===
next: a1540 
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v58 v60 #next: a1540  <|@  <|@
f <@~|@floating>@ <|@
tid v1555 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1540 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1555 
=== Succesors ===
next: v1640 
=== Usages ===
a231 v1640 v1556 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1555 #next: v1640  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<ZipCoder.encoder()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 157
stackSize: 0
=== Inputs ===
outerFrameState: ?64 
values: a1 
=== Succesors ===
=== Usages ===
v647 v1640 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?64 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?61 
object: a1540 
=== Succesors ===
next: i1541 
=== Usages ===
=== Predecessor ===
a1540 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?61 object: a1540 #next: i1541  <|@  <|@
f <@~|@floating>@ <|@
tid v1558 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1541 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ZipCoder.isUTF8
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 39]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1558 
=== Succesors ===
next: v506 
=== Usages ===
i313 
=== Predecessor ===
v1640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1558 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 39]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1541 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1541  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:81) [bci: 32]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 v26 i91 v562 v226 v569 a725 i303 v477 a793 a845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i313 
y: i22 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i313 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 42]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v505 
falseSuccessor: v503 
=== Usages ===
=== Predecessor ===
i1541 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v505 #falseSuccessor: v503  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
locals: v0|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:30, 1] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVZXB [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
result int[-80403|0xfffffffffffec5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -80403
stableDimension: 0
stamp: i32 [-80403] ⇊00000000fffec5ed ⇈00000000fffec5ed
stampKind: i32
value: int[-80403|0xfffffffffffec5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?61 
actionAndReason: i649 
speculation: a636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?61 actionAndReason: i649 speculation: a636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -80403 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
locals: v0|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:30, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:85) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
result [v11|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a215 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.reset(CharsetEncoder.java:710) [bci: 6]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1554 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j704 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1554 value: i22 stateAfter: - lastLocationAccess: - #next: j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j704 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j748 
=== Usages ===
v1574 v1575 
=== Predecessor ===
v226 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j748  <|@  <|@
f <@~|@floating>@ <|@
tid v1574 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
j748 v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j748 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1574 
=== Succesors ===
next: j749 
=== Usages ===
j708 v1576 v1577 a724 v1582 v1578 v1579 v1580 v1581 
=== Predecessor ===
j704 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1574 #next: j749  <|@  <|@
f <@~|@floating>@ <|@
tid v1575 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
j749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j749 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1575 
=== Succesors ===
next: i1542 
=== Usages ===
v714 
=== Predecessor ===
j748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1575 #next: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
result [v12|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1540 
=== Succesors ===
=== Usages ===
i1542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1542 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 4]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1556 
=== Succesors ===
next: v713 
=== Usages ===
a725 f14 v191 i418 v472 v477 v710 v469 j441 ?124 ?129 v130 i463 v751 i701 
=== Predecessor ===
j749 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1556 #next: v713  <|@  <|@
f <@~|@floating>@ <|@
tid i709 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v710 v778 v830 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1542 
y: i709 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1542 y: i709  <|@  <|@
f <@~|@floating>@ <|@
tid j700 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v752 v813 v865 v1031 j1378 j1250 j1310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 i117 i136 v1181 i701 v480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i733 i800 i852 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 i772 i824 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v710 
=== Succesors ===
trueSuccessor: v712 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
i1542 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v710 #trueSuccessor: v712 #falseSuccessor: v711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid i701 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1542 
y: i115 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1542 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i701 
y: i732 
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i701 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid i703 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i733 
y: i702 
=== Succesors ===
=== Usages ===
j707 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i733 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid j707 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i703 
=== Succesors ===
=== Usages ===
j708 v1578 v1579 v1580 v1581 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i703  <|@  <|@
f <@~|@floating>@ <|@
tid j708 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i64
=== Inputs ===
x: j707 
y: j748 
=== Succesors ===
=== Usages ===
v714 v750 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j707 y: j748  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j749 
y: j708 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j749 y: j708  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v714 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v714 #trueSuccessor: v719 #falseSuccessor: v718  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND v18|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v20|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1574 
value: j708 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1574 value: j708 stateAfter: - lastLocationAccess: - #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid v1578 <|@
result [v20|QWORD + v14|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j707 
index: j748 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
address: v1578 
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1578 #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
result [v20|QWORD + v14|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j707 
index: j748 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
address: v1579 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1579 #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v1580 <|@
result [v20|QWORD + v14|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j707 
index: j748 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
address: v1580 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1580 #next: v746  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
result [v20|QWORD + v14|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j707 
index: j748 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
address: v1581 
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1581 #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
result [v14|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j748 
index: - 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j748 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1576 
value: i1542 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1576 value: i1542 stateAfter: - lastLocationAccess: - #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
result [v14|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j748 
index: - 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j748 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1577 
value: j700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1577 value: j700 stateAfter: - lastLocationAccess: - #next: v756  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
result [v14|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j748 
index: - 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j748 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1582 
value: v876 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1582 value: v876 stateAfter: - lastLocationAccess: - #next: v723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a724 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a724 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j748 
=== Succesors ===
next: v726 
=== Usages ===
a729 
=== Predecessor ===
v723 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j748 #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
a724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v14|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v14|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v14|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v14|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v715 v717 
=== Succesors ===
next: a725 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v715 v717 #next: a725  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ZipCoder.getBytes(String)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 77
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - 
=== Succesors ===
=== Usages ===
?69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - -  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<CharsetEncoder.reset()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.reset(CharsetEncoder.java:710) [bci: 6]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 4]
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 711
stackSize: 0
=== Inputs ===
outerFrameState: ?71 
values: a215 
=== Succesors ===
=== Usages ===
a725 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?71 values: a215  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a725 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a725 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?69 
arguments: v699 i1542 i22 
=== Succesors ===
next: v728 
=== Usages ===
a729 
=== Predecessor ===
v716 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?69 arguments: v699 i1542 i22 #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
a725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.reset(CharsetEncoder.java:711) [bci: 9]
locals: v11|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 4]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 4] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a729 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v727 
values: a724 a725 
=== Succesors ===
=== Usages ===
v1570 a614 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v727 values: a724 a725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v726 v728 
=== Succesors ===
next: v1186 
=== Usages ===
a729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v726 v728 #next: v1186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v892 
=== Usages ===
j1188 
=== Predecessor ===
v727 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid j441 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1542 
=== Succesors ===
=== Usages ===
v448 v468 v770 j1239 j1222 j1228 j1232 j1236 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1542 
y: i22 
=== Succesors ===
=== Usages ===
v1519 v892 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1542 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j446 j465 j1239 j1292 j1363 j1419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1191 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1201 j1426 j1427 j1428 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1207 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1208 j1261 j1327 j1389 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1231 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1232 j1289 j1360 j1416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1394 j1334 j1266 j1214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1227 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1228 j1286 j1357 j1413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.maxBytesPerChar(CharsetEncoder.java:465) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 17]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1399 j1341 j1271 j1220 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1221 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1222 j1283 j1354 j1410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j557 v1350 j1335 j1342 v1406 j1209 j1215 v1223 j1400 j1267 j1272 v1279 j1395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v890 
falseSuccessor: v891 
=== Usages ===
=== Predecessor ===
v1186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v890 #falseSuccessor: v891  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v909  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v1570 <|@
result [v25|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a729 
index: - 
=== Succesors ===
=== Usages ===
j1188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1188 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1186 
address: v1570 
=== Succesors ===
=== Usages ===
v1604 v1605 v1606 v1607 v1608 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1186 address: v1570  <|@  <|@
f <@~|@floating>@ <|@
tid j1222 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-16 - 2147483631]
=== Inputs ===
x: j441 
y: j1221 
=== Succesors ===
=== Usages ===
v1223 v1225 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1222 
y: j554 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1222 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1223 
=== Succesors ===
trueSuccessor: v893 
falseSuccessor: v894 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1223 #trueSuccessor: v893 #falseSuccessor: v894  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = LEA [v25|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v26|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v905  <|@  <|@
f <@*|@fixed>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v1481 <|@
result v29|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v894 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B177" 
    successors "B19" "B177" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1215 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v897 
values: j554 j1220 
=== Succesors ===
=== Usages ===
v1608 j1220 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v897 values: j554 j1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v896 
=== Succesors ===
next: v1447 
=== Usages ===
j1215 v901 v902 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v896 #next: v1447  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
result [v27|QWORD[.] + v30|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1188 
index: j1215 
=== Succesors ===
=== Usages ===
v1447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1188 index: j1215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1608 
value: v1481 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1608 value: v1481 stateAfter: - lastLocationAccess: - #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid j1220 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1215 
y: j282 
=== Succesors ===
=== Usages ===
j1209 j1215 v1225 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1215 y: j282  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1222 
y: j1220 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1222 y: j1220  <|@  <|@
f <@*|@fixed>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1225 
=== Succesors ===
trueSuccessor: v901 
falseSuccessor: v903 
=== Usages ===
=== Predecessor ===
v1447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1225 #trueSuccessor: v901 #falseSuccessor: v903  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v30|QWORD * 2], input: v29|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v30|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v897 
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v897 #next: v907  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1209 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v906 
values: j554 j1220 
=== Succesors ===
=== Usages ===
v1607 j1214 j1202 v1229 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v906 values: j554 j1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v905 v907 
=== Succesors ===
next: v929 
=== Usages ===
j1209 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v905 v907 #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid j1228 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j441 
y: j1227 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1228 
y: j1209 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1228 y: j1209  <|@  <|@
f <@*|@fixed>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1229 
=== Succesors ===
trueSuccessor: v928 
falseSuccessor: v927 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1229 #trueSuccessor: v928 #falseSuccessor: v927  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v928 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1446 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1446  <|@  <|@
f <@~|@floating>@ <|@
tid v1607 <|@
result [v27|QWORD[.] + v32|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1188 
index: j1209 
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1188 index: j1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1485 <|@
result v34|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1446 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
value: v1485 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1607 value: v1485 stateAfter: - lastLocationAccess: - #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid j1214 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1209 
y: j754 
=== Succesors ===
=== Usages ===
j1202 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1209 y: j754  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v1446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v32|QWORD * 2], input: v34|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v32|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1202 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v917 
values: j1214 j1209 
=== Succesors ===
=== Usages ===
v1606 j1208 j1196 v1233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v917 values: j1214 j1209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v916 v932 
=== Succesors ===
next: v935 
=== Usages ===
j1202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v916 v932 #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid j1232 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j441 
y: j1231 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1232 
y: j1202 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1232 y: j1202  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1233 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v933 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1233 #trueSuccessor: v934 #falseSuccessor: v933  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v26|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1444 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1444  <|@  <|@
f <@~|@floating>@ <|@
tid v1606 <|@
result [v27|QWORD[.] + v36|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1188 
index: j1202 
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1188 index: j1202  <|@  <|@
f <@~|@floating>@ <|@
tid v1484 <|@
result v38|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1606 
value: v1484 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1606 value: v1484 stateAfter: - lastLocationAccess: - #next: v920  <|@  <|@
f <@~|@floating>@ <|@
tid j1208 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1202 
y: j1207 
=== Succesors ===
=== Usages ===
j1196 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1202 y: j1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
v1444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v36|QWORD * 2], input: v38|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v36|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1196 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v921 
values: j1208 j1202 
=== Succesors ===
=== Usages ===
v1605 j1201 j1189 v1237 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v921 values: j1208 j1202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v920 v938 
=== Succesors ===
next: v941 
=== Usages ===
j1196 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v920 v938 #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid j1235 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1236 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j441 
y: j1235 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j1235  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1236 
y: j1196 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1236 y: j1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1237 
=== Succesors ===
trueSuccessor: v940 
falseSuccessor: v939 
=== Usages ===
=== Predecessor ===
v921 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1237 #trueSuccessor: v940 #falseSuccessor: v939  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v26|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v944 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v940 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1442 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1442  <|@  <|@
f <@~|@floating>@ <|@
tid v1605 <|@
result [v27|QWORD[.] + v40|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1188 
index: j1196 
=== Succesors ===
=== Usages ===
v1442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1188 index: j1196  <|@  <|@
f <@~|@floating>@ <|@
tid v1483 <|@
result v42|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1605 
value: v1483 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v923 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1605 value: v1483 stateAfter: - lastLocationAccess: - #next: v923  <|@  <|@
f <@~|@floating>@ <|@
tid j1201 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1196 
y: j1191 
=== Succesors ===
=== Usages ===
j1189 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1196 y: j1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
v1442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v40|QWORD * 2], input: v42|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v40|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1189 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v924 
values: j1201 j1196 
=== Succesors ===
=== Usages ===
v1604 v1240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v924 values: j1201 j1196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v923 v944 
=== Succesors ===
next: v947 
=== Usages ===
j1189 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v923 v944 #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid j1239 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j441 
y: j445 
=== Succesors ===
=== Usages ===
v1240 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1239 
y: j1189 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1239 y: j1189  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1240 
=== Succesors ===
trueSuccessor: v946 
falseSuccessor: v945 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1240 #trueSuccessor: v946 #falseSuccessor: v945  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = DEC v26|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
v946 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1440 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1440  <|@  <|@
f <@~|@floating>@ <|@
tid v1604 <|@
result [v27|QWORD[.] + v44|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1188 
index: j1189 
=== Succesors ===
=== Usages ===
v1440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1188 index: j1189  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1604 
value: i1482 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v945 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1604 value: i1482 stateAfter: - lastLocationAccess: - #next: v926  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
v1440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + v44|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v909 v926 v950 
=== Succesors ===
next: a614 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v909 v926 v950 #next: a614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a614 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 5]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a729 
=== Succesors ===
next: j764 
=== Usages ===
j768 ?82 ?129 v1559 v1561 ?124 
=== Predecessor ===
v910 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a729 #next: j764  <|@  <|@
f <@~|@floating>@ <|@
tid a231 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.toCharArray(String.java:2899) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1540 
=== Succesors ===
=== Usages ===
j764 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j764 <|@
result v47|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i64
=== Inputs ===
object: a231 
=== Succesors ===
next: j768 
=== Usages ===
v1583 
=== Predecessor ===
a614 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a231 #next: j768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j768 <|@
result v48|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: i64
=== Inputs ===
object: a614 
=== Succesors ===
next: v770 
=== Usages ===
v1584 
=== Predecessor ===
j764 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a614 #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
result [v47|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j764 
index: - 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
result [v48|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j768 
index: - 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j768 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1583 v1584 j441 
=== Succesors ===
next: f1543 
=== Usages ===
=== Predecessor ===
j768 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1583 v1584 j441 #next: f1543  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
result [v11|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a215 
index: - 
=== Succesors ===
=== Usages ===
f1543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f1543 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.maxBytesPerChar
nodeSourcePosition: at java.nio.charset.CharsetEncoder.maxBytesPerChar(CharsetEncoder.java:465) [bci: 1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 17]
nullCheck: false
stamp: f32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1557 
=== Succesors ===
next: v290 
=== Usages ===
f19 
=== Predecessor ===
v770 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1557 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid f14 <|@
result v49|SINGLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@75ad9794
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 15]
op: I2F
stamp: f32! [0.0 - 2.147483648E9]
=== Inputs ===
value: i1542 
=== Succesors ===
=== Usages ===
f19 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid f19 <|@
result v50|SINGLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 20]
stamp: f32
=== Inputs ===
x: f14 
y: f1543 
=== Succesors ===
=== Usages ===
v296 i285 v291 v291 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: f14 y: f1543  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.amd64.AMD64FloatConvertNode$$Lambda$199/890056911@5276be38
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
op: F2I
stamp: i32
=== Inputs ===
value: f19 
=== Succesors ===
=== Usages ===
v287 i303 i303 j556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64FloatConvert|@org.graalvm.compiler.replacements.amd64.AMD64FloatConvertNode>@ value: f19  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i285 
=== Succesors ===
=== Usages ===
j557 j557 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i285  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
result int[-2147483648|0xffffffff80000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:64) [bci: 4]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
rawvalue: -2147483648
stableDimension: 0
stamp: i32 [-2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i32
value: int[-2147483648|0xffffffff80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:64) [bci: 6]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i286 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i285 y: i286  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:64) [bci: 17]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v288 
=== Usages ===
=== Predecessor ===
f1543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v289 #falseSuccessor: v288  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v48|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v49|SINGLE = VCVTSI2SS v16|DWORD <|@ <|@
      nr   -1  <|@ instruction v50|SINGLE = VMULSS (x: v49|SINGLE, y: [v11|QWORD[.] + 16]) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = VCVTTSS2SI v50|SINGLE nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v51|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:65) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Float.isNaN(Float.java:463) [bci: 3]
at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:65) [bci: 21]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: f19 
y: f19 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: f19 y: f19  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:65) [bci: 24]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v291 
=== Succesors ===
trueSuccessor: v292 
falseSuccessor: v293 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v291 #trueSuccessor: v292 #falseSuccessor: v293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction VUCOMISS (x: v50|SINGLE, y: v50|SINGLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B37 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:68) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid f295 <|@
result float[0.0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:68) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
rawvalue: 0.0
stableDimension: 0
stamp: f32! [0.0]
stampKind: f32
value: float[0.0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:68) [bci: 32]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: f295 
y: f19 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.FloatLessThanNode>@ x: f295 y: f19  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:68) [bci: 32]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v297 #falseSuccessor: v298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|SINGLE = VMOVE input: float[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction VUCOMISS (x: v50|SINGLE, y: v53|SINGLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:70) [bci: 35]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
result long[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i64 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i64
value: long[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j557 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:70) [bci: 35]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[2147483647|0x7fffffff], long[2147483647|0x7fffffff]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:73) [bci: 38]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v52|QWORD] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:67) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64ConvertSnippets.f2i(AMD64ConvertSnippets.java:73) [bci: 38]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v288 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v52|QWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" "B38" "B36" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i303 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v301 
values: i22 i300 i285 i285 
=== Succesors ===
=== Usages ===
i418 j951 v23 i603 v191 v372 v344 v363 v569 v576 v812 v778 a793 v1181 i800 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: i22 i300 i285 i285  <|@  <|@
f <@~|@floating>@ <|@
tid j557 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v301 
values: j554 j555 j556 j556 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: j554 j555 j556 j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:79) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v302 v304 v305 v306 
=== Succesors ===
next: v1513 
=== Usages ===
i303 j557 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v302 v304 v305 v306 #next: v1513  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 14]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i1542 
=== Succesors ===
=== Usages ===
i418 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v191 
trueValue: i303 
falseValue: i1542 
=== Succesors ===
=== Usages ===
v480 v94 j444 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v191 trueValue: i303 falseValue: i1542  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i418 
=== Succesors ===
=== Usages ===
j446 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i418  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j444 
y: j445 
=== Succesors ===
=== Usages ===
v456 v448 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j444 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i418 
y: i115 
=== Succesors ===
=== Usages ===
v1529 v1513 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i418 y: i115  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ZipCoder.getBytes(String)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 78
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a215 - - - - - - 
=== Succesors ===
=== Usages ===
?82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a215 - - - - - -  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<String.toCharArray()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toCharArray(String.java:2900) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
rethrowException: false
sourceFile: String.java
sourceLine: 2901
stackSize: 0
=== Inputs ===
outerFrameState: ?84 
values: - a614 
=== Succesors ===
=== Usages ===
v655 a793 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?84 values: - a614  <|@  <|@
f <@~|@floating>@ <|@
tid a658 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1415578595
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1415578595]
=== Inputs ===
=== Succesors ===
=== Usages ===
a654 a654 a654 a654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v1509 
falseSuccessor: v1512 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v1509 #falseSuccessor: v1512  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = CMOVE (falseValue: v16|DWORD, ~trueValue: v54|DWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = DEC v57|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr   -1  <|@ instruction CMP v56|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
v1513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1507  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
v1509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B175" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1521 
=== Usages ===
=== Predecessor ===
v1513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1521  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j446 
y: j441 
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j446 y: j441  <|@  <|@
f <@~|@floating>@ <|@
tid i657 <|@
result int[-80923|0xfffffffffffec3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -80923
stableDimension: 0
stamp: i32 [-80923] ⇊00000000fffec3e5 ⇈00000000fffec3e5
stampKind: i32
value: int[-80923|0xfffffffffffec3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i653 i653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v448 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1517 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v448 #trueSuccessor: v1520 #falseSuccessor: v1517  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1519 
=== Usages ===
=== Predecessor ===
v1521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1519  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v1518 
falseSuccessor: v1510 
=== Usages ===
=== Predecessor ===
v1520 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v1518 #falseSuccessor: v1510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1637 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1637  <|@  <|@
f <@*|@fixed>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v1518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-80923|0xfffffffffffec3e5], v59|QWORD[.]] destination: B43 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1508 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1508  <|@  <|@
f <@*|@fixed>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
v1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1507 v1508 
=== Succesors ===
next: v1529 
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1507 v1508 #next: v1529  <|@  <|@
f <@~|@floating>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:81) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i22 
=== Succesors ===
=== Usages ===
v518 v1535 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i303 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v1525 
falseSuccessor: v1528 
=== Usages ===
=== Predecessor ===
v1506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v1525 #falseSuccessor: v1528  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v56|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1523 
=== Usages ===
=== Predecessor ===
v1529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1523  <|@  <|@
f <@*|@fixed>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1522 
=== Predecessor ===
v1525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B174" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1537 
=== Usages ===
=== Predecessor ===
v1529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1537  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j446 
y: j557 
=== Succesors ===
=== Usages ===
v1537 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j446 y: j557  <|@  <|@
f <@~|@floating>@ <|@
tid i660 <|@
result int[-83739|0xfffffffffffeb8e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -83739
stableDimension: 0
stamp: i32 [-83739] ⇊00000000fffeb8e5 ⇈00000000fffeb8e5
stampKind: i32
value: int[-83739|0xfffffffffffeb8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i653 i653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v1536 
falseSuccessor: v1533 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v1536 #falseSuccessor: v1533  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1535 
=== Usages ===
=== Predecessor ===
v1537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1535  <|@  <|@
f <@*|@fixed>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v1534 
falseSuccessor: v1526 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v1534 #falseSuccessor: v1526  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1638 
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1638  <|@  <|@
f <@*|@fixed>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v1534 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], v59|QWORD[.]] destination: B49 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1524 
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1522 
=== Predecessor ===
v1526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1523 v1524 
=== Succesors ===
next: v518 
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1523 v1524 #next: v518  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:81) [bci: 32]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v23 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v23 #trueSuccessor: v517 #falseSuccessor: v515  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:81) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v651  <|@  <|@
f <@~|@floating>@ <|@
tid i652 <|@
result int[-79379|0xfffffffffffec9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79379
stableDimension: 0
stamp: i32 [-79379] ⇊00000000fffec9ed ⇈00000000fffec9ed
stampKind: i32
value: int[-79379|0xfffffffffffec9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79379|0xfffffffffffec9ed], Object[null]] destination: B52 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:81) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j773 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j773 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j809 
=== Usages ===
v1585 v1586 
=== Predecessor ===
v515 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j809  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j773 
index: - 
=== Succesors ===
=== Usages ===
j809 v811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j773 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j809 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
=== Succesors ===
next: j810 
=== Usages ===
j777 v1587 v1588 a792 v1593 v1589 v1590 v1591 v1592 
=== Predecessor ===
j773 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1585 #next: j810  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j773 
index: - 
=== Succesors ===
=== Usages ===
j810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j773 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j810 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1586 
=== Succesors ===
next: v781 
=== Usages ===
v782 
=== Predecessor ===
j809 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1586 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i709 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i709  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a793 a845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 v868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v778 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v779 
=== Usages ===
=== Predecessor ===
j810 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v778 #trueSuccessor: v780 #falseSuccessor: v779  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v54|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v788  <|@  <|@
f <@~|@floating>@ <|@
tid i800 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: i32
=== Inputs ===
x: i303 
y: i732 
=== Succesors ===
=== Usages ===
i772 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid i772 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i800 
y: i702 
=== Succesors ===
=== Usages ===
j776 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i800 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid j776 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i772 
=== Succesors ===
=== Usages ===
j777 v1589 v1590 v1591 v1592 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i772  <|@  <|@
f <@~|@floating>@ <|@
tid j777 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: i64
=== Inputs ===
x: j776 
y: j809 
=== Succesors ===
=== Usages ===
v782 v811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j776 y: j809  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j810 
y: j777 
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j810 y: j777  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v782 
=== Succesors ===
trueSuccessor: v787 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v782 #trueSuccessor: v787 #falseSuccessor: v786  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = LEA [v54|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = AND v63|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVSXD v64|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = ADD (x: v65|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
value: j777 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1585 value: j777 stateAfter: - lastLocationAccess: - #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid v1589 <|@
result [v65|QWORD + v60|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: j809 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
address: v1589 
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1589 #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid v1590 <|@
result [v65|QWORD + v60|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: j809 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
address: v1590 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1590 #next: v806  <|@  <|@
f <@~|@floating>@ <|@
tid v1591 <|@
result [v65|QWORD + v60|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: j809 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
address: v1591 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1591 #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid v1592 <|@
result [v65|QWORD + v60|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j776 
index: j809 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
address: v1592 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1592 #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
result [v60|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1587 
value: i303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1587 value: i303 stateAfter: - lastLocationAccess: - #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
result [v60|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1588 
value: j700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1588 value: j700 stateAfter: - lastLocationAccess: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v1593 <|@
result [v60|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j809 
index: - 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j809 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1593 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1593 value: v877 stateAfter: - lastLocationAccess: - #next: v791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a792 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a792 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j809 
=== Succesors ===
next: v794 
=== Usages ===
a797 
=== Predecessor ===
v791 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j809 #next: v794  <|@  <|@
f <@*|@fixed>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
a792 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v65|QWORD + v60|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v65|QWORD + v60|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v65|QWORD + v60|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v65|QWORD + v60|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD + 12], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v783 v785 
=== Succesors ===
next: a793 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v783 v785 #next: a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a793 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?82 
arguments: v771 i303 i22 
=== Succesors ===
next: v796 
=== Usages ===
a797 
=== Predecessor ===
v784 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?82 arguments: v771 i303 i22 #next: v796  <|@  <|@
f <@*|@fixed>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
a793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v54|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toCharArray(String.java:2901) [bci: 23]
locals: - v25|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
locals: v0|QWORD[.] - v11|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23, 9] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a797 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v795 
values: a792 a793 
=== Succesors ===
=== Usages ===
v1571 a618 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v795 values: a792 a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v794 v796 
=== Succesors ===
next: v1243 
=== Usages ===
a797 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v794 v796 #next: v1243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v959 
=== Usages ===
j1245 
=== Predecessor ===
v795 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i115 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
result v70|V32_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1454 v1477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1488 <|@
result v71|V64_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1456 v1478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
result v72|V128_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1458 v1479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.onMalformedInput(CharsetEncoder.java:384) [bci: 16]
at java.util.zip.ZipCoder.encoder(ZipCoder.java:154) [bci: 18]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1404 j1276 j1348 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1486 <|@
result v73|V256_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1480 v1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1277 <|@
result long[-32|0xffffffffffffffe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32
stableDimension: 0
stamp: i64 [-32] ⇊ffffffffffffffe0 ⇈ffffffffffffffe0
stampKind: i64
value: long[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1278 j1349 j1405 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1181 
=== Succesors ===
trueSuccessor: v957 
falseSuccessor: v958 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1181 #trueSuccessor: v957 #falseSuccessor: v958  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v71|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v72|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v73|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction CMP v54|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v957 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v962 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v962  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
result [v69|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a797 
index: - 
=== Succesors ===
=== Usages ===
j1245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a797 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1245 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1243 
address: v1571 
=== Succesors ===
=== Usages ===
v1609 v1610 v1611 v1612 v1613 v1614 v1615 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1243 address: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid j951 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
j1292 j1278 j1283 j1286 j1289 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i303  <|@  <|@
f <@~|@floating>@ <|@
tid j1278 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483615]
=== Inputs ===
x: j951 
y: j1277 
=== Succesors ===
=== Usages ===
v1279 v1281 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j951 y: j1277  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1278 
y: j554 
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1278 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1279 
=== Succesors ===
trueSuccessor: v960 
falseSuccessor: v961 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1279 #trueSuccessor: v960 #falseSuccessor: v961  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LEA [v69|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v54|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v75|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v971 
=== Usages ===
=== Predecessor ===
v962 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v971  <|@  <|@
f <@*|@fixed>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
v960 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
v962 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v963  <|@  <|@
f <@*|@fixed>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
v961 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B173" 
    successors "B65" "B173" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1272 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v964 
values: j554 j1276 
=== Succesors ===
=== Usages ===
v1615 j1276 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v964 values: j554 j1276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v963 
=== Succesors ===
next: v1459 
=== Usages ===
j1272 v967 v968 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v963 #next: v1459  <|@  <|@
f <@~|@floating>@ <|@
tid v1615 <|@
result [v74|QWORD[.] + v77|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1272 
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1615 
value: v1486 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1615 value: v1486 stateAfter: - lastLocationAccess: - #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid j1276 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1272 
y: j391 
=== Succesors ===
=== Usages ===
j1267 j1272 v1281 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1272 y: j391  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1278 
y: j1276 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1278 y: j1276  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1281 
=== Succesors ===
trueSuccessor: v967 
falseSuccessor: v969 
=== Usages ===
=== Predecessor ===
v1459 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1281 #trueSuccessor: v967 #falseSuccessor: v969  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v77|QWORD * 1], input: v73|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v77|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v964 
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v964 #next: v973  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1267 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v972 
values: j554 j1276 
=== Succesors ===
=== Usages ===
v1614 j1271 j1262 v1284 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v972 values: j554 j1276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v971 v973 
=== Succesors ===
next: v994 
=== Usages ===
j1267 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v971 v973 #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid j1283 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j951 
y: j1221 
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j951 y: j1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1283 
y: j1267 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1283 y: j1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1284 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v992 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1284 #trueSuccessor: v993 #falseSuccessor: v992  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v75|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v997  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1458 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1458  <|@  <|@
f <@~|@floating>@ <|@
tid v1614 <|@
result [v74|QWORD[.] + v79|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1267 
=== Succesors ===
=== Usages ===
v1458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1614 
value: v1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1614 value: v1489 stateAfter: - lastLocationAccess: - #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid j1271 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1267 
y: j282 
=== Succesors ===
=== Usages ===
j1262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1267 y: j282  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
v1458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v79|QWORD * 1], input: v72|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v79|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1262 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v983 
values: j1271 j1267 
=== Succesors ===
=== Usages ===
v1613 j1266 j1257 v1287 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v983 values: j1271 j1267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v982 v997 
=== Succesors ===
next: v1000 
=== Usages ===
j1262 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v982 v997 #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid j1286 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j951 
y: j1227 
=== Succesors ===
=== Usages ===
v1287 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j951 y: j1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1286 
y: j1262 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1286 y: j1262  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1287 
=== Succesors ===
trueSuccessor: v999 
falseSuccessor: v998 
=== Usages ===
=== Predecessor ===
v983 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1287 #trueSuccessor: v999 #falseSuccessor: v998  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@*|@fixed>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
v999 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1456 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1456  <|@  <|@
f <@~|@floating>@ <|@
tid v1613 <|@
result [v74|QWORD[.] + v82|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1262 
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1613 
value: v1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1613 value: v1488 stateAfter: - lastLocationAccess: - #next: v985  <|@  <|@
f <@~|@floating>@ <|@
tid j1266 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1262 
y: j754 
=== Succesors ===
=== Usages ===
j1257 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1262 y: j754  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
v1456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v82|QWORD * 1], input: v71|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v82|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1257 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v986 
values: j1266 j1262 
=== Succesors ===
=== Usages ===
v1612 j1261 j1246 v1290 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v986 values: j1266 j1262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v985 v1003 
=== Succesors ===
next: v1006 
=== Usages ===
j1257 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v985 v1003 #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid j1289 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j951 
y: j1231 
=== Succesors ===
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j951 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1289 
y: j1257 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1289 y: j1257  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1290 
=== Succesors ===
trueSuccessor: v1005 
falseSuccessor: v1004 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1290 #trueSuccessor: v1005 #falseSuccessor: v1004  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v75|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
v1005 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid v1612 <|@
result [v74|QWORD[.] + v85|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1257 
=== Succesors ===
=== Usages ===
v1454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1612 
value: v1487 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1612 value: v1487 stateAfter: - lastLocationAccess: - #next: v988  <|@  <|@
f <@~|@floating>@ <|@
tid j1261 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1257 
y: j1207 
=== Succesors ===
=== Usages ===
j1246 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1257 y: j1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
v1454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v85|QWORD * 1], input: v70|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v85|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1246 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v989 
values: j1261 j1257 
=== Succesors ===
=== Usages ===
v1609 j1250 v1293 j1426 v1610 v1611 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v989 values: j1261 j1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v988 v1009 
=== Succesors ===
next: v1012 
=== Usages ===
j1246 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v988 v1009 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid j1292 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j951 
y: j445 
=== Succesors ===
=== Usages ===
v1293 v1295 v1297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j951 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1292 
y: j1246 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1292 y: j1246  <|@  <|@
f <@*|@fixed>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1293 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1010 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1293 #trueSuccessor: v1011 #falseSuccessor: v1010  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = DEC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v1011 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1450 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1450  <|@  <|@
f <@~|@floating>@ <|@
tid v1609 <|@
result [v74|QWORD[.] + v88|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1246 
=== Succesors ===
=== Usages ===
v1450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1609 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1609 value: i404 stateAfter: - lastLocationAccess: - #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid j1250 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1246 
y: j700 
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1246 y: j700  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1292 
y: j1250 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1292 y: j1250  <|@  <|@
f <@*|@fixed>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1295 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1016 
=== Usages ===
=== Predecessor ===
v1450 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1295 #trueSuccessor: v1017 #falseSuccessor: v1016  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v74|QWORD[.] + v88|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = INC v88|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4591419820104220672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v1017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4598738169498697728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1451 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1451  <|@  <|@
f <@~|@floating>@ <|@
tid v1610 <|@
result [v74|QWORD[.] + v88|QWORD * 1 + 1] <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1246 
=== Succesors ===
=== Usages ===
v1451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1610 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1610 value: i404 stateAfter: - lastLocationAccess: - #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid j1426 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1246 
y: j1191 
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1246 y: j1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1292 
y: j1426 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1292 y: j1426  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1297 
=== Succesors ===
trueSuccessor: v1023 
falseSuccessor: v1022 
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1297 #trueSuccessor: v1023 #falseSuccessor: v1022  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v74|QWORD[.] + v88|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v88|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4589730970243956736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1027  <|@  <|@
f <@*|@fixed>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v1023 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4596767844661723136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1452 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1452  <|@  <|@
f <@~|@floating>@ <|@
tid v1611 <|@
result [v74|QWORD[.] + v88|QWORD * 1 + 2] <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1245 
index: j1246 
=== Succesors ===
=== Usages ===
v1452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1245 index: j1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1611 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1611 value: i404 stateAfter: - lastLocationAccess: - #next: v991  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v1452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v74|QWORD[.] + v88|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B60" "B81" "B76" "B78" "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v975 v991 v1015 v1021 v1027 
=== Succesors ===
next: a618 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v975 v991 v1015 v1021 v1027 #next: a618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a618 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:80) [bci: 26]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a797 
=== Succesors ===
next: v89 
=== Usages ===
v1560 ?185 v1568 v1564 v1562 ?129 v1563 ?124 
=== Predecessor ===
v976 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a797 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i406 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
a618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B85" 
    successors "B84" "B87" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4633717132025923255
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i91 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v90 
values: i22 i117 
=== Succesors ===
=== Usages ===
i127 v1560 v1559 v469 i117 i463 ?124 v94 v472 j462 ?124 i128 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v90 values: i22 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 60.54047728144854
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v89 
=== Succesors ===
next: v100 
=== Usages ===
i91 v123 v96 v108 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v89 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i418 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i91 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.9835900530402635
=== Inputs ===
condition: v94 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v94 #trueSuccessor: v95 #falseSuccessor: v96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4633577314113346477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 27]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1544 
=== Usages ===
v454 v461 
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1544  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1506 v95 
=== Succesors ===
=== Usages ===
i1544 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1506 v95  <|@  <|@
f <@~|@floating>@ <|@
tid v1559 <|@
result [v25|QWORD[.] + v92|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a614 
index: i91 
=== Succesors ===
=== Usages ===
i1544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a614 index: i91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1544 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v454 
address: v1559 
=== Succesors ===
next: v114 
=== Usages ===
v407 i408 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v454 address: v1559 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1544 
y: i406 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1544 y: i406  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.9998902719253914
=== Inputs ===
condition: v407 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
i1544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v407 #trueSuccessor: v104 #falseSuccessor: v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVSX [v25|QWORD[.] + v92|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v93|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B83" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4633576394537567927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 36]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1522 v95 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1522 v95  <|@  <|@
f <@~|@floating>@ <|@
tid v1560 <|@
result [v69|QWORD[.] + v92|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a618 
index: i91 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a618 index: i91  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 49]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1544 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v461 
address: v1560 
value: i408 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v461 address: v1560 value: i408 stateAfter: - lastLocationAccess: - #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 45]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32
=== Inputs ===
x: i91 
y: i115 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i91 y: i115  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
loopBegin: v90 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v90  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[.] + v92|DWORD * 1 + 16], y: v93|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = INC v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD] destination: B85 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B88" 
    xhandlers
    flags 
    probability 4574183186931563751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v90 
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v90 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B88" 
    xhandlers
    flags 
    probability 4607123565950190215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v90 
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v90 #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v105 v107 
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v105 v107 #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i1542 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i91 y: i1542  <|@  <|@
tid ?185 <|@
d <@d|@=== Debug Properties ===
bci: 62
code: ResolvedJavaMethodBytecode<ZipCoder.getBytes(String)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: ZipCoder.java
sourceLine: 86
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - a618 - - - 
=== Succesors ===
=== Usages ===
?124 ?129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - a618 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v472 
=== Succesors ===
trueSuccessor: v1496 
falseSuccessor: v1493 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v472 #trueSuccessor: v1496 #falseSuccessor: v1493  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1505  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i91 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i91  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i1542 
y: i91 
=== Succesors ===
=== Usages ===
j464 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1542 y: i91  <|@  <|@
f <@~|@floating>@ <|@
tid j464 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i463 
=== Succesors ===
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i463  <|@  <|@
f <@~|@floating>@ <|@
tid j465 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j464 
y: j445 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j464 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j462 
y: j465 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j462 y: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j466 
y: j441 
=== Succesors ===
=== Usages ===
v1505 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j466 y: j441  <|@  <|@
f <@*|@fixed>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v468 
=== Succesors ===
trueSuccessor: v1504 
falseSuccessor: v1501 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v468 #trueSuccessor: v1504 #falseSuccessor: v1501  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v92|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = SUB (x: v16|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVSXD v96|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = DEC v97|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = ADD (x: v95|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1503 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1503  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i1542 
=== Succesors ===
=== Usages ===
v1503 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i91 y: i1542  <|@  <|@
f <@*|@fixed>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v469 
=== Succesors ===
trueSuccessor: v1494 
falseSuccessor: v1502 
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v469 #trueSuccessor: v1494 #falseSuccessor: v1502  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1492 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1492  <|@  <|@
f <@*|@fixed>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
v1494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1500 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1500  <|@  <|@
f <@*|@fixed>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1498 
=== Predecessor ===
v1502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1499 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1499  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1498 
=== Predecessor ===
v1501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1499 v1500 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1499 v1500 #next: v520  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: ?185 
values: a215 a614 i91 - a618 i1542 i91 - - - 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?185 values: a215 a614 i91 - a618 i1542 i91 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 336
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
reason: BoundsCheckException
speculation: Object[d.a@1023872315]
stamp: void
=== Inputs ===
stateBefore: ?124 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1023872315] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -86043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: v11|QWORD[.] v25|QWORD[.] v92|DWORD - v69|QWORD[.] v16|DWORD v92|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - v69|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:54, 62] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B96" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1491  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
v1493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1491 v1492 
=== Succesors ===
next: v125 
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1491 v1492 #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
v1490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, v92|DWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B100" "B106" 
    successors "B98" "B111" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608053799174313579
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i127 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v126 
values: i91 i136 i136 
=== Succesors ===
=== Usages ===
?129 v130 i136 v1561 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v126 values: i91 i136 i136  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v126 
values: i91 i142 i183 
=== Succesors ===
=== Usages ===
?129 v36 i142 v344 i183 v1562 i181 j878 v562 v576 i603 i852 v864 v830 a845 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v126 values: i91 i142 i183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1934853109500192
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v125 
=== Succesors ===
next: v135 
=== Usages ===
i127 i128 v132 v178 v184 v546 v526 v531 v536 v541 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v125 #next: v135  <|@  <|@
tid ?129 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: ?185 
values: a215 a614 i127 - a618 i1542 i128 - - - 
=== Succesors ===
=== Usages ===
v666 a845 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?185 values: a215 a614 i127 - a618 i1542 i128 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i1542 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i127 y: i1542  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.16211788211788214
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v132  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|DWORD, v102|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B110" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4596139063284904789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 60]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
v474 
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i303 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i128 y: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v523 
falseSuccessor: v526 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v523 #falseSuccessor: v526  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4596139063284904789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1545 
=== Usages ===
v362 v352 
=== Predecessor ===
v527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1545  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1490 v131 
=== Succesors ===
=== Usages ===
i1545 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1490 v131  <|@  <|@
f <@~|@floating>@ <|@
tid v1561 <|@
result [v25|QWORD[.] + v101|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a614 
index: i127 
=== Succesors ===
=== Usages ===
i1545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a614 index: i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1545 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v474 
address: v1561 
=== Succesors ===
next: v141 
=== Usages ===
i343 
=== Predecessor ===
v523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v474 address: v1561 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1545 
=== Succesors ===
=== Usages ===
v138 i143 i164 v148 i172 v209 i157 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1545  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 30]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 v138 i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i102 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i343 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 62]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32
=== Inputs ===
x: i127 
y: i115 
=== Succesors ===
=== Usages ===
i127 i127 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i127 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 80]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32
=== Inputs ===
x: i128 
y: i115 
=== Succesors ===
=== Usages ===
i128 v363 v1563 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
result [v69|QWORD[.] + v102|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a618 
index: i128 
=== Succesors ===
=== Usages ===
v362 v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a618 index: i128  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.942568400295785
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
i1545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v139 #falseSuccessor: v140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVZX [v25|QWORD[.] + v101|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC v101|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B97" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4595738705134131296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 76]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 85]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 8
stamp: i8
=== Inputs ===
value: i343 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v523 
address: v1562 
value: i143 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v523 address: v1562 value: i143 stateAfter: - lastLocationAccess: - #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
loopBegin: v126 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[.] + v102|DWORD * 1 + 16], y: v103|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD, v105|DWORD] destination: B100 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 90]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 92]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i147 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i343 y: i147  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v148 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v148 #trueSuccessor: v531 #falseSuccessor: v528  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid i670 <|@
result int[-90387|0xfffffffffffe9eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90387
stableDimension: 0
stamp: i32 [-90387] ⇊00000000fffe9eed ⇈00000000fffe9eed
stampKind: i32
value: int[-90387|0xfffffffffffe9eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90387|0xfffffffffffe9eed]] destination: B102 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B109" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i208 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i343 y: i208  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v533 #falseSuccessor: v536  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B108" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i303 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i142 y: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v363 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v363 #trueSuccessor: v538 #falseSuccessor: v541  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
v371 
=== Predecessor ===
v542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32
=== Inputs ===
x: i128 
y: i180 
=== Succesors ===
=== Usages ===
v372 v1564 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i180  <|@  <|@
f <@~|@floating>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i303 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i181 y: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v372 
=== Succesors ===
trueSuccessor: v543 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v372 #trueSuccessor: v543 #falseSuccessor: v546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v102|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B97" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
v380 
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 308]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i157 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 310]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i343 
y: i156 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i343 y: i156  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 303]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 311]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i157 
y: i155 
=== Succesors ===
=== Usages ===
i159 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i157 y: i155  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 312]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i158 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v523 
address: v1562 
value: i159 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v523 address: v1562 value: i159 stateAfter: - lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v1563 <|@
result [v69|QWORD[.] + v105|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a618 
index: i142 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a618 index: i142  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 326]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 328]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i343 
y: i163 
=== Succesors ===
=== Usages ===
i166 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i343 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 329]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i166 i172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 331]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i164 
y: i165 
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i164 y: i165  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 332]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i166 
y: i102 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i166 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 333]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i167 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v538 
address: v1563 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v538 address: v1563 value: i168 stateAfter: - lastLocationAccess: - #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v1564 <|@
result [v69|QWORD[.] + v106|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a618 
index: i181 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a618 index: i181  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 349]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i343 
y: i165 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i343 y: i165  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 350]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i172 
y: i102 
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i172 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 351]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i173 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v543 
address: v1564 
value: i174 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v543 address: v1564 value: i174 stateAfter: - lastLocationAccess: - #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: i32
=== Inputs ===
x: i128 
y: i182 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i182  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:742) [bci: 353]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
loopBegin: v126 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = SHR v103|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = OR v107|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[.] + v102|DWORD * 1 + 16], y: v108|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHR v103|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = AND v109|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = OR v110|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[.] + v105|DWORD * 1 + 16], y: v111|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = AND v103|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = OR v112|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[.] + v106|DWORD * 1 + 16], y: v113|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = LEA [v102|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD, v114|DWORD] destination: B106 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
result int[-95515|0xfffffffffffe8ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -95515
stableDimension: 0
stamp: i32 [-95515] ⇊00000000fffe8ae5 ⇈00000000fffe8ae5
stampKind: i32
value: int[-95515|0xfffffffffffe8ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-95515|0xfffffffffffe8ae5]] destination: B107 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
result int[-93211|0xfffffffffffe93e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93211
stableDimension: 0
stamp: i32 [-93211] ⇊00000000fffe93e5 ⇈00000000fffe93e5
stampKind: i32
value: int[-93211|0xfffffffffffe93e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93211|0xfffffffffffe93e5]] destination: B108 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
result int[-90643|0xfffffffffffe9ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90643
stableDimension: 0
stamp: i32 [-90643] ⇊00000000fffe9ded ⇈00000000fffe9ded
stampKind: i32
value: int[-90643|0xfffffffffffe9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90643|0xfffffffffffe9ded]] destination: B109 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
result int[-110875|0xfffffffffffe4ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -110875
stableDimension: 0
stamp: i32 [-110875] ⇊00000000fffe4ee5 ⇈00000000fffe4ee5
stampKind: i32
value: int[-110875|0xfffffffffffe4ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110875|0xfffffffffffe4ee5]] destination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 356]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v126 
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v126 #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:87) [bci: 71]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:87) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i35 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i128 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:87) [bci: 72]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v550 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v550 #falseSuccessor: v548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v102|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:87) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@~|@floating>@ <|@
tid i663 <|@
result int[-97555|0xfffffffffffe82ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -97555
stableDimension: 0
stamp: i32 [-97555] ⇊00000000fffe82ed ⇈00000000fffe82ed
stampKind: i32
value: int[-97555|0xfffffffffffe82ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-97555|0xfffffffffffe82ed]] destination: B112 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:87) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i22 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i128 y: i22  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
result int[-147041|0xfffffffffffdc19f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147041
stableDimension: 0
stamp: i32 [-147041] ⇊00000000fffdc19f ⇈00000000fffdc19f
stampKind: i32
value: int[-147041|0xfffffffffffdc19f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i664 i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v562 
=== Succesors ===
trueSuccessor: v567 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v562 #trueSuccessor: v567 #falseSuccessor: v563  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v102|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    probability 4547007122018942976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v567 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147041|0xfffffffffffdc19f]] destination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B118" 
    xhandlers
    flags 
    probability 4607181518080091934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 41]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i22 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v569 
=== Succesors ===
trueSuccessor: v572 
falseSuccessor: v570 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v569 #trueSuccessor: v572 #falseSuccessor: v570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 4547006384149180028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147041|0xfffffffffffdc19f]] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B112" "B110" "B102" "B109" "B108" "B107" "B114" "B116" 
    successors 
    xhandlers
    flags 
    probability 4551510352711431998
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i664 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-147041 - -90387] ⇊00000000fffc0085 ⇈00000000ffffdfff
valueDescription: i32
=== Inputs ===
merge: v661 
values: i663 i668 i670 i672 i674 i676 i678 i678 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v661 values: i663 i668 i670 i672 i674 i676 i678 i678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v662 v667 v669 v671 v673 v675 v677 v679 
=== Succesors ===
next: v666 
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v662 v667 v669 v671 v673 v675 v677 v679 #next: v666  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?129 
actionAndReason: i664 
speculation: a636 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?129 actionAndReason: i664 speculation: a636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: v11|QWORD[.] v25|QWORD[.] v101|DWORD - v69|QWORD[.] v16|DWORD v102|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - v69|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:54, 62] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" "B122" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:72) [bci: 3]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: j825 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j825 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j861 
=== Usages ===
v1594 v1595 
=== Predecessor ===
v570 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j861  <|@  <|@
f <@~|@floating>@ <|@
tid v1594 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
j861 v863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j861 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1594 
=== Succesors ===
next: j862 
=== Usages ===
j829 v1596 v1597 a844 v1602 v1598 v1599 v1600 v1601 
=== Predecessor ===
j825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1594 #next: j862  <|@  <|@
f <@~|@floating>@ <|@
tid v1595 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j825 
index: - 
=== Succesors ===
=== Usages ===
j862 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j825 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j862 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1595 
=== Succesors ===
next: v833 
=== Usages ===
v834 
=== Predecessor ===
j861 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1595 #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i709 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i128 y: i709  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v830 
=== Succesors ===
trueSuccessor: v832 
falseSuccessor: v831 
=== Usages ===
=== Predecessor ===
j862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v830 #trueSuccessor: v832 #falseSuccessor: v831  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v102|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B118 -> B119 falseDestination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4606280077659742249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v840  <|@  <|@
f <@~|@floating>@ <|@
tid i852 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: i32
=== Inputs ===
x: i128 
y: i732 
=== Succesors ===
=== Usages ===
i824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid i824 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i852 
y: i702 
=== Succesors ===
=== Usages ===
j828 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i852 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i824 
=== Succesors ===
=== Usages ===
j829 v1598 v1599 v1600 v1601 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i824  <|@  <|@
f <@~|@floating>@ <|@
tid j829 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: i64
=== Inputs ===
x: j828 
y: j861 
=== Succesors ===
=== Usages ===
v834 v863 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j828 y: j861  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j862 
y: j829 
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j862 y: j829  <|@  <|@
f <@*|@fixed>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v834 
=== Succesors ===
trueSuccessor: v839 
falseSuccessor: v838 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v834 #trueSuccessor: v839 #falseSuccessor: v838  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = LEA [v102|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = AND v118|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOVSXD v119|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = ADD (x: v120|QWORD, y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v121|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B123" 
    xhandlers
    flags 
    probability 4576340730974311578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v839 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4606199029078597591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1594 
value: j829 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1594 value: j829 stateAfter: - lastLocationAccess: - #next: v854  <|@  <|@
f <@~|@floating>@ <|@
tid v1598 <|@
result [v120|QWORD + v116|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j828 
index: j861 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j828 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
address: v1598 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1598 #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1599 <|@
result [v120|QWORD + v116|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j828 
index: j861 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j828 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
address: v1599 
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1599 #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v1600 <|@
result [v120|QWORD + v116|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j828 
index: j861 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j828 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
address: v1600 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1600 #next: v860  <|@  <|@
f <@~|@floating>@ <|@
tid v1601 <|@
result [v120|QWORD + v116|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j828 
index: j861 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j828 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
address: v1601 
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1601 #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v1596 <|@
result [v116|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j861 
index: - 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j861 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1596 
value: i128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1596 value: i128 stateAfter: - lastLocationAccess: - #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid v1597 <|@
result [v116|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j861 
index: - 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j861 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1597 
value: j700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1597 value: j700 stateAfter: - lastLocationAccess: - #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v1602 <|@
result [v116|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j861 
index: - 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j861 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1602 
value: v877 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v843 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1602 value: v877 stateAfter: - lastLocationAccess: - #next: v843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: a844 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a844 <|@
result v122|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j861 
=== Succesors ===
next: v846 
=== Usages ===
a849 
=== Predecessor ===
v843 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j861 #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
a844 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v121|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v120|QWORD + v116|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v120|QWORD + v116|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v120|QWORD + v116|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v120|QWORD + v116|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD + 12], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v116|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v116|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD[.]] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B123" 
    xhandlers
    flags 
    probability 4591868738987134556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v831 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 4592517127636291823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v835 v837 
=== Succesors ===
next: a845 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v835 v837 #next: a845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a845 <|@
result v123|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?129 
arguments: v771 i128 i22 
=== Succesors ===
next: v848 
=== Usages ===
a849 
=== Predecessor ===
v836 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?129 arguments: v771 i128 i22 #next: v848  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
a845 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: v11|QWORD[.] v25|QWORD[.] v101|DWORD - v69|QWORD[.] v16|DWORD v102|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - v69|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 62] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD[.]] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B121" "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a849 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v847 
values: a844 a845 
=== Succesors ===
=== Usages ===
v1603 a610 v1569 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v847 values: a844 a845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v846 v848 
=== Succesors ===
next: v1300 
=== Usages ===
a849 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v846 v848 #next: v1300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1034 
=== Usages ===
j1301 j1303 
=== Predecessor ===
v847 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1034  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:74) [bci: 9]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i128 
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i603 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v576 
trueValue: i303 
falseValue: i128 
=== Succesors ===
=== Usages ===
j879 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v576 trueValue: i303 falseValue: i128  <|@  <|@
f <@~|@floating>@ <|@
tid j879 <|@
result v126|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i603 
=== Succesors ===
=== Usages ===
j1363 v1603 j883 v1031 v1182 j1349 j1354 j1357 j1360 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i603  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j879 
y: j700 
=== Succesors ===
=== Usages ===
v1034 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j879 y: j700  <|@  <|@
f <@*|@fixed>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1031 
=== Succesors ===
trueSuccessor: v1032 
falseSuccessor: v1033 
=== Usages ===
=== Predecessor ===
v1300 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1031 #trueSuccessor: v1032 #falseSuccessor: v1033  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = CMOVE (falseValue: v102|DWORD, ~trueValue: v54|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVSXD v125|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v126|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B147" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1050  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v1034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
result [v124|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a849 
index: - 
=== Succesors ===
=== Usages ===
j1303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a849 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1303 <|@
result v127|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1300 
address: v1569 
=== Succesors ===
=== Usages ===
v1616 v1618 v1620 v1622 v1624 v1626 v1628 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1300 address: v1569  <|@  <|@
f <@~|@floating>@ <|@
tid v1568 <|@
result [v69|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a618 
index: - 
=== Succesors ===
=== Usages ===
j1301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a618 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1301 <|@
result v128|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1300 
address: v1568 
=== Succesors ===
=== Usages ===
v1617 v1619 v1621 v1623 v1625 v1627 v1629 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1300 address: v1568  <|@  <|@
f <@~|@floating>@ <|@
tid j1349 <|@
result v129|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483615]
=== Inputs ===
x: j879 
y: j1277 
=== Succesors ===
=== Usages ===
v1350 v1352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j879 y: j1277  <|@  <|@
f <@~|@floating>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1349 
y: j554 
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1349 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1350 
=== Succesors ===
trueSuccessor: v1035 
falseSuccessor: v1036 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1350 #trueSuccessor: v1035 #falseSuccessor: v1036  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = LEA [v124|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = LEA [v69|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = LEA [v126|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v129|QWORD, y: v129|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
v1035 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B127 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1038  <|@  <|@
f <@*|@fixed>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
v1036 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B172" 
    successors "B130" "B172" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1342 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1039 
values: j554 j1348 
=== Succesors ===
=== Usages ===
v1628 v1629 j1348 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1039 values: j554 j1348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1038 
=== Succesors ===
next: v1546 
=== Usages ===
v1546 v1042 v1043 j1342 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1038 #next: v1546  <|@  <|@
f <@~|@floating>@ <|@
tid v1629 <|@
result [v128|QWORD[.] + v130|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1342 
=== Succesors ===
=== Usages ===
v1546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1546 <|@
result v131|V256_BYTE <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1039 
address: v1629 
=== Succesors ===
next: v1473 
=== Usages ===
v1473 
=== Predecessor ===
v1039 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1039 address: v1629 #next: v1473  <|@  <|@
f <@~|@floating>@ <|@
tid v1628 <|@
result [v127|QWORD[.] + v130|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1342 
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1628 
value: v1546 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1546 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1628 value: v1546 stateAfter: - lastLocationAccess: - #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid j1348 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1342 
y: j391 
=== Succesors ===
=== Usages ===
j1335 j1342 v1352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1342 y: j391  <|@  <|@
f <@~|@floating>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1349 
y: j1348 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1349 y: j1348  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1352 
=== Succesors ===
trueSuccessor: v1042 
falseSuccessor: v1044 
=== Usages ===
=== Predecessor ===
v1473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1352 #trueSuccessor: v1042 #falseSuccessor: v1044  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|V256_BYTE = H [v128|QWORD[.] + v130|QWORD * 1] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v127|QWORD[.] + v130|QWORD * 1], input: v131|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = LEA [v130|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|QWORD, y: v129|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B130 falseDestination: B129 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1039 
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1039 #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
v1042 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v132|QWORD] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B127" "B130" 
    successors "B132" "B133" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1335 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1047 
values: j554 j1348 
=== Succesors ===
=== Usages ===
v1626 v1627 j1341 j1328 v1355 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1047 values: j554 j1348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1046 v1048 
=== Succesors ===
next: v1069 
=== Usages ===
j1335 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1046 v1048 #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid j1354 <|@
result v134|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j879 
y: j1221 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j879 y: j1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1354 
y: j1335 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1354 y: j1335  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1355 
=== Succesors ===
trueSuccessor: v1068 
falseSuccessor: v1067 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1355 #trueSuccessor: v1068 #falseSuccessor: v1067  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v133|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = LEA [v126|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v133|QWORD, y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B131 -> B132 falseDestination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1072 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD] destination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B134" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1547 
=== Usages ===
v1547 
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1547  <|@  <|@
f <@~|@floating>@ <|@
tid v1627 <|@
result [v128|QWORD[.] + v133|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1335 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1547 <|@
result v135|V128_BYTE <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1067 
address: v1627 
=== Succesors ===
next: v1471 
=== Usages ===
v1471 
=== Predecessor ===
v1067 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1067 address: v1627 #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid v1626 <|@
result [v127|QWORD[.] + v133|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1335 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1626 
value: v1547 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1057 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1626 value: v1547 stateAfter: - lastLocationAccess: - #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid j1341 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1335 
y: j282 
=== Succesors ===
=== Usages ===
j1328 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1335 y: j282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
v1471 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|V128_BYTE = H [v128|QWORD[.] + v133|QWORD * 1] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v127|QWORD[.] + v133|QWORD * 1], input: v135|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = LEA [v133|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|QWORD] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1328 <|@
result v137|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1058 
values: j1341 j1335 
=== Succesors ===
=== Usages ===
v1624 v1625 j1334 j1321 v1358 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1058 values: j1341 j1335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1057 v1072 
=== Succesors ===
next: v1075 
=== Usages ===
j1328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1057 v1072 #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid j1357 <|@
result v138|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j879 
y: j1227 
=== Succesors ===
=== Usages ===
v1358 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j879 y: j1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1357 
y: j1328 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1357 y: j1328  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1358 
=== Succesors ===
trueSuccessor: v1074 
falseSuccessor: v1073 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1358 #trueSuccessor: v1074 #falseSuccessor: v1073  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v137|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = LEA [v126|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|QWORD, y: v138|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1078  <|@  <|@
f <@*|@fixed>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
v1074 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|QWORD] destination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1548 
=== Usages ===
v1548 
=== Predecessor ===
v1075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v1625 <|@
result [v128|QWORD[.] + v137|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1328 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1548 <|@
result v139|V64_BYTE <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8,i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1073 
address: v1625 
=== Succesors ===
next: v1469 
=== Usages ===
v1469 
=== Predecessor ===
v1073 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1073 address: v1625 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid v1624 <|@
result [v127|QWORD[.] + v137|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1328 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1624 
value: v1548 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1624 value: v1548 stateAfter: - lastLocationAccess: - #next: v1060  <|@  <|@
f <@~|@floating>@ <|@
tid j1334 <|@
result v140|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1328 
y: j754 
=== Succesors ===
=== Usages ===
j1321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1328 y: j754  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
v1469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|V64_BYTE = H [v128|QWORD[.] + v137|QWORD * 1] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v127|QWORD[.] + v137|QWORD * 1], input: v139|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = LEA [v137|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v140|QWORD] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1321 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1061 
values: j1334 j1328 
=== Succesors ===
=== Usages ===
v1622 v1623 j1327 j1304 v1361 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1061 values: j1334 j1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1060 v1078 
=== Succesors ===
next: v1081 
=== Usages ===
j1321 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1060 v1078 #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid j1360 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j879 
y: j1231 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j879 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1360 
y: j1321 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1360 y: j1321  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1361 
=== Succesors ===
trueSuccessor: v1080 
falseSuccessor: v1079 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1361 #trueSuccessor: v1080 #falseSuccessor: v1079  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = LEA [v126|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v141|QWORD, y: v142|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1084 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1084  <|@  <|@
f <@*|@fixed>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1064 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v141|QWORD] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1549 
=== Usages ===
v1549 
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1549  <|@  <|@
f <@~|@floating>@ <|@
tid v1623 <|@
result [v128|QWORD[.] + v141|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1321 
=== Succesors ===
=== Usages ===
v1549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1549 <|@
result v143|V32_BYTE <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: <i8,i8,i8,i8>
=== Inputs ===
stateBefore: - 
guard: v1079 
address: v1623 
=== Succesors ===
next: v1467 
=== Usages ===
v1467 
=== Predecessor ===
v1079 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1079 address: v1623 #next: v1467  <|@  <|@
f <@~|@floating>@ <|@
tid v1622 <|@
result [v127|QWORD[.] + v141|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1321 
=== Succesors ===
=== Usages ===
v1467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1622 
value: v1549 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1063 
=== Usages ===
=== Predecessor ===
v1549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1622 value: v1549 stateAfter: - lastLocationAccess: - #next: v1063  <|@  <|@
f <@~|@floating>@ <|@
tid j1327 <|@
result v144|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1321 
y: j1207 
=== Succesors ===
=== Usages ===
j1304 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1321 y: j1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1064 
=== Predecessor ===
v1467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|V32_BYTE = H [v128|QWORD[.] + v141|QWORD * 1] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v127|QWORD[.] + v141|QWORD * 1], input: v143|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = LEA [v141|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|QWORD] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1304 <|@
result v145|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1064 
values: j1327 j1321 
=== Succesors ===
=== Usages ===
v1616 v1617 j1310 v1364 j1427 v1618 v1619 v1620 v1621 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1064 values: j1327 j1321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1063 v1084 
=== Succesors ===
next: v1087 
=== Usages ===
j1304 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1063 v1084 #next: v1087  <|@  <|@
f <@~|@floating>@ <|@
tid j1363 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j879 
y: j445 
=== Succesors ===
=== Usages ===
v1364 v1366 v1368 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j879 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1363 
y: j1304 
=== Succesors ===
=== Usages ===
v1087 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1363 y: j1304  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1364 
=== Succesors ===
trueSuccessor: v1086 
falseSuccessor: v1085 
=== Usages ===
=== Predecessor ===
v1064 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1364 #trueSuccessor: v1086 #falseSuccessor: v1085  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = DEC v126|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v145|QWORD, y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B147" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1090  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B141 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1550 
=== Usages ===
i1550 
=== Predecessor ===
v1087 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1617 <|@
result [v128|QWORD[.] + v145|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1304 
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1550 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1085 
address: v1617 
=== Succesors ===
next: v1461 
=== Usages ===
v1461 
=== Predecessor ===
v1085 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1085 address: v1617 #next: v1461  <|@  <|@
f <@~|@floating>@ <|@
tid v1616 <|@
result [v127|QWORD[.] + v145|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1304 
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1616 
value: i1550 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1093 
=== Usages ===
=== Predecessor ===
i1550 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1616 value: i1550 stateAfter: - lastLocationAccess: - #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid j1310 <|@
result v148|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1304 
y: j700 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1304 y: j700  <|@  <|@
f <@~|@floating>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1363 
y: j1310 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1363 y: j1310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1366 
=== Succesors ===
trueSuccessor: v1092 
falseSuccessor: v1091 
=== Usages ===
=== Predecessor ===
v1461 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1366 #trueSuccessor: v1092 #falseSuccessor: v1091  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVSXB [v128|QWORD[.] + v145|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v127|QWORD[.] + v145|QWORD * 1], y: v147|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = INC v145|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v148|QWORD, y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 4591418469091886456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
v1092 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4598737156239447066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1551 
=== Usages ===
i1551 
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1619 <|@
result [v128|QWORD[.] + v145|QWORD * 1 + 1] <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1304 
=== Succesors ===
=== Usages ===
i1551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1551 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1091 
address: v1619 
=== Succesors ===
next: v1463 
=== Usages ===
v1463 
=== Predecessor ===
v1091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1091 address: v1619 #next: v1463  <|@  <|@
f <@~|@floating>@ <|@
tid v1618 <|@
result [v127|QWORD[.] + v145|QWORD * 1 + 1] <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1304 
=== Succesors ===
=== Usages ===
v1463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1618 
value: i1551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
i1551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1618 value: i1551 stateAfter: - lastLocationAccess: - #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid j1427 <|@
result v150|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1304 
y: j1191 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1304 y: j1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1363 
y: j1427 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1363 y: j1427  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1368 
=== Succesors ===
trueSuccessor: v1098 
falseSuccessor: v1097 
=== Usages ===
=== Predecessor ===
v1463 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1368 #trueSuccessor: v1098 #falseSuccessor: v1097  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOVSXB [v128|QWORD[.] + v145|QWORD * 1 + 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v127|QWORD[.] + v145|QWORD * 1 + 1], y: v149|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = LEA [v145|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v150|QWORD, y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" 
    xhandlers
    flags 
    probability 4589729956984706074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
v1098 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" 
    xhandlers
    flags 
    probability 4596766324772847143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1552 
=== Usages ===
i1552 
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1621 <|@
result [v128|QWORD[.] + v145|QWORD * 1 + 2] <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1301 
index: j1304 
=== Succesors ===
=== Usages ===
i1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1301 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1552 <|@
result v151|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1097 
address: v1621 
=== Succesors ===
next: v1465 
=== Usages ===
v1465 
=== Predecessor ===
v1097 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1097 address: v1621 #next: v1465  <|@  <|@
f <@~|@floating>@ <|@
tid v1620 <|@
result [v127|QWORD[.] + v145|QWORD * 1 + 2] <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1303 
index: j1304 
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1303 index: j1304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1620 
value: i1552 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
i1552 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1620 value: i1552 stateAfter: - lastLocationAccess: - #next: v1066  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
v1465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = MOVSXB [v128|QWORD[.] + v145|QWORD * 1 + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v127|QWORD[.] + v145|QWORD * 1 + 2], y: v151|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B125" "B146" "B141" "B143" "B145" 
    successors "B148" "B170" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1050 v1066 v1090 v1096 v1102 
=== Succesors ===
next: v1371 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1050 v1066 v1090 v1096 v1102 #next: v1371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1109 
=== Usages ===
j1373 
=== Predecessor ===
v1051 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid j878 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i128 
=== Succesors ===
=== Usages ===
j883 v1182 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i128  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j879 
y: j878 
=== Succesors ===
=== Usages ===
v1109 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j879 y: j878  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1182 
=== Succesors ===
trueSuccessor: v1108 
falseSuccessor: v1107 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1182 #trueSuccessor: v1108 #falseSuccessor: v1107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOVSXD v102|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|QWORD, y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B147 -> B148 falseDestination: B147 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid v1603 <|@
result [v124|QWORD[.] + v126|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a849 
index: j879 
=== Succesors ===
=== Usages ===
j1373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a849 index: j879  <|@  <|@
f <@~|@floating>@ <|@
tid j1373 <|@
result v153|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1371 
address: v1603 
=== Succesors ===
=== Usages ===
v1630 v1631 v1632 v1633 v1634 v1635 v1636 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1371 address: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid j883 <|@
result v154|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j878 
y: j879 
=== Succesors ===
=== Usages ===
j1419 j1405 j1410 j1413 j1416 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j878 y: j879  <|@  <|@
f <@~|@floating>@ <|@
tid j1405 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967327 - 4294967263]
=== Inputs ===
x: j883 
y: j1277 
=== Succesors ===
=== Usages ===
v1406 v1408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j883 y: j1277  <|@  <|@
f <@~|@floating>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1405 
y: j554 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1405 y: j554  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1406 
=== Succesors ===
trueSuccessor: v1110 
falseSuccessor: v1111 
=== Usages ===
=== Predecessor ===
v1108 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1406 #trueSuccessor: v1110 #falseSuccessor: v1111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = LEA [v124|QWORD[.] + v126|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SUB (x: v152|QWORD, ~y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = LEA [v154|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v155|QWORD, y: v155|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
v1110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B149 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1113  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B169" 
    successors "B152" "B169" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1400 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1114 
values: j554 j1404 
=== Succesors ===
=== Usages ===
v1636 j1404 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1114 values: j554 j1404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1113 
=== Succesors ===
next: v1480 
=== Usages ===
j1400 v1117 v1118 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1113 #next: v1480  <|@  <|@
f <@~|@floating>@ <|@
tid v1636 <|@
result [v153|QWORD[.] + v156|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1400 
=== Succesors ===
=== Usages ===
v1480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1636 
value: v1486 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1120 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1636 value: v1486 stateAfter: - lastLocationAccess: - #next: v1120  <|@  <|@
f <@~|@floating>@ <|@
tid j1404 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1400 
y: j391 
=== Succesors ===
=== Usages ===
j1395 j1400 v1408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1400 y: j391  <|@  <|@
f <@~|@floating>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1405 
y: j1404 
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1405 y: j1404  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1408 
=== Succesors ===
trueSuccessor: v1117 
falseSuccessor: v1119 
=== Usages ===
=== Predecessor ===
v1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1408 #trueSuccessor: v1117 #falseSuccessor: v1119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v156|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v153|QWORD[.] + v156|QWORD * 1], input: v73|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v156|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v155|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1114 
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1114 #next: v1123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
v1117 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B149" "B152" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1395 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1122 
values: j554 j1404 
=== Succesors ===
=== Usages ===
v1635 j1399 j1390 v1411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1122 values: j554 j1404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1121 v1123 
=== Succesors ===
next: v1144 
=== Usages ===
j1395 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1121 v1123 #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid j1410 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j883 
y: j1221 
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j883 y: j1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1410 
y: j1395 
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1410 y: j1395  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1411 
=== Succesors ===
trueSuccessor: v1143 
falseSuccessor: v1142 
=== Usages ===
=== Predecessor ===
v1122 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1411 #trueSuccessor: v1143 #falseSuccessor: v1142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = LEA [v154|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1147  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
v1143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD] destination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v1635 <|@
result [v153|QWORD[.] + v158|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1395 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1635 
value: v1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1635 value: v1489 stateAfter: - lastLocationAccess: - #next: v1132  <|@  <|@
f <@~|@floating>@ <|@
tid j1399 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1395 
y: j282 
=== Succesors ===
=== Usages ===
j1390 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1395 y: j282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
v1479 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v153|QWORD[.] + v158|QWORD * 1], input: v72|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = LEA [v158|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" "B154" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1390 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1133 
values: j1399 j1395 
=== Succesors ===
=== Usages ===
v1634 j1394 j1385 v1414 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1133 values: j1399 j1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1132 v1147 
=== Succesors ===
next: v1150 
=== Usages ===
j1390 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1132 v1147 #next: v1150  <|@  <|@
f <@~|@floating>@ <|@
tid j1413 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j883 
y: j1227 
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j883 y: j1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1413 
y: j1390 
=== Succesors ===
=== Usages ===
v1150 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1413 y: j1390  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1414 
=== Succesors ===
trueSuccessor: v1149 
falseSuccessor: v1148 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1414 #trueSuccessor: v1149 #falseSuccessor: v1148  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = LEA [v154|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v161|QWORD, y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
v1149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD] destination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1478 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1478  <|@  <|@
f <@~|@floating>@ <|@
tid v1634 <|@
result [v153|QWORD[.] + v161|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1390 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1634 
value: v1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v1148 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1634 value: v1488 stateAfter: - lastLocationAccess: - #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid j1394 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1390 
y: j754 
=== Succesors ===
=== Usages ===
j1385 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1390 y: j754  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1136 
=== Predecessor ===
v1478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v153|QWORD[.] + v161|QWORD * 1], input: v71|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = LEA [v161|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|QWORD] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1385 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1136 
values: j1394 j1390 
=== Succesors ===
=== Usages ===
v1633 j1389 j1374 v1417 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1136 values: j1394 j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1135 v1153 
=== Succesors ===
next: v1156 
=== Usages ===
j1385 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1135 v1153 #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid j1416 <|@
result v165|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j883 
y: j1231 
=== Succesors ===
=== Usages ===
v1417 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j883 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1416 
y: j1385 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1416 y: j1385  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1417 
=== Succesors ===
trueSuccessor: v1155 
falseSuccessor: v1154 
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1417 #trueSuccessor: v1155 #falseSuccessor: v1154  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v164|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = LEA [v154|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v165|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B160 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B162" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
v1155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v164|QWORD] destination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B162" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1477 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1477  <|@  <|@
f <@~|@floating>@ <|@
tid v1633 <|@
result [v153|QWORD[.] + v164|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1385 
=== Succesors ===
=== Usages ===
v1477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1633 
value: v1487 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1138 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1633 value: v1487 stateAfter: - lastLocationAccess: - #next: v1138  <|@  <|@
f <@~|@floating>@ <|@
tid j1389 <|@
result v166|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1385 
y: j1207 
=== Succesors ===
=== Usages ===
j1374 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1385 y: j1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
v1477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v153|QWORD[.] + v164|QWORD * 1], input: v70|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = LEA [v164|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v166|QWORD] destination: B161 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1374 <|@
result v167|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1139 
values: j1389 j1385 
=== Succesors ===
=== Usages ===
v1630 j1378 v1420 j1428 v1631 v1632 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1139 values: j1389 j1385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1138 v1159 
=== Succesors ===
next: v1162 
=== Usages ===
j1374 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1138 v1159 #next: v1162  <|@  <|@
f <@~|@floating>@ <|@
tid j1419 <|@
result v168|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j883 
y: j445 
=== Succesors ===
=== Usages ===
v1420 v1422 v1424 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j883 y: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1419 
y: j1374 
=== Succesors ===
=== Usages ===
v1162 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1419 y: j1374  <|@  <|@
f <@*|@fixed>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1420 
=== Succesors ===
trueSuccessor: v1161 
falseSuccessor: v1160 
=== Usages ===
=== Predecessor ===
v1139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1420 #trueSuccessor: v1161 #falseSuccessor: v1160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v167|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = DEC v154|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v167|QWORD, y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B171" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1165 
=== Usages ===
=== Predecessor ===
v1162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1165  <|@  <|@
f <@*|@fixed>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
v1161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B163 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v1162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid v1630 <|@
result [v153|QWORD[.] + v167|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1374 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1630 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1168 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1630 value: i404 stateAfter: - lastLocationAccess: - #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid j1378 <|@
result v169|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1374 
y: j700 
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1374 y: j700  <|@  <|@
f <@~|@floating>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1419 
y: j1378 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1419 y: j1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1422 
=== Succesors ===
trueSuccessor: v1167 
falseSuccessor: v1166 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1422 #trueSuccessor: v1167 #falseSuccessor: v1166  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v153|QWORD[.] + v167|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = INC v167|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v169|QWORD, y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B171" 
    xhandlers
    flags 
    probability 4591418469091886456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1171  <|@  <|@
f <@*|@fixed>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
v1167 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B165 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4598737156239447066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1475 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1475  <|@  <|@
f <@~|@floating>@ <|@
tid v1631 <|@
result [v153|QWORD[.] + v167|QWORD * 1 + 1] <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1374 
=== Succesors ===
=== Usages ===
v1475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1631 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1174 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1631 value: i404 stateAfter: - lastLocationAccess: - #next: v1174  <|@  <|@
f <@~|@floating>@ <|@
tid j1428 <|@
result v170|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1374 
y: j1191 
=== Succesors ===
=== Usages ===
v1424 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1374 y: j1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1424 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1419 
y: j1428 
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1419 y: j1428  <|@  <|@
f <@*|@fixed>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1424 
=== Succesors ===
trueSuccessor: v1173 
falseSuccessor: v1172 
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1424 #trueSuccessor: v1173 #falseSuccessor: v1172  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v153|QWORD[.] + v167|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v170|QWORD = LEA [v167|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|QWORD, y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4589729956984706074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1177 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1177  <|@  <|@
f <@*|@fixed>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
v1173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4596766324772847143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1476 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1632 <|@
result [v153|QWORD[.] + v167|QWORD * 1 + 2] <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1373 
index: j1374 
=== Succesors ===
=== Usages ===
v1476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1632 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1141 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1632 value: i404 stateAfter: - lastLocationAccess: - #next: v1141  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
v1476 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v153|QWORD[.] + v167|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B168 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B151" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B169 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B171" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
v1107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B168" "B163" "B165" "B167" 
    successors 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1125 v1141 v1165 v1171 v1177 
=== Succesors ===
next: a610 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1125 v1141 v1165 v1171 v1177 #next: a610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a610 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 89]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a849 
=== Succesors ===
next: v39 
=== Usages ===
v39 
=== Predecessor ===
v1126 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a849 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.zip.ZipCoder.getBytes(ZipCoder.java:89) [bci: 92]
stamp: void
=== Inputs ===
result: a610 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a610 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a610 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v124|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B129" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4600425668346627448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1043 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1043  <|@  <|@
f <@*|@fixed>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1039 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1039  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v132|QWORD] destination: B172 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v964 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v964  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B173 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v1537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v659  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v1533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], v59|QWORD[.]] destination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v1521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v1517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-80923|0xfffffffffffec3e5], v59|QWORD[.]] destination: B175 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B52" "B175" "B174" "B43" "B49" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i653 <|@
result v171|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-83739 - -79379] ⇊00000000fffe80e5 ⇈00000000fffefbed
valueDescription: i32
=== Inputs ===
merge: v650 
values: i652 i657 i660 i657 i660 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v650 values: i652 i657 i660 i657 i660  <|@  <|@
f <@~|@floating>@ <|@
tid a654 <|@
result v172|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v650 
values: a636 a658 a658 a658 a658 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v650 values: a636 a658 a658 a658 a658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v651 v656 v659 v1637 v1638 
=== Succesors ===
next: v655 
=== Usages ===
i653 a654 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v651 v656 v659 v1637 v1638 #next: v655  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?82 
actionAndReason: i653 
speculation: a654 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?82 actionAndReason: i653 speculation: a654  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v171|DWORD, v172|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v171|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v172|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toCharArray(String.java:2901) [bci: 23]
locals: - v25|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
locals: v0|QWORD[.] - v11|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:23, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v902  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v897 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v897  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B177 -> B18 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6edd3b29 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 5.047591577732602E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607177872333707689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
locals: v0|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:30, 1] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVZXB [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND v18|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v20|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v14|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v14|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v14|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v14|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = LEA [v25|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v26|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v32|QWORD * 2], input: v34|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v32|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v26|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v36|QWORD * 2], input: v38|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v36|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v26|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v40|QWORD * 2], input: v42|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v40|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = DEC v26|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + v44|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v48|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v49|SINGLE = VCVTSI2SS v16|DWORD <|@ <|@
      nr   -1  <|@ instruction v50|SINGLE = VMULSS (x: v49|SINGLE, y: [v11|QWORD[.] + 16]) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = VCVTTSS2SI v50|SINGLE nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v51|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v52|QWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" "B38" "B36" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = CMOVE (falseValue: v16|DWORD, ~trueValue: v54|DWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = DEC v57|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v56|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B175" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v56|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B174" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v54|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = LEA [v54|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = AND v63|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVSXD v64|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = ADD (x: v65|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v65|QWORD + v60|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v65|QWORD + v60|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v65|QWORD + v60|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v65|QWORD + v60|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD + 12], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v60|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v54|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LEA [v69|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v54|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v75|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v75|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v184|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v79|QWORD * 1], input: v184|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v79|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v82|QWORD * 1], input: v182|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v82|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v75|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v85|QWORD * 1], input: v180|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v85|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = DEC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v74|QWORD[.] + v88|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = INC v88|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4598738169498697728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v74|QWORD[.] + v88|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v88|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4596767844661723136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v74|QWORD[.] + v88|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B60" "B81" "B76" "B78" "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4633577314113346477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVSX [v25|QWORD[.] + v92|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v93|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B83" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4633576394537567927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[.] + v92|DWORD * 1 + 16], y: v93|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = INC v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|DWORD] destination: B85 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B85" 
    successors "B84" "B87" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4633717132025923255
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B88" 
    xhandlers
    flags 
    probability 4607123565950190215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B96" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, v92|DWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B100" "B106" 
    successors "B98" "B111" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608053799174313579
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|DWORD, v102|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B110" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4596139063284904789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4596139063284904789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVZX [v25|QWORD[.] + v101|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC v101|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B97" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4595738705134131296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[.] + v102|DWORD * 1 + 16], y: v103|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD, v105|DWORD] destination: B100 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B109" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B108" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v102|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B97" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = SHR v103|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = OR v107|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[.] + v102|DWORD * 1 + 16], y: v108|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SHR v103|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = AND v109|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = OR v110|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[.] + v105|DWORD * 1 + 16], y: v111|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = AND v103|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = OR v112|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v69|QWORD[.] + v106|DWORD * 1 + 16], y: v113|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = LEA [v102|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD, v114|DWORD] destination: B106 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v102|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v102|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B118" 
    xhandlers
    flags 
    probability 4607181518080091934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" "B122" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v102|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B118 -> B119 falseDestination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4606280077659742249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = LEA [v102|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = AND v118|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOVSXD v119|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = ADD (x: v120|QWORD, y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v121|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4606199029078597591
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v121|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v120|QWORD + v116|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v120|QWORD + v116|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v120|QWORD + v116|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v120|QWORD + v116|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD + 12], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v116|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v116|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE v116|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|QWORD[.]] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B121" "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = CMOVE (falseValue: v102|DWORD, ~trueValue: v54|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVSXD v125|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v126|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = LEA [v124|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = LEA [v69|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = LEA [v126|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v129|QWORD, y: v129|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B127 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B127" "B130" 
    successors "B132" "B133" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v133|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|QWORD = LEA [v126|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v133|QWORD, y: v134|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B131 -> B132 falseDestination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B134" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|V128_BYTE = H [v128|QWORD[.] + v133|QWORD * 1] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v127|QWORD[.] + v133|QWORD * 1], input: v135|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = LEA [v133|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|QWORD] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v137|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = LEA [v126|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|QWORD, y: v138|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|V64_BYTE = H [v128|QWORD[.] + v137|QWORD * 1] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v127|QWORD[.] + v137|QWORD * 1], input: v139|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = LEA [v137|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v140|QWORD] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = LEA [v126|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v141|QWORD, y: v142|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|V32_BYTE = H [v128|QWORD[.] + v141|QWORD * 1] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v127|QWORD[.] + v141|QWORD * 1], input: v143|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = LEA [v141|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|QWORD] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = DEC v126|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v145|QWORD, y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVSXB [v128|QWORD[.] + v145|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v127|QWORD[.] + v145|QWORD * 1], y: v147|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = INC v145|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v148|QWORD, y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4598737156239447066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOVSXB [v128|QWORD[.] + v145|QWORD * 1 + 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v127|QWORD[.] + v145|QWORD * 1 + 1], y: v149|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = LEA [v145|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v150|QWORD, y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" 
    xhandlers
    flags 
    probability 4596766324772847143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = MOVSXB [v128|QWORD[.] + v145|QWORD * 1 + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v127|QWORD[.] + v145|QWORD * 1 + 2], y: v151|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B125" "B146" "B141" "B143" "B145" 
    successors "B148" "B170" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOVSXD v102|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|QWORD, y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B147 -> B148 falseDestination: B147 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B171" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B168" "B163" "B165" "B167" 
    successors 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v124|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v92|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = SUB (x: v16|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVSXD v96|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = DEC v97|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = ADD (x: v95|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v99|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = LEA [v124|QWORD[.] + v126|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SUB (x: v152|QWORD, ~y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = LEA [v154|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v155|QWORD, y: v155|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B149 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B149" "B152" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = LEA [v154|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v183|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v153|QWORD[.] + v158|QWORD * 1], input: v183|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = LEA [v158|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" "B154" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = LEA [v154|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v161|QWORD, y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v153|QWORD[.] + v161|QWORD * 1], input: v181|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = LEA [v161|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|QWORD] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v164|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = LEA [v154|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|QWORD, y: v165|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B160 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B162" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v153|QWORD[.] + v164|QWORD * 1], input: v179|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = LEA [v164|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v166|QWORD] destination: B161 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v167|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = DEC v154|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v167|QWORD, y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v153|QWORD[.] + v167|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = INC v167|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v169|QWORD, y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4598737156239447066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v153|QWORD[.] + v167|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v170|QWORD = LEA [v167|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|QWORD, y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4596766324772847143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v153|QWORD[.] + v167|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B168 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B147" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B177 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B177" 
    successors "B19" "B177" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v30|QWORD * 2], input: v29|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v30|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v186|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B173 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B173" 
    successors "B65" "B173" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v77|QWORD * 1], input: v186|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v77|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B171" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B163 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B162" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v164|QWORD] destination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD] destination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B147" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B141 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v185|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B151" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B169 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B169" 
    successors "B152" "B169" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v156|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v153|QWORD[.] + v156|QWORD * 1], input: v185|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v156|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v155|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v141|QWORD] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|QWORD] destination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B129" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4600425668346627448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v132|QWORD] destination: B172 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B172" 
    successors "B130" "B172" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|V256_BYTE = H [v128|QWORD[.] + v130|QWORD * 1] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v127|QWORD[.] + v130|QWORD * 1], input: v131|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = LEA [v130|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|QWORD, y: v129|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B130 falseDestination: B129 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD] destination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD] destination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v157|QWORD] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v132|QWORD] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.reset(CharsetEncoder.java:711) [bci: 9]
locals: v11|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 4]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 4] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v178|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v178|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v54|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toCharArray(String.java:2901) [bci: 23]
locals: - v25|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
locals: v0|QWORD[.] - v11|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23, 9] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B123" 
    xhandlers
    flags 
    probability 4591868738987134556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 4592517127636291823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v177|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v177|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: v11|QWORD[.] v25|QWORD[.] v101|DWORD - v69|QWORD[.] v16|DWORD v102|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - v69|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 62] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD[.]] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4591419820104220672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 4591418469091886456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B171" 
    xhandlers
    flags 
    probability 4591418469091886456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B165 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4589730970243956736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" 
    xhandlers
    flags 
    probability 4589729956984706074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4589729956984706074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction VUCOMISS (x: v50|SINGLE, y: v50|SINGLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B37 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B123" 
    xhandlers
    flags 
    probability 4576340730974311578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B88" 
    xhandlers
    flags 
    probability 4574183186931563751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|SINGLE = VMOVE input: float[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction VUCOMISS (x: v50|SINGLE, y: v53|SINGLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v52|QWORD] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[2147483647|0x7fffffff], long[2147483647|0x7fffffff]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4557794804772723712
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4557794804772723712
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Charset.newEncoder()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 1] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 15]
stack: v0|QWORD[.] Object[null] 
locals: v0|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction MOV [v5|QWORD[.] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] state [bci:15, 1] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = SHR v5|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD[.] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = COMPRESSPOINTER (input: v5|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v9|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    probability 4547007122018942976
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147041|0xfffffffffffdc19f]] destination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B112" "B110" "B102" "B109" "B108" "B107" "B114" "B116" 
    successors 
    xhandlers
    flags 
    probability 4551510352711431998
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: v11|QWORD[.] v25|QWORD[.] v101|DWORD - v69|QWORD[.] v16|DWORD v102|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - v69|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:54, 62] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 4547006384149180028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147041|0xfffffffffffdc19f]] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-80923|0xfffffffffffec3e5], v176|QWORD[.]] destination: B43 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B52" "B175" "B174" "B43" "B49" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v171|DWORD, v172|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v171|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v172|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toCharArray(String.java:2901) [bci: 23]
locals: - v25|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
locals: v0|QWORD[.] - v11|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:23, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-97555|0xfffffffffffe82ed]] destination: B112 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -98827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1023872315] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -86043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: v11|QWORD[.] v25|QWORD[.] v92|DWORD - v69|QWORD[.] v16|DWORD v92|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - v69|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:54, 62] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -80403 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
locals: v0|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:30, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93211|0xfffffffffffe93e5]] destination: B108 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90643|0xfffffffffffe9ded]] destination: B109 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79379|0xfffffffffffec9ed], Object[null]] destination: B52 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110875|0xfffffffffffe4ee5]] destination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-80923|0xfffffffffffec3e5], v175|QWORD[.]] destination: B175 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], v174|QWORD[.]] destination: B49 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83739|0xfffffffffffeb8e5], v173|QWORD[.]] destination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-95515|0xfffffffffffe8ae5]] destination: B107 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90387|0xfffffffffffe9eed]] destination: B102 -> B117 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #16         // encoder:()java.nio.charset.CharsetEncoder
     4: invokevirtual #17         // java.nio.charset.CharsetEncoder.reset:()java.nio.charset.CharsetEncoder
     7: astore_2      
     8: aload_1       
     9: invokevirtual #18         // java.lang.String.toCharArray:()char[]
    12: astore_3      
    13: aload_3       
    14: arraylength   
    15: i2f           
    16: aload_2       
    17: invokevirtual #19         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    20: fmul          
    21: f2i           
    22: istore        4
    24: iload         4
    26: newarray      byte
    28: astore        5
    30: iload         4
    32: ifne          38
    35: aload         5
    37: areturn       
    38: aload_0       
    39: getfield      #4          // isUTF8:boolean
    42: ifeq          93
    45: aload_2       
    46: instanceof    #25         // sun.nio.cs.ArrayEncoder
    49: ifeq          93
    52: aload_2       
    53: checkcast     #25         // sun.nio.cs.ArrayEncoder
    56: aload_3       
    57: iconst_0      
    58: aload_3       
    59: arraylength   
    60: aload         5
    62: invokeinterface#20, 5      // sun.nio.cs.ArrayEncoder.encode:(char[], int, int, byte[])int
    67: istore        6
    69: iload         6
    71: iconst_m1     
    72: if_icmpne     85
    75: new           #9          // java.lang.IllegalArgumentException
    78: dup           
    79: ldc           #10         // "MALFORMED"
    81: invokespecial #6          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    84: athrow        
    85: aload         5
    87: iload         6
    89: invokestatic  #21         // java.util.Arrays.copyOf:(byte[], int)byte[]
    92: areturn       
    93: aload         5
    95: invokestatic  #22         // java.nio.ByteBuffer.wrap:(byte[])java.nio.ByteBuffer
    98: astore        6
   100: aload_3       
   101: invokestatic  #9          // java.nio.CharBuffer.wrap:(char[])java.nio.CharBuffer
   104: astore        7
   106: aload_2       
   107: aload         7
   109: aload         6
   111: iconst_1      
   112: invokevirtual #23         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
   115: astore        8
   117: aload         8
   119: invokevirtual #11         // java.nio.charset.CoderResult.isUnderflow:()boolean
   122: ifne          138
   125: new           #9          // java.lang.IllegalArgumentException
   128: dup           
   129: aload         8
   131: invokevirtual #12         // java.nio.charset.CoderResult.toString:()java.lang.String
   134: invokespecial #6          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
   137: athrow        
   138: aload_2       
   139: aload         6
   141: invokevirtual #24         // java.nio.charset.CharsetEncoder.flush:(java.nio.ByteBuffer)java.nio.charset.CoderResult
   144: astore        8
   146: aload         8
   148: invokevirtual #11         // java.nio.charset.CoderResult.isUnderflow:()boolean
   151: ifne          167
   154: new           #9          // java.lang.IllegalArgumentException
   157: dup           
   158: aload         8
   160: invokevirtual #12         // java.nio.charset.CoderResult.toString:()java.lang.String
   163: invokespecial #6          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
   166: athrow        
   167: aload         6
   169: invokevirtual #25         // java.nio.Buffer.position:()int
   172: aload         5
   174: arraylength   
   175: if_icmpne     181
   178: aload         5
   180: areturn       
   181: aload         5
   183: aload         6
   185: invokevirtual #25         // java.nio.Buffer.position:()int
   188: invokestatic  #21         // java.util.Arrays.copyOf:(byte[], int)byte[]
   191: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6edd3b29 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   10  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 5.047591577732602E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607177872333707689
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   78  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, r14:0, stack:32, stack:48]
live-base-pointers: []
java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
locals: rsi|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:30, 1] <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = MOVZXB [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  104  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr  120  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr  122  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  142  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction r10|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  262  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  264  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  272  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  286  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  310  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr  314  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  336  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  356  <|@ instruction xmm0|SINGLE = VCVTSI2SS stack:52|DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction xmm0|SINGLE = VMULSS (x: xmm0|SINGLE, y: [r13|QWORD[.] + 16]) nZ: XMM <|@ <|@
      nr  362  <|@ instruction r14|DWORD = VCVTTSS2SI xmm0|SINGLE nZ: XMM <|@ <|@
      nr  364  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  366  <|@ instruction CMP r14|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" "B38" "B36" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  428  <|@ instruction CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r14|DWORD) condition: |>| <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  436  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B175" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B174" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B57" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  546  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  554  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  558  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  572  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  576  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  578  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  614  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  616  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD <|@ <|@
      nr  630  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  678  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  682  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  690  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  702  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr  704  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  706  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  712  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  714  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  726  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr  728  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  730  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  752  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4598738169498697728
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  766  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4596767844661723136
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B60" "B81" "B76" "B78" "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4633577314113346477
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  796  <|@ instruction rsi|DWORD = MOVSX [r11|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  798  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B83" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4633576394537567927
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction MOVB (x: [rax|QWORD[.] + r10|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  806  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B85 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B85" 
    successors "B84" "B87" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4633717132025923255
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  790  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B88" 
    xhandlers
    flags 
    probability 4607123565950190215
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B96" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B91" 
    successors "B97" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B100" "B106" 
    successors "B98" "B111" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608053799174313579
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  894  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  896  <|@ instruction BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B110" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4596139063284904789
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4596139063284904789
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction rsi|DWORD = MOVZX [r11|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  908  <|@ instruction rdx|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction rcx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction CMP rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B97" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4595738705134131296
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B100 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction CMP rsi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B109" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  948  <|@ instruction CMP rsi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B108" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  956  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction r9|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  962  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B97" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD <|@ <|@
      nr  970  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr  972  <|@ instruction MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  974  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr  978  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  980  <|@ instruction MOVB (x: [rax|QWORD[.] + rcx|DWORD * 1 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  982  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  984  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOVB (x: [rax|QWORD[.] + r9|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  988  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  990  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~[] destination: B106 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction CMP r8|DWORD y: -1 size: DWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B118" 
    xhandlers
    flags 
    probability 4607181518080091934
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" "B122" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1122  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1124  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1126  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B118 -> B119 falseDestination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4606280077659742249
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1130  <|@ instruction rcx|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr 1132  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1136  <|@ instruction r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1138  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1140  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4606199029078597591
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1154  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1156  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1158  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1160  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1162  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1166  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1172  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction JUMP ~[] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B121" "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1206  <|@ instruction rsi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1208  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1222  <|@ instruction r11|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1224  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 32] size: QWORD <|@ <|@
      nr 1226  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1228  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1234  <|@ instruction JUMP ~[] destination: B127 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B127" "B130" 
    successors "B132" "B133" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1260  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1262  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B131 -> B132 falseDestination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B134" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1272  <|@ instruction xmm0|V128_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1274  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1276  <|@ instruction r8|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1278  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1284  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1286  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1288  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction xmm0|V64_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1298  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1300  <|@ instruction r8|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr 1302  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1308  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1310  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1312  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1320  <|@ instruction xmm0|V32_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVD <|@ <|@
      nr 1322  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr 1324  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr 1326  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1332  <|@ instruction r8|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1334  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1336  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1344  <|@ instruction rcx|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1] size: DWORD <|@ <|@
      nr 1346  <|@ instruction MOVB (x: [r10|QWORD[.] + r9|QWORD * 1], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1348  <|@ instruction rcx|QWORD = INC r9|QWORD size: QWORD <|@ <|@
      nr 1350  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4598737156239447066
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1360  <|@ instruction rcx|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1 + 1] size: DWORD <|@ <|@
      nr 1362  <|@ instruction MOVB (x: [r10|QWORD[.] + r9|QWORD * 1 + 1], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1364  <|@ instruction rcx|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr 1366  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1368  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" 
    xhandlers
    flags 
    probability 4596766324772847143
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction r11|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1 + 2] size: DWORD <|@ <|@
      nr 1378  <|@ instruction MOVB (x: [r10|QWORD[.] + r9|QWORD * 1 + 2], y: r11|DWORD) size: BYTE <|@ <|@
      nr 1380  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B125" "B146" "B141" "B143" "B145" 
    successors "B148" "B170" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1384  <|@ instruction r10|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1386  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1388  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B147 -> B148 falseDestination: B147 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B171" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1554  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B168" "B163" "B165" "B167" 
    successors 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B14 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B40 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B93" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  834  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  838  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  842  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B96" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B91 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1394  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1396  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 32] size: QWORD <|@ <|@
      nr 1398  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1400  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1406  <|@ instruction JUMP ~[] destination: B149 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B149" "B152" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr 1434  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1436  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1446  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1448  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 1450  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~[] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" "B154" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1456  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1458  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1460  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1470  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1472  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 1474  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1476  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 1482  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1484  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B160 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B162" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1492  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1494  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 1498  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction JUMP ~[] destination: B161 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1504  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1506  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1508  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1516  <|@ instruction MOVB (x: [r11|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1520  <|@ instruction CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1522  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4598737156239447066
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1530  <|@ instruction MOVB (x: [r11|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1532  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 1534  <|@ instruction CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1536  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4596766324772847143
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction MOVB (x: [r11|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1546  <|@ instruction JUMP ~[] destination: B168 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B147" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B125 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B76 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1610  <|@ instruction JUMP ~[] destination: B177 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B177" 
    successors "B19" "B177" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  644  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1566  <|@ instruction JUMP ~[] destination: B173 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B173" 
    successors "B65" "B173" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  652  <|@ instruction r10|QWORD = LEA [r10|QWORD + 32] size: QWORD <|@ <|@
      nr  654  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  656  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B171" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1512  <|@ instruction JUMP ~[] destination: B163 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B162" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1488  <|@ instruction JUMP ~[] destination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1464  <|@ instruction JUMP ~[] destination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B147" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1340  <|@ instruction JUMP ~[] destination: B141 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1412  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1414  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B151" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1550  <|@ instruction JUMP ~[] destination: B169 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B169" 
    successors "B152" "B169" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = LEA [r8|QWORD + 32] size: QWORD <|@ <|@
      nr 1422  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1424  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1316  <|@ instruction JUMP ~[] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1292  <|@ instruction JUMP ~[] destination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B129" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1562  <|@ instruction JUMP ~[] destination: B172 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B172" 
    successors "B130" "B172" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction xmm0|V256_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1246  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1248  <|@ instruction r9|QWORD = LEA [r9|QWORD + 32] size: QWORD <|@ <|@
      nr 1250  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1252  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B130 falseDestination: B129 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction JUMP ~[] destination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction JUMP ~[] destination: B154 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction JUMP ~[] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B131" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32, stack:40, stack:48]
live-base-pointers: []
java.nio.charset.CharsetEncoder.reset(CharsetEncoder.java:711) [bci: 9]
locals: r13|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 4]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 4] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  602  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  606  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.lang.String.toCharArray(String.java:2901) [bci: 23]
locals: - stack:40|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
locals: stack:32|QWORD[.] - stack:48|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23, 9] <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B123" 
    xhandlers
    flags 
    probability 4591868738987134556
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1180  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1182  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1184  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B120" 
    successors "B124" 
    xhandlers
    flags 
    probability 4592517127636291823
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1190  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1194  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ st <@st|@reference-map: [stack:0, stack:32, stack:40]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: stack:48|QWORD[.] stack:40|QWORD[.] stack:68|DWORD - stack:80|QWORD[.] stack:52|DWORD r13|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - stack:80|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 62] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4591419820104220672
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B78 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B147" 
    xhandlers
    flags 
    probability 4591418469091886456
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1356  <|@ instruction JUMP ~[] destination: B143 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B171" 
    xhandlers
    flags 
    probability 4591418469091886456
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1526  <|@ instruction JUMP ~[] destination: B165 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4589730970243956736
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" 
    xhandlers
    flags 
    probability 4589729956984706074
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1372  <|@ instruction JUMP ~[] destination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4589729956984706074
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1540  <|@ instruction JUMP ~[] destination: B167 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction VUCOMISS (x: xmm0|SINGLE, y: xmm0|SINGLE) <|@ <|@
      nr  376  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B37 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  414  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B123" 
    xhandlers
    flags 
    probability 4576340730974311578
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~[] destination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B88" 
    xhandlers
    flags 
    probability 4574183186931563751
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction xmm1|SINGLE = VMOVE input: float[0.0|0x0] <|@ <|@
      nr  384  <|@ instruction VUCOMISS (x: xmm0|SINGLE, y: xmm1|SINGLE) <|@ <|@
      nr  386  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r10|QWORD = MOVE input: long[2147483647|0x7fffffff] <|@ <|@
      nr  392  <|@ instruction r14|DWORD = MOVE input: int[2147483647|0x7fffffff] <|@ <|@
      nr  394  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4557794804772723712
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4557794804772723712
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Charset.newEncoder()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 1] <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rax:0, stack:40, stack:48]
live-base-pointers: []
java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 15]
stack: stack:32|QWORD[.] Object[null] 
locals: stack:32|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - - 
>@ <|@ instruction MOV [rax|QWORD[.] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] state [bci:15, 1] <|@ <|@
      nr   44  <|@ instruction r10|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   48  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   50  <|@ instruction MOV [rax|QWORD[.] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   52  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   60  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   62  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    probability 4547007122018942976
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r10|DWORD = MOVE input: int[-147041|0xfffffffffffdc19f] <|@ <|@
      nr 1084  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B112" "B110" "B102" "B109" "B108" "B107" "B114" "B116" 
    successors 
    xhandlers
    flags 
    probability 4551510352711431998
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [r11:0, stack:32, stack:40]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: stack:48|QWORD[.] stack:40|QWORD[.] stack:68|DWORD - r11|QWORD[.] r9|DWORD r13|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - r11|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:54, 62] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 4547006384149180028
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1100  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1102  <|@ instruction r10|DWORD = MOVE input: int[-147041|0xfffffffffffdc19f] <|@ <|@
      nr 1104  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr  466  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction r10|DWORD = MOVE input: int[-80923|0xfffffffffffec3e5] <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B43 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B52" "B175" "B174" "B43" "B49" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1602  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1606  <|@ st <@st|@reference-map: [rax:0, rsi:0, r13:0]
live-base-pointers: []
java.lang.String.toCharArray(String.java:2901) [bci: 23]
locals: - rax|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
locals: rsi|QWORD[.] - r13|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:23, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r10|DWORD = MOVE input: int[-97555|0xfffffffffffe82ed] <|@ <|@
      nr 1064  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction JUMP ~[] destination: B112 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction MOV [r15|QWORD + 668] y: -98827 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B92" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1023872315] <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 668] y: -86043 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [r11:0, stack:32, stack:40]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: stack:48|QWORD[.] stack:40|QWORD[.] r10|DWORD - r11|QWORD[.] r9|DWORD r10|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - r11|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:54, 62] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction MOV [r15|QWORD + 668] y: -80403 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
locals: rsi|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:30, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD = MOVE input: int[-93211|0xfffffffffffe93e5] <|@ <|@
      nr 1016  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B108 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1030  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B109 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed] <|@ <|@
      nr  534  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B52 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: int[-110875|0xfffffffffffe4ee5] <|@ <|@
      nr 1044  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1586  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr 1590  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1592  <|@ instruction r10|DWORD = MOVE input: int[-80923|0xfffffffffffec3e5] <|@ <|@
      nr 1594  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction JUMP ~[] destination: B175 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr  508  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr  512  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B49 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1570  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1572  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr 1574  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1578  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~[] destination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction r10|DWORD = MOVE input: int[-95515|0xfffffffffffe8ae5] <|@ <|@
      nr 1002  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B107 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction r10|DWORD = MOVE input: int[-90387|0xfffffffffffe9eed] <|@ <|@
      nr  940  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B102 -> B117 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #16         // encoder:()java.nio.charset.CharsetEncoder
     4: invokevirtual #17         // java.nio.charset.CharsetEncoder.reset:()java.nio.charset.CharsetEncoder
     7: astore_2      
     8: aload_1       
     9: invokevirtual #18         // java.lang.String.toCharArray:()char[]
    12: astore_3      
    13: aload_3       
    14: arraylength   
    15: i2f           
    16: aload_2       
    17: invokevirtual #19         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    20: fmul          
    21: f2i           
    22: istore        4
    24: iload         4
    26: newarray      byte
    28: astore        5
    30: iload         4
    32: ifne          38
    35: aload         5
    37: areturn       
    38: aload_0       
    39: getfield      #4          // isUTF8:boolean
    42: ifeq          93
    45: aload_2       
    46: instanceof    #25         // sun.nio.cs.ArrayEncoder
    49: ifeq          93
    52: aload_2       
    53: checkcast     #25         // sun.nio.cs.ArrayEncoder
    56: aload_3       
    57: iconst_0      
    58: aload_3       
    59: arraylength   
    60: aload         5
    62: invokeinterface#20, 5      // sun.nio.cs.ArrayEncoder.encode:(char[], int, int, byte[])int
    67: istore        6
    69: iload         6
    71: iconst_m1     
    72: if_icmpne     85
    75: new           #9          // java.lang.IllegalArgumentException
    78: dup           
    79: ldc           #10         // "MALFORMED"
    81: invokespecial #6          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    84: athrow        
    85: aload         5
    87: iload         6
    89: invokestatic  #21         // java.util.Arrays.copyOf:(byte[], int)byte[]
    92: areturn       
    93: aload         5
    95: invokestatic  #22         // java.nio.ByteBuffer.wrap:(byte[])java.nio.ByteBuffer
    98: astore        6
   100: aload_3       
   101: invokestatic  #9          // java.nio.CharBuffer.wrap:(char[])java.nio.CharBuffer
   104: astore        7
   106: aload_2       
   107: aload         7
   109: aload         6
   111: iconst_1      
   112: invokevirtual #23         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
   115: astore        8
   117: aload         8
   119: invokevirtual #11         // java.nio.charset.CoderResult.isUnderflow:()boolean
   122: ifne          138
   125: new           #9          // java.lang.IllegalArgumentException
   128: dup           
   129: aload         8
   131: invokevirtual #12         // java.nio.charset.CoderResult.toString:()java.lang.String
   134: invokespecial #6          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
   137: athrow        
   138: aload_2       
   139: aload         6
   141: invokevirtual #24         // java.nio.charset.CharsetEncoder.flush:(java.nio.ByteBuffer)java.nio.charset.CoderResult
   144: astore        8
   146: aload         8
   148: invokevirtual #11         // java.nio.charset.CoderResult.isUnderflow:()boolean
   151: ifne          167
   154: new           #9          // java.lang.IllegalArgumentException
   157: dup           
   158: aload         8
   160: invokevirtual #12         // java.nio.charset.CoderResult.toString:()java.lang.String
   163: invokespecial #6          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
   166: athrow        
   167: aload         6
   169: invokevirtual #25         // java.nio.Buffer.position:()int
   172: aload         5
   174: arraylength   
   175: if_icmpne     181
   178: aload         5
   180: areturn       
   181: aload         5
   183: aload         6
   185: invokevirtual #25         // java.nio.Buffer.position:()int
   188: invokestatic  #21         // java.util.Arrays.copyOf:(byte[], int)byte[]
   191: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6edd3b29 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   10  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 5.047591577732602E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607177872333707689
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   78  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, r14:0, stack:32, stack:48]
live-base-pointers: []
java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
locals: rsi|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:30, 1] <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = MOVZXB [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  104  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" "B10" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r8|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr  120  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr  122  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  142  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  144  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B32" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction r10|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B32 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B23" "B22" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  262  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  264  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  272  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  286  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B29" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  310  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD <|@ <|@
      nr  314  <|@ instruction rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B26" 
    successors "B32" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B13" "B31" "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  356  <|@ instruction xmm0|SINGLE = VCVTSI2SS stack:52|DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction xmm0|SINGLE = VMULSS (x: xmm0|SINGLE, y: [r13|QWORD[.] + 16]) nZ: XMM <|@ <|@
      nr  362  <|@ instruction r14|DWORD = VCVTTSS2SI xmm0|SINGLE nZ: XMM <|@ <|@
      nr  364  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  366  <|@ instruction CMP r14|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" "B38" "B36" 
    successors "B45" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  428  <|@ instruction CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction r8|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r14|DWORD) condition: |>| <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  436  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  442  <|@ instruction r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B45 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B175" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B51" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B51 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B174" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B45" "B48" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  546  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" "B56" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  554  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  558  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B58 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  572  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  574  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  576  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  578  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" 
    successors "B82" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  614  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  616  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B82 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD <|@ <|@
      nr  630  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" 
    successors "B69" "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  678  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  682  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B66" 
    successors "B72" "B71" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  690  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B72 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  702  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr  704  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  706  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B69" 
    successors "B75" "B74" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  712  <|@ instruction rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  714  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  726  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr  728  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  730  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B72" 
    successors "B82" "B77" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B82 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B82" "B79" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  750  <|@ instruction rcx|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  752  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B82 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" "B81" 
    xhandlers
    flags 
    probability 4598738169498697728
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  766  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B82 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4596767844661723136
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B59" "B81" "B75" "B77" "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  784  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4633577314113346477
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  796  <|@ instruction rsi|DWORD = MOVSX [r11|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  798  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B83" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4633576394537567927
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction MOVB (x: [rax|QWORD[.] + r10|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  806  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B85 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B85" 
    successors "B84" "B88" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4633717132025923255
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  790  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B83" "B84" 
    successors "B89" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B88" "B90" 
    successors "B97" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B100" "B106" 
    successors "B98" "B111" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608053799174313579
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  894  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  896  <|@ instruction BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B110" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4596139063284904789
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4596139063284904789
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction rsi|DWORD = MOVZX [r11|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  908  <|@ instruction rdx|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  910  <|@ instruction rcx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction CMP rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B97" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4595738705134131296
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  920  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B100 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction CMP rsi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B109" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  948  <|@ instruction CMP rsi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B108" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  956  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction r9|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  962  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B97" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4577559352193429335
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD <|@ <|@
      nr  970  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr  972  <|@ instruction MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  974  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr  978  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  980  <|@ instruction MOVB (x: [rax|QWORD[.] + rcx|DWORD * 1 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  982  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  984  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOVB (x: [rax|QWORD[.] + r9|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  988  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  990  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction JUMP ~[] destination: B106 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction CMP r8|DWORD y: -1 size: DWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B118" 
    xhandlers
    flags 
    probability 4607181518080091934
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B119" "B123" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1122  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1124  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1126  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B118 -> B119 falseDestination: B118 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B123" "B121" 
    xhandlers
    flags 
    probability 4606280077659742249
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1130  <|@ instruction rcx|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr 1132  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1136  <|@ instruction r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1138  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1140  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B123 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4606199029078597591
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1154  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1156  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1158  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1160  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1162  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1166  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1168  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1172  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction JUMP ~[] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B121" "B123" 
    successors "B147" "B126" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1204  <|@ instruction r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1206  <|@ instruction rsi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1208  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B147 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B131" "B129" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction r11|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1222  <|@ instruction r11|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1224  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 32] size: QWORD <|@ <|@
      nr 1226  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1232  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1228  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B126 -> B131 falseDestination: B126 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B126" "B129" 
    successors "B134" "B133" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1260  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1262  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B131 -> B134 falseDestination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B134" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1272  <|@ instruction xmm0|V128_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1274  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1276  <|@ instruction r8|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 1278  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B131" 
    successors "B137" "B136" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1284  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1286  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1288  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B137 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction xmm0|V64_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1298  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1300  <|@ instruction r8|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr 1302  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B134" 
    successors "B140" "B139" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1308  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1310  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1312  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B140 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1320  <|@ instruction xmm0|V32_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVD <|@ <|@
      nr 1322  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr 1324  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr 1326  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B137" 
    successors "B147" "B142" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1332  <|@ instruction r8|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1334  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1336  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B147 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B147" "B144" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1344  <|@ instruction rcx|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1] size: DWORD <|@ <|@
      nr 1346  <|@ instruction MOVB (x: [r10|QWORD[.] + r9|QWORD * 1], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1348  <|@ instruction rcx|QWORD = INC r9|QWORD size: QWORD <|@ <|@
      nr 1350  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B147 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B147" "B146" 
    xhandlers
    flags 
    probability 4598737156239447066
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1360  <|@ instruction rcx|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1 + 1] size: DWORD <|@ <|@
      nr 1362  <|@ instruction MOVB (x: [r10|QWORD[.] + r9|QWORD * 1 + 1], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1364  <|@ instruction rcx|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr 1366  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1368  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B147 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" 
    xhandlers
    flags 
    probability 4596766324772847143
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction r11|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1 + 2] size: DWORD <|@ <|@
      nr 1378  <|@ instruction MOVB (x: [r10|QWORD[.] + r9|QWORD * 1 + 2], y: r11|DWORD) size: BYTE <|@ <|@
      nr 1380  <|@ instruction JUMP ~[] destination: B146 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B124" "B146" "B140" "B142" "B144" 
    successors "B148" "B171" 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1384  <|@ instruction r10|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1386  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1388  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B147 -> B148 falseDestination: B147 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B147" "B168" "B162" "B164" "B166" 
    successors 
    xhandlers
    flags 
    probability 4607180617450238453
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  834  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  838  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  842  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  844  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B96" "B94" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B96 falseDestination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1394  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1396  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 32] size: QWORD <|@ <|@
      nr 1398  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1400  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1406  <|@ instruction JUMP ~[] destination: B149 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B149" "B151" 
    successors "B156" "B155" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr 1434  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1436  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B156 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1446  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1448  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 1450  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~[] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" "B153" 
    successors "B159" "B158" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1456  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1458  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1460  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B159 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1470  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1472  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 1474  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1476  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B156" 
    successors "B162" "B161" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 1482  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1484  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B162 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B162" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1492  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1494  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 1498  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction JUMP ~[] destination: B161 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" "B159" 
    successors "B171" "B164" 
    xhandlers
    flags 
    probability 4602677017822867957
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1504  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1506  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1508  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B171 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B171" "B166" 
    xhandlers
    flags 
    probability 4600425668346627448
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1516  <|@ instruction MOVB (x: [r11|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr 1520  <|@ instruction CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1522  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B164 -> B171 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B171" "B168" 
    xhandlers
    flags 
    probability 4598737156239447066
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1530  <|@ instruction MOVB (x: [r11|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1532  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 1534  <|@ instruction CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1536  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B171 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4596766324772847143
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction MOVB (x: [r11|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1546  <|@ instruction JUMP ~[] destination: B168 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  228  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  234  <|@ instruction J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  644  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B64" 
    successors "B66" "B64" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  650  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  652  <|@ instruction r10|QWORD = LEA [r10|QWORD + 32] size: QWORD <|@ <|@
      nr  654  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  656  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4593669818568126965
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1412  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1414  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B151" 
    successors "B153" "B151" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1418  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1420  <|@ instruction r8|QWORD = LEA [r8|QWORD + 32] size: QWORD <|@ <|@
      nr 1422  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1424  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B151 -> B153 falseDestination: B151 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B126" "B129" 
    successors "B131" "B129" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4602677017822867957
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1244  <|@ instruction xmm0|V256_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1246  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1248  <|@ instruction r9|QWORD = LEA [r9|QWORD + 32] size: QWORD <|@ <|@
      nr 1250  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1252  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B131 falseDestination: B129 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32, stack:40, stack:48]
live-base-pointers: []
java.nio.charset.CharsetEncoder.reset(CharsetEncoder.java:711) [bci: 9]
locals: r13|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 4]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 4] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  602  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  606  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48]
live-base-pointers: []
java.lang.String.toCharArray(String.java:2901) [bci: 23]
locals: - stack:40|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
locals: stack:32|QWORD[.] - stack:48|QWORD[.] - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23, 9] <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B118" "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4592517127636291823
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1180  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1182  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1190  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1194  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ st <@st|@reference-map: [stack:0, stack:32, stack:40]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: stack:48|QWORD[.] stack:40|QWORD[.] stack:68|DWORD - stack:80|QWORD[.] stack:52|DWORD r13|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - stack:80|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 62] <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction VUCOMISS (x: xmm0|SINGLE, y: xmm0|SINGLE) <|@ <|@
      nr  376  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B37 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  414  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4572414629676717184
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction xmm1|SINGLE = VMOVE input: float[0.0|0x0] <|@ <|@
      nr  384  <|@ instruction VUCOMISS (x: xmm0|SINGLE, y: xmm1|SINGLE) <|@ <|@
      nr  386  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4567911030049346688
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r10|QWORD = MOVE input: long[2147483647|0x7fffffff] <|@ <|@
      nr  392  <|@ instruction r14|DWORD = MOVE input: int[2147483647|0x7fffffff] <|@ <|@
      nr  394  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4557794804772723712
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4557794804772723712
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [stack:40, stack:48]
live-base-pointers: []
java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Charset.newEncoder()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 1] <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rax:0, stack:40, stack:48]
live-base-pointers: []
java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 15]
stack: stack:32|QWORD[.] Object[null] 
locals: stack:32|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - - - - - 
>@ <|@ instruction MOV [rax|QWORD[.] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] state [bci:15, 1] <|@ <|@
      nr   44  <|@ instruction r10|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   48  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   50  <|@ instruction MOV [rax|QWORD[.] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] <|@ <|@
      nr   52  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   60  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   62  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B117" 
    xhandlers
    flags 
    probability 4547007122018942976
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r10|DWORD = MOVE input: int[-147041|0xfffffffffffdc19f] <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B112" "B110" "B102" "B109" "B108" "B107" "B114" "B116" 
    successors 
    xhandlers
    flags 
    probability 4551510352711431998
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1064  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [r11:0, stack:32, stack:40]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: stack:48|QWORD[.] stack:40|QWORD[.] stack:68|DWORD - r11|QWORD[.] r9|DWORD r13|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - r11|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:54, 62] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" 
    xhandlers
    flags 
    probability 4547006384149180028
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1100  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1102  <|@ instruction r10|DWORD = MOVE input: int[-147041|0xfffffffffffdc19f] <|@ <|@
      nr 1108  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr  466  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction r10|DWORD = MOVE input: int[-80923|0xfffffffffffec3e5] <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B43 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B52" "B175" "B174" "B43" "B49" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1602  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1606  <|@ st <@st|@reference-map: [rax:0, rsi:0, r13:0]
live-base-pointers: []
java.lang.String.toCharArray(String.java:2901) [bci: 23]
locals: - rax|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9]
locals: rsi|QWORD[.] - r13|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:23, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r10|DWORD = MOVE input: int[-97555|0xfffffffffffe82ed] <|@ <|@
      nr 1068  <|@ instruction JUMP ~[] destination: B112 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction MOV [r15|QWORD + 668] y: -98827 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rsi:0, stack:40]
live-base-pointers: []
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0]
locals: rsi|QWORD[.] stack:40|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B89" "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1023872315] <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 668] y: -86043 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [r11:0, stack:32, stack:40]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: stack:48|QWORD[.] stack:40|QWORD[.] r10|DWORD - r11|QWORD[.] r9|DWORD r10|DWORD - - - 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62]
locals: - - - - - r11|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:54, 62] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction MOV [r15|QWORD + 668] y: -80403 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30]
locals: rsi|QWORD[.] 
java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:30, 1] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction r10|DWORD = MOVE input: int[-93211|0xfffffffffffe93e5] <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B108 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B109 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed] <|@ <|@
      nr  534  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B52 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: int[-110875|0xfffffffffffe4ee5] <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1586  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr 1590  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1592  <|@ instruction r10|DWORD = MOVE input: int[-80923|0xfffffffffffec3e5] <|@ <|@
      nr 1594  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction JUMP ~[] destination: B175 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr  508  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr  512  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B49 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B176" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1570  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1572  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595] <|@ <|@
      nr 1574  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5] <|@ <|@
      nr 1578  <|@ instruction rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~[] destination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  996  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction r10|DWORD = MOVE input: int[-95515|0xfffffffffffe8ae5] <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B107 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction r9|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction r10|DWORD = MOVE input: int[-90387|0xfffffffffffe9eed] <|@ <|@
      nr  944  <|@ instruction JUMP ~[] destination: B102 -> B117 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #16         // encoder:()java.nio.charset.CharsetEncoder
     4: invokevirtual #17         // java.nio.charset.CharsetEncoder.reset:()java.nio.charset.CharsetEncoder
     7: astore_2      
     8: aload_1       
     9: invokevirtual #18         // java.lang.String.toCharArray:()char[]
    12: astore_3      
    13: aload_3       
    14: arraylength   
    15: i2f           
    16: aload_2       
    17: invokevirtual #19         // java.nio.charset.CharsetEncoder.maxBytesPerChar:()float
    20: fmul          
    21: f2i           
    22: istore        4
    24: iload         4
    26: newarray      byte
    28: astore        5
    30: iload         4
    32: ifne          38
    35: aload         5
    37: areturn       
    38: aload_0       
    39: getfield      #4          // isUTF8:boolean
    42: ifeq          93
    45: aload_2       
    46: instanceof    #25         // sun.nio.cs.ArrayEncoder
    49: ifeq          93
    52: aload_2       
    53: checkcast     #25         // sun.nio.cs.ArrayEncoder
    56: aload_3       
    57: iconst_0      
    58: aload_3       
    59: arraylength   
    60: aload         5
    62: invokeinterface#20, 5      // sun.nio.cs.ArrayEncoder.encode:(char[], int, int, byte[])int
    67: istore        6
    69: iload         6
    71: iconst_m1     
    72: if_icmpne     85
    75: new           #9          // java.lang.IllegalArgumentException
    78: dup           
    79: ldc           #10         // "MALFORMED"
    81: invokespecial #6          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    84: athrow        
    85: aload         5
    87: iload         6
    89: invokestatic  #21         // java.util.Arrays.copyOf:(byte[], int)byte[]
    92: areturn       
    93: aload         5
    95: invokestatic  #22         // java.nio.ByteBuffer.wrap:(byte[])java.nio.ByteBuffer
    98: astore        6
   100: aload_3       
   101: invokestatic  #9          // java.nio.CharBuffer.wrap:(char[])java.nio.CharBuffer
   104: astore        7
   106: aload_2       
   107: aload         7
   109: aload         6
   111: iconst_1      
   112: invokevirtual #23         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
   115: astore        8
   117: aload         8
   119: invokevirtual #11         // java.nio.charset.CoderResult.isUnderflow:()boolean
   122: ifne          138
   125: new           #9          // java.lang.IllegalArgumentException
   128: dup           
   129: aload         8
   131: invokevirtual #12         // java.nio.charset.CoderResult.toString:()java.lang.String
   134: invokespecial #6          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
   137: athrow        
   138: aload_2       
   139: aload         6
   141: invokevirtual #24         // java.nio.charset.CharsetEncoder.flush:(java.nio.ByteBuffer)java.nio.charset.CoderResult
   144: astore        8
   146: aload         8
   148: invokevirtual #11         // java.nio.charset.CoderResult.isUnderflow:()boolean
   151: ifne          167
   154: new           #9          // java.lang.IllegalArgumentException
   157: dup           
   158: aload         8
   160: invokevirtual #12         // java.nio.charset.CoderResult.toString:()java.lang.String
   163: invokespecial #6          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
   166: athrow        
   167: aload         6
   169: invokevirtual #25         // java.nio.Buffer.position:()int
   172: aload         5
   174: arraylength   
   175: if_icmpne     181
   178: aload         5
   180: areturn       
   181: aload         5
   183: aload         6
   185: invokevirtual #25         // java.nio.Buffer.position:()int
   188: invokestatic  #21         // java.util.Arrays.copyOf:(byte[], int)byte[]
   191: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c2440488974243085028b4e1885c90f84c607000048c1e1034c8be94c896c2420448b720c438504f40fb64e0c85c90f84d708000045896514498b4f604d8b5770468b1cf50c00000044895c241c4181fbffffff000f83b2060000458bc341d1e0458d40174183e0f84d63c04d8bc84c03c94d3bca0f87920600004d894f60410f188408c0000000410f18840800010000410f18840840010000410f188408800100004489590c48c70101000000c74108addeadde488bc14489742418458bf34889442428458bd64c895424104585f60f8484000000488d7810498d72f04885f60f8d9205000048c7c200000000498d72f8483bd60f8f10000000c5f9efc0c5fa7f0457488d7208488bd6498d72fc483bd60f8f11000000c5f9efc0c4e1f97e0457488d7204488bd6498d72fe483bd60f8f10000000c5f9efc0c5f97e0457488d7202488bd6498bf248ffce483bd60f8f050000006644892457448b74241849c1e603488bf0498d7e10488d7610498bd2e80000000090c5f957c0c5fa2a44241c4c8b6c2420c4c17a594510c57a2cf04d63d64181fe000000800f84e3050000448b5c241c453bde458bc3450f47c64963f048ffce4183f8014c8b4c24100f8c120000004c3bce0f86af0700004585db0f84b50600004183f8010f8c120000004c3bd60f86d70700004585f60f84ac0700004585f60f844f070000498b7760498b57704181feffffff000f832a050000418d4e1783e1f84863c94c8bd14c03d64c3bd20f87110500004d8957600f188431c00000000f188431000100000f188431400100000f188431800100004489760c48c70601000000c74608addeadde488bc6458be84183fe010f8cab000000488d70104963d6488d4ae04885c90f8d2304000049c7c200000000488d4af04c3bd10f8f11000000c5f9efc0c4a17a7f0416498d4a104c8bd1488d4af84c3bd10f8f11000000c5f9efc0c4a1f97e0416498d4a084c8bd1488d4afc4c3bd10f8f11000000c5f9efc0c4a1797e0416498d4a044c8bd148ffca4c3bd20f8f2a00000046882416498bca48ffc1483bca0f8f170000004688641601498d4a02483bca0f8f05000000468864160241ba000000004c8b5c2428e922000000660f1f840000000000430fbf7453106681fe80000f830d000000428874101041ffc2453bea7fe2448b6c241c453bea0f8f3b020000458bc290453bea0f8ea4000000453bf00f86f4050000430fb7745310418bd2ffc2418bc8ffc181fe800000000f830d0000004288740010448bc1448bd2ebc581fe000800000f824b06000081fe00d800000f8381050000443bf10f8665050000458d4802453bf10f8616060000448bd641c1ea0c4181cae00000004688540010448bd641c1ea064183e23f4181ca80000000448854081083e63f81ce800000004288740810458d4003448bd2e953ffffff4183f8ff0f84a20400004585c00f8c300400004585f60f8c4f040000498b7760498b57704181f8ffffff000f8319030000418d481783e1f84863c94c8bc94c03ce4c3bca0f87000300004d894f600f188431c00000000f188431000100000f188431400100000f188431800100004489460c48c70601000000c74608addeadde458be848890424488bc6453bee458bc5450f4fc64963f04883fe010f8cca0000004c8b1c244c8d50104d8d5b104c8d46e04d85c049c7c1000000000f8d220200004c8d46f04d3bc80f8f13000000c4817a6f040bc4817a7f040a4d8d41104d8bc84c8d46f84d3bc80f8f13000000c481f96e040bc481f97e040a4d8d41084d8bc84c8d46fc4d3bc80f8f13000000c481796e040bc481797e040a4d8d41044d8bc84c8bc649ffc84d3bc80f8f3b000000430fbe0c0b43880c0a498bc948ffc1493bc80f8f23000000430fbe4c0b0143884c0a01498d4902493bc80f8f0b000000470fbe5c0b0247885c0a024d63d54c3bd60f8f41000000488b6c24404883c448850500000000c5f877c34c8b4424104963f2418bd5412bd24863d248ffca4803f24c3bc60f862a030000453bea0f879cfdffffe91c0300004c8d5c30104c2bd6498d72e04885f60f8dea00000049c7c000000000498d72f04c3bc60f8f11000000c5f9efc0c4817a7f0403498d70104c8bc6498d72f84c3bc60f8f11000000c5f9efc0c481f97e0403498d70084c8bc6498d72fc4c3bc60f8f11000000c5f9efc0c481797e0403498d70044c8bc649ffca4d3bc20f8f3dffffff47882403498bf048ffc6493bf20f8f2affffff4788640301498d7002493bf20f8f18ffffff4788640302e90effffffc5f9efc048c7c2000000000f1f8400000000000f1f8000000000c5fe7f0457488d5210483bd67ef2e948faffffc5f9efc049c7c2000000006690c4a17e7f04164d8d52204c3bd17ef1e9c3fbffffc5f9efc049c7c00000000090c4817e7f04034d8d40204c3bc67ef1e9fdfeffff660f1f440000660f1f440000c4817e6f040bc4817e7f040a4d8d49204d3bc87eebe9c4fdffff4489742418488954242848b9addeaddeaddeadde488bf1418bd3b900000000458bf3e80000000090e986f9ffff48beaddeaddeaddeadde418bd6b900000000458be8e80000000090e90bfbffff448954240c4889042448beaddeaddeaddeadde418bd0b900000000458be8e80000000090e917fdffff4c8b442410c5f82ec07a060f841700000049c7c20000000041be00000000448b5c241ce9faf9ffff448b4c241cc5f157c9c5f82ec10f8708000000458bd9e9dff9ffff49c7c2ffffff7f41beffffff7f458bd9e9caf9ffff4889542428448b56104585d20f84df00000049c1e203498bf248b8ffffffffffffffff0f1f4000e80000000090c74020addeadde4c8bd049c1ea0949bb00e01b17010000004788241ac74024addeadde4c8bd049c1ea03488b742430448956184c8bd649c1ea094788241a4c8be8488b542428e9c9f7ffff448954240c458bcd41ba9fc1fdff458be84c8bd84589979c0200004d89a7a8020000e80000000090448954240c458bcd41ba9fc1fdffebd6488b74243049baaddeaddeaddeadde4d8bda41bae5c3feff488b4424284589979c0200004d899fa8020000e80000000090448954240c458bcd41baed82feffeb9541c7879c020000f57dfeff4d89a7a8020000e80000000090458bcd4c8bd849b8addeaddeaddeadde41c7879c020000e5affeff4d8987a8020000e8000000009041c7879c020000edc5feff4d89a7a8020000e80000000090448954240c458bcd41bae593feffe92affffff448954240c458bcd41baed9dfeffe917ffffff49bb000000000000000041baedc9feff488b442428488b742430e93fffffff448954240c458bcd41bae54efeffe9e5feffff488b74243049baaddeaddeaddeadde4d8bda41bae5c3feff488b442428e90affffff488b74243049baaddeaddeaddeadde4d8bda41bae5b8feff488b442428e9e8feffff488b74243049baaddeaddeaddeadde4d8bda41bae5b8feff488b442428e9c6feffff448954240c458bcd41bae58afeffe96cfeffff448954240c458bcd41baed9efeffe959feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6edd3b29 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, stack:48]at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 58 12 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 60 14 BRANCH trueDestinationProbability: 5.047591577732602E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 66 block B4 null  <||@
  Comment 66 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 70 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3  <||@
  Comment 70 72 r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 73 74 JUMP ~[] destination: B4 -> B5  <||@
  Comment 73 block B5 null  <||@
  Comment 73 76 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 73 78 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 78 80 r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 82 82 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:30, 1]  <||@
  Comment 82 [rdx:0, rsi:0, r13:0, r14:0, stack:32, stack:48]at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 84 rcx|DWORD = MOVZXB [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 90 86 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 92 88 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 98 block B7 null  <||@
  Comment 98 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 100 MOV (x: [r13|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 102 102 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 106 104 r10|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 110 106 r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 118 108 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 123 110 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 130 112 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 136 block B8 null  <||@
  Comment 136 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 116 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 142 118 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 146 120 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 150 122 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 153 124 r9|QWORD = ADD (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 159 126 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 162 128 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 168 block B10 null  <||@
  Comment 168 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 168 140 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 172 142 AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 181 144 AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 190 146 AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 199 148 AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 208 150 MOV (x: [rcx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 212 152 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 219 154 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 219 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 226 156 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 226 158 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 229 160 stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 234 162 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 237 164 JUMP ~[] destination: B10 -> B13  <||@
  Comment 237 block B13 null  <||@
  Comment 237 190 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 237 192 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 242 194 r10|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 245 196 stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 250 198 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 253 200 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B32 falseDestination: B13 -> B15  <||@
  Comment 259 block B15 null  <||@
  Comment 259 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 259 210 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 263 212 rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 267 214 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 270 216 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 276 block B16 null  <||@
  Comment 276 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 276 220 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 283 222 JUMP ~[] destination: B16 -> B20  <||@
  Comment 283 block B20 null  <||@
  Comment 283 246 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 283 248 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 287 250 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 290 252 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 296 block B22 null  <||@
  Comment 296 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 260 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 300 262 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 305 264 rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 309 266 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 312 268 JUMP ~[] destination: B22 -> B23  <||@
  Comment 312 block B23 null  <||@
  Comment 312 270 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 312 272 rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 316 274 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 319 276 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 325 block B25 null  <||@
  Comment 325 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 284 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 329 286 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 335 288 rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 339 290 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 342 292 JUMP ~[] destination: B25 -> B26  <||@
  Comment 342 block B26 null  <||@
  Comment 342 294 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 342 296 rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 346 298 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 349 300 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 355 block B28 null  <||@
  Comment 355 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 355 308 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 359 310 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 364 312 rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 368 314 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 371 316 JUMP ~[] destination: B28 -> B29  <||@
  Comment 371 block B29 null  <||@
  Comment 371 318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 371 320 rsi|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 377 322 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 380 324 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 386 block B31 null  <||@
  Comment 386 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 386 334 MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 391 338 JUMP ~[] destination: B31 -> B32  <||@
  Comment 391 block B32 null  <||@
  Comment 391 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 204 r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 396 342 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3  <||@
  Comment 400 344 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 400 346 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 403 348 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 407 350 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 411 352 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 414 354 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 414 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 420 356 xmm0|SINGLE = VCVTSI2SS stack:52|DWORD  <||@
  Comment 430 358 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 435 360 xmm0|SINGLE = VMULSS (x: xmm0|SINGLE, y: [r13|QWORD[.] + 16]) nZ: XMM  <||@
  Comment 441 362 r14|DWORD = VCVTTSS2SI xmm0|SINGLE nZ: XMM  <||@
  Comment 445 364 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 448 366 CMP r14|DWORD y: -2147483648 size: DWORD  <||@
  Comment 455 368 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38  <||@
  Comment 461 block B38 null  <||@
  Comment 461 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 422 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 466 424 JUMP ~[] destination: B38 -> B39  <||@
  Comment 466 block B39 null  <||@
  Comment 466 426 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 466 428 CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 469 430 r8|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r14|DWORD) condition: |>|  <||@
  Comment 476 432 rsi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 479 434 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 482 436 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 486 442 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 491 438 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B45 falseDestination: B39 -> B41  <||@
  Comment 497 block B41 null  <||@
  Comment 497 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 450 CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 500 452 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B175  <||@
  Comment 506 block B42 null  <||@
  Comment 506 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 506 456 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 509 458 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B45  <||@
  Comment 515 block B45 null  <||@
  Comment 515 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 482 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 519 484 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B51 falseDestination: B45 -> B47  <||@
  Comment 525 block B47 null  <||@
  Comment 525 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 525 492 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 528 494 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B174  <||@
  Comment 534 block B48 null  <||@
  Comment 534 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 534 498 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 537 500 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51  <||@
  Comment 543 block B51 null  <||@
  Comment 543 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 543 524 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 546 526 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 552 block B53 null  <||@
  Comment 552 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 552 542 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 556 544 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 560 546 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 567 548 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58  <||@
  Comment 573 block B54 null  <||@
  Comment 573 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 552 rcx|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 577 554 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 580 556 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 583 558 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 589 560 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 592 562 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B58 falseDestination: B54 -> B56  <||@
  Comment 598 block B56 null  <||@
  Comment 598 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 598 570 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 602 572 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 610 574 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 618 576 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 626 578 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 634 580 MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 638 582 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 645 584 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 645 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 652 586 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 652 588 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 655 590 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 658 592 JUMP ~[] destination: B56 -> B59  <||@
  Comment 658 block B59 null  <||@
  Comment 658 612 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 658 614 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 662 616 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B82 falseDestination: B59 -> B61  <||@
  Comment 668 block B61 null  <||@
  Comment 668 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 668 624 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 672 626 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 675 628 rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD  <||@
  Comment 679 630 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 682 632 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 688 block B62 null  <||@
  Comment 688 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 636 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 695 638 JUMP ~[] destination: B62 -> B66  <||@
  Comment 695 block B66 null  <||@
  Comment 695 662 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 695 664 rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 699 666 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 702 668 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68  <||@
  Comment 708 block B68 null  <||@
  Comment 708 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 708 676 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 712 678 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 718 680 rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 722 682 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 725 684 JUMP ~[] destination: B68 -> B69  <||@
  Comment 725 block B69 null  <||@
  Comment 725 686 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 725 688 rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 729 690 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 732 692 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B72 falseDestination: B69 -> B71  <||@
  Comment 738 block B71 null  <||@
  Comment 738 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 738 700 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 742 702 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 748 704 rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 752 706 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 755 708 JUMP ~[] destination: B71 -> B72  <||@
  Comment 755 block B72 null  <||@
  Comment 755 710 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 755 712 rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 759 714 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 762 716 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74  <||@
  Comment 768 block B74 null  <||@
  Comment 768 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 724 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 772 726 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 778 728 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 782 730 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 785 732 JUMP ~[] destination: B74 -> B75  <||@
  Comment 785 block B75 null  <||@
  Comment 785 734 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 785 736 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 788 738 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 791 740 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B82 falseDestination: B75 -> B77  <||@
  Comment 797 block B77 null  <||@
  Comment 797 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 748 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 801 750 rcx|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 807 752 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 810 754 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B82 falseDestination: B77 -> B79  <||@
  Comment 816 block B79 null  <||@
  Comment 816 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 762 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 821 764 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 825 766 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 828 768 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B82 falseDestination: B79 -> B81  <||@
  Comment 834 block B81 null  <||@
  Comment 834 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 776 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 839 778 JUMP ~[] destination: B81 -> B82  <||@
  Comment 839 block B82 null  <||@
  Comment 839 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 782 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 845 784 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 850 786 JUMP ~[] destination: B82 -> B83  <||@
  Comment 855 block B84 loop 2 depth 1 header:90|LoopBegin  <||@
  Comment 855 794 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 864 796 rsi|DWORD = MOVSX [r11|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 870 798 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 875 800 BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B88  <||@
  Comment 881 block B85 loop 2 depth 1 header:90|LoopBegin  <||@
  Comment 881 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 804 MOVB (x: [rax|QWORD[.] + r10|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 886 806 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 889 808 JUMP ~[] destination: B85 -> B83  <||@
  Comment 889 block B83 loop 2 depth 1 header:90|LoopBegin  <||@
  Comment 889 788 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 889 790 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 892 792 BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B88  <||@
  Comment 894 block B88 null  <||@
  Comment 894 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 894 818 r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 899 824 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 902 826 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B96  <||@
  Comment 908 block B96 null  <||@
  Comment 908 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 908 888 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 911 890 JUMP ~[] destination: B96 -> B97  <||@
  Comment 911 block B97 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 911 892 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 912 894 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 915 896 BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B111  <||@
  Comment 921 block B98 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 921 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 921 900 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 924 902 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B110  <||@
  Comment 930 block B99 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 930 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 930 906 rsi|DWORD = MOVZX [r11|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 936 908 rdx|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 941 910 rcx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 946 912 CMP rsi|DWORD y: 128 size: DWORD  <||@
  Comment 952 914 BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B101  <||@
  Comment 958 block B100 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 958 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 958 918 MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 963 920 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 966 922 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 969 924 JUMP ~[] destination: B100 -> B97  <||@
  Comment 971 block B101 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 971 926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 971 928 CMP rsi|DWORD y: 2048 size: DWORD  <||@
  Comment 977 930 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 983 block B103 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 983 946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 948 CMP rsi|DWORD y: 55296 size: DWORD  <||@
  Comment 989 950 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B109  <||@
  Comment 995 block B104 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 995 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 995 954 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 998 956 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B108  <||@
  Comment 1004 block B105 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 1004 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1004 960 r9|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 1008 962 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1011 964 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B107  <||@
  Comment 1017 block B106 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 1017 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1017 968 r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD  <||@
  Comment 1024 970 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 1031 972 MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 1036 974 r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD  <||@
  Comment 1043 976 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 1047 978 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 1054 980 MOVB (x: [rax|QWORD[.] + rcx|DWORD * 1 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 1059 982 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 1062 984 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 1068 986 MOVB (x: [rax|QWORD[.] + r9|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 1073 988 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 1077 990 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1080 992 JUMP ~[] destination: B106 -> B97  <||@
  Comment 1085 block B111 null  <||@
  Comment 1085 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1085 1052 CMP r8|DWORD y: -1 size: DWORD  <||@
  Comment 1089 1054 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 1095 block B113 null  <||@
  Comment 1095 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1095 1072 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1098 1074 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115  <||@
  Comment 1104 block B115 null  <||@
  Comment 1104 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1104 1092 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1107 1094 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B118  <||@
  Comment 1113 block B118 null  <||@
  Comment 1113 1118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 1120 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1117 1122 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1121 1124 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 1128 1126 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B118 -> B119 falseDestination: B118 -> B123  <||@
  Comment 1134 block B119 null  <||@
  Comment 1134 1128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1134 1130 rcx|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 1138 1132 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 1141 1134 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1144 1136 r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1150 1138 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1153 1140 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B123 falseDestination: B119 -> B121  <||@
  Comment 1159 block B121 null  <||@
  Comment 1159 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1159 1152 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 1163 1154 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 1171 1156 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1179 1158 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1187 1160 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1195 1162 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 1199 1164 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1206 1166 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1206 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1213 1168 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1213 1170 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1216 1172 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1220 1174 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1223 1176 JUMP ~[] destination: B121 -> B124  <||@
  Comment 1223 block B124 null  <||@
  Comment 1223 1200 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1223 1202 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1226 1204 r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 1233 1206 rsi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 1236 1208 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1240 1210 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B147 falseDestination: B124 -> B126  <||@
  Comment 1246 block B126 null  <||@
  Comment 1246 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1246 1218 r11|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 1220 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1254 1222 r11|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 1258 1224 r8|QWORD = LEA [rsi|QWORD - 32] size: QWORD  <||@
  Comment 1262 1226 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1265 1232 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1272 1228 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B126 -> B131 falseDestination: B126 -> B129  <||@
  Comment 1278 block B131 null  <||@
  Comment 1278 1258 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1278 1260 r8|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1282 1262 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1285 1264 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B131 -> B134 falseDestination: B131 -> B133  <||@
  Comment 1291 block B133 null  <||@
  Comment 1291 1270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 1272 xmm0|V128_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVDQU  <||@
  Comment 1297 1274 J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 1303 1276 r8|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1307 1278 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1310 1280 JUMP ~[] destination: B133 -> B134  <||@
  Comment 1310 block B134 null  <||@
  Comment 1310 1282 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1310 1284 r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1314 1286 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1317 1288 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B137 falseDestination: B134 -> B136  <||@
  Comment 1323 block B136 null  <||@
  Comment 1323 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1323 1296 xmm0|V64_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVQ  <||@
  Comment 1329 1298 J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 1335 1300 r8|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1339 1302 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1342 1304 JUMP ~[] destination: B136 -> B137  <||@
  Comment 1342 block B137 null  <||@
  Comment 1342 1306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1342 1308 r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1346 1310 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1349 1312 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B140 falseDestination: B137 -> B139  <||@
  Comment 1355 block B139 null  <||@
  Comment 1355 1318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1355 1320 xmm0|V32_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVD  <||@
  Comment 1361 1322 J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 1367 1324 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1371 1326 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1374 1328 JUMP ~[] destination: B139 -> B140  <||@
  Comment 1374 block B140 null  <||@
  Comment 1374 1330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1374 1332 r8|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1380 1334 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1383 1336 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B147 falseDestination: B140 -> B142  <||@
  Comment 1389 block B142 null  <||@
  Comment 1389 1342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1389 1344 rcx|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1] size: DWORD  <||@
  Comment 1394 1346 MOVB (x: [r10|QWORD[.] + r9|QWORD * 1], y: rcx|DWORD) size: BYTE  <||@
  Comment 1398 1348 rcx|QWORD = INC r9|QWORD size: QWORD  <||@
  Comment 1404 1350 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1407 1352 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B147 falseDestination: B142 -> B144  <||@
  Comment 1413 block B144 null  <||@
  Comment 1413 1358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1413 1360 rcx|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1 + 1] size: DWORD  <||@
  Comment 1419 1362 MOVB (x: [r10|QWORD[.] + r9|QWORD * 1 + 1], y: rcx|DWORD) size: BYTE  <||@
  Comment 1424 1364 rcx|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1428 1366 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1431 1368 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B147 falseDestination: B144 -> B146  <||@
  Comment 1437 block B146 null  <||@
  Comment 1437 1374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1437 1376 r11|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1 + 2] size: DWORD  <||@
  Comment 1443 1378 MOVB (x: [r10|QWORD[.] + r9|QWORD * 1 + 2], y: r11|DWORD) size: BYTE  <||@
  Comment 1448 1380 JUMP ~[] destination: B146 -> B147  <||@
  Comment 1448 block B147 null  <||@
  Comment 1448 1382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1448 1384 r10|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1451 1386 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1454 1388 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B147 -> B148 falseDestination: B147 -> B171  <||@
  Comment 1460 block B171 null  <||@
  Comment 1460 1556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1460 1558 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1469 12  <||@
  Comment 1479 block B89 null  <||@
  Comment 1479 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1479 830 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1484 832 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1487 834 rdx|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 1493 836 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1496 838 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1499 840 rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1502 842 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1505 844 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B94  <||@
  Comment 1511 block B90 null  <||@
  Comment 1511 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 848 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1514 850 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B96 falseDestination: B90 -> B94  <||@
  Comment 1525 block B148 null  <||@
  Comment 1525 1390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1525 1392 r11|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 1 + 16] size: QWORD  <||@
  Comment 1530 1394 r10|QWORD = SUB (x: r10|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1533 1396 rsi|QWORD = LEA [r10|QWORD - 32] size: QWORD  <||@
  Comment 1537 1398 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1540 1400 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150  <||@
  Comment 1546 block B149 null  <||@
  Comment 1546 1402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1546 1404 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1553 1406 JUMP ~[] destination: B149 -> B153  <||@
  Comment 1553 block B153 null  <||@
  Comment 1553 1430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1553 1432 rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 1557 1434 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1560 1436 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B156 falseDestination: B153 -> B155  <||@
  Comment 1566 block B155 null  <||@
  Comment 1566 1442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1566 1444 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1570 1446 J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 1576 1448 rsi|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1580 1450 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1583 1452 JUMP ~[] destination: B155 -> B156  <||@
  Comment 1583 block B156 null  <||@
  Comment 1583 1454 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1583 1456 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1587 1458 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1590 1460 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B159 falseDestination: B156 -> B158  <||@
  Comment 1596 block B158 null  <||@
  Comment 1596 1466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1596 1468 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1600 1470 J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 1606 1472 rsi|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1610 1474 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1613 1476 JUMP ~[] destination: B158 -> B159  <||@
  Comment 1613 block B159 null  <||@
  Comment 1613 1478 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1613 1480 rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1617 1482 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1620 1484 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B162 falseDestination: B159 -> B161  <||@
  Comment 1626 block B161 null  <||@
  Comment 1626 1490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1626 1492 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 1630 1494 J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 1636 1496 rsi|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 1640 1498 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1643 1500 JUMP ~[] destination: B161 -> B162  <||@
  Comment 1643 block B162 null  <||@
  Comment 1643 1502 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1643 1504 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1646 1506 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1649 1508 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B171 falseDestination: B162 -> B164  <||@
  Comment 1655 block B164 null  <||@
  Comment 1655 1514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1655 1516 MOVB (x: [r11|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1659 1518 rsi|QWORD = INC r8|QWORD size: QWORD  <||@
  Comment 1665 1520 CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1668 1522 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B164 -> B171 falseDestination: B164 -> B166  <||@
  Comment 1674 block B166 null  <||@
  Comment 1674 1528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1674 1530 MOVB (x: [r11|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1679 1532 rsi|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 1683 1534 CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1686 1536 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B171 falseDestination: B166 -> B168  <||@
  Comment 1692 block B168 null  <||@
  Comment 1692 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1692 1544 MOVB (x: [r11|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1697 1546 JUMP ~[] destination: B168 -> B171  <||@
  Comment 1702 block B17 null  <||@
  Comment 1702 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1702 226 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1706 228 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1713 230 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1713 block B18 loop 0 depth 1 header:897|LoopBegin  <||@
  Comment 1713 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1728 234 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1733 236 rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD  <||@
  Comment 1737 238 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1740 240 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18  <||@
  Comment 1747 block B63 null  <||@
  Comment 1747 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1747 642 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1751 644 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1758 646 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1758 block B64 loop 1 depth 1 header:964|LoopBegin  <||@
  Comment 1758 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1760 650 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 1766 652 r10|QWORD = LEA [r10|QWORD + 32] size: QWORD  <||@
  Comment 1770 654 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1773 656 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64  <||@
  Comment 1780 block B150 null  <||@
  Comment 1780 1408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1780 1410 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1784 1412 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1791 1414 JUMP ~[] destination: B150 -> B151  <||@
  Comment 1791 block B151 loop 5 depth 1 header:1114|LoopBegin  <||@
  Comment 1791 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1792 1418 J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 1798 1420 r8|QWORD = LEA [r8|QWORD + 32] size: QWORD  <||@
  Comment 1802 1422 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1805 1424 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B151 -> B153 falseDestination: B151 -> B151  <||@
  Comment 1812 block B129 loop 4 depth 1 header:1039|LoopBegin  <||@
  Comment 1812 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1824 1244 xmm0|V256_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: YMM oh: VMOVDQU  <||@
  Comment 1830 1246 J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 1836 1248 r9|QWORD = LEA [r9|QWORD + 32] size: QWORD  <||@
  Comment 1840 1250 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1843 1252 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B131 falseDestination: B129 -> B129  <||@
  Comment 1850 block B12 null  <||@
  Comment 1850 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1850 168 stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1855 170 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1860 176 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1860 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1870 178 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1873 180 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1876 182 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1881 184 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1884 186 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 4]  <||@
  Comment 1884 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1889 [r13:0, stack:24, stack:32, stack:40, stack:48]at java.nio.charset.CharsetEncoder.reset(CharsetEncoder.java:711) [bci: 9, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 4, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7  |8 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1890 188 JUMP ~[] destination: B12 -> B13  <||@
  Comment 1895 block B58 null  <||@
  Comment 1895 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1895 600 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1895 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1905 602 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1908 604 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1913 606 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1916 608 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23, 9]  <||@
  Comment 1916 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1921 [stack:32, stack:40, stack:48]at java.lang.String.toCharArray(String.java:2901) [bci: 23, duringCall: false, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3  |4  |5  |6  |7  |8 
     locals:  |stack:32|QWORD[.]  |-  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1922 610 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1927 block B123 null  <||@
  Comment 1927 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1927 1180 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1932 1182 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1936 1188 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1936 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1946 1190 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1949 1192 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1954 1194 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1957 1196 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 62]  <||@
  Comment 1957 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1962 [stack:0, stack:32, stack:40]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3  |4                  |5               |6          |7  |8  |9 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |stack:68|DWORD  |-  |stack:80|QWORD[.]  |stack:52|DWORD  |r13|DWORD  |-  |-  |- 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7  |8 
     locals:  |-  |-  |-  |-  |-  |stack:80|QWORD[.]  |-  |-  |-   <||@
  Comment 1963 1198 JUMP ~[] destination: B123 -> B124  <||@
  Comment 1968 block B33 null  <||@
  Comment 1968 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1968 372 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1973 374 VUCOMISS (x: xmm0|SINGLE, y: xmm0|SINGLE)  <||@
  Comment 1977 376 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B37 unorderedIsTrue: false  <||@
  Comment 1985 block B37 null  <||@
  Comment 1985 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1985 410 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1992 412 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1998 414 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2003 418 JUMP ~[] destination: B37 -> B39  <||@
  Comment 2008 block B34 null  <||@
  Comment 2008 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2008 380 r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2013 382 xmm1|SINGLE = VMOVE input: float[0.0|0x0]  <||@
  Comment 2017 384 VUCOMISS (x: xmm0|SINGLE, y: xmm1|SINGLE)  <||@
  Comment 2021 386 FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 unorderedIsTrue: false  <||@
  Comment 2027 block B36 null  <||@
  Comment 2027 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2027 402 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2030 406 JUMP ~[] destination: B36 -> B39  <||@
  Comment 2035 block B35 null  <||@
  Comment 2035 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2035 390 r10|QWORD = MOVE input: long[2147483647|0x7fffffff]  <||@
  Comment 2042 392 r14|DWORD = MOVE input: int[2147483647|0x7fffffff]  <||@
  Comment 2048 394 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2051 398 JUMP ~[] destination: B35 -> B39  <||@
  Comment 2056 block B1 null  <||@
  Comment 2056 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2056 18 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2061 20 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 2065 22 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2068 24 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 2074 block B3 null  <||@
  Comment 2074 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2074 36 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3  <||@
  Comment 2078 38 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2081 40 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Charset.newEncoder()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 1]  <||@
  Comment 2081 7  <||@
  Comment 2095 {HotSpotMethod<Charset.newEncoder()>}  <||@
  Comment 2100 [stack:40, stack:48]at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
     stack:   |stack:32|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7  |8 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2101 42 MOV [rax|QWORD[.] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] state [bci:15, 1]  <||@
  Comment 2101 [rax:0, stack:40, stack:48]at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |             
     stack:   |stack:32|QWORD[.]  |Object[null] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7  |8 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2101 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2101 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 2108 44 r10|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2115 46 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2125 48 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2129 50 MOV [rax|QWORD[.] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264]  <||@
  Comment 2129 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 2136 52 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3  <||@
  Comment 2143 54 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2148 56 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2152 58 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2159 60 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2163 62 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2166 64 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2171 66 JUMP ~[] destination: B3 -> B5  <||@
  Comment 2176 block B114 null  <||@
  Comment 2176 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2176 1078 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2181 1080 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2184 1082 r10|DWORD = MOVE input: int[-147041|0xfffffffffffdc19f]  <||@
  Comment 2190 1088 JUMP ~[] destination: B114 -> B117  <||@
  Comment 2190 block B117 null  <||@
  Comment 2190 1110 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2190 1064 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2193 1066 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2196 1112 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2203 1114 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2210 1116 DEOPT info [bci:54, 62]  <||@
  Comment 2210 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2215 [r11:0, stack:32, stack:40]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3  |4             |5         |6          |7  |8  |9 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |stack:68|DWORD  |-  |r11|QWORD[.]  |r9|DWORD  |r13|DWORD  |-  |-  |- 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5             |6  |7  |8 
     locals:  |-  |-  |-  |-  |-  |r11|QWORD[.]  |-  |-  |-   <||@
  Comment 2216 block B116 null  <||@
  Comment 2216 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2216 1098 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2221 1100 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2224 1102 r10|DWORD = MOVE input: int[-147041|0xfffffffffffdc19f]  <||@
  Comment 2230 1108 JUMP ~[] destination: B116 -> B117  <||@
  Comment 2232 block B43 null  <||@
  Comment 2232 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2232 462 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2237 464 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595]  <||@
  Comment 2237 {Object[d.a@1415578595]}  <||@
  Comment 2247 466 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2250 468 r10|DWORD = MOVE input: int[-80923|0xfffffffffffec3e5]  <||@
  Comment 2256 470 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2261 474 JUMP ~[] destination: B43 -> B176  <||@
  Comment 2261 block B176 null  <||@
  Comment 2261 1600 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2261 1602 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2268 1604 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2275 1606 DEOPT info [bci:23, 9]  <||@
  Comment 2275 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2280 [rax:0, rsi:0, r13:0]at java.lang.String.toCharArray(String.java:2901) [bci: 23, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |rax|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9, duringCall: true, rethrow: false]
              |0             |1  |2             |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |-  |r13|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 2281 block B112 null  <||@
  Comment 2281 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2281 1058 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2286 1060 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2289 1062 r10|DWORD = MOVE input: int[-97555|0xfffffffffffe82ed]  <||@
  Comment 2295 1068 JUMP ~[] destination: B112 -> B117  <||@
  Comment 2297 block B2 null  <||@
  Comment 2297 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2297 28 MOV [r15|QWORD + 668] y: -98827 size: DWORD  <||@
  Comment 2308 30 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2315 32 DEOPT info [bci:0]  <||@
  Comment 2315 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2320 [rsi:0, stack:40]at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2321 block B94 null  <||@
  Comment 2321 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2321 866 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2324 868 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2327 874 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1023872315]  <||@
  Comment 2327 {Object[d.a@1023872315]}  <||@
  Comment 2337 876 MOV [r15|QWORD + 668] y: -86043 size: DWORD  <||@
  Comment 2348 878 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 2355 880 DEOPT info [bci:54, 62]  <||@
  Comment 2355 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2360 [r11:0, stack:32, stack:40]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3  |4             |5         |6          |7  |8  |9 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |r10|DWORD  |-  |r11|QWORD[.]  |r9|DWORD  |r10|DWORD  |-  |-  |- 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5             |6  |7  |8 
     locals:  |-  |-  |-  |-  |-  |r11|QWORD[.]  |-  |-  |-   <||@
  Comment 2361 block B6 null  <||@
  Comment 2361 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2361 92 MOV [r15|QWORD + 668] y: -80403 size: DWORD  <||@
  Comment 2372 94 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2379 96 DEOPT info [bci:30, 1]  <||@
  Comment 2379 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2384 [rdx:0, rsi:0]at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2385 block B108 null  <||@
  Comment 2385 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2385 1010 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2390 1012 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2393 1014 r10|DWORD = MOVE input: int[-93211|0xfffffffffffe93e5]  <||@
  Comment 2399 1020 JUMP ~[] destination: B108 -> B117  <||@
  Comment 2404 block B109 null  <||@
  Comment 2404 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2404 1024 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2409 1026 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2412 1028 r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded]  <||@
  Comment 2418 1034 JUMP ~[] destination: B109 -> B117  <||@
  Comment 2423 block B52 null  <||@
  Comment 2423 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2423 530 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2433 532 r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed]  <||@
  Comment 2439 534 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2444 536 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2449 538 JUMP ~[] destination: B52 -> B176  <||@
  Comment 2454 block B110 null  <||@
  Comment 2454 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2454 1038 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2459 1040 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2462 1042 r10|DWORD = MOVE input: int[-110875|0xfffffffffffe4ee5]  <||@
  Comment 2468 1048 JUMP ~[] destination: B110 -> B117  <||@
  Comment 2473 block B175 null  <||@
  Comment 2473 1584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2473 1586 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2478 1588 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595]  <||@
  Comment 2478 {Object[d.a@1415578595]}  <||@
  Comment 2488 1590 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2491 1592 r10|DWORD = MOVE input: int[-80923|0xfffffffffffec3e5]  <||@
  Comment 2497 1594 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2502 1598 JUMP ~[] destination: B175 -> B176  <||@
  Comment 2507 block B49 null  <||@
  Comment 2507 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2507 504 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2512 506 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595]  <||@
  Comment 2512 {Object[d.a@1415578595]}  <||@
  Comment 2522 508 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2525 510 r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5]  <||@
  Comment 2531 512 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2536 516 JUMP ~[] destination: B49 -> B176  <||@
  Comment 2541 block B174 null  <||@
  Comment 2541 1568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2541 1570 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2546 1572 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595]  <||@
  Comment 2546 {Object[d.a@1415578595]}  <||@
  Comment 2556 1574 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2559 1576 r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5]  <||@
  Comment 2565 1578 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2570 1582 JUMP ~[] destination: B174 -> B176  <||@
  Comment 2575 block B107 null  <||@
  Comment 2575 994 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2575 996 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2580 998 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2583 1000 r10|DWORD = MOVE input: int[-95515|0xfffffffffffe8ae5]  <||@
  Comment 2589 1006 JUMP ~[] destination: B107 -> B117  <||@
  Comment 2594 block B102 null  <||@
  Comment 2594 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2594 934 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2599 936 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2602 938 r10|DWORD = MOVE input: int[-90387|0xfffffffffffe9eed]  <||@
  Comment 2608 944 JUMP ~[] destination: B102 -> B117  <||@
  Comment 2613 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2613 4  <||@
  Comment 2619 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2619 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9789[java.util.zip.ZipCoder.getBytes(String)]"
  method "HotSpotCompilation-9789[java.util.zip.ZipCoder.getBytes(String)]"
  date 1527005223308
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c25360 448b560849c1e203493bc20f85ef0abefe900f1f80000000000f1f800000000089842400c0feff4883ec4848896c2440488974243085028b4e1885c90f84c607000048c1e1034c8be94c896c2420448b720c438504f40fb64e0c85c90f84d708000045896514498b4f604d8b5770468b1cf50c00000044895c241c4181fbffffff000f83b2060000458bc341d1e0458d40174183e0f84d63c04d8bc84c03c94d3bca0f87920600004d894f60410f188408c0000000410f18840800010000410f18840840010000410f188408800100004489590c48c70101000000c74108410000f8488bc14489742418458bf34889442428458bd64c895424104585f60f8484000000488d7810498d72f04885f60f8d9205000048c7c200000000498d72f8483bd60f8f10000000c5f9efc0c5fa7f0457488d7208488bd6498d72fc483bd60f8f11000000c5f9efc0c4e1f97e0457488d7204488bd6498d72fe483bd60f8f10000000c5f9efc0c5f97e0457488d7202488bd6498bf248ffce483bd60f8f050000006644892457448b74241849c1e603488bf0498d7e10488d7610498bd2e87dd7befe90c5f957c0c5fa2a44241c4c8b6c2420c4c17a594510c57a2cf04d63d64181fe000000800f84e3050000448b5c241c453bde458bc3450f47c64963f048ffce4183f8014c8b4c24100f8c120000004c3bce0f86af0700004585db0f84b50600004183f8010f8c120000004c3bd60f86d70700004585f60f84ac0700004585f60f844f070000498b7760498b57704181feffffff000f832a050000418d4e1783e1f84863c94c8bd14c03d64c3bd20f87110500004d8957600f188431c00000000f188431000100000f188431400100000f188431800100004489760c48c70601000000c74608f50000f8488bc6458be84183fe010f8cab000000488d70104963d6488d4ae04885c90f8d2304000049c7c200000000488d4af04c3bd10f8f11000000c5f9efc0c4a17a7f0416498d4a104c8bd1488d4af84c3bd10f8f11000000c5f9efc0c4a1f97e0416498d4a084c8bd1488d4afc4c3bd10f8f11000000c5f9efc0c4a1797e0416498d4a044c8bd148ffca4c3bd20f8f2a00000046882416498bca48ffc1483bca0f8f170000004688641601498d4a02483bca0f8f05000000468864160241ba000000004c8b5c2428e922000000660f1f840000000000430fbf7453106681fe80000f830d000000428874101041ffc2453bea7fe2448b6c241c453bea0f8f3b020000458bc290453bea0f8ea4000000453bf00f86f4050000430fb7745310418bd2ffc2418bc8ffc181fe800000000f830d0000004288740010448bc1448bd2ebc581fe000800000f824b06000081fe00d800000f8381050000443bf10f8665050000458d4802453bf10f8616060000448bd641c1ea0c4181cae00000004688540010448bd641c1ea064183e23f4181ca80000000448854081083e63f81ce800000004288740810458d4003448bd2e953ffffff4183f8ff0f84a20400004585c00f8c300400004585f60f8c4f040000498b7760498b57704181f8ffffff000f8319030000418d481783e1f84863c94c8bc94c03ce4c3bca0f87000300004d894f600f188431c00000000f188431000100000f188431400100000f188431800100004489460c48c70601000000c74608f50000f8458be848890424488bc6453bee458bc5450f4fc64963f04883fe010f8cca0000004c8b1c244c8d50104d8d5b104c8d46e04d85c049c7c1000000000f8d220200004c8d46f04d3bc80f8f13000000c4817a6f040bc4817a7f040a4d8d41104d8bc84c8d46f84d3bc80f8f13000000c481f96e040bc481f97e040a4d8d41084d8bc84c8d46fc4d3bc80f8f13000000c481796e040bc481797e040a4d8d41044d8bc84c8bc649ffc84d3bc80f8f3b000000430fbe0c0b43880c0a498bc948ffc1493bc80f8f23000000430fbe4c0b0143884c0a01498d4902493bc80f8f0b000000470fbe5c0b0247885c0a024d63d54c3bd60f8f41000000488b6c24404883c4488505e396c6fcc5f877c34c8b4424104963f2418bd5412bd24863d248ffca4803f24c3bc60f862a030000453bea0f879cfdffffe91c0300004c8d5c30104c2bd6498d72e04885f60f8dea00000049c7c000000000498d72f04c3bc60f8f11000000c5f9efc0c4817a7f0403498d70104c8bc6498d72f84c3bc60f8f11000000c5f9efc0c481f97e0403498d70084c8bc6498d72fc4c3bc60f8f11000000c5f9efc0c481797e0403498d70044c8bc649ffca4d3bc20f8f3dffffff47882403498bf048ffc6493bf20f8f2affffff4788640301498d7002493bf20f8f18ffffff4788640302e90effffffc5f9efc048c7c2000000000f1f8400000000000f1f8000000000c5fe7f0457488d5210483bd67ef2e948faffffc5f9efc049c7c2000000006690c4a17e7f04164d8d52204c3bd17ef1e9c3fbffffc5f9efc049c7c00000000090c4817e7f04034d8d40204c3bc67ef1e9fdfeffff660f1f440000660f1f440000c4817e6f040bc4817e7f040a4d8d49204d3bc87eebe9c4fdffff4489742418488954242848b9080200c007000000488bf1418bd3b900000000458bf3e81f1337ff90e986f9ffff48bea80700c007000000418bd6b900000000458be8e8ff1237ff90e90bfbffff448954240c4889042448bea80700c007000000418bd0b900000000458be8e8d61237ff90e917fdffff4c8b442410c5f82ec07a060f841700000049c7c20000000041be00000000448b5c241ce9faf9ffff448b4c241cc5f157c9c5f82ec10f8708000000458bd9e9dff9ffff49c7c2ffffff7f41beffffff7f458bd9e9caf9ffff4889542428448b56104585d20f84df00000049c1e203498bf248b8ffffffffffffffff0f1f4000e84c07befe90c74020cd6d00d84c8bd049c1ea0949bb00e01b17010000004788241ac74024cd6d00d84c8bd049c1ea03488b742430448956184c8bd649c1ea094788241a4c8be8488b542428e9c9f7ffff448954240c458bcd41ba9fc1fdff458be84c8bd84589979c0200004d89a7a8020000e8f719befe90448954240c458bcd41ba9fc1fdffebd6488b74243049ba287f41be070000004d8bda41bae5c3feff488b4424284589979c0200004d899fa8020000e8b619befe90448954240c458bcd41baed82feffeb9541c7879c020000f57dfeff4d89a7a8020000e88e19befe90458bcd4c8bd849b850eb3bbe0700000041c7879c020000e5affeff4d8987a8020000e86619befe9041c7879c020000edc5feff4d89a7a8020000e84e19befe90448954240c458bcd41bae593feffe92affffff448954240c458bcd41baed9dfeffe917ffffff49bb000000000000000041baedc9feff488b442428488b742430e93fffffff448954240c458bcd41bae54efeffe9e5feffff488b74243049ba287f41be070000004d8bda41bae5c3feff488b442428e90affffff488b74243049ba287f41be070000004d8bda41bae5b8feff488b442428e9e8feffff488b74243049ba287f41be070000004d8bda41bae5b8feff488b442428e9c6feffff448954240c458bcd41bae58afeffe96cfeffff448954240c458bcd41baed9efeffe959feffffe8864802ff90e86017befe90f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6edd3b29 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, stack:48]at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 58 12 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 60 14 BRANCH trueDestinationProbability: 5.047591577732602E-4 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 66 block B4 null  <||@
  Comment 66 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 70 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3  <||@
  Comment 70 72 r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 73 74 JUMP ~[] destination: B4 -> B5  <||@
  Comment 73 block B5 null  <||@
  Comment 73 76 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 73 78 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 78 80 r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 82 82 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:30, 1]  <||@
  Comment 82 [rdx:0, rsi:0, r13:0, r14:0, stack:32, stack:48]at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 84 rcx|DWORD = MOVZXB [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 90 86 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 92 88 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 98 block B7 null  <||@
  Comment 98 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 100 MOV (x: [r13|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 102 102 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 106 104 r10|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 110 106 r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 118 108 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 123 110 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 130 112 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 136 block B8 null  <||@
  Comment 136 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 116 r8|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 142 118 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 146 120 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 150 122 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 153 124 r9|QWORD = ADD (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 159 126 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 162 128 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 168 block B10 null  <||@
  Comment 168 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 168 140 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 172 142 AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 181 144 AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 190 146 AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 199 148 AMD64PREFETCH ~[r8|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 208 150 MOV (x: [rcx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 212 152 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 219 154 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 219 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 226 156 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 226 158 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 229 160 stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 234 162 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 237 164 JUMP ~[] destination: B10 -> B13  <||@
  Comment 237 block B13 null  <||@
  Comment 237 190 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 237 192 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 242 194 r10|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 245 196 stack:64|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 250 198 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 253 200 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B13 -> B32 falseDestination: B13 -> B15  <||@
  Comment 259 block B15 null  <||@
  Comment 259 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 259 210 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 263 212 rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 267 214 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 270 216 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 276 block B16 null  <||@
  Comment 276 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 276 220 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 283 222 JUMP ~[] destination: B16 -> B20  <||@
  Comment 283 block B20 null  <||@
  Comment 283 246 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 283 248 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 287 250 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 290 252 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 296 block B22 null  <||@
  Comment 296 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 260 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 300 262 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 305 264 rsi|QWORD = LEA [rdx|QWORD + 8] size: QWORD  <||@
  Comment 309 266 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 312 268 JUMP ~[] destination: B22 -> B23  <||@
  Comment 312 block B23 null  <||@
  Comment 312 270 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 312 272 rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 316 274 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 319 276 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 325 block B25 null  <||@
  Comment 325 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 284 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 329 286 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 335 288 rsi|QWORD = LEA [rdx|QWORD + 4] size: QWORD  <||@
  Comment 339 290 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 342 292 JUMP ~[] destination: B25 -> B26  <||@
  Comment 342 block B26 null  <||@
  Comment 342 294 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 342 296 rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 346 298 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 349 300 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 355 block B28 null  <||@
  Comment 355 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 355 308 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 359 310 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 364 312 rsi|QWORD = LEA [rdx|QWORD + 2] size: QWORD  <||@
  Comment 368 314 rdx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 371 316 JUMP ~[] destination: B28 -> B29  <||@
  Comment 371 block B29 null  <||@
  Comment 371 318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 371 320 rsi|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 377 322 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 380 324 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 386 block B31 null  <||@
  Comment 386 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 386 334 MOV (x: [rdi|QWORD[.] + rdx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 391 338 JUMP ~[] destination: B31 -> B32  <||@
  Comment 391 block B32 null  <||@
  Comment 391 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 204 r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 396 342 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3  <||@
  Comment 400 344 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 400 346 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 403 348 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 407 350 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 411 352 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 414 354 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 414 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 420 356 xmm0|SINGLE = VCVTSI2SS stack:52|DWORD  <||@
  Comment 430 358 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 435 360 xmm0|SINGLE = VMULSS (x: xmm0|SINGLE, y: [r13|QWORD[.] + 16]) nZ: XMM  <||@
  Comment 441 362 r14|DWORD = VCVTTSS2SI xmm0|SINGLE nZ: XMM  <||@
  Comment 445 364 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 448 366 CMP r14|DWORD y: -2147483648 size: DWORD  <||@
  Comment 455 368 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38  <||@
  Comment 461 block B38 null  <||@
  Comment 461 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 422 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 466 424 JUMP ~[] destination: B38 -> B39  <||@
  Comment 466 block B39 null  <||@
  Comment 466 426 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 466 428 CMP (x: r11|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 469 430 r8|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r14|DWORD) condition: |>|  <||@
  Comment 476 432 rsi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 479 434 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 482 436 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 486 442 r9|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 491 438 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B45 falseDestination: B39 -> B41  <||@
  Comment 497 block B41 null  <||@
  Comment 497 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 450 CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 500 452 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B175  <||@
  Comment 506 block B42 null  <||@
  Comment 506 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 506 456 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 509 458 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B45  <||@
  Comment 515 block B45 null  <||@
  Comment 515 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 482 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 519 484 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B45 -> B51 falseDestination: B45 -> B47  <||@
  Comment 525 block B47 null  <||@
  Comment 525 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 525 492 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 528 494 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B174  <||@
  Comment 534 block B48 null  <||@
  Comment 534 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 534 498 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 537 500 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51  <||@
  Comment 543 block B51 null  <||@
  Comment 543 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 543 524 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 546 526 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 552 block B53 null  <||@
  Comment 552 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 552 542 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 556 544 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 560 546 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 567 548 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58  <||@
  Comment 573 block B54 null  <||@
  Comment 573 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 552 rcx|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 577 554 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 580 556 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 583 558 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 589 560 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 592 562 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B54 -> B58 falseDestination: B54 -> B56  <||@
  Comment 598 block B56 null  <||@
  Comment 598 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 598 570 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 602 572 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 610 574 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 618 576 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 626 578 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 634 580 MOV (x: [rsi|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 638 582 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 645 584 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 645 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 652 586 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 652 588 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 655 590 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 658 592 JUMP ~[] destination: B56 -> B59  <||@
  Comment 658 block B59 null  <||@
  Comment 658 612 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 658 614 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 662 616 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B59 -> B82 falseDestination: B59 -> B61  <||@
  Comment 668 block B61 null  <||@
  Comment 668 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 668 624 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 672 626 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 675 628 rcx|QWORD = LEA [rdx|QWORD - 32] size: QWORD  <||@
  Comment 679 630 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 682 632 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 688 block B62 null  <||@
  Comment 688 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 636 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 695 638 JUMP ~[] destination: B62 -> B66  <||@
  Comment 695 block B66 null  <||@
  Comment 695 662 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 695 664 rcx|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 699 666 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 702 668 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B69 falseDestination: B66 -> B68  <||@
  Comment 708 block B68 null  <||@
  Comment 708 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 708 676 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 712 678 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 718 680 rcx|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 722 682 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 725 684 JUMP ~[] destination: B68 -> B69  <||@
  Comment 725 block B69 null  <||@
  Comment 725 686 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 725 688 rcx|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 729 690 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 732 692 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B72 falseDestination: B69 -> B71  <||@
  Comment 738 block B71 null  <||@
  Comment 738 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 738 700 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 742 702 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 748 704 rcx|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 752 706 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 755 708 JUMP ~[] destination: B71 -> B72  <||@
  Comment 755 block B72 null  <||@
  Comment 755 710 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 755 712 rcx|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 759 714 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 762 716 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B72 -> B75 falseDestination: B72 -> B74  <||@
  Comment 768 block B74 null  <||@
  Comment 768 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 724 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 772 726 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 778 728 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 782 730 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 785 732 JUMP ~[] destination: B74 -> B75  <||@
  Comment 785 block B75 null  <||@
  Comment 785 734 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 785 736 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 788 738 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 791 740 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B82 falseDestination: B75 -> B77  <||@
  Comment 797 block B77 null  <||@
  Comment 797 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 748 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 801 750 rcx|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 807 752 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 810 754 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B82 falseDestination: B77 -> B79  <||@
  Comment 816 block B79 null  <||@
  Comment 816 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 762 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 821 764 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 825 766 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 828 768 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B82 falseDestination: B79 -> B81  <||@
  Comment 834 block B81 null  <||@
  Comment 834 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 776 MOVB (x: [rsi|QWORD[.] + r10|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 839 778 JUMP ~[] destination: B81 -> B82  <||@
  Comment 839 block B82 null  <||@
  Comment 839 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 782 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 845 784 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 850 786 JUMP ~[] destination: B82 -> B83  <||@
  Comment 855 block B84 loop 2 depth 1 header:90|LoopBegin  <||@
  Comment 855 794 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 864 796 rsi|DWORD = MOVSX [r11|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 870 798 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 875 800 BRANCH trueDestinationProbability: 0.9998902719253914 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B88  <||@
  Comment 881 block B85 loop 2 depth 1 header:90|LoopBegin  <||@
  Comment 881 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 804 MOVB (x: [rax|QWORD[.] + r10|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 886 806 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 889 808 JUMP ~[] destination: B85 -> B83  <||@
  Comment 889 block B83 loop 2 depth 1 header:90|LoopBegin  <||@
  Comment 889 788 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 889 790 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 892 792 BRANCH trueDestinationProbability: 0.9835900530402635 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B88  <||@
  Comment 894 block B88 null  <||@
  Comment 894 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 894 818 r13|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 899 824 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 902 826 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B96  <||@
  Comment 908 block B96 null  <||@
  Comment 908 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 908 888 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 911 890 JUMP ~[] destination: B96 -> B97  <||@
  Comment 911 block B97 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 911 892 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 912 894 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 915 896 BRANCH trueDestinationProbability: 0.16211788211788214 condition: > trueDestination: B97 -> B98 falseDestination: B97 -> B111  <||@
  Comment 921 block B98 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 921 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 921 900 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 924 902 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B110  <||@
  Comment 930 block B99 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 930 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 930 906 rsi|DWORD = MOVZX [r11|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 936 908 rdx|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 941 910 rcx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 946 912 CMP rsi|DWORD y: 128 size: DWORD  <||@
  Comment 952 914 BRANCH trueDestinationProbability: 0.942568400295785 condition: |<| trueDestination: B99 -> B100 falseDestination: B99 -> B101  <||@
  Comment 958 block B100 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 958 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 958 918 MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 963 920 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 966 922 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 969 924 JUMP ~[] destination: B100 -> B97  <||@
  Comment 971 block B101 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 971 926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 971 928 CMP rsi|DWORD y: 2048 size: DWORD  <||@
  Comment 977 930 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 983 block B103 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 983 946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 948 CMP rsi|DWORD y: 55296 size: DWORD  <||@
  Comment 989 950 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B109  <||@
  Comment 995 block B104 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 995 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 995 954 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 998 956 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B108  <||@
  Comment 1004 block B105 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 1004 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1004 960 r9|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 1008 962 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1011 964 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B107  <||@
  Comment 1017 block B106 loop 3 depth 1 header:126|LoopBegin  <||@
  Comment 1017 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1017 968 r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD  <||@
  Comment 1024 970 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 1031 972 MOVB (x: [rax|QWORD[.] + r8|DWORD * 1 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 1036 974 r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD  <||@
  Comment 1043 976 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 1047 978 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 1054 980 MOVB (x: [rax|QWORD[.] + rcx|DWORD * 1 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 1059 982 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 1062 984 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 1068 986 MOVB (x: [rax|QWORD[.] + r9|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 1073 988 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 1077 990 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1080 992 JUMP ~[] destination: B106 -> B97  <||@
  Comment 1085 block B111 null  <||@
  Comment 1085 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1085 1052 CMP r8|DWORD y: -1 size: DWORD  <||@
  Comment 1089 1054 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 1095 block B113 null  <||@
  Comment 1095 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1095 1072 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1098 1074 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B113 -> B114 falseDestination: B113 -> B115  <||@
  Comment 1104 block B115 null  <||@
  Comment 1104 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1104 1092 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1107 1094 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: < trueDestination: B115 -> B116 falseDestination: B115 -> B118  <||@
  Comment 1113 block B118 null  <||@
  Comment 1113 1118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1113 1120 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1117 1122 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1121 1124 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 1128 1126 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B118 -> B119 falseDestination: B118 -> B123  <||@
  Comment 1134 block B119 null  <||@
  Comment 1134 1128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1134 1130 rcx|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 1138 1132 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 1141 1134 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1144 1136 r9|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1150 1138 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1153 1140 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B123 falseDestination: B119 -> B121  <||@
  Comment 1159 block B121 null  <||@
  Comment 1159 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1159 1152 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 1163 1154 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 1171 1156 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1179 1158 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1187 1160 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1195 1162 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 1199 1164 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1206 1166 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1206 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1213 1168 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1213 1170 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1216 1172 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1220 1174 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1223 1176 JUMP ~[] destination: B121 -> B124  <||@
  Comment 1223 block B124 null  <||@
  Comment 1223 1200 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1223 1202 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1226 1204 r8|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 1233 1206 rsi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 1236 1208 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1240 1210 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B124 -> B147 falseDestination: B124 -> B126  <||@
  Comment 1246 block B126 null  <||@
  Comment 1246 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1246 1218 r11|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 1220 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1254 1222 r11|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 1258 1224 r8|QWORD = LEA [rsi|QWORD - 32] size: QWORD  <||@
  Comment 1262 1226 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1265 1232 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1272 1228 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B126 -> B131 falseDestination: B126 -> B129  <||@
  Comment 1278 block B131 null  <||@
  Comment 1278 1258 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1278 1260 r8|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1282 1262 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1285 1264 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B131 -> B134 falseDestination: B131 -> B133  <||@
  Comment 1291 block B133 null  <||@
  Comment 1291 1270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 1272 xmm0|V128_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVDQU  <||@
  Comment 1297 1274 J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 1303 1276 r8|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1307 1278 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1310 1280 JUMP ~[] destination: B133 -> B134  <||@
  Comment 1310 block B134 null  <||@
  Comment 1310 1282 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1310 1284 r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1314 1286 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1317 1288 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B137 falseDestination: B134 -> B136  <||@
  Comment 1323 block B136 null  <||@
  Comment 1323 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1323 1296 xmm0|V64_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVQ  <||@
  Comment 1329 1298 J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 1335 1300 r8|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1339 1302 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1342 1304 JUMP ~[] destination: B136 -> B137  <||@
  Comment 1342 block B137 null  <||@
  Comment 1342 1306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1342 1308 r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1346 1310 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1349 1312 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B140 falseDestination: B137 -> B139  <||@
  Comment 1355 block B139 null  <||@
  Comment 1355 1318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1355 1320 xmm0|V32_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: XMM oh: VMOVD  <||@
  Comment 1361 1322 J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 1367 1324 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1371 1326 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1374 1328 JUMP ~[] destination: B139 -> B140  <||@
  Comment 1374 block B140 null  <||@
  Comment 1374 1330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1374 1332 r8|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1380 1334 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1383 1336 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B147 falseDestination: B140 -> B142  <||@
  Comment 1389 block B142 null  <||@
  Comment 1389 1342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1389 1344 rcx|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1] size: DWORD  <||@
  Comment 1394 1346 MOVB (x: [r10|QWORD[.] + r9|QWORD * 1], y: rcx|DWORD) size: BYTE  <||@
  Comment 1398 1348 rcx|QWORD = INC r9|QWORD size: QWORD  <||@
  Comment 1404 1350 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1407 1352 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B147 falseDestination: B142 -> B144  <||@
  Comment 1413 block B144 null  <||@
  Comment 1413 1358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1413 1360 rcx|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1 + 1] size: DWORD  <||@
  Comment 1419 1362 MOVB (x: [r10|QWORD[.] + r9|QWORD * 1 + 1], y: rcx|DWORD) size: BYTE  <||@
  Comment 1424 1364 rcx|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1428 1366 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1431 1368 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B144 -> B147 falseDestination: B144 -> B146  <||@
  Comment 1437 block B146 null  <||@
  Comment 1437 1374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1437 1376 r11|DWORD = MOVSXB [r11|QWORD[.] + r9|QWORD * 1 + 2] size: DWORD  <||@
  Comment 1443 1378 MOVB (x: [r10|QWORD[.] + r9|QWORD * 1 + 2], y: r11|DWORD) size: BYTE  <||@
  Comment 1448 1380 JUMP ~[] destination: B146 -> B147  <||@
  Comment 1448 block B147 null  <||@
  Comment 1448 1382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1448 1384 r10|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1451 1386 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1454 1388 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B147 -> B148 falseDestination: B147 -> B171  <||@
  Comment 1460 block B171 null  <||@
  Comment 1460 1556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1460 1558 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1469 12  <||@
  Comment 1479 block B89 null  <||@
  Comment 1479 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1479 830 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1484 832 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1487 834 rdx|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 1493 836 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1496 838 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1499 840 rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1502 842 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1505 844 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B94  <||@
  Comment 1511 block B90 null  <||@
  Comment 1511 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 848 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1514 850 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B96 falseDestination: B90 -> B94  <||@
  Comment 1525 block B148 null  <||@
  Comment 1525 1390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1525 1392 r11|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 1 + 16] size: QWORD  <||@
  Comment 1530 1394 r10|QWORD = SUB (x: r10|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1533 1396 rsi|QWORD = LEA [r10|QWORD - 32] size: QWORD  <||@
  Comment 1537 1398 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1540 1400 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150  <||@
  Comment 1546 block B149 null  <||@
  Comment 1546 1402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1546 1404 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1553 1406 JUMP ~[] destination: B149 -> B153  <||@
  Comment 1553 block B153 null  <||@
  Comment 1553 1430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1553 1432 rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 1557 1434 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1560 1436 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B153 -> B156 falseDestination: B153 -> B155  <||@
  Comment 1566 block B155 null  <||@
  Comment 1566 1442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1566 1444 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1570 1446 J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 1576 1448 rsi|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1580 1450 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1583 1452 JUMP ~[] destination: B155 -> B156  <||@
  Comment 1583 block B156 null  <||@
  Comment 1583 1454 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1583 1456 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1587 1458 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1590 1460 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B156 -> B159 falseDestination: B156 -> B158  <||@
  Comment 1596 block B158 null  <||@
  Comment 1596 1466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1596 1468 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1600 1470 J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 1606 1472 rsi|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1610 1474 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1613 1476 JUMP ~[] destination: B158 -> B159  <||@
  Comment 1613 block B159 null  <||@
  Comment 1613 1478 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1613 1480 rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1617 1482 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1620 1484 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B159 -> B162 falseDestination: B159 -> B161  <||@
  Comment 1626 block B161 null  <||@
  Comment 1626 1490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1626 1492 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 1630 1494 J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 1636 1496 rsi|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 1640 1498 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1643 1500 JUMP ~[] destination: B161 -> B162  <||@
  Comment 1643 block B162 null  <||@
  Comment 1643 1502 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1643 1504 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1646 1506 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1649 1508 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B171 falseDestination: B162 -> B164  <||@
  Comment 1655 block B164 null  <||@
  Comment 1655 1514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1655 1516 MOVB (x: [r11|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1659 1518 rsi|QWORD = INC r8|QWORD size: QWORD  <||@
  Comment 1665 1520 CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1668 1522 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B164 -> B171 falseDestination: B164 -> B166  <||@
  Comment 1674 block B166 null  <||@
  Comment 1674 1528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1674 1530 MOVB (x: [r11|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1679 1532 rsi|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 1683 1534 CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1686 1536 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B171 falseDestination: B166 -> B168  <||@
  Comment 1692 block B168 null  <||@
  Comment 1692 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1692 1544 MOVB (x: [r11|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1697 1546 JUMP ~[] destination: B168 -> B171  <||@
  Comment 1702 block B17 null  <||@
  Comment 1702 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1702 226 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1706 228 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1713 230 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1713 block B18 loop 0 depth 1 header:897|LoopBegin  <||@
  Comment 1713 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1728 234 J (address: [rdi|QWORD[.] + rdx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1733 236 rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD  <||@
  Comment 1737 238 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1740 240 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18  <||@
  Comment 1747 block B63 null  <||@
  Comment 1747 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1747 642 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1751 644 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1758 646 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1758 block B64 loop 1 depth 1 header:964|LoopBegin  <||@
  Comment 1758 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1760 650 J (address: [rsi|QWORD[.] + r10|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 1766 652 r10|QWORD = LEA [r10|QWORD + 32] size: QWORD  <||@
  Comment 1770 654 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1773 656 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64  <||@
  Comment 1780 block B150 null  <||@
  Comment 1780 1408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1780 1410 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1784 1412 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1791 1414 JUMP ~[] destination: B150 -> B151  <||@
  Comment 1791 block B151 loop 5 depth 1 header:1114|LoopBegin  <||@
  Comment 1791 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1792 1418 J (address: [r11|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 1798 1420 r8|QWORD = LEA [r8|QWORD + 32] size: QWORD  <||@
  Comment 1802 1422 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1805 1424 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B151 -> B153 falseDestination: B151 -> B151  <||@
  Comment 1812 block B129 loop 4 depth 1 header:1039|LoopBegin  <||@
  Comment 1812 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1824 1244 xmm0|V256_BYTE = H [r11|QWORD[.] + r9|QWORD * 1] nZ: YMM oh: VMOVDQU  <||@
  Comment 1830 1246 J (address: [r10|QWORD[.] + r9|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 1836 1248 r9|QWORD = LEA [r9|QWORD + 32] size: QWORD  <||@
  Comment 1840 1250 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1843 1252 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B131 falseDestination: B129 -> B129  <||@
  Comment 1850 block B12 null  <||@
  Comment 1850 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1850 168 stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1855 170 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1860 176 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1860 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1870 178 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1873 180 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1876 182 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1881 184 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1884 186 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 4]  <||@
  Comment 1884 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1889 [r13:0, stack:24, stack:32, stack:40, stack:48]at java.nio.charset.CharsetEncoder.reset(CharsetEncoder.java:711) [bci: 9, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 4, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7  |8 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1890 188 JUMP ~[] destination: B12 -> B13  <||@
  Comment 1895 block B58 null  <||@
  Comment 1895 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1895 600 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1895 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1905 602 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1908 604 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1913 606 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1916 608 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:23, 9]  <||@
  Comment 1916 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1921 [stack:32, stack:40, stack:48]at java.lang.String.toCharArray(String.java:2901) [bci: 23, duringCall: false, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3  |4  |5  |6  |7  |8 
     locals:  |stack:32|QWORD[.]  |-  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 1922 610 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1927 block B123 null  <||@
  Comment 1927 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1927 1180 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1932 1182 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1936 1188 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1936 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1946 1190 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1949 1192 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1954 1194 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1957 1196 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:54, 62]  <||@
  Comment 1957 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1962 [stack:0, stack:32, stack:40]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3  |4                  |5               |6          |7  |8  |9 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |stack:68|DWORD  |-  |stack:80|QWORD[.]  |stack:52|DWORD  |r13|DWORD  |-  |-  |- 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5                  |6  |7  |8 
     locals:  |-  |-  |-  |-  |-  |stack:80|QWORD[.]  |-  |-  |-   <||@
  Comment 1963 1198 JUMP ~[] destination: B123 -> B124  <||@
  Comment 1968 block B33 null  <||@
  Comment 1968 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1968 372 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1973 374 VUCOMISS (x: xmm0|SINGLE, y: xmm0|SINGLE)  <||@
  Comment 1977 376 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B37 unorderedIsTrue: false  <||@
  Comment 1985 block B37 null  <||@
  Comment 1985 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1985 410 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1992 412 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1998 414 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2003 418 JUMP ~[] destination: B37 -> B39  <||@
  Comment 2008 block B34 null  <||@
  Comment 2008 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2008 380 r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2013 382 xmm1|SINGLE = VMOVE input: float[0.0|0x0]  <||@
  Comment 2017 384 VUCOMISS (x: xmm0|SINGLE, y: xmm1|SINGLE)  <||@
  Comment 2021 386 FLOATBRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 unorderedIsTrue: false  <||@
  Comment 2027 block B36 null  <||@
  Comment 2027 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2027 402 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2030 406 JUMP ~[] destination: B36 -> B39  <||@
  Comment 2035 block B35 null  <||@
  Comment 2035 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2035 390 r10|QWORD = MOVE input: long[2147483647|0x7fffffff]  <||@
  Comment 2042 392 r14|DWORD = MOVE input: int[2147483647|0x7fffffff]  <||@
  Comment 2048 394 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2051 398 JUMP ~[] destination: B35 -> B39  <||@
  Comment 2056 block B1 null  <||@
  Comment 2056 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2056 18 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2061 20 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 2065 22 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2068 24 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 2074 block B3 null  <||@
  Comment 2074 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2074 36 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3  <||@
  Comment 2078 38 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2081 40 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Charset.newEncoder()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:12, 1]  <||@
  Comment 2081 7  <||@
  Comment 2095 {HotSpotMethod<Charset.newEncoder()>}  <||@
  Comment 2100 [stack:40, stack:48]at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 12, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
     stack:   |stack:32|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7  |8 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2101 42 MOV [rax|QWORD[.] + 32] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264] state [bci:15, 1]  <||@
  Comment 2101 [rax:0, stack:40, stack:48]at java.util.zip.ZipCoder.encoder(ZipCoder.java:153) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |             
     stack:   |stack:32|QWORD[.]  |Object[null] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7  |8 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2101 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2101 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 2108 44 r10|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2115 46 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2125 48 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2129 50 MOV [rax|QWORD[.] + 36] y: -559030611 size: DWORD c: NarrowOop[CodingErrorAction@250144264]  <||@
  Comment 2129 {NarrowOop[CodingErrorAction@250144264]}  <||@
  Comment 2136 52 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3af6420a encoding: base: 0 shift: 3  <||@
  Comment 2143 54 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2148 56 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2152 58 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2159 60 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2163 62 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2166 64 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2171 66 JUMP ~[] destination: B3 -> B5  <||@
  Comment 2176 block B114 null  <||@
  Comment 2176 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2176 1078 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2181 1080 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2184 1082 r10|DWORD = MOVE input: int[-147041|0xfffffffffffdc19f]  <||@
  Comment 2190 1088 JUMP ~[] destination: B114 -> B117  <||@
  Comment 2190 block B117 null  <||@
  Comment 2190 1110 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2190 1064 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2193 1066 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2196 1112 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2203 1114 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2210 1116 DEOPT info [bci:54, 62]  <||@
  Comment 2210 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2215 [r11:0, stack:32, stack:40]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3  |4             |5         |6          |7  |8  |9 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |stack:68|DWORD  |-  |r11|QWORD[.]  |r9|DWORD  |r13|DWORD  |-  |-  |- 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5             |6  |7  |8 
     locals:  |-  |-  |-  |-  |-  |r11|QWORD[.]  |-  |-  |-   <||@
  Comment 2216 block B116 null  <||@
  Comment 2216 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2216 1098 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2221 1100 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2224 1102 r10|DWORD = MOVE input: int[-147041|0xfffffffffffdc19f]  <||@
  Comment 2230 1108 JUMP ~[] destination: B116 -> B117  <||@
  Comment 2232 block B43 null  <||@
  Comment 2232 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2232 462 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2237 464 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595]  <||@
  Comment 2237 {Object[d.a@1415578595]}  <||@
  Comment 2247 466 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2250 468 r10|DWORD = MOVE input: int[-80923|0xfffffffffffec3e5]  <||@
  Comment 2256 470 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2261 474 JUMP ~[] destination: B43 -> B176  <||@
  Comment 2261 block B176 null  <||@
  Comment 2261 1600 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2261 1602 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2268 1604 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2275 1606 DEOPT info [bci:23, 9]  <||@
  Comment 2275 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2280 [rax:0, rsi:0, r13:0]at java.lang.String.toCharArray(String.java:2901) [bci: 23, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |rax|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:78) [bci: 9, duringCall: true, rethrow: false]
              |0             |1  |2             |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |-  |r13|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 2281 block B112 null  <||@
  Comment 2281 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2281 1058 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2286 1060 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2289 1062 r10|DWORD = MOVE input: int[-97555|0xfffffffffffe82ed]  <||@
  Comment 2295 1068 JUMP ~[] destination: B112 -> B117  <||@
  Comment 2297 block B2 null  <||@
  Comment 2297 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2297 28 MOV [r15|QWORD + 668] y: -98827 size: DWORD  <||@
  Comment 2308 30 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2315 32 DEOPT info [bci:0]  <||@
  Comment 2315 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2320 [rsi:0, stack:40]at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2321 block B94 null  <||@
  Comment 2321 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2321 866 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2324 868 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2327 874 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1023872315]  <||@
  Comment 2327 {Object[d.a@1023872315]}  <||@
  Comment 2337 876 MOV [r15|QWORD + 668] y: -86043 size: DWORD  <||@
  Comment 2348 878 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 2355 880 DEOPT info [bci:54, 62]  <||@
  Comment 2355 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2360 [r11:0, stack:32, stack:40]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3  |4             |5         |6          |7  |8  |9 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |r10|DWORD  |-  |r11|QWORD[.]  |r9|DWORD  |r10|DWORD  |-  |-  |- 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:86) [bci: 62, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5             |6  |7  |8 
     locals:  |-  |-  |-  |-  |-  |r11|QWORD[.]  |-  |-  |-   <||@
  Comment 2361 block B6 null  <||@
  Comment 2361 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2361 92 MOV [r15|QWORD + 668] y: -80403 size: DWORD  <||@
  Comment 2372 94 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2379 96 DEOPT info [bci:30, 1]  <||@
  Comment 2379 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2384 [rdx:0, rsi:0]at java.util.zip.ZipCoder.encoder(ZipCoder.java:157) [bci: 30, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
  at java.util.zip.ZipCoder.getBytes(ZipCoder.java:77) [bci: 1, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2385 block B108 null  <||@
  Comment 2385 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2385 1010 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2390 1012 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2393 1014 r10|DWORD = MOVE input: int[-93211|0xfffffffffffe93e5]  <||@
  Comment 2399 1020 JUMP ~[] destination: B108 -> B117  <||@
  Comment 2404 block B109 null  <||@
  Comment 2404 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2404 1024 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2409 1026 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2412 1028 r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded]  <||@
  Comment 2418 1034 JUMP ~[] destination: B109 -> B117  <||@
  Comment 2423 block B52 null  <||@
  Comment 2423 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2423 530 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2433 532 r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed]  <||@
  Comment 2439 534 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2444 536 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2449 538 JUMP ~[] destination: B52 -> B176  <||@
  Comment 2454 block B110 null  <||@
  Comment 2454 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2454 1038 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2459 1040 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2462 1042 r10|DWORD = MOVE input: int[-110875|0xfffffffffffe4ee5]  <||@
  Comment 2468 1048 JUMP ~[] destination: B110 -> B117  <||@
  Comment 2473 block B175 null  <||@
  Comment 2473 1584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2473 1586 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2478 1588 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595]  <||@
  Comment 2478 {Object[d.a@1415578595]}  <||@
  Comment 2488 1590 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2491 1592 r10|DWORD = MOVE input: int[-80923|0xfffffffffffec3e5]  <||@
  Comment 2497 1594 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2502 1598 JUMP ~[] destination: B175 -> B176  <||@
  Comment 2507 block B49 null  <||@
  Comment 2507 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2507 504 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2512 506 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595]  <||@
  Comment 2512 {Object[d.a@1415578595]}  <||@
  Comment 2522 508 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2525 510 r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5]  <||@
  Comment 2531 512 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2536 516 JUMP ~[] destination: B49 -> B176  <||@
  Comment 2541 block B174 null  <||@
  Comment 2541 1568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2541 1570 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2546 1572 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1415578595]  <||@
  Comment 2546 {Object[d.a@1415578595]}  <||@
  Comment 2556 1574 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2559 1576 r10|DWORD = MOVE input: int[-83739|0xfffffffffffeb8e5]  <||@
  Comment 2565 1578 rax|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2570 1582 JUMP ~[] destination: B174 -> B176  <||@
  Comment 2575 block B107 null  <||@
  Comment 2575 994 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2575 996 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2580 998 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2583 1000 r10|DWORD = MOVE input: int[-95515|0xfffffffffffe8ae5]  <||@
  Comment 2589 1006 JUMP ~[] destination: B107 -> B117  <||@
  Comment 2594 block B102 null  <||@
  Comment 2594 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2594 934 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2599 936 r9|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2602 938 r10|DWORD = MOVE input: int[-90387|0xfffffffffffe9eed]  <||@
  Comment 2608 944 JUMP ~[] destination: B102 -> B117  <||@
  Comment 2613 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2613 4  <||@
  Comment 2619 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2619 5  <||@
  HexCodeFile>>> <|@
end_nmethod
