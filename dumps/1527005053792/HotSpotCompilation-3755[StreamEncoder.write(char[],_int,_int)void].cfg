begin_compilation
  name " HotSpotCompilation-3755[sun.nio.cs.StreamEncoder.write(char[], int, int)]"
  method "HotSpotCompilation-3755[sun.nio.cs.StreamEncoder.write(char[], int, int)]"
  date 1527005139636
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1872 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1872  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/StreamEncoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1901 ?9 ?37 ?41 ?1460 v1902 ?134 v1904 ?50 v1044 v1907 v1908 ?848 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1872 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Writer.lock
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 1]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1901 
=== Succesors ===
next: v1957 
=== Usages ===
a939 v1957 v1930 v1936 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1901 #next: v1957  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?9 ?41 v1903 a1452 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?9 ?41 v14 v17 i21 v1722 v403 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?9 ?41 v19 i21 v27 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 117
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - 
=== Succesors ===
=== Usages ===
v1470 v1957 i1873 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1872 
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
a1872 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1872 #next: v1274  <|@  <|@
f <@~|@floating>@ <|@
tid a1467 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1470 v1549 v1521 v1492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v19 v25 v27 v38 v46 v775 ?179 v510 v591 v535 v104 v635 v1728 v1582 v1587 v1608 v1720 v1772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i13 
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 13]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v1273 
falseSuccessor: v1271 
=== Usages ===
=== Predecessor ===
v1957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v1273 #falseSuccessor: v1271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1471 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid i1472 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243731
stableDimension: 0
stamp: i32 [-243731] ⇊00000000fffc47ed ⇈00000000fffc47ed
stampKind: i32
value: int[-243731|0xfffffffffffc47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1273 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1873 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1873  <|@  <|@
f <@~|@floating>@ <|@
tid v1903 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1903 
=== Succesors ===
next: v1282 
=== Usages ===
v17 v1726 v386 
=== Predecessor ===
v1271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1903 #next: v1282  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1873 
y: i3 
=== Succesors ===
=== Usages ===
v1282 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1873 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v1281 
falseSuccessor: v1279 
=== Usages ===
=== Predecessor ===
i1873 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v1281 #falseSuccessor: v1279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1475 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1475  <|@  <|@
f <@~|@floating>@ <|@
tid i1476 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245523
stableDimension: 0
stamp: i32 [-245523] ⇊00000000fffc40ed ⇈00000000fffc40ed
stampKind: i32
value: int[-245523|0xfffffffffffc40ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1286 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i13 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 23]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v1285 
falseSuccessor: v1283 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v1285 #falseSuccessor: v1283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1477 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1477  <|@  <|@
f <@~|@floating>@ <|@
tid i1478 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245779
stableDimension: 0
stamp: i32 [-245779] ⇊00000000fffc3fed ⇈00000000fffc3fed
stampKind: i32
value: int[-245779|0xfffffffffffc3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1290 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1290  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 28]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v403 v25 v386 v1724 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1873 
y: i21 
=== Succesors ===
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1873 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 31]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v1289 
falseSuccessor: v1287 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v1289 #falseSuccessor: v1287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid i1480 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246035
stableDimension: 0
stamp: i32 [-246035] ⇊00000000fffc3eed ⇈00000000fffc3eed
stampKind: i32
value: int[-246035|0xfffffffffffc3eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1294 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1294  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i21 
y: i13 
=== Succesors ===
=== Usages ===
v1294 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i21 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v1293 
falseSuccessor: v1291 
=== Usages ===
=== Predecessor ===
v1287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v1293 #falseSuccessor: v1291  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1481 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246291
stableDimension: 0
stamp: i32 [-246291] ⇊00000000fffc3ded ⇈00000000fffc3ded
stampKind: i32
value: int[-246291|0xfffffffffffc3ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1298 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1298  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:122) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i13 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:122) [bci: 49]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v1297 
falseSuccessor: v1295 
=== Usages ===
=== Predecessor ===
v1291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v1297 #falseSuccessor: v1295  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:122) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1483 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid i1484 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246547
stableDimension: 0
stamp: i32 [-246547] ⇊00000000fffc3ced ⇈00000000fffc3ced
stampKind: i32
value: int[-246547|0xfffffffffffc3ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:122) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1302 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1302  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i21 
y: i3 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i21 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v1301 
falseSuccessor: v1299 
=== Usages ===
=== Predecessor ===
v1295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v1301 #falseSuccessor: v1299  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1485 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1485  <|@  <|@
f <@~|@floating>@ <|@
tid i1486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246803
stableDimension: 0
stamp: i32 [-246803] ⇊00000000fffc3bed ⇈00000000fffc3bed
stampKind: i32
value: int[-246803|0xfffffffffffc3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B11" "B13" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1468 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-246803 - -240907] ⇊00000000fffc00e5 ⇈00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1464 
values: i1472 i1476 i1478 i1480 i1482 i1484 i1486 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1464 values: i1472 i1476 i1478 i1480 i1482 i1484 i1486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1471 v1475 v1477 v1479 v1481 v1483 v1485 
=== Succesors ===
next: v1470 
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1471 v1475 v1477 v1479 v1481 v1483 v1485 #next: v1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1468 
speculation: a1467 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1468 speculation: a1467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1648 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1648  <|@  <|@
f <@~|@floating>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
j1648 j1790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:230) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1936 
=== Succesors ===
next: j1556 
=== Usages ===
j1558 j1562 j1578 i1586 j1595 j1612 v1641 v1935 
=== Predecessor ===
v1299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1936 #next: j1556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1556 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:232) [bci: 18]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j1557 
=== Usages ===
v1594 v1933 j1615 v1629 v1652 
=== Predecessor ===
j1648 >@ <|@
instruction <@BeginLockScope|@org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j1557  <|@  <|@
f <@~|@floating>@ <|@
tid a939 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 1]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1872 
=== Succesors ===
=== Usages ===
v1629 ?9 ?9 ?41 ?41 ?88 ?88 j1571 ?33 v1765 j1769 v1777 v1620 v1594 j1557 v1566 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:234) [bci: 24]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a939 
=== Succesors ===
next: v1874 
=== Usages ===
v1934 
=== Predecessor ===
j1556 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a939 #next: v1874  <|@  <|@
f <@~|@floating>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
v1874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1930 
=== Succesors ===
next: j1649 
=== Usages ===
v1931 
=== Predecessor ===
j1557 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1930 #next: j1649  <|@  <|@
f <@~|@floating>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1874 
=== Succesors ===
=== Usages ===
j1649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1649 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:314) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1931 
=== Succesors ===
next: j1560 
=== Usages ===
j1561 j1595 
=== Predecessor ===
v1874 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1931 #next: j1560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1560 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:315) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v1565 
=== Usages ===
j1561 j1579 
=== Predecessor ===
j1649 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v1565  <|@  <|@
f <@~|@floating>@ <|@
tid j1561 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
=== Inputs ===
x: j1560 
y: j1649 
=== Succesors ===
=== Usages ===
j1562 i1586 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1560 y: j1649  <|@  <|@
f <@~|@floating>@ <|@
tid j1562 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 42]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
=== Inputs ===
x: j1561 
y: j1648 
=== Succesors ===
=== Usages ===
v1633 v1635 v1637 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j1561 y: j1648  <|@  <|@
f <@~|@floating>@ <|@
tid j1632 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: -121
stableDimension: 0
stamp: i64 [-121] ⇊ffffffffffffff87 ⇈ffffffffffffff87
stampKind: i64
value: long[-121|0xffffffffffffff87]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
x: j1562 
y: j1632 
=== Succesors ===
=== Usages ===
v1565 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1562 y: j1632  <|@  <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?88 ?9 ?41 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 118
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a939 - a939 
monitorIds: v7 
=== Succesors ===
=== Usages ===
v1629 v1304 i1581 i1586 v1594 j1595 i1607 j1615 v1629 v1650 v1651 v1652 v1594 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a939 - a939 monitorIds: v7  <|@  <|@
f <@~|@floating>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1752 v1796 i1607 v1651 v1602 v1742 v1757 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1640 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 109]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1641 v1780 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1630 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1558 v1635 j1734 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1634 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 136]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 5
stableDimension: 0
stamp: i64 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i64
value: long[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1567 v1735 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 97]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1633 
=== Succesors ===
trueSuccessor: v1564 
falseSuccessor: v1563 
=== Usages ===
=== Predecessor ===
j1560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1633 #trueSuccessor: v1564 #falseSuccessor: v1563  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:322) [bci: 100]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1566 
=== Usages ===
=== Predecessor ===
v1565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:324) [bci: 120]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
object: a939 
=== Succesors ===
next: v1660 
=== Usages ===
=== Predecessor ===
v1564 >@ <|@
instruction <@FastAcquireBiasedLock|@org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode>@ object: a939 #next: v1660  <|@  <|@
f <@*|@fixed>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B28" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1570 
=== Usages ===
=== Predecessor ===
v1565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1570  <|@  <|@
f <@~|@floating>@ <|@
tid j1558 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j1648 
y: j1630 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j1648 y: j1630  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 142]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1558 
y: j1634 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1558 y: j1634  <|@  <|@
f <@*|@fixed>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1567 
=== Succesors ===
trueSuccessor: v1569 
falseSuccessor: v1568 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1567 #trueSuccessor: v1569 #falseSuccessor: v1568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B27" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 151]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1571 
=== Usages ===
=== Predecessor ===
v1570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 152]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a939 
=== Succesors ===
next: v1574 
=== Usages ===
v1932 
=== Predecessor ===
v1569 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a939 #next: v1574  <|@  <|@
f <@~|@floating>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1571 
index: - 
=== Succesors ===
=== Usages ===
i1581 i1586 j1595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 172]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
x: j1562 
y: j1630 
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1562 y: j1630  <|@  <|@
f <@*|@fixed>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 178]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1635 
=== Succesors ===
trueSuccessor: v1573 
falseSuccessor: v1572 
=== Usages ===
=== Predecessor ===
j1571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1635 #trueSuccessor: v1573 #falseSuccessor: v1572  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 181]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1577 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1577  <|@  <|@
f <@~|@floating>@ <|@
tid j1636 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 192]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 768
stableDimension: 0
stamp: i64 [768] ⇊0000000000000300 ⇈0000000000000300
stampKind: i64
value: long[768|0x300]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1637 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 196]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
x: j1562 
y: j1636 
=== Succesors ===
=== Usages ===
v1577 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1562 y: j1636  <|@  <|@
f <@*|@fixed>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 202]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1637 
=== Succesors ===
trueSuccessor: v1576 
falseSuccessor: v1575 
=== Usages ===
=== Predecessor ===
v1573 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1637 #trueSuccessor: v1576 #falseSuccessor: v1575  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 205]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1581 
=== Usages ===
=== Predecessor ===
v1577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1581  <|@  <|@
f <@~|@floating>@ <|@
tid j1638 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 895
stableDimension: 0
stamp: i64 [895] ⇊000000000000037f ⇈000000000000037f
stampKind: i64
value: long[895|0x37f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1578 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64 [0 - 895] ⇈000000000000037f
=== Inputs ===
x: j1648 
y: j1638 
=== Succesors ===
=== Usages ===
j1579 i1581 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j1648 y: j1638  <|@  <|@
f <@~|@floating>@ <|@
tid j1579 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:358) [bci: 235]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
=== Inputs ===
x: j1560 
y: j1578 
=== Succesors ===
=== Usages ===
i1581 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1560 y: j1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1581 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1 a2 i3 i4 a939 - 
locks: a939 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 276]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1932 
expectedValue: j1578 
newValue: j1579 
stateAfter: ?9 
=== Succesors ===
next: v1585 
=== Usages ===
v1582 
=== Predecessor ===
v1576 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1932 expectedValue: j1578 newValue: j1579 stateAfter: ?9 #next: v1585  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1581 
y: i13 
=== Succesors ===
=== Usages ===
v1585 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1581 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v1582 
=== Succesors ===
trueSuccessor: v1583 
falseSuccessor: v1584 
=== Usages ===
=== Predecessor ===
i1581 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1582 #trueSuccessor: v1583 #falseSuccessor: v1584  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:370) [bci: 308]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v1585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1591  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1592 
=== Predecessor ===
v1583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:363) [bci: 287]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1661 
=== Usages ===
=== Predecessor ===
v1585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1661  <|@  <|@
f <@*|@fixed>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B26" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:379) [bci: 330]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1586 
=== Usages ===
=== Predecessor ===
v1577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1586 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1 a2 i3 i4 a939 - 
locks: a939 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 365]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1932 
expectedValue: j1648 
newValue: j1561 
stateAfter: ?9 
=== Succesors ===
next: v1590 
=== Usages ===
v1587 
=== Predecessor ===
v1575 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1932 expectedValue: j1648 newValue: j1561 stateAfter: ?9 #next: v1590  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1586 
y: i13 
=== Succesors ===
=== Usages ===
v1590 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1586 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v1587 
=== Succesors ===
trueSuccessor: v1588 
falseSuccessor: v1589 
=== Usages ===
=== Predecessor ===
i1586 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1587 #trueSuccessor: v1588 #falseSuccessor: v1589  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:390) [bci: 397]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1593 
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1593  <|@  <|@
f <@*|@fixed>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1592 
=== Predecessor ===
v1588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1591 v1593 
=== Succesors ===
next: v1594 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1591 v1593 #next: v1594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1594 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1 a2 i3 i4 a939 - 
locks: a939 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 421]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: ?9 
stateDuring: ?9 
arguments: a939 j1556 
=== Succesors ===
next: v1663 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?9 stateDuring: ?9 arguments: a939 j1556 #next: v1663  <|@  <|@
f <@*|@fixed>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B41" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:383) [bci: 376]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1662 
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1662  <|@  <|@
f <@*|@fixed>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B29" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 426]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1595 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1595 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1 a2 i3 i4 a939 - 
locks: a939 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 440]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1932 
expectedValue: j1648 
newValue: j1649 
stateAfter: ?9 
=== Succesors ===
next: v1596 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v1932 expectedValue: j1648 newValue: j1649 stateAfter: ?9 #next: v1596  <|@  <|@
f <@*|@fixed>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
j1595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:419) [bci: 460]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1597 
=== Usages ===
=== Predecessor ===
v1570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1597  <|@  <|@
f <@*|@fixed>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
v1568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 86]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1596 v1597 
=== Succesors ===
next: v1600 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1596 v1597 #next: v1600  <|@  <|@
f <@~|@floating>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1650 v1651 v1652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 113]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
x: j1648 
y: j1640 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1648 y: j1640  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 119]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1641 
=== Succesors ===
trueSuccessor: v1598 
falseSuccessor: v1599 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1641 #trueSuccessor: v1598 #falseSuccessor: v1599  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 141]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1650 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1650  <|@  <|@
f <@~|@floating>@ <|@
tid j1643 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1612 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j1648 
y: j1643 
=== Succesors ===
=== Usages ===
j1615 v1616 v1650 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1648 y: j1643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1650 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1 a2 i3 i4 a939 - 
locks: a939 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:258) [bci: 176]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1933 
value: j1612 
stateAfter: ?9 
lastLocationAccess: - 
=== Succesors ===
next: v1613 
=== Usages ===
=== Predecessor ===
v1598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1933 value: j1612 stateAfter: ?9 lastLocationAccess: - #next: v1613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:261) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1615 
=== Usages ===
=== Predecessor ===
v1650 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j1615  <|@  <|@
f <@~|@floating>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1557 
index: - 
=== Succesors ===
=== Usages ===
j1615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1557 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1615 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1 a2 i3 i4 a939 - 
locks: a939 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:265) [bci: 199]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1934 
expectedValue: j1612 
newValue: j1556 
stateAfter: ?9 
=== Succesors ===
next: v1619 
=== Usages ===
v1616 j1622 
=== Predecessor ===
v1613 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v1934 expectedValue: j1612 newValue: j1556 stateAfter: ?9 #next: v1619  <|@  <|@
f <@~|@floating>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 216]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1612 
y: j1615 
=== Succesors ===
=== Usages ===
v1619 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1612 y: j1615  <|@  <|@
f <@*|@fixed>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 222]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1616 
=== Succesors ===
trueSuccessor: v1618 
falseSuccessor: v1617 
=== Usages ===
=== Predecessor ===
j1615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1616 #trueSuccessor: v1618 #falseSuccessor: v1617  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:267) [bci: 225]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1620 
=== Usages ===
=== Predecessor ===
v1619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:269) [bci: 245]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
object: a939 
=== Succesors ===
next: v1657 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@AcquiredCASLock|@org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode>@ object: a939 #next: v1657  <|@  <|@
f <@*|@fixed>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:272) [bci: 249]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1621 
=== Usages ===
=== Predecessor ===
v1619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1621 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:289) [bci: 273]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v1625 
=== Usages ===
j1622 
=== Predecessor ===
v1617 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v1625  <|@  <|@
f <@~|@floating>@ <|@
tid j1622 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 297]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
=== Inputs ===
x: j1615 
y: j1621 
=== Succesors ===
=== Usages ===
v1645 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1615 y: j1621  <|@  <|@
f <@~|@floating>@ <|@
tid j1644 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 305]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089] ⇊fffffffffffff007 ⇈fffffffffffff007
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 312]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
x: j1622 
y: j1644 
=== Succesors ===
=== Usages ===
v1625 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1622 y: j1644  <|@  <|@
f <@*|@fixed>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 318]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1645 
=== Succesors ===
trueSuccessor: v1624 
falseSuccessor: v1623 
=== Usages ===
=== Predecessor ===
j1621 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1645 #trueSuccessor: v1624 #falseSuccessor: v1623  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 321]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1651 
=== Usages ===
=== Predecessor ===
v1625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1651 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1 a2 i3 i4 a939 - 
locks: a939 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 335]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1933 
value: j552 
stateAfter: ?9 
lastLocationAccess: - 
=== Succesors ===
next: v1658 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1933 value: j552 stateAfter: ?9 lastLocationAccess: - #next: v1658  <|@  <|@
f <@*|@fixed>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:297) [bci: 358]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1628 
=== Usages ===
=== Predecessor ===
v1625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1628  <|@  <|@
f <@*|@fixed>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1627 
=== Predecessor ===
v1623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B39" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 122]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1652 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1 a2 i3 i4 a939 - 
locks: a939 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:439) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1933 
value: j1556 
stateAfter: ?9 
lastLocationAccess: - 
=== Succesors ===
next: j1653 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1933 value: j1556 stateAfter: ?9 lastLocationAccess: - #next: j1653  <|@  <|@
f <@~|@floating>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
i1607 j1653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1653 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:443) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1935 
=== Succesors ===
next: v1605 
=== Usages ===
v1602 
=== Predecessor ===
v1652 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1935 #next: v1605  <|@  <|@
f <@~|@floating>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1653 
y: j552 
=== Succesors ===
=== Usages ===
v1605 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1653 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1602 
=== Succesors ===
trueSuccessor: v1604 
falseSuccessor: v1603 
=== Usages ===
=== Predecessor ===
j1653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1602 #trueSuccessor: v1604 #falseSuccessor: v1603  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1606 
=== Usages ===
=== Predecessor ===
v1605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1606 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 74]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: i1607 
=== Usages ===
i1607 
=== Predecessor ===
v1604 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: i1607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1607 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1 a2 i3 i4 a939 - 
locks: a939 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1935 
expectedValue: j552 
newValue: j1606 
stateAfter: ?9 
=== Succesors ===
next: v1611 
=== Usages ===
v1608 
=== Predecessor ===
j1606 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1935 expectedValue: j552 newValue: j1606 stateAfter: ?9 #next: v1611  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1607 
y: i13 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1607 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1608 
=== Succesors ===
trueSuccessor: v1609 
falseSuccessor: v1610 
=== Usages ===
=== Predecessor ===
i1607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1608 #trueSuccessor: v1609 #falseSuccessor: v1610  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:452) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1626 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1626  <|@  <|@
f <@*|@fixed>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1627 
=== Predecessor ===
v1609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:448) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1656 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:456) [bci: 132]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1646 
=== Usages ===
=== Predecessor ===
v1605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1646  <|@  <|@
f <@*|@fixed>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 137]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1627 
=== Predecessor ===
v1603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B34" "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1626 v1628 v1646 
=== Succesors ===
next: v1629 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1626 v1628 v1646 #next: v1629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1629 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1 a2 i3 i4 a939 - 
locks: a939 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 383]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: ?9 
stateDuring: ?9 
arguments: a939 j1556 
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1627 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?9 stateDuring: ?9 arguments: a939 j1556 #next: v1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B31" "B33" "B40" "B16" "B22" "B26" "B25" 
    successors "B42" "B159" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1656 v1657 v1658 v1659 v1660 v1661 v1662 v1663 
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1656 v1657 v1658 v1659 v1660 v1661 v1662 v1663 #next: v949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1875 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i1875  <|@  <|@
f <@~|@floating>@ <|@
tid v1902 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.isOpen
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1902 
=== Succesors ===
next: v950 
=== Usages ===
i948 
=== Predecessor ===
v949 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1902 #next: v950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1876 
=== Usages ===
=== Predecessor ===
i1875 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i1876  <|@  <|@
f <@~|@floating>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
displacement: 23
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1876 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.haveLeftoverChar
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1904 
=== Succesors ===
next: v1306 
=== Usages ===
i968 
=== Predecessor ===
v950 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1904 #next: v1306  <|@  <|@
f <@~|@floating>@ <|@
tid i968 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1876 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1876  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i968 
y: i13 
=== Succesors ===
=== Usages ===
v1306 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i968 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v1303 
falseSuccessor: v1305 
=== Usages ===
=== Predecessor ===
i1876 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v1303 #falseSuccessor: v1305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1310 
=== Usages ===
=== Predecessor ===
v1306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1310  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 1
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 118
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a939 - a939 
monitorIds: v7 
=== Succesors ===
=== Usages ===
?37 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a939 - a939 monitorIds: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i948 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1875 
=== Succesors ===
=== Usages ===
v38 ?37 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1875  <|@  <|@
tid ?37 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<StreamEncoder.ensureOpen()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 44
stackSize: 1
=== Inputs ===
outerFrameState: ?41 
values: a1 i948 
=== Succesors ===
=== Usages ===
v1308 a1685 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?41 values: a1 i948  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i948 
y: i13 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i948 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1307 
=== Usages ===
=== Predecessor ===
v1303 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v1309 #falseSuccessor: v1307  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1308 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 951
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?37 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1673 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1673 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1692 
=== Usages ===
v1937 v1938 
=== Predecessor ===
v1307 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1692  <|@  <|@
f <@~|@floating>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1673 
index: - 
=== Succesors ===
=== Usages ===
j1692 v1694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1673 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1692 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1937 
=== Succesors ===
next: j1693 
=== Usages ===
j1804 j1698 v1948 
=== Predecessor ===
j1673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1937 #next: j1693  <|@  <|@
f <@~|@floating>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1673 
index: - 
=== Succesors ===
=== Usages ===
j1693 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1673 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1693 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1938 
=== Succesors ===
next: v1681 
=== Usages ===
v1678 
=== Predecessor ===
j1692 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1938 #next: v1681  <|@  <|@
f <@~|@floating>@ <|@
tid j1803 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1804 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1804 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1692 
y: j1803 
=== Succesors ===
=== Usages ===
v1678 v1694 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1692 y: j1803  <|@  <|@
f <@~|@floating>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1693 
y: j1804 
=== Succesors ===
=== Usages ===
v1681 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1693 y: j1804  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:281) [bci: 116]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 i364 v109 v1126 v1096 i324 i291 i292 v183 a1685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1678 
=== Succesors ===
trueSuccessor: v1679 
falseSuccessor: v1680 
=== Usages ===
=== Predecessor ===
j1693 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1678 #trueSuccessor: v1679 #falseSuccessor: v1680  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1685 
=== Usages ===
=== Predecessor ===
v1681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1685  <|@  <|@
f <@~|@floating>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1806 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1685 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?37 
arguments: v1671 i1806 i74 
=== Succesors ===
next: j1686 
=== Usages ===
j1686 
=== Predecessor ===
v1679 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?37 arguments: v1671 i1806 i74 #next: j1686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1686 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1685 
=== Succesors ===
next: v1699 
=== Usages ===
j1698 
=== Predecessor ===
a1685 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1685 #next: v1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1696 
=== Predecessor ===
j1686 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1694 
=== Usages ===
=== Predecessor ===
v1681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1937 
value: j1804 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1690 
=== Usages ===
=== Predecessor ===
v1680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1937 value: j1804 stateAfter: - lastLocationAccess: - #next: v1690  <|@  <|@
f <@~|@floating>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1692 
index: - 
=== Succesors ===
=== Usages ===
v1690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1692 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1948 
=== Succesors ===
next: v1697 
=== Usages ===
=== Predecessor ===
v1694 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1948 #next: v1697  <|@  <|@
f <@*|@fixed>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1696 
=== Predecessor ===
v1690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1698 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1696 
values: j1692 j1686 
=== Succesors ===
=== Usages ===
v1941 v1940 a1448 v1949 v1950 v1951 v1952 v1953 v1954 v1955 v1956 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1696 values: j1692 j1686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1697 v1699 
=== Succesors ===
next: a1448 
=== Usages ===
j1698 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1697 v1699 #next: a1448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1448 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1698 
=== Succesors ===
next: j1709 
=== Usages ===
a1455 
=== Predecessor ===
v1696 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1698 #next: j1709  <|@  <|@
f <@~|@floating>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1705 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1705 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1704 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1704  <|@  <|@
f <@~|@floating>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1705 
index: - 
=== Succesors ===
=== Usages ===
j1709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1705 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1709 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1939 
=== Succesors ===
next: v1710 
=== Usages ===
v1710 
=== Predecessor ===
a1448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1939 #next: v1710  <|@  <|@
f <@~|@floating>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1940 
value: j1709 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1713 
=== Usages ===
=== Predecessor ===
j1709 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1940 value: j1709 stateAfter: - lastLocationAccess: - #next: v1713  <|@  <|@
f <@~|@floating>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1713 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1941 
value: v1809 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1718 
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1941 value: v1809 stateAfter: - lastLocationAccess: - #next: v1718  <|@  <|@
f <@~|@floating>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1716 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1949 
value: j1716 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1720 
=== Usages ===
=== Predecessor ===
v1713 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1949 value: j1716 stateAfter: - lastLocationAccess: - #next: v1720  <|@  <|@
f <@~|@floating>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1950 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1722 
=== Usages ===
=== Predecessor ===
v1718 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1950 value: i13 stateAfter: - lastLocationAccess: - #next: v1722  <|@  <|@
f <@~|@floating>@ <|@
tid v1951 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1951 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1724 
=== Usages ===
=== Predecessor ===
v1720 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1951 value: i3 stateAfter: - lastLocationAccess: - #next: v1724  <|@  <|@
f <@~|@floating>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1724 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1952 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1952 value: i21 stateAfter: - lastLocationAccess: - #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1953 
value: i1873 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1953 value: i1873 stateAfter: - lastLocationAccess: - #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1954 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1731 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1954 value: i13 stateAfter: - lastLocationAccess: - #next: v1731  <|@  <|@
f <@~|@floating>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1729 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1955 
value: i1729 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1733 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1955 value: i1729 stateAfter: - lastLocationAccess: - #next: v1733  <|@  <|@
f <@~|@floating>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1452 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n# [C
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1956 
value: a1452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1455 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1956 value: a1452 stateAfter: - lastLocationAccess: - #next: a1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1455 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1448 
=== Succesors ===
next: v1456 
=== Usages ===
v1920 ?885 v1905 v1906 v1922 v1923 v1924 v1040 
=== Predecessor ===
v1733 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1448 #next: v1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
a1455 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v1456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B104" 
    successors "B49" "B157" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0000237700485504
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: a1877 
=== Usages ===
v66 v78 v853 v1440 v1435 v1430 v1425 v1420 v1415 v1410 v1329 v1404 v1339 v1344 v1349 v1354 v1359 v1364 v1370 v1398 v1380 v1386 v1392 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: a1877  <|@  <|@
f <@~|@floating>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
a1877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1922 
=== Succesors ===
next: v1958 
=== Usages ===
v1958 a1128 v1910 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1922 #next: v1958  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 60
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 1
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 125
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - a939 - a939 
monitorIds: v7 
=== Succesors ===
=== Usages ===
?134 ?50 ?1460 ?848 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a939 - a939 monitorIds: v7  <|@  <|@
tid a554 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@67262f52
hasIdentity: true
objectId: 0
stamp: a!# Ljava/nio/HeapCharBuffer;
type: HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?304 ?885 ?50 ?848 ?1460 ?134 ?299 ?263 ?179 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?885 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a554 
materializedValue: a1455 
=== Succesors ===
=== Usages ===
?50 ?299 ?1459 ?263 ?1460 ?368 ?304 ?848 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a554 materializedValue: a1455  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?88 
values: a1 - - - a554 - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1492 v1958 a1879 v1959 v1960 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: a1 - - - a554 - virtualObjectMappings: ?885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
object: a1877 
=== Succesors ===
next: a1878 
=== Usages ===
=== Predecessor ===
a1877 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?50 object: a1877 #next: a1878  <|@  <|@
f <@~|@floating>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1878 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1878 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.bb
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: n Ljava/nio/ByteBuffer;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1908 
=== Succesors ===
next: a1879 
=== Usages ===
a983 v1929 v1921 v1925 v1926 v1927 v1928 
=== Predecessor ===
v1958 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1908 #next: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
a1879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1879 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?50 
guard: - 
address: v1925 
=== Succesors ===
next: v1959 
=== Usages ===
?304 v1959 v1912 v1913 v1915 v1917 v1918 v1919 ?299 ?263 v1961 
=== Predecessor ===
a1878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?50 guard: - address: v1925 #next: v1959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
object: a1879 
=== Succesors ===
next: i1880 
=== Usages ===
=== Predecessor ===
a1879 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?50 object: a1879 #next: i1880  <|@  <|@
f <@~|@floating>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
i1880 i1897 v1083 i1900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1905 
=== Succesors ===
next: i1881 
=== Usages ===
v97 i777 
=== Predecessor ===
v1959 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1905 #next: i1881  <|@  <|@
f <@~|@floating>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
i1881 i1896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1881 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1906 
=== Succesors ===
next: v1330 
=== Usages ===
v97 i850 v508 i778 
=== Predecessor ===
i1880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1906 #next: v1330  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1880 
y: i1881 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1880 y: i1881  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v1326 
falseSuccessor: v1329 
=== Usages ===
=== Predecessor ===
i1881 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v1326 #falseSuccessor: v1329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B156" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1882 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1882  <|@  <|@
f <@~|@floating>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.encoder
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 31]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: n# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1907 
=== Succesors ===
next: v1960 
=== Usages ===
?299 v1960 v1909 ?304 ?179 ?263 
=== Predecessor ===
v1326 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1907 #next: v1960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
object: a1882 
=== Succesors ===
next: i1883 
=== Usages ===
=== Predecessor ===
a1882 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?50 object: a1882 #next: i1883  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
i1883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1883 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1923 
=== Succesors ===
next: v1340 
=== Usages ===
i1131 
=== Predecessor ===
v1960 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1923 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid i1131 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1883 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1883  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1131 
y: i13 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1131 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v635 
=== Succesors ===
trueSuccessor: v1336 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
i1883 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v635 #trueSuccessor: v1336 #falseSuccessor: v1339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1884 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1884  <|@  <|@
f <@~|@floating>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1884 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1926 
=== Succesors ===
next: v1345 
=== Usages ===
i1140 
=== Predecessor ===
v1336 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1926 #next: v1345  <|@  <|@
f <@~|@floating>@ <|@
tid i1140 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1884 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1884  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1140 
y: i13 
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1140 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v1341 
falseSuccessor: v1344 
=== Usages ===
=== Predecessor ===
i1884 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v1341 #falseSuccessor: v1344  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1885 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1885  <|@  <|@
f <@~|@floating>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1882 
=== Succesors ===
=== Usages ===
i1885 v1096 v1126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1885 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 12]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1909 
=== Succesors ===
next: i1886 
=== Usages ===
v104 v109 
=== Predecessor ===
v1341 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1909 #next: i1886  <|@  <|@
f <@~|@floating>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1927 
=== Succesors ===
next: i1887 
=== Usages ===
i780 i782 i489 
=== Predecessor ===
i1885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1927 #next: i1887  <|@  <|@
f <@~|@floating>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1887 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1929 
=== Succesors ===
next: i1888 
=== Usages ===
i782 v533 
=== Predecessor ===
i1886 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1929 #next: i1888  <|@  <|@
f <@~|@floating>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1888 v1090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1928 
=== Succesors ===
next: i1889 
=== Usages ===
i780 
=== Predecessor ===
i1887 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1928 #next: i1889  <|@  <|@
f <@~|@floating>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
i1889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1889 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1924 
=== Succesors ===
next: v1350 
=== Usages ===
i482 i778 i777 
=== Predecessor ===
i1888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1924 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid i782 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i1886 
y: i1887 
=== Succesors ===
=== Usages ===
i784 i337 v317 i845 i845 ?299 ?304 ?263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1886 y: i1887  <|@  <|@
f <@~|@floating>@ <|@
tid i780 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i1886 
y: i1888 
=== Succesors ===
=== Usages ===
i784 ?263 ?263 i844 i268 i1226 v1236 j1240 v1244 i1871 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1886 y: i1888  <|@  <|@
f <@~|@floating>@ <|@
tid i784 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i782 
y: i780 
=== Succesors ===
=== Usages ===
v799 i477 i477 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i782 y: i780  <|@  <|@
f <@~|@floating>@ <|@
tid i778 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i1881 
y: i1889 
=== Succesors ===
=== Usages ===
i783 ?304 v305 v1259 ?299 i1250 ?263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1881 y: i1889  <|@  <|@
f <@~|@floating>@ <|@
tid i777 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i1880 
y: i1889 
=== Succesors ===
=== Usages ===
i783 ?263 i267 j1225 v1233 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1880 y: i1889  <|@  <|@
f <@~|@floating>@ <|@
tid i783 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i778 
y: i777 
=== Succesors ===
=== Usages ===
v799 i477 i844 i477 i1871 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i778 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i784 
y: i783 
=== Succesors ===
=== Usages ===
v802 v472 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i784 y: i783  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1885 
y: i74 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1885 y: i74  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9967920114616574
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v1346 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
i1889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v1346 #falseSuccessor: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607153737222773857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1909 
value: i74 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1909 value: i74 stateAfter: - lastLocationAccess: - #next: v802  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.49439247641649453
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v800 
falseSuccessor: v801 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v800 #falseSuccessor: v801  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602549443096160386
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v806  <|@  <|@
f <@*|@fixed>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602714825633646624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid i1871 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i780 
y: i783 
=== Succesors ===
=== Usages ===
i845 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i780 y: i783  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v801 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B154" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569543716300940040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1885 
y: i13 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1885 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9999999999999943
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v1349 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v105 #falseSuccessor: v1349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569543716300939998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1909 
value: i74 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1909 value: i74 stateAfter: - lastLocationAccess: - #next: v472  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.49439247641649453
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564957155674978818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565123077672160186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid i844 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i780 
y: i783 
=== Succesors ===
=== Usages ===
i845 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i780 y: i783  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v471 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B53" "B54" 
    successors "B60" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v475 
values: i783 i784 i784 i783 
=== Succesors ===
=== Usages ===
?263 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v475 values: i783 i784 i784 i783  <|@  <|@
f <@~|@floating>@ <|@
tid i845 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v475 
values: i844 i782 i782 i1871 
=== Succesors ===
=== Usages ===
i1226 v270 v1236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v475 values: i844 i782 i782 i1871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v476 v478 v806 v807 
=== Succesors ===
next: i1890 
=== Usages ===
i477 i845 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v476 v478 v806 v807 #next: i1890  <|@  <|@
f <@~|@floating>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1877 
=== Succesors ===
=== Usages ===
i1890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1910 
=== Succesors ===
next: v1828 
=== Usages ===
v1233 v1256 j1223 
=== Predecessor ===
v475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1910 #next: v1828  <|@  <|@
f <@~|@floating>@ <|@
tid j1223 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1890 
=== Succesors ===
=== Usages ===
v1232 v1255 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1890  <|@  <|@
f <@~|@floating>@ <|@
tid i1226 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i845 
y: i780 
=== Succesors ===
=== Usages ===
j1227 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i845 y: i780  <|@  <|@
f <@~|@floating>@ <|@
tid j1227 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1226 
=== Succesors ===
=== Usages ===
j1229 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1226  <|@  <|@
f <@~|@floating>@ <|@
tid j1228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1229 j1252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1229 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1227 
y: j1228 
=== Succesors ===
=== Usages ===
j1230 j1241 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1227 y: j1228  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i780 
y: i845 
=== Succesors ===
=== Usages ===
v1828 v1844 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i780 y: i845  <|@  <|@
tid ?134 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 271
stackSize: 0
=== Inputs ===
outerFrameState: ?88 
values: a1 - - - a554 - 
=== Succesors ===
=== Usages ===
?179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: a1 - - - a554 -  <|@  <|@
f <@~|@floating>@ <|@
tid a983 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: Uncompress
stamp: a Ljava/nio/ByteBuffer;
=== Inputs ===
value: a1878 
=== Succesors ===
=== Usages ===
?263 ?299 ?304 v1040 ?179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1878  <|@  <|@
tid ?179 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a1882 a554 a983 i13 - - - 
=== Succesors ===
=== Usages ===
?380 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1882 a554 a983 i13 - - -  <|@  <|@
tid ?380 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?179 
values: - - - 
=== Succesors ===
=== Usages ===
?304 ?368 ?263 ?1459 ?299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?179 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a1128 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1877 
=== Succesors ===
=== Usages ===
?299 v1914 v1911 ?304 ?263 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1236 
=== Succesors ===
trueSuccessor: v1827 
falseSuccessor: v1824 
=== Usages ===
=== Predecessor ===
i1890 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1236 #trueSuccessor: v1827 #falseSuccessor: v1824  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1836 
=== Usages ===
=== Predecessor ===
v1828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1836  <|@  <|@
f <@~|@floating>@ <|@
tid j1225 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i777 
=== Succesors ===
=== Usages ===
j1230 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i777  <|@  <|@
f <@~|@floating>@ <|@
tid j1230 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1225 
y: j1229 
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1225 y: j1229  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1230 
y: j1223 
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1230 y: j1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1232 
=== Succesors ===
trueSuccessor: v1835 
falseSuccessor: v1832 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1232 #trueSuccessor: v1835 #falseSuccessor: v1832  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1834 
=== Usages ===
=== Predecessor ===
v1836 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1834  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i1890 
=== Succesors ===
=== Usages ===
v1834 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i777 y: i1890  <|@  <|@
f <@*|@fixed>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1233 
=== Succesors ===
trueSuccessor: v1825 
falseSuccessor: v1833 
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1233 #trueSuccessor: v1825 #falseSuccessor: v1833  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1823  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1831 
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1831  <|@  <|@
f <@*|@fixed>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1829 
=== Predecessor ===
v1833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1830 
=== Usages ===
=== Predecessor ===
v1836 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1830  <|@  <|@
f <@*|@fixed>@ <|@
tid v1830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1829 
=== Predecessor ===
v1832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1830 v1831 
=== Succesors ===
next: v1354 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1830 v1831 #next: v1354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B76" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1508 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1508  <|@  <|@
f <@~|@floating>@ <|@
tid i1509 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253723
stableDimension: 0
stamp: i32 [-253723] ⇊00000000fffc20e5 ⇈00000000fffc20e5
stampKind: i32
value: int[-253723|0xfffffffffffc20e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
v1354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1822 
=== Usages ===
=== Predecessor ===
v1828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1822  <|@  <|@
f <@*|@fixed>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1824 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B62" 
    successors "B69" "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1822 v1823 
=== Succesors ===
next: v1844 
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1822 v1823 #next: v1844  <|@  <|@
f <@*|@fixed>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1236 
=== Succesors ===
trueSuccessor: v1843 
falseSuccessor: v1840 
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1236 #trueSuccessor: v1843 #falseSuccessor: v1840  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1891 
=== Usages ===
=== Predecessor ===
v1844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1891  <|@  <|@
f <@~|@floating>@ <|@
tid v1912 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1879 
=== Succesors ===
=== Usages ===
i1891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1912 
=== Succesors ===
next: v1852 
=== Usages ===
v1244 j1239 
=== Predecessor ===
v1843 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1912 #next: v1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1240 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i780 
=== Succesors ===
=== Usages ===
j1241 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i780  <|@  <|@
f <@~|@floating>@ <|@
tid j1241 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1229 
y: j1240 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1229 y: j1240  <|@  <|@
f <@~|@floating>@ <|@
tid j1239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1891 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1891  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1241 
y: j1239 
=== Succesors ===
=== Usages ===
v1852 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1241 y: j1239  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1243 
=== Succesors ===
trueSuccessor: v1851 
falseSuccessor: v1848 
=== Usages ===
=== Predecessor ===
i1891 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1243 #trueSuccessor: v1851 #falseSuccessor: v1848  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1850 
=== Usages ===
=== Predecessor ===
v1852 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1850  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i780 
y: i1891 
=== Succesors ===
=== Usages ===
v1850 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i780 y: i1891  <|@  <|@
f <@*|@fixed>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1244 
=== Succesors ===
trueSuccessor: v1841 
falseSuccessor: v1849 
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1244 #trueSuccessor: v1841 #falseSuccessor: v1849  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1839 
=== Usages ===
=== Predecessor ===
v1850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1839  <|@  <|@
f <@*|@fixed>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1837 
=== Predecessor ===
v1841 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1847 
=== Usages ===
=== Predecessor ===
v1850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1847  <|@  <|@
f <@*|@fixed>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1845 
=== Predecessor ===
v1849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1846 
=== Usages ===
=== Predecessor ===
v1852 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1846  <|@  <|@
f <@*|@fixed>@ <|@
tid v1846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1845 
=== Predecessor ===
v1848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1846 v1847 
=== Succesors ===
next: v1359 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1846 v1847 #next: v1359  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1514 
=== Usages ===
=== Predecessor ===
v1845 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1514  <|@  <|@
f <@~|@floating>@ <|@
tid i1515 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -259099
stableDimension: 0
stamp: i32 [-259099] ⇊00000000fffc0be5 ⇈00000000fffc0be5
stampKind: i32
value: int[-259099|0xfffffffffffc0be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
v1359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B66" "B75" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1511 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-259099 - -253723] ⇊00000000fffc00e5 ⇈00000000fffc2be5
valueDescription: i32
=== Inputs ===
merge: v1507 
values: i1509 i1515 
=== Succesors ===
=== Usages ===
v1513 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1507 values: i1509 i1515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1508 v1514 
=== Succesors ===
next: v1513 
=== Usages ===
i1511 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1508 v1514 #next: v1513  <|@  <|@
tid ?263 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 592
stackSize: 2
=== Inputs ===
outerFrameState: ?380 
values: a1882 a554 a983 a1128 i777 i778 a1879 i780 i782 - - - i780 i477 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1513 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?380 values: a1882 a554 a983 a1128 i777 i778 a1879 i780 i782 - - - i780 i477 virtualObjectMappings: ?885  <|@  <|@
f <@~|@floating>@ <|@
tid a1510 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1869499864
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1869499864]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?263 
actionAndReason: i1511 
speculation: a1510 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?263 actionAndReason: i1511 speculation: a1510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1838 
=== Usages ===
=== Predecessor ===
v1844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1838  <|@  <|@
f <@*|@fixed>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1837 
=== Predecessor ===
v1840 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B71" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1838 v1839 
=== Succesors ===
next: v265 
=== Usages ===
v1248 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1838 v1839 #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid i1152 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
v1837 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B81" 
    successors "B80" "B83" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628637034469872334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i267 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v266 
values: i777 i292 
=== Succesors ===
=== Usages ===
j1249 v1259 v1911 v1256 i292 i1250 ?299 i302 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v266 values: i777 i292  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v266 
values: i780 i291 
=== Succesors ===
=== Usages ===
v1913 v270 ?299 i303 i291 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v266 values: i780 i291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 28.221435738803496
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v265 
=== Succesors ===
next: v276 
=== Usages ===
i267 i268 v272 v284 v298 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v265 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i845 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i268 y: i845  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9647476131021091
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v271 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v271 #falseSuccessor: v272  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628356995967024841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1892 
=== Usages ===
v1238 v1248 
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1892  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1821 v271 
=== Succesors ===
=== Usages ===
i1892 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1821 v271  <|@  <|@
f <@~|@floating>@ <|@
tid v1911 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1128 
index: i267 
=== Succesors ===
=== Usages ===
i1892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1128 index: i267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1238 
address: v1911 
=== Succesors ===
next: v290 
=== Usages ===
v1153 i1155 
=== Predecessor ===
v271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1238 address: v1911 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1892 
y: i1152 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1892 y: i1152  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9998116902024854
=== Inputs ===
condition: v1153 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
i1892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1153 #trueSuccessor: v280 #falseSuccessor: v284  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628355552802487815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1837 v271 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1837 v271  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i268 
index: a1879 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i268 index: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid i1155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1892 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1248 
address: v1913 
value: i1155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1248 address: v1913 value: i1155 stateAfter: - lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid i291 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i268 
y: i74 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i268 y: i74  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i267 
y: i74 
=== Succesors ===
=== Usages ===
i267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i267 y: i74  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
loopBegin: v266 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v266  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572561224097339808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v266 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v266 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607136451636396177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v266 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v266 #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors "B85" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v283 
=== Succesors ===
next: v1860 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v283 #next: v1860  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i267 
y: i778 
=== Succesors ===
=== Usages ===
v1860 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i267 y: i778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1259 
=== Succesors ===
trueSuccessor: v1859 
falseSuccessor: v1856 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1259 #trueSuccessor: v1859 #falseSuccessor: v1856  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1868 
=== Usages ===
=== Predecessor ===
v1860 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1868  <|@  <|@
f <@~|@floating>@ <|@
tid j1249 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i267 
=== Succesors ===
=== Usages ===
j1253 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i1250 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i778 
y: i267 
=== Succesors ===
=== Usages ===
j1251 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i778 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid j1251 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1250 
=== Succesors ===
=== Usages ===
j1252 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1250  <|@  <|@
f <@~|@floating>@ <|@
tid j1252 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1251 
y: j1228 
=== Succesors ===
=== Usages ===
j1253 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1251 y: j1228  <|@  <|@
f <@~|@floating>@ <|@
tid j1253 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1249 
y: j1252 
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1249 y: j1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1253 
y: j1223 
=== Succesors ===
=== Usages ===
v1868 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1253 y: j1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1255 
=== Succesors ===
trueSuccessor: v1867 
falseSuccessor: v1864 
=== Usages ===
=== Predecessor ===
v1859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1255 #trueSuccessor: v1867 #falseSuccessor: v1864  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1866 
=== Usages ===
=== Predecessor ===
v1868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1866  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i267 
y: i1890 
=== Succesors ===
=== Usages ===
v1866 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i267 y: i1890  <|@  <|@
f <@*|@fixed>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1256 
=== Succesors ===
trueSuccessor: v1857 
falseSuccessor: v1865 
=== Usages ===
=== Predecessor ===
v1867 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1256 #trueSuccessor: v1857 #falseSuccessor: v1865  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1855 
=== Usages ===
=== Predecessor ===
v1866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1855  <|@  <|@
f <@*|@fixed>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1863 
=== Usages ===
=== Predecessor ===
v1866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1863  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1861 
=== Predecessor ===
v1865 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1862 
=== Usages ===
=== Predecessor ===
v1868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1862  <|@  <|@
f <@*|@fixed>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1861 
=== Predecessor ===
v1864 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1862 v1863 
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1862 v1863 #next: v1364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1861 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1362  <|@  <|@
tid ?299 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?380 
values: a1882 a554 a983 a1128 i267 i778 a1879 i268 i782 - - - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?380 values: a1882 a554 a983 a1128 i267 i778 a1879 i268 i782 - - - virtualObjectMappings: ?885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1022
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
reason: BoundsCheckException
speculation: Object[d.a@795456897]
stamp: void
=== Inputs ===
stateBefore: ?299 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?299  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1854 
=== Usages ===
=== Predecessor ===
v1860 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B87" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1854 v1855 
=== Succesors ===
next: v300 
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1854 v1855 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v1853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B98" "B115" 
    successors "B95" "B122" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607879352386270549
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i302 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v301 
values: i267 i364 i364 
=== Succesors ===
=== Usages ===
?304 v305 i364 v1914 v1040 i482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: i267 i364 i364  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v301 
values: i268 i324 i378 
=== Succesors ===
=== Usages ===
?304 v1052 v317 v1040 i324 v1915 i378 i337 v1917 i377 i489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: i268 i324 i378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1547228949992876
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v300 
=== Succesors ===
next: v311 
=== Usages ===
i302 i303 v307 v319 v365 v379 v1409 v1369 v1385 v1391 v1397 v1403 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v300 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i302 
y: i778 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i302 y: i778  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.13401192679415996
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v306 #falseSuccessor: v307  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594743488101053250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1893 
=== Usages ===
v1261 
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1893  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1853 v306 
=== Succesors ===
=== Usages ===
i1893 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1853 v306  <|@  <|@
f <@~|@floating>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1128 
index: i302 
=== Succesors ===
=== Usages ===
i1893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1128 index: i302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1261 
address: v1914 
=== Succesors ===
next: i1894 
=== Usages ===
i1029 
=== Predecessor ===
v306 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1261 address: v1914 #next: i1894  <|@  <|@
f <@~|@floating>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1879 
=== Succesors ===
=== Usages ===
i1894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: v316 
=== Usages ===
v1052 v1072 
=== Predecessor ===
i1893 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i1894 
=== Succesors ===
=== Usages ===
v1405 v1371 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i1894  <|@  <|@
f <@~|@floating>@ <|@
tid i1029 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1893 
=== Succesors ===
=== Usages ===
v313 i325 i350 v330 i358 v496 i343 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1893  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i359 v313 i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1029 
y: i278 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1029 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i302 
y: i74 
=== Succesors ===
=== Usages ===
i302 i302 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i302 y: i74  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i303 
y: i74 
=== Succesors ===
=== Usages ===
i303 v1918 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i74  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9444529691575878
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
i1894 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v314 #falseSuccessor: v315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594433787418621540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i782 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i782  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9998375304630381
=== Inputs ===
condition: v317 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v319 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v317 #trueSuccessor: v318 #falseSuccessor: v319  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594432931891874491
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1371 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1371  <|@  <|@
f <@*|@fixed>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v1366 
falseSuccessor: v1369 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v1366 #falseSuccessor: v1369  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B94" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594432931891874491
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1039 
=== Usages ===
v1039 
=== Predecessor ===
v1371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i303 
index: a1879 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i303 index: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1029 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1366 
address: v1915 
value: i325 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1366 address: v1915 value: i325 stateAfter: - lastLocationAccess: - #next: v365  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
loopBegin: v301 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1370 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1370  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1517 
=== Usages ===
=== Predecessor ===
v1369 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1517  <|@  <|@
f <@~|@floating>@ <|@
tid i1518 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264219
stableDimension: 0
stamp: i32 [-264219] ⇊00000000fffbf7e5 ⇈00000000fffbf7e5
stampKind: i32
value: int[-264219|0xfffffffffffbf7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629700246545585
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: a367 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: a367  <|@  <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@62f168a6
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a1455 i302 a983 i303 
=== Succesors ===
=== Usages ===
a367 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1455 i302 a983 i303  <|@  <|@
tid ?1459 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: ?380 
values: - - - - - - - - - - - - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
a367 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?380 values: - - - - - - - - - - - - virtualObjectMappings: ?885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a367 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1040 
stateDuring: ?1459 
=== Succesors ===
next: i1895 
=== Usages ===
?368 v1916 
=== Predecessor ===
v319 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1040 stateDuring: ?1459 #next: i1895  <|@  <|@
tid ?368 <|@
d <@d|@=== Debug Properties ===
bci: 146
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 1
=== Inputs ===
outerFrameState: ?380 
values: - - - - - - - - - - - - a367 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1549 i1895 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?380 values: - - - - - - - - - - - - a367 virtualObjectMappings: ?885  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a367 
index: - 
=== Succesors ===
=== Usages ===
i1895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CoderResult.type
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?368 
guard: - 
address: v1916 
=== Succesors ===
next: v1381 
=== Usages ===
v183 v591 
=== Predecessor ===
a367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?368 guard: - address: v1916 #next: v1381  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:120) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:272) [bci: 48]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1895 
y: i13 
=== Succesors ===
=== Usages ===
v1381 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1895 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9999763022484153
=== Inputs ===
condition: v591 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
i1895 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v591 #trueSuccessor: v66 #falseSuccessor: v124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B137" 
    xhandlers
    flags 
    probability 4537629534161443397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: i1896 
=== Usages ===
=== Predecessor ===
v1381 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: i1896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1906 
=== Succesors ===
next: i1897 
=== Usages ===
i850 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1906 #next: i1897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1905 
=== Succesors ===
next: v846 
=== Usages ===
i851 
=== Predecessor ===
i1896 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1905 #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
i1897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468509507352651903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 100]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v1381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1895 
y: i74 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1895 y: i74  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 94]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v183 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v1380 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v183 #trueSuccessor: v132 #falseSuccessor: v1380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4468509507352651903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@64537ce3
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.writeBytes()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1460 <|@
d <@d|@=== Debug Properties ===
bci: 141
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 282
stackSize: 0
=== Inputs ===
outerFrameState: ?88 
values: a1 - - - a554 - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: a1 - - - a554 - virtualObjectMappings: ?885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
bci: 141
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.writeBytes
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1044 
stateDuring: ?1460 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1044 stateDuring: ?1460 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1549 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1549  <|@  <|@
f <@~|@floating>@ <|@
tid i1551 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267539
stableDimension: 0
stamp: i32 [-267539] ⇊00000000fffbeaed ⇈00000000fffbeaed
stampKind: i32
value: int[-267539|0xfffffffffffbeaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?368 
actionAndReason: i1551 
speculation: a1467 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?368 actionAndReason: i1551 speculation: a1467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B107" "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1387 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1029 
y: i329 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1029 y: i329  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v1385 
falseSuccessor: v1382 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v1385 #falseSuccessor: v1382  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1386 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid i1523 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268307
stableDimension: 0
stamp: i32 [-268307] ⇊00000000fffbe7ed ⇈00000000fffbe7ed
stampKind: i32
value: int[-268307|0xfffffffffffbe7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1393 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1393  <|@  <|@
f <@~|@floating>@ <|@
tid i495 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1029 
y: i495 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1029 y: i495  <|@  <|@
f <@*|@fixed>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v1388 
falseSuccessor: v1391 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v1388 #falseSuccessor: v1391  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i782 
y: i303 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i782 y: i303  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 i378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i338 
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i337 y: i338  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v1397 
falseSuccessor: v1394 
=== Usages ===
=== Predecessor ===
v1388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v1397 #falseSuccessor: v1394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1398 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1526 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1526  <|@  <|@
f <@~|@floating>@ <|@
tid i1527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268819
stableDimension: 0
stamp: i32 [-268819] ⇊00000000fffbe5ed ⇈00000000fffbe5ed
stampKind: i32
value: int[-268819|0xfffffffffffbe5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B114" "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1405 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1405  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v1400 
falseSuccessor: v1403 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v1400 #falseSuccessor: v1403  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1411 
=== Usages ===
v1221 
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1411  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i303 
y: i376 
=== Succesors ===
=== Usages ===
v1072 v1919 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i376  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i1894 
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i377 y: i1894  <|@  <|@
f <@*|@fixed>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1072 
=== Succesors ===
trueSuccessor: v1406 
falseSuccessor: v1409 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1072 #trueSuccessor: v1406 #falseSuccessor: v1409  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B94" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
v1221 
=== Predecessor ===
v1411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1406 v1400 
=== Succesors ===
=== Usages ===
v1060 v1080 v1070 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1406 v1400  <|@  <|@
f <@~|@floating>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i303 
index: a1879 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i303 index: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i1029 
y: i342 
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1029 y: i342  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i343 
y: i341 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i343 y: i341  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i344 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1221 
address: v1917 
value: i345 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1070 
=== Usages ===
=== Predecessor ===
v1406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1221 address: v1917 value: i345 stateAfter: - lastLocationAccess: - #next: v1070  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i324 
index: a1879 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i324 index: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i1029 
y: i349 
=== Succesors ===
=== Usages ===
i352 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1029 y: i349  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i352 i358 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i350 
y: i351 
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i350 y: i351  <|@  <|@
f <@~|@floating>@ <|@
tid i353 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i352 
y: i278 
=== Succesors ===
=== Usages ===
i354 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i352 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i353 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1221 
address: v1918 
value: i354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v1060 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1221 address: v1918 value: i354 stateAfter: - lastLocationAccess: - #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i377 
index: a1879 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i377 index: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i1029 
y: i351 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1029 y: i351  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i358 
y: i278 
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i358 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i359 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1221 
address: v1919 
value: i360 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1221 address: v1919 value: i360 stateAfter: - lastLocationAccess: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i303 
y: i338 
=== Succesors ===
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i338  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
loopBegin: v301 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1410 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1530 
=== Usages ===
=== Predecessor ===
v1409 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1530  <|@  <|@
f <@~|@floating>@ <|@
tid i1531 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274715
stableDimension: 0
stamp: i32 [-274715] ⇊00000000fffbcee5 ⇈00000000fffbcee5
stampKind: i32
value: int[-274715|0xfffffffffffbcee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1404 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v1403 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid i1529 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269595
stableDimension: 0
stamp: i32 [-269595] ⇊00000000fffbe2e5 ⇈00000000fffbe2e5
stampKind: i32
value: int[-269595|0xfffffffffffbe2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1392 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1524 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1524  <|@  <|@
f <@~|@floating>@ <|@
tid i1525 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268563
stableDimension: 0
stamp: i32 [-268563] ⇊00000000fffbe6ed ⇈00000000fffbe6ed
stampKind: i32
value: int[-268563|0xfffffffffffbe6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B123" "B124" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1416 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i302 
y: i1889 
=== Succesors ===
=== Usages ===
v516 v508 v510 v1083 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i302 y: i1889  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1881 
y: i482 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1881 y: i482  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v508 
=== Succesors ===
trueSuccessor: v1415 
falseSuccessor: v1412 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v508 #trueSuccessor: v1415 #falseSuccessor: v1412  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1532 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1532  <|@  <|@
f <@~|@floating>@ <|@
tid i1533 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -276755
stableDimension: 0
stamp: i32 [-276755] ⇊00000000fffbc6ed ⇈00000000fffbc6ed
stampKind: i32
value: int[-276755|0xfffffffffffbc6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1421 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i482 
y: i13 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i482 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v1420 
falseSuccessor: v1417 
=== Usages ===
=== Predecessor ===
v1412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v1420 #falseSuccessor: v1417  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1534 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1534  <|@  <|@
f <@~|@floating>@ <|@
tid i1535 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277011
stableDimension: 0
stamp: i32 [-277011] ⇊00000000fffbc5ed ⇈00000000fffbc5ed
stampKind: i32
value: int[-277011|0xfffffffffffbc5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1898 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1898  <|@  <|@
f <@~|@floating>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
i1898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1920 
=== Succesors ===
next: v1426 
=== Usages ===
v516 
=== Predecessor ===
v1417 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1920 #next: v1426  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i482 
y: i1898 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i482 y: i1898  <|@  <|@
f <@*|@fixed>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v1425 
falseSuccessor: v1422 
=== Usages ===
=== Predecessor ===
i1898 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v1425 #falseSuccessor: v1422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1536 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1536  <|@  <|@
f <@~|@floating>@ <|@
tid i1537 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278035
stableDimension: 0
stamp: i32 [-278035] ⇊00000000fffbc1ed ⇈00000000fffbc1ed
stampKind: i32
value: int[-278035|0xfffffffffffbc1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1431 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i303 
y: i1886 
=== Succesors ===
=== Usages ===
v541 v533 v535 v1090 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i303 y: i1886  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1887 
y: i489 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1887 y: i489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v533 
=== Succesors ===
trueSuccessor: v1430 
falseSuccessor: v1427 
=== Usages ===
=== Predecessor ===
v1422 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v533 #trueSuccessor: v1430 #falseSuccessor: v1427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1538 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1538  <|@  <|@
f <@~|@floating>@ <|@
tid i1539 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278291
stableDimension: 0
stamp: i32 [-278291] ⇊00000000fffbc0ed ⇈00000000fffbc0ed
stampKind: i32
value: int[-278291|0xfffffffffffbc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1436 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1436  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i489 
y: i13 
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i489 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v535 
=== Succesors ===
trueSuccessor: v1435 
falseSuccessor: v1432 
=== Usages ===
=== Predecessor ===
v1427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v535 #trueSuccessor: v1435 #falseSuccessor: v1432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1540 
=== Usages ===
=== Predecessor ===
v1436 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1540  <|@  <|@
f <@~|@floating>@ <|@
tid i1541 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278547
stableDimension: 0
stamp: i32 [-278547] ⇊00000000fffbbfed ⇈00000000fffbbfed
stampKind: i32
value: int[-278547|0xfffffffffffbbfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B135" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1899 
=== Usages ===
=== Predecessor ===
v1436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1899  <|@  <|@
f <@~|@floating>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1921 
=== Succesors ===
next: v1441 
=== Usages ===
v541 
=== Predecessor ===
v1432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1921 #next: v1441  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i489 
y: i1899 
=== Succesors ===
=== Usages ===
v1441 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i489 y: i1899  <|@  <|@
f <@*|@fixed>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v541 
=== Succesors ===
trueSuccessor: v1440 
falseSuccessor: v1437 
=== Usages ===
=== Predecessor ===
i1899 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v541 #trueSuccessor: v1440 #falseSuccessor: v1437  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1542 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1542  <|@  <|@
f <@~|@floating>@ <|@
tid i1543 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279827
stableDimension: 0
stamp: i32 [-279827] ⇊00000000fffbbaed ⇈00000000fffbbaed
stampKind: i32
value: int[-279827|0xfffffffffffbbaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B100" "B108" "B121" "B112" "B119" "B117" "B123" "B125" "B127" "B129" "B131" "B133" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1519 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-279827 - -264219] ⇊00000000fffb80e5 ⇈00000000fffbffed
valueDescription: i32
=== Inputs ===
merge: v1516 
values: i1518 i1523 i1525 i1527 i1529 i1531 i1533 i1535 i1537 i1539 i1541 i1543 
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1516 values: i1518 i1523 i1525 i1527 i1529 i1531 i1533 i1535 i1537 i1539 i1541 i1543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1517 v1522 v1524 v1526 v1528 v1530 v1532 v1534 v1536 v1538 v1540 v1542 
=== Succesors ===
next: v1521 
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1517 v1522 v1524 v1526 v1528 v1530 v1532 v1534 v1536 v1538 v1540 v1542 #next: v1521  <|@  <|@
tid ?304 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?380 
values: a1882 a554 a983 a1128 i302 i778 a1879 i303 i782 - - - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?380 values: a1882 a554 a983 a1128 i302 i778 a1879 i303 i782 - - - virtualObjectMappings: ?885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?304 
actionAndReason: i1519 
speculation: a1467 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?304 actionAndReason: i1519 speculation: a1467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B136" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1905 
value: i482 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v1437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1905 value: i482 stateAfter: - lastLocationAccess: - #next: v1090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1928 
value: i489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1928 value: i489 stateAfter: - lastLocationAccess: - #next: v853  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: i1900 
=== Usages ===
=== Predecessor ===
v1090 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: i1900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1905 
=== Succesors ===
next: v849 
=== Usages ===
i851 
=== Predecessor ===
v853 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1905 #next: v849  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
i1900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B102" "B136" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4607182525848264945
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i850 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v847 
values: i1896 i1881 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v847 values: i1896 i1881  <|@  <|@
f <@~|@floating>@ <|@
tid i851 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v847 
values: i1897 i1900 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v847 values: i1897 i1900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v846 v849 
=== Succesors ===
next: v1445 
=== Usages ===
i850 i851 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v846 v849 #next: v1445  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i850 
y: i851 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i850 y: i851  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i74 
=== Succesors ===
=== Usages ===
v1445 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i84 y: i74  <|@  <|@
f <@*|@fixed>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v1444 
falseSuccessor: v1442 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v1444 #falseSuccessor: v1442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1443 
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1443  <|@  <|@
tid ?848 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 273
stackSize: 0
=== Inputs ===
outerFrameState: ?88 
values: a1 - - - a554 - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: a1 - - - a554 - virtualObjectMappings: ?885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1095
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?848 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1444 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?848  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4607182525848264945
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1790 
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:483) [bci: 17]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1936 
=== Succesors ===
next: v1738 
=== Usages ===
j1734 v1780 v1944 v1945 v1946 v1947 
=== Predecessor ===
v1442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1936 #next: v1738  <|@  <|@
f <@~|@floating>@ <|@
tid j1734 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 50]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j1790 
y: j1630 
=== Succesors ===
=== Usages ===
v1735 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j1790 y: j1630  <|@  <|@
f <@~|@floating>@ <|@
tid v1735 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 65]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1734 
y: j1634 
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1734 y: j1634  <|@  <|@
f <@*|@fixed>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 71]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1735 
=== Succesors ===
trueSuccessor: v1737 
falseSuccessor: v1736 
=== Usages ===
=== Predecessor ===
j1790 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1735 #trueSuccessor: v1737 #falseSuccessor: v1736  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 4606281891561388876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1739 
=== Usages ===
=== Predecessor ===
v1738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1818 
=== Usages ===
=== Predecessor ===
v1737 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4591870351344153779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 101]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1740 
=== Usages ===
=== Predecessor ===
v1738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1740 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 102]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1791 
=== Usages ===
v1942 v1765 i1771 v1777 
=== Predecessor ===
v1736 >@ <|@
instruction <@CurrentLock|@org.graalvm.compiler.hotspot.nodes.CurrentLockNode>@ #next: j1791  <|@  <|@
f <@~|@floating>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1740 
index: - 
=== Succesors ===
=== Usages ===
j1791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1740 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:504) [bci: 118]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1942 
=== Succesors ===
next: v1745 
=== Usages ===
v1742 i1771 
=== Predecessor ===
j1740 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1942 #next: v1745  <|@  <|@
f <@~|@floating>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 140]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1791 
y: j552 
=== Succesors ===
=== Usages ===
v1745 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1791 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 146]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v1742 
=== Succesors ===
trueSuccessor: v1744 
falseSuccessor: v1743 
=== Usages ===
=== Predecessor ===
j1791 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1742 #trueSuccessor: v1744 #falseSuccessor: v1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B153" 
    xhandlers
    flags 
    probability 4585925565580585513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:509) [bci: 149]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1766 
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
v1744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B147" 
    xhandlers
    flags 
    probability 4588807937852981053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 170]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1748 
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1748  <|@  <|@
f <@~|@floating>@ <|@
tid v1780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 24]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
x: j1790 
y: j1640 
=== Succesors ===
=== Usages ===
v1748 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1790 y: j1640  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 66
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - a939 - 
=== Succesors ===
=== Usages ===
v1796 v1765 i1771 v1777 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a939 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1780 
=== Succesors ===
trueSuccessor: v1746 
falseSuccessor: v1747 
=== Usages ===
=== Predecessor ===
v1743 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1780 #trueSuccessor: v1746 #falseSuccessor: v1747  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4588721466684809187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:578) [bci: 253]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1769 
=== Usages ===
=== Predecessor ===
v1748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1769  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:518) [bci: 193]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a939 
=== Succesors ===
next: i1771 
=== Usages ===
v1943 
=== Predecessor ===
v1746 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a939 #next: i1771  <|@  <|@
f <@~|@floating>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1769 
index: - 
=== Succesors ===
=== Usages ===
i1771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1771 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 66]
locals: - - - - a939 - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 216]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1943 
expectedValue: j1740 
newValue: j1791 
stateAfter: ?33 
=== Succesors ===
next: v1775 
=== Usages ===
v1772 
=== Predecessor ===
j1769 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1943 expectedValue: j1740 newValue: j1791 stateAfter: ?33 #next: v1775  <|@  <|@
f <@~|@floating>@ <|@
tid v1772 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1771 
y: i13 
=== Succesors ===
=== Usages ===
v1775 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1771 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v1772 
=== Succesors ===
trueSuccessor: v1773 
falseSuccessor: v1774 
=== Usages ===
=== Predecessor ===
i1771 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1772 #trueSuccessor: v1773 #falseSuccessor: v1774  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B153" 
    xhandlers
    flags 
    probability 4543890925906680589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:524) [bci: 248]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1777 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1777 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 66]
locals: - - - - a939 - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:526) [bci: 272]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: ?33 
stateDuring: - 
arguments: a939 j1740 
=== Succesors ===
next: v1778 
=== Usages ===
=== Predecessor ===
v1773 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?33 stateDuring: - arguments: a939 j1740 #next: v1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
v1777 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B153" 
    xhandlers
    flags 
    probability 4588712906039160172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:520) [bci: 227]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1776 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1776  <|@  <|@
f <@*|@fixed>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
v1774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" "B151" 
    xhandlers
    flags 
    probability 4558673378034570898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:550) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1792 
=== Usages ===
=== Predecessor ===
v1748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1792  <|@  <|@
f <@~|@floating>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
j1792 v1796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1792 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:552) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1944 
=== Succesors ===
next: j1793 
=== Usages ===
j1750 
=== Predecessor ===
v1747 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1944 #next: j1793  <|@  <|@
f <@~|@floating>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
j1793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1793 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_recursions
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1945 
=== Succesors ===
next: j1749 
=== Usages ===
j1751 
=== Predecessor ===
j1792 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1945 #next: j1749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1749 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:555) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v1755 
=== Usages ===
j1750 
=== Predecessor ===
j1793 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v1755  <|@  <|@
f <@~|@floating>@ <|@
tid j1750 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64
=== Inputs ===
x: j1749 
y: j1792 
=== Succesors ===
=== Usages ===
j1751 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j1749 y: j1792  <|@  <|@
f <@~|@floating>@ <|@
tid j1751 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64
=== Inputs ===
x: j1750 
y: j1793 
=== Succesors ===
=== Usages ===
v1752 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1750 y: j1793  <|@  <|@
f <@~|@floating>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 113]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1751 
y: j552 
=== Succesors ===
=== Usages ===
v1755 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1751 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1752 
=== Succesors ===
trueSuccessor: v1754 
falseSuccessor: v1753 
=== Usages ===
=== Predecessor ===
j1749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1752 #trueSuccessor: v1754 #falseSuccessor: v1753  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4558618036486940904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:558) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1794 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1794  <|@  <|@
f <@~|@floating>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
j1794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_cxq
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:559) [bci: 137]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1946 
=== Succesors ===
next: j1795 
=== Usages ===
j1756 
=== Predecessor ===
v1754 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1946 #next: j1795  <|@  <|@
f <@~|@floating>@ <|@
tid v1947 <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
j1795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1795 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_EntryList
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:561) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1947 
=== Succesors ===
next: v1763 
=== Usages ===
j1756 
=== Predecessor ===
j1794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1947 #next: v1763  <|@  <|@
f <@~|@floating>@ <|@
tid j1756 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 175]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64
=== Inputs ===
x: j1794 
y: j1795 
=== Succesors ===
=== Usages ===
v1757 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1794 y: j1795  <|@  <|@
f <@~|@floating>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 179]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1756 
y: j552 
=== Succesors ===
=== Usages ===
v1763 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1756 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 185]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1757 
=== Succesors ===
trueSuccessor: v1761 
falseSuccessor: v1762 
=== Usages ===
=== Predecessor ===
j1795 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1757 #trueSuccessor: v1761 #falseSuccessor: v1762  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4558070155165403959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1764 
=== Usages ===
=== Predecessor ===
v1763 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 190]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1796 
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1796 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 66]
locals: - - - - a939 - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:567) [bci: 200]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1944 
value: j552 
stateAfter: ?33 
lastLocationAccess: - 
=== Succesors ===
next: v1768 
=== Usages ===
=== Predecessor ===
v1764 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1944 value: j552 stateAfter: ?33 lastLocationAccess: - #next: v1768  <|@  <|@
f <@*|@fixed>@ <|@
tid v1768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
v1796 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" 
    xhandlers
    flags 
    probability 4543890925906680587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1760 
=== Usages ===
=== Predecessor ===
v1763 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1760  <|@  <|@
f <@*|@fixed>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1759 
=== Predecessor ===
v1762 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    probability 4528697743976617276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1758 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1758  <|@  <|@
f <@*|@fixed>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1759 
=== Predecessor ===
v1753 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4544454207342795481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1758 v1760 
=== Succesors ===
next: v1765 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1758 v1760 #next: v1765  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1765 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 66]
locals: - - - - a939 - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:575) [bci: 248]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: ?33 
stateDuring: - 
arguments: a939 j1740 
=== Succesors ===
next: v1788 
=== Usages ===
=== Predecessor ===
v1759 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?33 stateDuring: - arguments: a939 j1740 #next: v1788  <|@  <|@
f <@*|@fixed>@ <|@
tid v1788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 184]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
v1765 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B142" "B149" "B146" "B145" "B152" 
    successors 
    xhandlers
    flags 
    probability 4591870351344153779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1766 v1768 v1776 v1778 v1788 
=== Succesors ===
next: v1779 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1766 v1768 v1776 v1778 v1788 #next: v1779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1819 
=== Usages ===
=== Predecessor ===
v1767 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v1819  <|@  <|@
f <@*|@fixed>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1779 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B158" 
    xhandlers
    flags 
    probability 4356371958516555498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1505  <|@  <|@
f <@~|@floating>@ <|@
tid i1506 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288019
stableDimension: 0
stamp: i32 [-288019] ⇊00000000fffb9aed ⇈00000000fffb9aed
stampKind: i32
value: int[-288019|0xfffffffffffb9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1503 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1503  <|@  <|@
f <@~|@floating>@ <|@
tid i1504 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310547
stableDimension: 0
stamp: i32 [-310547] ⇊00000000fffb42ed ⇈00000000fffb42ed
stampKind: i32
value: int[-310547|0xfffffffffffb42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1501 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1501  <|@  <|@
f <@~|@floating>@ <|@
tid i1502 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310035
stableDimension: 0
stamp: i32 [-310035] ⇊00000000fffb44ed ⇈00000000fffb44ed
stampKind: i32
value: int[-310035|0xfffffffffffb44ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v1339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid i1498 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249875
stableDimension: 0
stamp: i32 [-249875] ⇊00000000fffc2fed ⇈00000000fffc2fed
stampKind: i32
value: int[-249875|0xfffffffffffc2fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v1329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" "B156" "B155" "B154" 
    successors 
    xhandlers
    flags 
    probability 4356371958516555498
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1490 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-310803 - -249875] ⇊00000000fff800e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1487 
values: i1498 i1502 i1504 i1506 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1487 values: i1498 i1502 i1504 i1506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1497 v1501 v1503 v1505 
=== Succesors ===
next: v1492 
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1497 v1501 v1503 v1505 #next: v1492  <|@  <|@
f <@*|@fixed>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
actionAndReason: i1490 
speculation: a1467 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?50 actionAndReason: i1490 speculation: a1467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1304 
=== Usages ===
=== Predecessor ===
v1306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1304  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 969
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1872 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1872  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/StreamEncoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1901 ?9 ?37 ?41 ?1460 v1902 ?134 v1904 ?50 v1044 v1907 v1908 ?848 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1901 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1872 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Writer.lock
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 1]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1901 
=== Succesors ===
next: v1957 
=== Usages ===
a939 v1957 v1930 v1936 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1901 #next: v1957  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?9 ?41 v1903 a1452 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?9 ?41 v14 v17 i21 v1722 v403 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?9 ?41 v19 i21 v27 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 117
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - 
=== Succesors ===
=== Usages ===
v1470 v1957 i1873 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1872 
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
a1872 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1872 #next: v1274  <|@  <|@
f <@~|@floating>@ <|@
tid a1467 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1470 v1549 v1521 v1492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v19 v25 v27 v38 v46 v775 ?179 v510 v591 v535 v104 v635 v1728 v1582 v1587 v1608 v1720 v1772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i13 
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 13]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v1273 
falseSuccessor: v1271 
=== Usages ===
=== Predecessor ===
v1957 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v1273 #falseSuccessor: v1271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79ceed3c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1471 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid i1472 <|@
result int[-243731|0xfffffffffffc47ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243731
stableDimension: 0
stamp: i32 [-243731] ⇊00000000fffc47ed ⇈00000000fffc47ed
stampKind: i32
value: int[-243731|0xfffffffffffc47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1273 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243731|0xfffffffffffc47ed]] destination: B1 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1873 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1873  <|@  <|@
f <@~|@floating>@ <|@
tid v1903 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1873 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1903 
=== Succesors ===
next: v1282 
=== Usages ===
v17 v1726 v386 
=== Predecessor ===
v1271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1903 #next: v1282  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1873 
y: i3 
=== Succesors ===
=== Usages ===
v1282 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1873 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v1281 
falseSuccessor: v1279 
=== Usages ===
=== Predecessor ===
i1873 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v1281 #falseSuccessor: v1279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1475 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1475  <|@  <|@
f <@~|@floating>@ <|@
tid i1476 <|@
result int[-245523|0xfffffffffffc40ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245523
stableDimension: 0
stamp: i32 [-245523] ⇊00000000fffc40ed ⇈00000000fffc40ed
stampKind: i32
value: int[-245523|0xfffffffffffc40ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245523|0xfffffffffffc40ed]] destination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1286 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i13 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 23]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v1285 
falseSuccessor: v1283 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v1285 #falseSuccessor: v1283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1477 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1477  <|@  <|@
f <@~|@floating>@ <|@
tid i1478 <|@
result int[-245779|0xfffffffffffc3fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245779
stableDimension: 0
stamp: i32 [-245779] ⇊00000000fffc3fed ⇈00000000fffc3fed
stampKind: i32
value: int[-245779|0xfffffffffffc3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245779|0xfffffffffffc3fed]] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1290 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1290  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 28]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v403 v25 v386 v1724 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1873 
y: i21 
=== Succesors ===
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1873 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 31]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v1289 
falseSuccessor: v1287 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v1289 #falseSuccessor: v1287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid i1480 <|@
result int[-246035|0xfffffffffffc3eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246035
stableDimension: 0
stamp: i32 [-246035] ⇊00000000fffc3eed ⇈00000000fffc3eed
stampKind: i32
value: int[-246035|0xfffffffffffc3eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246035|0xfffffffffffc3eed]] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1294 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1294  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i21 
y: i13 
=== Succesors ===
=== Usages ===
v1294 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i21 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v1293 
falseSuccessor: v1291 
=== Usages ===
=== Predecessor ===
v1287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v1293 #falseSuccessor: v1291  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1481 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
result int[-246291|0xfffffffffffc3ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246291
stableDimension: 0
stamp: i32 [-246291] ⇊00000000fffc3ded ⇈00000000fffc3ded
stampKind: i32
value: int[-246291|0xfffffffffffc3ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246291|0xfffffffffffc3ded]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:119) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1298 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1298  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:122) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i13 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:122) [bci: 49]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v1297 
falseSuccessor: v1295 
=== Usages ===
=== Predecessor ===
v1291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v1297 #falseSuccessor: v1295  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:122) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1483 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid i1484 <|@
result int[-246547|0xfffffffffffc3ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246547
stableDimension: 0
stamp: i32 [-246547] ⇊00000000fffc3ced ⇈00000000fffc3ced
stampKind: i32
value: int[-246547|0xfffffffffffc3ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246547|0xfffffffffffc3ced]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:122) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1302 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1302  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i21 
y: i3 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i21 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v1301 
falseSuccessor: v1299 
=== Usages ===
=== Predecessor ===
v1295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v1301 #falseSuccessor: v1299  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1485 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1485  <|@  <|@
f <@~|@floating>@ <|@
tid i1486 <|@
result int[-246803|0xfffffffffffc3bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246803
stableDimension: 0
stamp: i32 [-246803] ⇊00000000fffc3bed ⇈00000000fffc3bed
stampKind: i32
value: int[-246803|0xfffffffffffc3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246803|0xfffffffffffc3bed]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B11" "B13" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1468 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-246803 - -240907] ⇊00000000fffc00e5 ⇈00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1464 
values: i1472 i1476 i1478 i1480 i1482 i1484 i1486 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1464 values: i1472 i1476 i1478 i1480 i1482 i1484 i1486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1471 v1475 v1477 v1479 v1481 v1483 v1485 
=== Succesors ===
next: v1470 
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1471 v1475 v1477 v1479 v1481 v1483 v1485 #next: v1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1468 
speculation: a1467 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1468 speculation: a1467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1648 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1648  <|@  <|@
f <@~|@floating>@ <|@
tid v1936 <|@
result [v4|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
j1648 j1790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1648 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:230) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1936 
=== Succesors ===
next: j1556 
=== Usages ===
j1558 j1562 j1578 i1586 j1595 j1612 v1641 v1935 
=== Predecessor ===
v1299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1936 #next: j1556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1556 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:232) [bci: 18]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j1557 
=== Usages ===
v1594 v1933 j1615 v1629 v1652 
=== Predecessor ===
j1648 >@ <|@
instruction <@BeginLockScope|@org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j1557  <|@  <|@
f <@~|@floating>@ <|@
tid a939 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 1]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1872 
=== Succesors ===
=== Usages ===
v1629 ?9 ?9 ?41 ?41 ?88 ?88 j1571 ?33 v1765 j1769 v1777 v1620 v1594 j1557 v1566 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1557 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:234) [bci: 24]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a939 
=== Succesors ===
next: v1874 
=== Usages ===
v1934 
=== Predecessor ===
j1556 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a939 #next: v1874  <|@  <|@
f <@~|@floating>@ <|@
tid v1930 <|@
result [v4|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
v1874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1874 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1930 
=== Succesors ===
next: j1649 
=== Usages ===
v1931 
=== Predecessor ===
j1557 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1930 #next: j1649  <|@  <|@
f <@~|@floating>@ <|@
tid v1931 <|@
result [v11|DWORD * 8 + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1874 
=== Succesors ===
=== Usages ===
j1649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1649 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:314) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1931 
=== Succesors ===
next: j1560 
=== Usages ===
j1561 j1595 
=== Predecessor ===
v1874 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1931 #next: j1560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1560 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:315) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v1565 
=== Usages ===
j1561 j1579 
=== Predecessor ===
j1649 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v1565  <|@  <|@
f <@~|@floating>@ <|@
tid j1561 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
=== Inputs ===
x: j1560 
y: j1649 
=== Succesors ===
=== Usages ===
j1562 i1586 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1560 y: j1649  <|@  <|@
f <@~|@floating>@ <|@
tid j1562 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 42]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
=== Inputs ===
x: j1561 
y: j1648 
=== Succesors ===
=== Usages ===
v1633 v1635 v1637 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j1561 y: j1648  <|@  <|@
f <@~|@floating>@ <|@
tid j1632 <|@
result long[-121|0xffffffffffffff87] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:316) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: -121
stableDimension: 0
stamp: i64 [-121] ⇊ffffffffffffff87 ⇈ffffffffffffff87
stampKind: i64
value: long[-121|0xffffffffffffff87]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
x: j1562 
y: j1632 
=== Succesors ===
=== Usages ===
v1565 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1562 y: j1632  <|@  <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?88 ?9 ?41 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 118
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a939 - a939 
monitorIds: v7 
=== Succesors ===
=== Usages ===
v1629 v1304 i1581 i1586 v1594 j1595 i1607 j1615 v1629 v1650 v1651 v1652 v1594 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a939 - a939 monitorIds: v7  <|@  <|@
f <@~|@floating>@ <|@
tid j552 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1752 v1796 i1607 v1651 v1602 v1742 v1757 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1640 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 109]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1641 v1780 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1630 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1558 v1635 j1734 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1634 <|@
result long[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 136]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 5
stableDimension: 0
stamp: i64 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i64
value: long[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1567 v1735 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:320) [bci: 97]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1633 
=== Succesors ===
trueSuccessor: v1564 
falseSuccessor: v1563 
=== Usages ===
=== Predecessor ===
j1560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1633 #trueSuccessor: v1564 #falseSuccessor: v1563  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [v4|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v4|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v11|DWORD * 8 + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = OR (x: r15|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = XOR (x: v13|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v14|QWORD y: -121 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:322) [bci: 100]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1566 
=== Usages ===
=== Predecessor ===
v1565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:324) [bci: 120]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
object: a939 
=== Succesors ===
next: v1660 
=== Usages ===
=== Predecessor ===
v1564 >@ <|@
instruction <@FastAcquireBiasedLock|@org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode>@ object: a939 #next: v1660  <|@  <|@
f <@*|@fixed>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B28" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 125]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1570 
=== Usages ===
=== Predecessor ===
v1565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1570  <|@  <|@
f <@~|@floating>@ <|@
tid j1558 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:310) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j1648 
y: j1630 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j1648 y: j1630  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 142]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1558 
y: j1634 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1558 y: j1634  <|@  <|@
f <@*|@fixed>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:329) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1567 
=== Succesors ===
trueSuccessor: v1569 
falseSuccessor: v1568 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1567 #trueSuccessor: v1569 #falseSuccessor: v1568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = AND v8|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v15|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B27" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 151]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1571 
=== Usages ===
=== Predecessor ===
v1570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1571 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:330) [bci: 152]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a939 
=== Succesors ===
next: v1574 
=== Usages ===
v1932 
=== Predecessor ===
v1569 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a939 #next: v1574  <|@  <|@
f <@~|@floating>@ <|@
tid v1932 <|@
result [v10|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1571 
index: - 
=== Succesors ===
=== Usages ===
i1581 i1586 j1595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 172]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
x: j1562 
y: j1630 
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1562 y: j1630  <|@  <|@
f <@*|@fixed>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:340) [bci: 178]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1635 
=== Succesors ===
trueSuccessor: v1573 
falseSuccessor: v1572 
=== Usages ===
=== Predecessor ===
j1571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1635 #trueSuccessor: v1573 #falseSuccessor: v1572  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v14|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 181]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1577 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1577  <|@  <|@
f <@~|@floating>@ <|@
tid j1636 <|@
result long[768|0x300] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 192]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 768
stableDimension: 0
stamp: i64 [768] ⇊0000000000000300 ⇈0000000000000300
stampKind: i64
value: long[768|0x300]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1637 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 196]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
x: j1562 
y: j1636 
=== Succesors ===
=== Usages ===
v1577 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1562 y: j1636  <|@  <|@
f <@*|@fixed>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:350) [bci: 202]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1637 
=== Succesors ===
trueSuccessor: v1576 
falseSuccessor: v1575 
=== Usages ===
=== Predecessor ===
v1573 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1637 #trueSuccessor: v1576 #falseSuccessor: v1575  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v14|QWORD y: 768 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 205]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1581 
=== Usages ===
=== Predecessor ===
v1577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1581  <|@  <|@
f <@~|@floating>@ <|@
tid j1638 <|@
result long[895|0x37f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 895
stableDimension: 0
stamp: i64 [895] ⇊000000000000037f ⇈000000000000037f
stampKind: i64
value: long[895|0x37f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1578 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:357) [bci: 226]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64 [0 - 895] ⇈000000000000037f
=== Inputs ===
x: j1648 
y: j1638 
=== Succesors ===
=== Usages ===
j1579 i1581 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j1648 y: j1638  <|@  <|@
f <@~|@floating>@ <|@
tid j1579 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:358) [bci: 235]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
=== Inputs ===
x: j1560 
y: j1578 
=== Succesors ===
=== Usages ===
i1581 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1560 y: j1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1581 <|@
result INTERIOR_MATCH <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1: v0|QWORD[.] a2: v1|QWORD[.] i3: v2|DWORD i4: v3|DWORD a939: v10|QWORD[.] - 
locks: a939: v10|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 276]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1932 
expectedValue: j1578 
newValue: j1579 
stateAfter: ?9 
=== Succesors ===
next: v1585 
=== Usages ===
v1582 
=== Predecessor ===
v1576 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1932 expectedValue: j1578 newValue: j1579 stateAfter: ?9 #next: v1585  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1581 
y: i13 
=== Succesors ===
=== Usages ===
v1585 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1581 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1585 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:361) [bci: 284]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v1582 
=== Succesors ===
trueSuccessor: v1583 
falseSuccessor: v1584 
=== Usages ===
=== Predecessor ===
i1581 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1582 #trueSuccessor: v1583 #falseSuccessor: v1584  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND v8|QWORD y: 895 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = OR (x: r15|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v10|QWORD[.]], cmpValue: rax|QWORD, newValue: v17|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:370) [bci: 308]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v1585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1591  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1592 
=== Predecessor ===
v1583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:363) [bci: 287]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1661 
=== Usages ===
=== Predecessor ===
v1585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1661  <|@  <|@
f <@*|@fixed>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B26" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:379) [bci: 330]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1586 
=== Usages ===
=== Predecessor ===
v1577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1586 <|@
result INTERIOR_MATCH <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1: v0|QWORD[.] a2: v1|QWORD[.] i3: v2|DWORD i4: v3|DWORD a939: v10|QWORD[.] - 
locks: a939: v10|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 365]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1932 
expectedValue: j1648 
newValue: j1561 
stateAfter: ?9 
=== Succesors ===
next: v1590 
=== Usages ===
v1587 
=== Predecessor ===
v1575 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1932 expectedValue: j1648 newValue: j1561 stateAfter: ?9 #next: v1590  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1586 
y: i13 
=== Succesors ===
=== Usages ===
v1590 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1586 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1590 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:381) [bci: 373]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v1587 
=== Succesors ===
trueSuccessor: v1588 
falseSuccessor: v1589 
=== Usages ===
=== Predecessor ===
i1586 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1587 #trueSuccessor: v1588 #falseSuccessor: v1589  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v10|QWORD[.]], cmpValue: rax|QWORD, newValue: v13|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B23 -> B24 falseDestination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:390) [bci: 397]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1593 
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1593  <|@  <|@
f <@*|@fixed>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1592 
=== Predecessor ===
v1588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 416]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1591 v1593 
=== Succesors ===
next: v1594 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1591 v1593 #next: v1594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1594 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1: v0|QWORD[.] a2: v1|QWORD[.] i3: v2|DWORD i4: v3|DWORD a939: v10|QWORD[.] - 
locks: a939: v10|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:394) [bci: 421]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: ?9 
stateDuring: ?9 
arguments: a939 j1556 
=== Succesors ===
next: v1663 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?9 stateDuring: ?9 arguments: a939 j1556 #next: v1663  <|@  <|@
f <@*|@fixed>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B41" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:383) [bci: 376]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1662 
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1662  <|@  <|@
f <@*|@fixed>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B29" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 426]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1595 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1595 <|@
result v18|QWORD <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1: v0|QWORD[.] a2: v1|QWORD[.] i3: v2|DWORD i4: v3|DWORD a939: v10|QWORD[.] - 
locks: a939: v10|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:405) [bci: 440]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1932 
expectedValue: j1648 
newValue: j1649 
stateAfter: ?9 
=== Succesors ===
next: v1596 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v1932 expectedValue: j1648 newValue: j1649 stateAfter: ?9 #next: v1596  <|@  <|@
f <@*|@fixed>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
j1595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v10|QWORD[.]], cmpValue: rax|QWORD, newValue: v12|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterBiased(MonitorSnippets.java:419) [bci: 460]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1597 
=== Usages ===
=== Predecessor ===
v1570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1597  <|@  <|@
f <@*|@fixed>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 83]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
v1568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:242) [bci: 86]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1596 v1597 
=== Succesors ===
next: v1600 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1596 v1597 #next: v1600  <|@  <|@
f <@~|@floating>@ <|@
tid v1933 <|@
result [v9|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1556 
index: - 
=== Succesors ===
=== Usages ===
v1650 v1651 v1652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 113]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
x: j1648 
y: j1640 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1648 y: j1640  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:247) [bci: 119]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1641 
=== Succesors ===
trueSuccessor: v1598 
falseSuccessor: v1599 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1641 #trueSuccessor: v1598 #falseSuccessor: v1599  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v8|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 141]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1650 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1650  <|@  <|@
f <@~|@floating>@ <|@
tid j1643 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1612 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:254) [bci: 149]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j1648 
y: j1643 
=== Succesors ===
=== Usages ===
j1615 v1616 v1650 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1648 y: j1643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1650 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1: v0|QWORD[.] a2: v1|QWORD[.] i3: v2|DWORD i4: v3|DWORD a939: v10|QWORD[.] - 
locks: a939: v10|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:258) [bci: 176]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1933 
value: j1612 
stateAfter: ?9 
lastLocationAccess: - 
=== Succesors ===
next: v1613 
=== Usages ===
=== Predecessor ===
v1598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1933 value: j1612 stateAfter: ?9 lastLocationAccess: - #next: v1613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:261) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1615 
=== Usages ===
=== Predecessor ===
v1650 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j1615  <|@  <|@
f <@~|@floating>@ <|@
tid v1934 <|@
result [v10|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1557 
index: - 
=== Succesors ===
=== Usages ===
j1615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1557 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1615 <|@
result v20|QWORD <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1: v0|QWORD[.] a2: v1|QWORD[.] i3: v2|DWORD i4: v3|DWORD a939: v10|QWORD[.] - 
locks: a939: v10|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:265) [bci: 199]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1934 
expectedValue: j1612 
newValue: j1556 
stateAfter: ?9 
=== Succesors ===
next: v1619 
=== Usages ===
v1616 j1622 
=== Predecessor ===
v1613 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v1934 expectedValue: j1612 newValue: j1556 stateAfter: ?9 #next: v1619  <|@  <|@
f <@~|@floating>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 216]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1612 
y: j1615 
=== Succesors ===
=== Usages ===
v1619 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1612 y: j1615  <|@  <|@
f <@*|@fixed>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:266) [bci: 222]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1616 
=== Succesors ===
trueSuccessor: v1618 
falseSuccessor: v1617 
=== Usages ===
=== Predecessor ===
j1615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1616 #trueSuccessor: v1618 #falseSuccessor: v1617  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = OR v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v10|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:267) [bci: 225]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1620 
=== Usages ===
=== Predecessor ===
v1619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode.mark(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:269) [bci: 245]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
object: a939 
=== Succesors ===
next: v1657 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@AcquiredCASLock|@org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode>@ object: a939 #next: v1657  <|@  <|@
f <@*|@fixed>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:272) [bci: 249]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1621 
=== Usages ===
=== Predecessor ===
v1619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1621 <|@
result rsp|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:289) [bci: 273]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v1625 
=== Usages ===
j1622 
=== Predecessor ===
v1617 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v1625  <|@  <|@
f <@~|@floating>@ <|@
tid j1622 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 297]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: i64
=== Inputs ===
x: j1615 
y: j1621 
=== Succesors ===
=== Usages ===
v1645 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1615 y: j1621  <|@  <|@
f <@~|@floating>@ <|@
tid j1644 <|@
result long[-4089|0xfffffffffffff007] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 305]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089] ⇊fffffffffffff007 ⇈fffffffffffff007
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 312]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
x: j1622 
y: j1644 
=== Succesors ===
=== Usages ===
v1625 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1622 y: j1644  <|@  <|@
f <@*|@fixed>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:290) [bci: 318]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1645 
=== Succesors ===
trueSuccessor: v1624 
falseSuccessor: v1623 
=== Usages ===
=== Predecessor ===
j1621 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1645 #trueSuccessor: v1624 #falseSuccessor: v1623  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v20|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v21|QWORD y: -4089 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 321]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1651 
=== Usages ===
=== Predecessor ===
v1625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1651 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1: v0|QWORD[.] a2: v1|QWORD[.] i3: v2|DWORD i4: v3|DWORD a939: v10|QWORD[.] - 
locks: a939: v10|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:292) [bci: 335]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1933 
value: j552 
stateAfter: ?9 
lastLocationAccess: - 
=== Succesors ===
next: v1658 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1933 value: j552 stateAfter: ?9 lastLocationAccess: - #next: v1658  <|@  <|@
f <@*|@fixed>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:297) [bci: 358]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1628 
=== Usages ===
=== Predecessor ===
v1625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1628  <|@  <|@
f <@*|@fixed>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1627 
=== Predecessor ===
v1623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B39" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 122]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1652 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1: v0|QWORD[.] a2: v1|QWORD[.] i3: v2|DWORD i4: v3|DWORD a939: v10|QWORD[.] - 
locks: a939: v10|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:439) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1933 
value: j1556 
stateAfter: ?9 
lastLocationAccess: - 
=== Succesors ===
next: j1653 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1933 value: j1556 stateAfter: ?9 lastLocationAccess: - #next: j1653  <|@  <|@
f <@~|@floating>@ <|@
tid v1935 <|@
result [v8|QWORD + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
i1607 j1653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1653 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:443) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1935 
=== Succesors ===
next: v1605 
=== Usages ===
v1602 
=== Predecessor ===
v1652 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1935 #next: v1605  <|@  <|@
f <@~|@floating>@ <|@
tid v1602 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1653 
y: j552 
=== Succesors ===
=== Usages ===
v1605 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1653 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1605 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:444) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1602 
=== Succesors ===
trueSuccessor: v1604 
falseSuccessor: v1603 
=== Usages ===
=== Predecessor ===
j1653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1602 #trueSuccessor: v1604 #falseSuccessor: v1603  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v8|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1606 
=== Usages ===
=== Predecessor ===
v1605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1606 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 74]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: i1607 
=== Usages ===
i1607 
=== Predecessor ===
v1604 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: i1607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1607 <|@
result INTERIOR_MATCH <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1: v0|QWORD[.] a2: v1|QWORD[.] i3: v2|DWORD i4: v3|DWORD a939: v10|QWORD[.] - 
locks: a939: v10|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1935 
expectedValue: j552 
newValue: j1606 
stateAfter: ?9 
=== Succesors ===
next: v1611 
=== Usages ===
v1608 
=== Predecessor ===
j1606 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1935 expectedValue: j552 newValue: j1606 stateAfter: ?9 #next: v1611  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1607 
y: i13 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1607 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1611 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:446) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1608 
=== Succesors ===
trueSuccessor: v1609 
falseSuccessor: v1610 
=== Usages ===
=== Predecessor ===
i1607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1608 #trueSuccessor: v1609 #falseSuccessor: v1610  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:452) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1626 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1626  <|@  <|@
f <@*|@fixed>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1627 
=== Predecessor ===
v1609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:448) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1656 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:456) [bci: 132]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 134]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1646 
=== Usages ===
=== Predecessor ===
v1605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1646  <|@  <|@
f <@*|@fixed>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:249) [bci: 137]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1627 
=== Predecessor ===
v1603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B34" "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 377]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1626 v1628 v1646 
=== Succesors ===
next: v1629 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1626 v1628 v1646 #next: v1629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1629 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: a1: v0|QWORD[.] a2: v1|QWORD[.] i3: v2|DWORD i4: v3|DWORD a939: v10|QWORD[.] - 
locks: a939: v10|QWORD[.] 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:302) [bci: 383]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: ?9 
stateDuring: ?9 
arguments: a939 j1556 
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1627 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?9 stateDuring: ?9 arguments: a939 j1556 #next: v1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B31" "B33" "B40" "B16" "B22" "B26" "B25" 
    successors "B42" "B159" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1656 v1657 v1658 v1659 v1660 v1661 v1662 v1663 
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1656 v1657 v1658 v1659 v1660 v1661 v1662 v1663 #next: v949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1875 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i1875  <|@  <|@
f <@~|@floating>@ <|@
tid v1902 <|@
result [v0|QWORD[.] + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1875 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.isOpen
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1902 
=== Succesors ===
next: v950 
=== Usages ===
i948 
=== Predecessor ===
v949 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1902 #next: v950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1876 
=== Usages ===
=== Predecessor ===
i1875 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i1876  <|@  <|@
f <@~|@floating>@ <|@
tid v1904 <|@
result [v0|QWORD[.] + 23] <|@
d <@d|@=== Debug Properties ===
displacement: 23
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1876 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.haveLeftoverChar
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1904 
=== Succesors ===
next: v1306 
=== Usages ===
i968 
=== Predecessor ===
v950 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1904 #next: v1306  <|@  <|@
f <@~|@floating>@ <|@
tid i968 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1876 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1876  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i968 
y: i13 
=== Succesors ===
=== Usages ===
v1306 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i968 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v1303 
falseSuccessor: v1305 
=== Usages ===
=== Predecessor ===
i1876 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v1303 #falseSuccessor: v1305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB [v0|QWORD[.] + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1310 
=== Usages ===
=== Predecessor ===
v1306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1310  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 1
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 118
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a939 - a939 
monitorIds: v7 
=== Succesors ===
=== Usages ===
?37 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a939 - a939 monitorIds: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i948 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1875 
=== Succesors ===
=== Usages ===
v38 ?37 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1875  <|@  <|@
tid ?37 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<StreamEncoder.ensureOpen()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 1]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 44
stackSize: 1
=== Inputs ===
outerFrameState: ?41 
values: a1 i948 
=== Succesors ===
=== Usages ===
v1308 a1685 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?41 values: a1 i948  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i948 
y: i13 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i948 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1307 
=== Usages ===
=== Predecessor ===
v1303 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v1309 #falseSuccessor: v1307  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1308 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 951
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?37 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -243475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:4, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1673 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1673 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1692 
=== Usages ===
v1937 v1938 
=== Predecessor ===
v1307 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1692  <|@  <|@
f <@~|@floating>@ <|@
tid v1937 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1673 
index: - 
=== Succesors ===
=== Usages ===
j1692 v1694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1673 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1692 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1937 
=== Succesors ===
next: j1693 
=== Usages ===
j1804 j1698 v1948 
=== Predecessor ===
j1673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1937 #next: j1693  <|@  <|@
f <@~|@floating>@ <|@
tid v1938 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1673 
index: - 
=== Succesors ===
=== Usages ===
j1693 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1673 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1693 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1938 
=== Succesors ===
next: v1681 
=== Usages ===
v1678 
=== Predecessor ===
j1692 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1938 #next: v1681  <|@  <|@
f <@~|@floating>@ <|@
tid j1803 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1804 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1804 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1692 
y: j1803 
=== Succesors ===
=== Usages ===
v1678 v1694 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1692 y: j1803  <|@  <|@
f <@~|@floating>@ <|@
tid v1678 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1693 
y: j1804 
=== Succesors ===
=== Usages ===
v1681 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1693 y: j1804  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:281) [bci: 116]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 i364 v109 v1126 v1096 i324 i291 i292 v183 a1685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1681 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1678 
=== Succesors ===
trueSuccessor: v1679 
falseSuccessor: v1680 
=== Usages ===
=== Predecessor ===
j1693 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1678 #trueSuccessor: v1679 #falseSuccessor: v1680  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v25|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1685 
=== Usages ===
=== Predecessor ===
v1681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1685  <|@  <|@
f <@~|@floating>@ <|@
tid v1671 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1806 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1685 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?37 
arguments: v1671 i1806 i74 
=== Succesors ===
next: j1686 
=== Usages ===
j1686 
=== Predecessor ===
v1679 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?37 arguments: v1671 i1806 i74 #next: j1686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1686 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1685 
=== Succesors ===
next: v1699 
=== Usages ===
j1698 
=== Predecessor ===
a1685 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1685 #next: v1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1696 
=== Predecessor ===
j1686 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 9] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1694 
=== Usages ===
=== Predecessor ===
v1681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1937 
value: j1804 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1690 
=== Usages ===
=== Predecessor ===
v1680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1937 value: j1804 stateAfter: - lastLocationAccess: - #next: v1690  <|@  <|@
f <@~|@floating>@ <|@
tid v1948 <|@
result [v25|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1692 
index: - 
=== Succesors ===
=== Usages ===
v1690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1692 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1948 
=== Succesors ===
next: v1697 
=== Usages ===
=== Predecessor ===
v1694 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1948 #next: v1697  <|@  <|@
f <@*|@fixed>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1696 
=== Predecessor ===
v1690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1698 <|@
result v29|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1696 
values: j1692 j1686 
=== Succesors ===
=== Usages ===
v1941 v1940 a1448 v1949 v1950 v1951 v1952 v1953 v1954 v1955 v1956 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1696 values: j1692 j1686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1697 v1699 
=== Succesors ===
next: a1448 
=== Usages ===
j1698 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1697 v1699 #next: a1448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1448 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1698 
=== Succesors ===
next: j1709 
=== Usages ===
a1455 
=== Predecessor ===
v1696 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1698 #next: j1709  <|@  <|@
f <@~|@floating>@ <|@
tid v1704 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1705 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1705 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1704 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1704  <|@  <|@
f <@~|@floating>@ <|@
tid v1939 <|@
result [v31|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1705 
index: - 
=== Succesors ===
=== Usages ===
j1709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1705 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1709 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1939 
=== Succesors ===
next: v1710 
=== Usages ===
v1710 
=== Predecessor ===
a1448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1939 #next: v1710  <|@  <|@
f <@~|@floating>@ <|@
tid v1940 <|@
result [v29|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1940 
value: j1709 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1713 
=== Usages ===
=== Predecessor ===
j1709 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1940 value: j1709 stateAfter: - lastLocationAccess: - #next: v1713  <|@  <|@
f <@~|@floating>@ <|@
tid v1941 <|@
result [v29|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1809 <|@
result meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1713 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1941 
value: v1809 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1718 
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1941 value: v1809 stateAfter: - lastLocationAccess: - #next: v1718  <|@  <|@
f <@~|@floating>@ <|@
tid v1949 <|@
result [v29|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1716 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1949 
value: j1716 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1720 
=== Usages ===
=== Predecessor ===
v1713 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1949 value: j1716 stateAfter: - lastLocationAccess: - #next: v1720  <|@  <|@
f <@~|@floating>@ <|@
tid v1950 <|@
result [v29|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1950 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1722 
=== Usages ===
=== Predecessor ===
v1718 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1950 value: i13 stateAfter: - lastLocationAccess: - #next: v1722  <|@  <|@
f <@~|@floating>@ <|@
tid v1951 <|@
result [v29|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1951 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1724 
=== Usages ===
=== Predecessor ===
v1720 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1951 value: i3 stateAfter: - lastLocationAccess: - #next: v1724  <|@  <|@
f <@~|@floating>@ <|@
tid v1952 <|@
result [v29|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1724 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1952 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1952 value: i21 stateAfter: - lastLocationAccess: - #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid v1953 <|@
result [v29|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1953 
value: i1873 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1953 value: i1873 stateAfter: - lastLocationAccess: - #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid v1954 <|@
result [v29|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1954 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1731 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1954 value: i13 stateAfter: - lastLocationAccess: - #next: v1731  <|@  <|@
f <@~|@floating>@ <|@
tid v1955 <|@
result [v29|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1729 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1955 
value: i1729 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1733 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1955 value: i1729 stateAfter: - lastLocationAccess: - #next: v1733  <|@  <|@
f <@~|@floating>@ <|@
tid v1956 <|@
result [v29|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: - 
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1452 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n# [C
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1956 
value: a1452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1455 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1956 value: a1452 stateAfter: - lastLocationAccess: - #next: a1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1455 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1448 
=== Succesors ===
next: v1456 
=== Usages ===
v1920 ?885 v1905 v1906 v1922 v1923 v1924 v1040 
=== Predecessor ===
v1733 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1448 #next: v1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
a1455 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v1456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [v31|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*]], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v29|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 12], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v29|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 44], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B104" 
    successors "B49" "B157" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0000237700485504
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: a1877 
=== Usages ===
v66 v78 v853 v1440 v1435 v1430 v1425 v1420 v1415 v1410 v1329 v1404 v1339 v1344 v1349 v1354 v1359 v1364 v1370 v1398 v1380 v1386 v1392 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: a1877  <|@  <|@
f <@~|@floating>@ <|@
tid v1922 <|@
result [v30|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
a1877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1877 <|@
result v35|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1922 
=== Succesors ===
next: v1958 
=== Usages ===
v1958 a1128 v1910 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1922 #next: v1958  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 60
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 1
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 125
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - a939 - a939 
monitorIds: v7 
=== Succesors ===
=== Usages ===
?134 ?50 ?1460 ?848 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a939 - a939 monitorIds: v7  <|@  <|@
tid a554 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@67262f52
hasIdentity: true
objectId: 0
stamp: a!# Ljava/nio/HeapCharBuffer;
type: HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?304 ?885 ?50 ?848 ?1460 ?134 ?299 ?263 ?179 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?885 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a554 
materializedValue: a1455 
=== Succesors ===
=== Usages ===
?50 ?299 ?1459 ?263 ?1460 ?368 ?304 ?848 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a554 materializedValue: a1455  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?88 
values: a1 - - - a554 - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1492 v1958 a1879 v1959 v1960 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: a1 - - - a554 - virtualObjectMappings: ?885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
object: a1877 
=== Succesors ===
next: a1878 
=== Usages ===
=== Predecessor ===
a1877 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?50 object: a1877 #next: a1878  <|@  <|@
f <@~|@floating>@ <|@
tid v1908 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1878 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1878 <|@
result v36|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.bb
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: n Ljava/nio/ByteBuffer;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1908 
=== Succesors ===
next: a1879 
=== Usages ===
a983 v1929 v1921 v1925 v1926 v1927 v1928 
=== Predecessor ===
v1958 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1908 #next: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid v1925 <|@
result [v36|DWORD[.] * 8 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
a1879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1879 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?50 
guard: - 
address: v1925 
=== Succesors ===
next: v1959 
=== Usages ===
?304 v1959 v1912 v1913 v1915 v1917 v1918 v1919 ?299 ?263 v1961 
=== Predecessor ===
a1878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?50 guard: - address: v1925 #next: v1959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
object: a1879 
=== Succesors ===
next: i1880 
=== Usages ===
=== Predecessor ===
a1879 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?50 object: a1879 #next: i1880  <|@  <|@
f <@~|@floating>@ <|@
tid v1905 <|@
result [v30|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
i1880 i1897 v1083 i1900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1880 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1905 
=== Succesors ===
next: i1881 
=== Usages ===
v97 i777 
=== Predecessor ===
v1959 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1905 #next: i1881  <|@  <|@
f <@~|@floating>@ <|@
tid v1906 <|@
result [v30|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
i1881 i1896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1881 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1906 
=== Succesors ===
next: v1330 
=== Usages ===
v97 i850 v508 i778 
=== Predecessor ===
i1880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1906 #next: v1330  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1880 
y: i1881 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1880 y: i1881  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v1326 
falseSuccessor: v1329 
=== Usages ===
=== Predecessor ===
i1881 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v1326 #falseSuccessor: v1329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v30|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v35|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v37|DWORD[.] = MOV [v36|DWORD[.] * 8 + 44] size: DWORD state [bci:22, 60] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v30|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v30|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B156" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1882 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1882  <|@  <|@
f <@~|@floating>@ <|@
tid v1907 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1882 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.encoder
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 31]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: n# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1907 
=== Succesors ===
next: v1960 
=== Usages ===
?299 v1960 v1909 ?304 ?179 ?263 
=== Predecessor ===
v1326 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1907 #next: v1960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
object: a1882 
=== Succesors ===
next: i1883 
=== Usages ===
=== Predecessor ===
a1882 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?50 object: a1882 #next: i1883  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
result [v30|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
i1883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1883 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1923 
=== Succesors ===
next: v1340 
=== Usages ===
i1131 
=== Predecessor ===
v1960 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1923 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid i1131 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1883 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1883  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1131 
y: i13 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1131 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v635 
=== Succesors ===
trueSuccessor: v1336 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
i1883 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v635 #trueSuccessor: v1336 #falseSuccessor: v1339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v40|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVZXB [v30|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1884 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1884  <|@  <|@
f <@~|@floating>@ <|@
tid v1926 <|@
result [v36|DWORD[.] * 8 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1884 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1926 
=== Succesors ===
next: v1345 
=== Usages ===
i1140 
=== Predecessor ===
v1336 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1926 #next: v1345  <|@  <|@
f <@~|@floating>@ <|@
tid i1140 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1884 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1884  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1140 
y: i13 
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1140 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v1341 
falseSuccessor: v1344 
=== Usages ===
=== Predecessor ===
i1884 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v1341 #falseSuccessor: v1344  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB [v36|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1885 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1885  <|@  <|@
f <@~|@floating>@ <|@
tid v1909 <|@
result [v40|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1882 
=== Succesors ===
=== Usages ===
i1885 v1096 v1126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1885 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 12]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1909 
=== Succesors ===
next: i1886 
=== Usages ===
v104 v109 
=== Predecessor ===
v1341 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1909 #next: i1886  <|@  <|@
f <@~|@floating>@ <|@
tid v1927 <|@
result [v36|DWORD[.] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1886 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1927 
=== Succesors ===
next: i1887 
=== Usages ===
i780 i782 i489 
=== Predecessor ===
i1885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1927 #next: i1887  <|@  <|@
f <@~|@floating>@ <|@
tid v1929 <|@
result [v36|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1887 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1929 
=== Succesors ===
next: i1888 
=== Usages ===
i782 v533 
=== Predecessor ===
i1886 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1929 #next: i1888  <|@  <|@
f <@~|@floating>@ <|@
tid v1928 <|@
result [v36|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1888 v1090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1888 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1928 
=== Succesors ===
next: i1889 
=== Usages ===
i780 
=== Predecessor ===
i1887 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1928 #next: i1889  <|@  <|@
f <@~|@floating>@ <|@
tid v1924 <|@
result [v30|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
i1889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1889 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1924 
=== Succesors ===
next: v1350 
=== Usages ===
i482 i778 i777 
=== Predecessor ===
i1888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1924 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid i782 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i1886 
y: i1887 
=== Succesors ===
=== Usages ===
i784 i337 v317 i845 i845 ?299 ?304 ?263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1886 y: i1887  <|@  <|@
f <@~|@floating>@ <|@
tid i780 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i1886 
y: i1888 
=== Succesors ===
=== Usages ===
i784 ?263 ?263 i844 i268 i1226 v1236 j1240 v1244 i1871 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1886 y: i1888  <|@  <|@
f <@~|@floating>@ <|@
tid i784 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i782 
y: i780 
=== Succesors ===
=== Usages ===
v799 i477 i477 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i782 y: i780  <|@  <|@
f <@~|@floating>@ <|@
tid i778 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i1881 
y: i1889 
=== Succesors ===
=== Usages ===
i783 ?304 v305 v1259 ?299 i1250 ?263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1881 y: i1889  <|@  <|@
f <@~|@floating>@ <|@
tid i777 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i1880 
y: i1889 
=== Succesors ===
=== Usages ===
i783 ?263 i267 j1225 v1233 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1880 y: i1889  <|@  <|@
f <@~|@floating>@ <|@
tid i783 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i778 
y: i777 
=== Succesors ===
=== Usages ===
v799 i477 i844 i477 i1871 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i778 y: i777  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i784 
y: i783 
=== Succesors ===
=== Usages ===
v802 v472 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i784 y: i783  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1885 
y: i74 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1885 y: i74  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9967920114616574
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v1346 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
i1889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v1346 #falseSuccessor: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v40|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV [v36|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v36|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v36|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v30|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = ADD (x: v44|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ADD (x: v46|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SUB (x: v48|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v39|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = ADD (x: v38|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SUB (x: v51|DWORD, ~y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9967920114616574 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607153737222773857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1909 
value: i74 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1909 value: i74 stateAfter: - lastLocationAccess: - #next: v802  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.49439247641649453
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v800 
falseSuccessor: v801 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v800 #falseSuccessor: v801  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v40|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602549443096160386
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v806  <|@  <|@
f <@*|@fixed>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD, v48|DWORD] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602714825633646624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid i1871 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i780 
y: i783 
=== Succesors ===
=== Usages ===
i845 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i780 y: i783  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v801 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = ADD (x: v53|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD, v54|DWORD] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B154" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569543716300940040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1885 
y: i13 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1885 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9999999999999943
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v1349 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v105 #falseSuccessor: v1349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999999999999943 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569543716300939998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1909 
value: i74 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1909 value: i74 stateAfter: - lastLocationAccess: - #next: v472  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.49439247641649453
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v40|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564957155674978818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD, v48|DWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565123077672160186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid i844 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i780 
y: i783 
=== Succesors ===
=== Usages ===
i845 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i780 y: i783  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
v471 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = ADD (x: v49|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD, v55|DWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B53" "B54" 
    successors "B60" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i477 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v475 
values: i783 i784 i784 i783 
=== Succesors ===
=== Usages ===
?263 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v475 values: i783 i784 i784 i783  <|@  <|@
f <@~|@floating>@ <|@
tid i845 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v475 
values: i844 i782 i782 i1871 
=== Succesors ===
=== Usages ===
i1226 v270 v1236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v475 values: i844 i782 i782 i1871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v476 v478 v806 v807 
=== Succesors ===
next: i1890 
=== Usages ===
i477 i845 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v476 v478 v806 v807 #next: i1890  <|@  <|@
f <@~|@floating>@ <|@
tid v1910 <|@
result [v35|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1877 
=== Succesors ===
=== Usages ===
i1890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1890 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1910 
=== Succesors ===
next: v1828 
=== Usages ===
v1233 v1256 j1223 
=== Predecessor ===
v475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1910 #next: v1828  <|@  <|@
f <@~|@floating>@ <|@
tid j1223 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1890 
=== Succesors ===
=== Usages ===
v1232 v1255 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1890  <|@  <|@
f <@~|@floating>@ <|@
tid i1226 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i845 
y: i780 
=== Succesors ===
=== Usages ===
j1227 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i845 y: i780  <|@  <|@
f <@~|@floating>@ <|@
tid j1227 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1226 
=== Succesors ===
=== Usages ===
j1229 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1226  <|@  <|@
f <@~|@floating>@ <|@
tid j1228 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1229 j1252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1229 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1227 
y: j1228 
=== Succesors ===
=== Usages ===
j1230 j1241 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1227 y: j1228  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i780 
y: i845 
=== Succesors ===
=== Usages ===
v1828 v1844 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i780 y: i845  <|@  <|@
tid ?134 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 271
stackSize: 0
=== Inputs ===
outerFrameState: ?88 
values: a1 - - - a554 - 
=== Succesors ===
=== Usages ===
?179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: a1 - - - a554 -  <|@  <|@
f <@~|@floating>@ <|@
tid a983 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: Uncompress
stamp: a Ljava/nio/ByteBuffer;
=== Inputs ===
value: a1878 
=== Succesors ===
=== Usages ===
?263 ?299 ?304 v1040 ?179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1878  <|@  <|@
tid ?179 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a1882 a554 a983 i13 - - - 
=== Succesors ===
=== Usages ===
?380 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a1882 a554 a983 i13 - - -  <|@  <|@
tid ?380 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?179 
values: - - - 
=== Succesors ===
=== Usages ===
?304 ?368 ?263 ?1459 ?299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?179 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a1128 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1877 
=== Succesors ===
=== Usages ===
?299 v1914 v1911 ?304 ?263 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1877  <|@  <|@
f <@*|@fixed>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1236 
=== Succesors ===
trueSuccessor: v1827 
falseSuccessor: v1824 
=== Usages ===
=== Predecessor ===
i1890 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1236 #trueSuccessor: v1827 #falseSuccessor: v1824  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOV [v35|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v57|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVSXD v60|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = DEC v61|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1836 
=== Usages ===
=== Predecessor ===
v1828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1836  <|@  <|@
f <@~|@floating>@ <|@
tid j1225 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i777 
=== Succesors ===
=== Usages ===
j1230 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i777  <|@  <|@
f <@~|@floating>@ <|@
tid j1230 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1225 
y: j1229 
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1225 y: j1229  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1230 
y: j1223 
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1230 y: j1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1232 
=== Succesors ===
trueSuccessor: v1835 
falseSuccessor: v1832 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1232 #trueSuccessor: v1835 #falseSuccessor: v1832  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVSXD v52|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = ADD (x: v65|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1834 
=== Usages ===
=== Predecessor ===
v1836 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1834  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i777 
y: i1890 
=== Succesors ===
=== Usages ===
v1834 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i777 y: i1890  <|@  <|@
f <@*|@fixed>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1233 
=== Succesors ===
trueSuccessor: v1825 
falseSuccessor: v1833 
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1233 #trueSuccessor: v1825 #falseSuccessor: v1833  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1823  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1831 
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1831  <|@  <|@
f <@*|@fixed>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1829 
=== Predecessor ===
v1833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1830 
=== Usages ===
=== Predecessor ===
v1836 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1830  <|@  <|@
f <@*|@fixed>@ <|@
tid v1830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1829 
=== Predecessor ===
v1832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1830 v1831 
=== Succesors ===
next: v1354 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1830 v1831 #next: v1354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B76" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1508 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1508  <|@  <|@
f <@~|@floating>@ <|@
tid i1509 <|@
result int[-253723|0xfffffffffffc20e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253723
stableDimension: 0
stamp: i32 [-253723] ⇊00000000fffc20e5 ⇈00000000fffc20e5
stampKind: i32
value: int[-253723|0xfffffffffffc20e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
v1354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253723|0xfffffffffffc20e5]] destination: B66 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1822 
=== Usages ===
=== Predecessor ===
v1828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1822  <|@  <|@
f <@*|@fixed>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1824 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B62" 
    successors "B69" "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1822 v1823 
=== Succesors ===
next: v1844 
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1822 v1823 #next: v1844  <|@  <|@
f <@*|@fixed>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1236 
=== Succesors ===
trueSuccessor: v1843 
falseSuccessor: v1840 
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1236 #trueSuccessor: v1843 #falseSuccessor: v1840  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1891 
=== Usages ===
=== Predecessor ===
v1844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1891  <|@  <|@
f <@~|@floating>@ <|@
tid v1912 <|@
result [v37|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1879 
=== Succesors ===
=== Usages ===
i1891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1891 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1912 
=== Succesors ===
next: v1852 
=== Usages ===
v1244 j1239 
=== Predecessor ===
v1843 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1912 #next: v1852  <|@  <|@
f <@~|@floating>@ <|@
tid j1240 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i780 
=== Succesors ===
=== Usages ===
j1241 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i780  <|@  <|@
f <@~|@floating>@ <|@
tid j1241 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1229 
y: j1240 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1229 y: j1240  <|@  <|@
f <@~|@floating>@ <|@
tid j1239 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1891 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1891  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1241 
y: j1239 
=== Succesors ===
=== Usages ===
v1852 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1241 y: j1239  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1243 
=== Succesors ===
trueSuccessor: v1851 
falseSuccessor: v1848 
=== Usages ===
=== Predecessor ===
i1891 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1243 #trueSuccessor: v1851 #falseSuccessor: v1848  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD v49|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1850 
=== Usages ===
=== Predecessor ===
v1852 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1850  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i780 
y: i1891 
=== Succesors ===
=== Usages ===
v1850 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i780 y: i1891  <|@  <|@
f <@*|@fixed>@ <|@
tid v1850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1244 
=== Succesors ===
trueSuccessor: v1841 
falseSuccessor: v1849 
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1244 #trueSuccessor: v1841 #falseSuccessor: v1849  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1839 
=== Usages ===
=== Predecessor ===
v1850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1839  <|@  <|@
f <@*|@fixed>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1837 
=== Predecessor ===
v1841 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1847 
=== Usages ===
=== Predecessor ===
v1850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1847  <|@  <|@
f <@*|@fixed>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1845 
=== Predecessor ===
v1849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1846 
=== Usages ===
=== Predecessor ===
v1852 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1846  <|@  <|@
f <@*|@fixed>@ <|@
tid v1846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1845 
=== Predecessor ===
v1848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1846 v1847 
=== Succesors ===
next: v1359 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1846 v1847 #next: v1359  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1514 
=== Usages ===
=== Predecessor ===
v1845 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1514  <|@  <|@
f <@~|@floating>@ <|@
tid i1515 <|@
result int[-259099|0xfffffffffffc0be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -259099
stableDimension: 0
stamp: i32 [-259099] ⇊00000000fffc0be5 ⇈00000000fffc0be5
stampKind: i32
value: int[-259099|0xfffffffffffc0be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
v1359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-259099|0xfffffffffffc0be5]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B66" "B75" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1511 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-259099 - -253723] ⇊00000000fffc00e5 ⇈00000000fffc2be5
valueDescription: i32
=== Inputs ===
merge: v1507 
values: i1509 i1515 
=== Succesors ===
=== Usages ===
v1513 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1507 values: i1509 i1515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1508 v1514 
=== Succesors ===
next: v1513 
=== Usages ===
i1511 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1508 v1514 #next: v1513  <|@  <|@
tid ?263 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 592
stackSize: 2
=== Inputs ===
outerFrameState: ?380 
values: a1882 a554 a983 a1128 i777 i778 a1879 i780 i782 - - - i780 i477 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1513 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?380 values: a1882 a554 a983 a1128 i777 i778 a1879 i780 i782 - - - i780 i477 virtualObjectMappings: ?885  <|@  <|@
f <@~|@floating>@ <|@
tid a1510 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1869499864
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1869499864]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?263 
actionAndReason: i1511 
speculation: a1510 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?263 actionAndReason: i1511 speculation: a1510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1869499864] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: v49|DWORD v56|DWORD 
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] v64|QWORD[.] v52|DWORD v51|DWORD v37|DWORD[.] v49|DWORD v48|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1838 
=== Usages ===
=== Predecessor ===
v1844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1838  <|@  <|@
f <@*|@fixed>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1837 
=== Predecessor ===
v1840 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B71" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1838 v1839 
=== Succesors ===
next: v265 
=== Usages ===
v1248 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1838 v1839 #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid i1152 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
v1837 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD, v49|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B81" 
    successors "B80" "B83" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628637034469872334
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i267 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v266 
values: i777 i292 
=== Succesors ===
=== Usages ===
j1249 v1259 v1911 v1256 i292 i1250 ?299 i302 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v266 values: i777 i292  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v266 
values: i780 i291 
=== Succesors ===
=== Usages ===
v1913 v270 ?299 i303 i291 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v266 values: i780 i291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 28.221435738803496
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v265 
=== Succesors ===
next: v276 
=== Usages ===
i267 i268 v272 v284 v298 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v265 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i845 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i268 y: i845  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9647476131021091
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v271 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v271 #falseSuccessor: v272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|DWORD, v74|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628356995967024841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1892 
=== Usages ===
v1238 v1248 
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1892  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1821 v271 
=== Succesors ===
=== Usages ===
i1892 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1821 v271  <|@  <|@
f <@~|@floating>@ <|@
tid v1911 <|@
result [v64|QWORD[.] + v73|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1128 
index: i267 
=== Succesors ===
=== Usages ===
i1892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1128 index: i267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1892 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1238 
address: v1911 
=== Succesors ===
next: v290 
=== Usages ===
v1153 i1155 
=== Predecessor ===
v271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1238 address: v1911 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1892 
y: i1152 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1892 y: i1152  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9998116902024854
=== Inputs ===
condition: v1153 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
i1892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1153 #trueSuccessor: v280 #falseSuccessor: v284  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVSX [v64|QWORD[.] + v73|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v75|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628355552802487815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1837 v271 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1837 v271  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
result [v74|DWORD + v37|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i268 
index: a1879 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i268 index: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid i1155 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1892 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1248 
address: v1913 
value: i1155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1248 address: v1913 value: i1155 stateAfter: - lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid i291 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i268 
y: i74 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i268 y: i74  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i267 
y: i74 
=== Succesors ===
=== Usages ===
i267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i267 y: i74  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
loopBegin: v266 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v266  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v74|DWORD + v37|DWORD[.] * 8 + 16], y: v75|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v74|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD, v76|DWORD] destination: B81 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572561224097339808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v266 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v266 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607136451636396177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v266 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v266 #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors "B85" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v283 
=== Succesors ===
next: v1860 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v283 #next: v1860  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i267 
y: i778 
=== Succesors ===
=== Usages ===
v1860 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i267 y: i778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1259 
=== Succesors ===
trueSuccessor: v1859 
falseSuccessor: v1856 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1259 #trueSuccessor: v1859 #falseSuccessor: v1856  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1868 
=== Usages ===
=== Predecessor ===
v1860 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1868  <|@  <|@
f <@~|@floating>@ <|@
tid j1249 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i267 
=== Succesors ===
=== Usages ===
j1253 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i267  <|@  <|@
f <@~|@floating>@ <|@
tid i1250 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i778 
y: i267 
=== Succesors ===
=== Usages ===
j1251 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i778 y: i267  <|@  <|@
f <@~|@floating>@ <|@
tid j1251 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1250 
=== Succesors ===
=== Usages ===
j1252 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1250  <|@  <|@
f <@~|@floating>@ <|@
tid j1252 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1251 
y: j1228 
=== Succesors ===
=== Usages ===
j1253 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1251 y: j1228  <|@  <|@
f <@~|@floating>@ <|@
tid j1253 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1249 
y: j1252 
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1249 y: j1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1253 
y: j1223 
=== Succesors ===
=== Usages ===
v1868 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1253 y: j1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v1868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1255 
=== Succesors ===
trueSuccessor: v1867 
falseSuccessor: v1864 
=== Usages ===
=== Predecessor ===
v1859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1255 #trueSuccessor: v1867 #falseSuccessor: v1864  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOVSXD v73|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = SUB (x: v51|DWORD, ~y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVSXD v79|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = DEC v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = ADD (x: v78|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1866 
=== Usages ===
=== Predecessor ===
v1868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1866  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i267 
y: i1890 
=== Succesors ===
=== Usages ===
v1866 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i267 y: i1890  <|@  <|@
f <@*|@fixed>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1256 
=== Succesors ===
trueSuccessor: v1857 
falseSuccessor: v1865 
=== Usages ===
=== Predecessor ===
v1867 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1256 #trueSuccessor: v1857 #falseSuccessor: v1865  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1855 
=== Usages ===
=== Predecessor ===
v1866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1855  <|@  <|@
f <@*|@fixed>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1863 
=== Usages ===
=== Predecessor ===
v1866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1863  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1861 
=== Predecessor ===
v1865 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1862 
=== Usages ===
=== Predecessor ===
v1868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1862  <|@  <|@
f <@*|@fixed>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1861 
=== Predecessor ===
v1864 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1862 v1863 
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1862 v1863 #next: v1364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1861 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1362  <|@  <|@
tid ?299 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?380 
values: a1882 a554 a983 a1128 i267 i778 a1879 i268 i782 - - - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?380 values: a1882 a554 a983 a1128 i267 i778 a1879 i268 i782 - - - virtualObjectMappings: ?885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1022
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
reason: BoundsCheckException
speculation: Object[d.a@795456897]
stamp: void
=== Inputs ===
stateBefore: ?299 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?299  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@795456897] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -261659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] v64|QWORD[.] v73|DWORD v51|DWORD v37|DWORD[.] v74|DWORD v48|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1854 
=== Usages ===
=== Predecessor ===
v1860 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B87" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1854 v1855 
=== Succesors ===
next: v300 
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1854 v1855 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v1853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|DWORD, v74|DWORD] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B98" "B115" 
    successors "B95" "B122" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607879352386270549
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i302 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v301 
values: i267 i364 i364 
=== Succesors ===
=== Usages ===
?304 v305 i364 v1914 v1040 i482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: i267 i364 i364  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v301 
values: i268 i324 i378 
=== Succesors ===
=== Usages ===
?304 v1052 v317 v1040 i324 v1915 i378 i337 v1917 i377 i489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: i268 i324 i378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1547228949992876
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v300 
=== Succesors ===
next: v311 
=== Usages ===
i302 i303 v307 v319 v365 v379 v1409 v1369 v1385 v1391 v1397 v1403 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v300 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i302 
y: i778 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i302 y: i778  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.13401192679415996
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v306 #falseSuccessor: v307  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|DWORD, y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B94 -> B95 falseDestination: B94 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594743488101053250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1893 
=== Usages ===
v1261 
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1893  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1853 v306 
=== Succesors ===
=== Usages ===
i1893 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1853 v306  <|@  <|@
f <@~|@floating>@ <|@
tid v1914 <|@
result [v64|QWORD[.] + v84|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1128 
index: i302 
=== Succesors ===
=== Usages ===
i1893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1128 index: i302  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1893 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1261 
address: v1914 
=== Succesors ===
next: i1894 
=== Usages ===
i1029 
=== Predecessor ===
v306 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1261 address: v1914 #next: i1894  <|@  <|@
f <@~|@floating>@ <|@
tid v1961 <|@
result [v37|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1879 
=== Succesors ===
=== Usages ===
i1894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1894 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: v316 
=== Usages ===
v1052 v1072 
=== Predecessor ===
i1893 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i1894 
=== Succesors ===
=== Usages ===
v1405 v1371 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i303 y: i1894  <|@  <|@
f <@~|@floating>@ <|@
tid i1029 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1893 
=== Succesors ===
=== Usages ===
v313 i325 i350 v330 i358 v496 i343 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1893  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i359 v313 i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1029 
y: i278 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1029 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i302 
y: i74 
=== Succesors ===
=== Usages ===
i302 i302 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i302 y: i74  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i303 
y: i74 
=== Succesors ===
=== Usages ===
i303 v1918 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i74  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9444529691575878
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
i1894 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v314 #falseSuccessor: v315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVSX [v64|QWORD[.] + v84|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVZX v86|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = INC v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = INC v85|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B95 -> B96 falseDestination: B95 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594433787418621540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i303 
y: i782 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i303 y: i782  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9998375304630381
=== Inputs ===
condition: v317 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v319 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v317 #trueSuccessor: v318 #falseSuccessor: v319  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594432931891874491
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1371 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1371  <|@  <|@
f <@*|@fixed>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v1366 
falseSuccessor: v1369 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v1366 #falseSuccessor: v1369  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B94" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594432931891874491
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1039 
=== Usages ===
v1039 
=== Predecessor ===
v1371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid v1915 <|@
result [v85|DWORD + v37|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i303 
index: a1879 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i303 index: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1029 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1039 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1366 
address: v1915 
value: i325 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1366 address: v1915 value: i325 stateAfter: - lastLocationAccess: - #next: v365  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
loopBegin: v301 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v85|DWORD + v37|DWORD[.] * 8 + 16], y: v88|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|DWORD, v90|DWORD] destination: B98 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1370 
=== Usages ===
=== Predecessor ===
v1371 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1370  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1517 
=== Usages ===
=== Predecessor ===
v1369 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1517  <|@  <|@
f <@~|@floating>@ <|@
tid i1518 <|@
result int[-264219|0xfffffffffffbf7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264219
stableDimension: 0
stamp: i32 [-264219] ⇊00000000fffbf7e5 ⇈00000000fffbf7e5
stampKind: i32
value: int[-264219|0xfffffffffffbf7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264219|0xfffffffffffbf7e5]] destination: B100 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629700246545585
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: a367 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: a367  <|@  <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@62f168a6
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a1455 i302 a983 i303 
=== Succesors ===
=== Usages ===
a367 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1455 i302 a983 i303  <|@  <|@
tid ?1459 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: ?380 
values: - - - - - - - - - - - - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
a367 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?380 values: - - - - - - - - - - - - virtualObjectMappings: ?885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a367 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1040 
stateDuring: ?1459 
=== Succesors ===
next: i1895 
=== Usages ===
?368 v1916 
=== Predecessor ===
v319 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1040 stateDuring: ?1459 #next: i1895  <|@  <|@
tid ?368 <|@
d <@d|@=== Debug Properties ===
bci: 146
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 1
=== Inputs ===
outerFrameState: ?380 
values: - - - - - - - - - - - - a367 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1549 i1895 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?380 values: - - - - - - - - - - - - a367 virtualObjectMappings: ?885  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
result [v91|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a367 
index: - 
=== Succesors ===
=== Usages ===
i1895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1895 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CoderResult.type
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?368 
guard: - 
address: v1916 
=== Succesors ===
next: v1381 
=== Usages ===
v183 v591 
=== Predecessor ===
a367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?368 guard: - address: v1916 #next: v1381  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:120) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:272) [bci: 48]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1895 
y: i13 
=== Succesors ===
=== Usages ===
v1381 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1895 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.9999763022484153
=== Inputs ===
condition: v591 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
i1895 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v591 #trueSuccessor: v66 #falseSuccessor: v124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v84|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41, 60] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v91|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v92|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41, 60] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999763022484153 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B137" 
    xhandlers
    flags 
    probability 4537629534161443397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: i1896 
=== Usages ===
=== Predecessor ===
v1381 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: i1896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1896 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1906 
=== Succesors ===
next: i1897 
=== Usages ===
i850 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1906 #next: i1897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1897 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1905 
=== Succesors ===
next: v846 
=== Usages ===
i851 
=== Predecessor ===
i1896 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1905 #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
i1897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOV [v30|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOV [v30|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|DWORD, v94|DWORD] destination: B102 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468509507352651903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 100]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v1381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1895 
y: i74 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1895 y: i74  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 94]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v183 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v1380 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v183 #trueSuccessor: v132 #falseSuccessor: v1380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v92|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4468509507352651903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@64537ce3
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.writeBytes()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1460 <|@
d <@d|@=== Debug Properties ===
bci: 141
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 282
stackSize: 0
=== Inputs ===
outerFrameState: ?88 
values: a1 - - - a554 - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: a1 - - - a554 - virtualObjectMappings: ?885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
bci: 141
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.writeBytes
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1044 
stateDuring: ?1460 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1044 stateDuring: ?1460 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141, 60] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1549 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1549  <|@  <|@
f <@~|@floating>@ <|@
tid i1551 <|@
result int[-267539|0xfffffffffffbeaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267539
stableDimension: 0
stamp: i32 [-267539] ⇊00000000fffbeaed ⇈00000000fffbeaed
stampKind: i32
value: int[-267539|0xfffffffffffbeaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?368 
actionAndReason: i1551 
speculation: a1467 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?368 actionAndReason: i1551 speculation: a1467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -267539 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v91|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B107" "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1387 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1029 
y: i329 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1029 y: i329  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v1385 
falseSuccessor: v1382 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v1385 #falseSuccessor: v1382  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1386 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid i1523 <|@
result int[-268307|0xfffffffffffbe7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268307
stableDimension: 0
stamp: i32 [-268307] ⇊00000000fffbe7ed ⇈00000000fffbe7ed
stampKind: i32
value: int[-268307|0xfffffffffffbe7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268307|0xfffffffffffbe7ed]] destination: B108 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1393 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1393  <|@  <|@
f <@~|@floating>@ <|@
tid i495 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1029 
y: i495 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1029 y: i495  <|@  <|@
f <@*|@fixed>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v1388 
falseSuccessor: v1391 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v1388 #falseSuccessor: v1391  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B109 -> B110 falseDestination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i782 
y: i303 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i782 y: i303  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 i378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i338 
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i337 y: i338  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v1397 
falseSuccessor: v1394 
=== Usages ===
=== Predecessor ===
v1388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v1397 #falseSuccessor: v1394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SUB (x: v48|DWORD, ~y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1398 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1526 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1526  <|@  <|@
f <@~|@floating>@ <|@
tid i1527 <|@
result int[-268819|0xfffffffffffbe5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268819
stableDimension: 0
stamp: i32 [-268819] ⇊00000000fffbe5ed ⇈00000000fffbe5ed
stampKind: i32
value: int[-268819|0xfffffffffffbe5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268819|0xfffffffffffbe5ed]] destination: B112 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B114" "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1405 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1405  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v1400 
falseSuccessor: v1403 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v1400 #falseSuccessor: v1403  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1411 
=== Usages ===
v1221 
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1411  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i303 
y: i376 
=== Succesors ===
=== Usages ===
v1072 v1919 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i376  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i1894 
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i377 y: i1894  <|@  <|@
f <@*|@fixed>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1072 
=== Succesors ===
trueSuccessor: v1406 
falseSuccessor: v1409 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1072 #trueSuccessor: v1406 #falseSuccessor: v1409  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = LEA [v85|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B94" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
v1221 
=== Predecessor ===
v1411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1406 v1400 
=== Succesors ===
=== Usages ===
v1060 v1080 v1070 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1406 v1400  <|@  <|@
f <@~|@floating>@ <|@
tid v1917 <|@
result [v85|DWORD + v37|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i303 
index: a1879 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i303 index: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i1029 
y: i342 
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1029 y: i342  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i343 
y: i341 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i343 y: i341  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i344 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1060 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1221 
address: v1917 
value: i345 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1070 
=== Usages ===
=== Predecessor ===
v1406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1221 address: v1917 value: i345 stateAfter: - lastLocationAccess: - #next: v1070  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
result [v90|DWORD + v37|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i324 
index: a1879 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i324 index: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i1029 
y: i349 
=== Succesors ===
=== Usages ===
i352 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1029 y: i349  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i352 i358 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i350 
y: i351 
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i350 y: i351  <|@  <|@
f <@~|@floating>@ <|@
tid i353 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i352 
y: i278 
=== Succesors ===
=== Usages ===
i354 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i352 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i353 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1070 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1221 
address: v1918 
value: i354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v1060 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1221 address: v1918 value: i354 stateAfter: - lastLocationAccess: - #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid v1919 <|@
result [v96|DWORD + v37|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i377 
index: a1879 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i377 index: a1879  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i1029 
y: i351 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1029 y: i351  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i358 
y: i278 
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i358 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i359 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1221 
address: v1919 
value: i360 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1221 address: v1919 value: i360 stateAfter: - lastLocationAccess: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i303 
y: i338 
=== Succesors ===
=== Usages ===
i303 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i338  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
loopBegin: v301 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SHR v88|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = OR v97|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v85|DWORD + v37|DWORD[.] * 8 + 16], y: v98|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = SHR v88|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = AND v99|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = OR v100|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v90|DWORD + v37|DWORD[.] * 8 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = AND v88|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = OR v102|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v96|DWORD + v37|DWORD[.] * 8 + 16], y: v103|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = LEA [v85|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|DWORD, v104|DWORD] destination: B115 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1410 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1530 
=== Usages ===
=== Predecessor ===
v1409 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1530  <|@  <|@
f <@~|@floating>@ <|@
tid i1531 <|@
result int[-274715|0xfffffffffffbcee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274715
stableDimension: 0
stamp: i32 [-274715] ⇊00000000fffbcee5 ⇈00000000fffbcee5
stampKind: i32
value: int[-274715|0xfffffffffffbcee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274715|0xfffffffffffbcee5]] destination: B117 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1404 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v1403 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid i1529 <|@
result int[-269595|0xfffffffffffbe2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269595
stableDimension: 0
stamp: i32 [-269595] ⇊00000000fffbe2e5 ⇈00000000fffbe2e5
stampKind: i32
value: int[-269595|0xfffffffffffbe2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269595|0xfffffffffffbe2e5]] destination: B119 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1392 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1524 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1524  <|@  <|@
f <@~|@floating>@ <|@
tid i1525 <|@
result int[-268563|0xfffffffffffbe6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268563
stableDimension: 0
stamp: i32 [-268563] ⇊00000000fffbe6ed ⇈00000000fffbe6ed
stampKind: i32
value: int[-268563|0xfffffffffffbe6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268563|0xfffffffffffbe6ed]] destination: B121 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B123" "B124" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v301 
=== Succesors ===
next: v1416 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v301 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i302 
y: i1889 
=== Succesors ===
=== Usages ===
v516 v508 v510 v1083 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i302 y: i1889  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1881 
y: i482 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1881 y: i482  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v508 
=== Succesors ===
trueSuccessor: v1415 
falseSuccessor: v1412 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v508 #trueSuccessor: v1415 #falseSuccessor: v1412  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SUB (x: v84|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1532 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1532  <|@  <|@
f <@~|@floating>@ <|@
tid i1533 <|@
result int[-276755|0xfffffffffffbc6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -276755
stableDimension: 0
stamp: i32 [-276755] ⇊00000000fffbc6ed ⇈00000000fffbc6ed
stampKind: i32
value: int[-276755|0xfffffffffffbc6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276755|0xfffffffffffbc6ed]] destination: B123 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1421 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i482 
y: i13 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i482 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v1420 
falseSuccessor: v1417 
=== Usages ===
=== Predecessor ===
v1412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v1420 #falseSuccessor: v1417  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v105|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1534 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1534  <|@  <|@
f <@~|@floating>@ <|@
tid i1535 <|@
result int[-277011|0xfffffffffffbc5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277011
stableDimension: 0
stamp: i32 [-277011] ⇊00000000fffbc5ed ⇈00000000fffbc5ed
stampKind: i32
value: int[-277011|0xfffffffffffbc5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-277011|0xfffffffffffbc5ed]] destination: B125 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1898 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1898  <|@  <|@
f <@~|@floating>@ <|@
tid v1920 <|@
result [v30|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1455 
index: - 
=== Succesors ===
=== Usages ===
i1898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1898 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1920 
=== Succesors ===
next: v1426 
=== Usages ===
v516 
=== Predecessor ===
v1417 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1920 #next: v1426  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i482 
y: i1898 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i482 y: i1898  <|@  <|@
f <@*|@fixed>@ <|@
tid v1426 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v1425 
falseSuccessor: v1422 
=== Usages ===
=== Predecessor ===
i1898 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v1425 #falseSuccessor: v1422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|DWORD, y: [v30|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1536 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1536  <|@  <|@
f <@~|@floating>@ <|@
tid i1537 <|@
result int[-278035|0xfffffffffffbc1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278035
stableDimension: 0
stamp: i32 [-278035] ⇊00000000fffbc1ed ⇈00000000fffbc1ed
stampKind: i32
value: int[-278035|0xfffffffffffbc1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278035|0xfffffffffffbc1ed]] destination: B127 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1431 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i303 
y: i1886 
=== Succesors ===
=== Usages ===
v541 v533 v535 v1090 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i303 y: i1886  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1887 
y: i489 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1887 y: i489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v533 
=== Succesors ===
trueSuccessor: v1430 
falseSuccessor: v1427 
=== Usages ===
=== Predecessor ===
v1422 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v533 #trueSuccessor: v1430 #falseSuccessor: v1427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v85|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1538 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1538  <|@  <|@
f <@~|@floating>@ <|@
tid i1539 <|@
result int[-278291|0xfffffffffffbc0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278291
stableDimension: 0
stamp: i32 [-278291] ⇊00000000fffbc0ed ⇈00000000fffbc0ed
stampKind: i32
value: int[-278291|0xfffffffffffbc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278291|0xfffffffffffbc0ed]] destination: B129 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1436 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1436  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i489 
y: i13 
=== Succesors ===
=== Usages ===
v1436 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i489 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v535 
=== Succesors ===
trueSuccessor: v1435 
falseSuccessor: v1432 
=== Usages ===
=== Predecessor ===
v1427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v535 #trueSuccessor: v1435 #falseSuccessor: v1432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v106|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1540 
=== Usages ===
=== Predecessor ===
v1436 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1540  <|@  <|@
f <@~|@floating>@ <|@
tid i1541 <|@
result int[-278547|0xfffffffffffbbfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278547
stableDimension: 0
stamp: i32 [-278547] ⇊00000000fffbbfed ⇈00000000fffbbfed
stampKind: i32
value: int[-278547|0xfffffffffffbbfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278547|0xfffffffffffbbfed]] destination: B131 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B135" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1899 
=== Usages ===
=== Predecessor ===
v1436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1899  <|@  <|@
f <@~|@floating>@ <|@
tid v1921 <|@
result [v36|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1878 
=== Succesors ===
=== Usages ===
i1899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1899 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1921 
=== Succesors ===
next: v1441 
=== Usages ===
v541 
=== Predecessor ===
v1432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1921 #next: v1441  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i489 
y: i1899 
=== Succesors ===
=== Usages ===
v1441 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i489 y: i1899  <|@  <|@
f <@*|@fixed>@ <|@
tid v1441 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v541 
=== Succesors ===
trueSuccessor: v1440 
falseSuccessor: v1437 
=== Usages ===
=== Predecessor ===
i1899 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v541 #trueSuccessor: v1440 #falseSuccessor: v1437  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: [v36|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1542 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1542  <|@  <|@
f <@~|@floating>@ <|@
tid i1543 <|@
result int[-279827|0xfffffffffffbbaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279827
stableDimension: 0
stamp: i32 [-279827] ⇊00000000fffbbaed ⇈00000000fffbbaed
stampKind: i32
value: int[-279827|0xfffffffffffbbaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
v1440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279827|0xfffffffffffbbaed]] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B100" "B108" "B121" "B112" "B119" "B117" "B123" "B125" "B127" "B129" "B131" "B133" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1519 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-279827 - -264219] ⇊00000000fffb80e5 ⇈00000000fffbffed
valueDescription: i32
=== Inputs ===
merge: v1516 
values: i1518 i1523 i1525 i1527 i1529 i1531 i1533 i1535 i1537 i1539 i1541 i1543 
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1516 values: i1518 i1523 i1525 i1527 i1529 i1531 i1533 i1535 i1537 i1539 i1541 i1543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1517 v1522 v1524 v1526 v1528 v1530 v1532 v1534 v1536 v1538 v1540 v1542 
=== Succesors ===
next: v1521 
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1517 v1522 v1524 v1526 v1528 v1530 v1532 v1534 v1536 v1538 v1540 v1542 #next: v1521  <|@  <|@
tid ?304 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?380 
values: a1882 a554 a983 a1128 i302 i778 a1879 i303 i782 - - - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1521 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?380 values: a1882 a554 a983 a1128 i302 i778 a1879 i303 i782 - - - virtualObjectMappings: ?885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?304 
actionAndReason: i1519 
speculation: a1467 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?304 actionAndReason: i1519 speculation: a1467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] v64|QWORD[.] v84|DWORD v51|DWORD v37|DWORD[.] v85|DWORD v48|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B136" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1905 
value: i482 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v1437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1905 value: i482 stateAfter: - lastLocationAccess: - #next: v1090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1928 
value: i489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1928 value: i489 stateAfter: - lastLocationAccess: - #next: v853  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v30|QWORD[.] + 24], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|DWORD[.] * 8 + 24], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: i1900 
=== Usages ===
=== Predecessor ===
v1090 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: i1900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1900 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1905 
=== Succesors ===
next: v849 
=== Usages ===
i851 
=== Predecessor ===
v853 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1905 #next: v849  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
i1900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOV [v30|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD, v108|DWORD] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B102" "B136" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4607182525848264945
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i850 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v847 
values: i1896 i1881 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v847 values: i1896 i1881  <|@  <|@
f <@~|@floating>@ <|@
tid i851 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v847 
values: i1897 i1900 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v847 values: i1897 i1900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v846 v849 
=== Succesors ===
next: v1445 
=== Usages ===
i850 i851 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v846 v849 #next: v1445  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: i32
=== Inputs ===
x: i850 
y: i851 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i850 y: i851  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i74 
=== Succesors ===
=== Usages ===
v1445 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i84 y: i74  <|@  <|@
f <@*|@fixed>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v1444 
falseSuccessor: v1442 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v1444 #falseSuccessor: v1442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD, v110|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SUB (x: v109|DWORD, ~y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v111|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1443 
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1443  <|@  <|@
tid ?848 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 273
stackSize: 0
=== Inputs ===
outerFrameState: ?88 
values: a1 - - - a554 - 
virtualObjectMappings: ?885 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: a1 - - - a554 - virtualObjectMappings: ?885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1095
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?848 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1444 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?848  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -280339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:54, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4607182525848264945
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1790 
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1790 <|@
result v112|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:483) [bci: 17]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1936 
=== Succesors ===
next: v1738 
=== Usages ===
j1734 v1780 v1944 v1945 v1946 v1947 
=== Predecessor ===
v1442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1936 #next: v1738  <|@  <|@
f <@~|@floating>@ <|@
tid j1734 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 50]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j1790 
y: j1630 
=== Succesors ===
=== Usages ===
v1735 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j1790 y: j1630  <|@  <|@
f <@~|@floating>@ <|@
tid v1735 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 65]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1734 
y: j1634 
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1734 y: j1634  <|@  <|@
f <@*|@fixed>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:492) [bci: 71]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1735 
=== Succesors ===
trueSuccessor: v1737 
falseSuccessor: v1736 
=== Usages ===
=== Predecessor ===
j1790 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1735 #trueSuccessor: v1737 #falseSuccessor: v1736  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = MOV [v4|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = AND v112|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 4606281891561388876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1739 
=== Usages ===
=== Predecessor ===
v1738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:493) [bci: 74]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1818 
=== Usages ===
=== Predecessor ===
v1737 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4591870351344153779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 101]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1740 
=== Usages ===
=== Predecessor ===
v1738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1740 <|@
result v114|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:501) [bci: 102]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1791 
=== Usages ===
v1942 v1765 i1771 v1777 
=== Predecessor ===
v1736 >@ <|@
instruction <@CurrentLock|@org.graalvm.compiler.hotspot.nodes.CurrentLockNode>@ #next: j1791  <|@  <|@
f <@~|@floating>@ <|@
tid v1942 <|@
result [v114|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1740 
index: - 
=== Succesors ===
=== Usages ===
j1791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1740 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1791 <|@
result v115|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: DisplacedMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:504) [bci: 118]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1942 
=== Succesors ===
next: v1745 
=== Usages ===
v1742 i1771 
=== Predecessor ===
j1740 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1942 #next: v1745  <|@  <|@
f <@~|@floating>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 140]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1791 
y: j552 
=== Succesors ===
=== Usages ===
v1745 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1791 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:507) [bci: 146]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v1742 
=== Succesors ===
trueSuccessor: v1744 
falseSuccessor: v1743 
=== Usages ===
=== Predecessor ===
j1791 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1742 #trueSuccessor: v1744 #falseSuccessor: v1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [v114|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v115|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B153" 
    xhandlers
    flags 
    probability 4585925565580585513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:509) [bci: 149]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1766 
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1766  <|@  <|@
f <@*|@fixed>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
v1744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B142 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B147" 
    xhandlers
    flags 
    probability 4588807937852981053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 170]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1748 
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1748  <|@  <|@
f <@~|@floating>@ <|@
tid v1780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 24]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
x: j1790 
y: j1640 
=== Succesors ===
=== Usages ===
v1748 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j1790 y: j1640  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 66
code: ResolvedJavaMethodBytecode<StreamEncoder.write(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - a939 - 
=== Succesors ===
=== Usages ===
v1796 v1765 i1771 v1777 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a939 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:547) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1780 
=== Succesors ===
trueSuccessor: v1746 
falseSuccessor: v1747 
=== Usages ===
=== Predecessor ===
v1743 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1780 #trueSuccessor: v1746 #falseSuccessor: v1747  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v112|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4588721466684809187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:578) [bci: 253]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1769 
=== Usages ===
=== Predecessor ===
v1748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1769  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1769 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:518) [bci: 193]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a939 
=== Succesors ===
next: i1771 
=== Usages ===
v1943 
=== Predecessor ===
v1746 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a939 #next: i1771  <|@  <|@
f <@~|@floating>@ <|@
tid v1943 <|@
result [v10|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1769 
index: - 
=== Succesors ===
=== Usages ===
i1771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1771 <|@
result INTERIOR_MATCH <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 66]
locals: - - - - a939: v10|QWORD[.] - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 216]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1943 
expectedValue: j1740 
newValue: j1791 
stateAfter: ?33 
=== Succesors ===
next: v1775 
=== Usages ===
v1772 
=== Predecessor ===
j1769 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v1943 expectedValue: j1740 newValue: j1791 stateAfter: ?33 #next: v1775  <|@  <|@
f <@~|@floating>@ <|@
tid v1772 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1771 
y: i13 
=== Succesors ===
=== Usages ===
v1775 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1771 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1775 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:519) [bci: 224]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v1772 
=== Succesors ===
trueSuccessor: v1773 
falseSuccessor: v1774 
=== Usages ===
=== Predecessor ===
i1771 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1772 #trueSuccessor: v1773 #falseSuccessor: v1774  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v114|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v10|QWORD[.]], cmpValue: rax|QWORD, newValue: v115|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B153" 
    xhandlers
    flags 
    probability 4543890925906680589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:524) [bci: 248]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1777 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1777 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 66]
locals: - - - - a939: v10|QWORD[.] - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:526) [bci: 272]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: ?33 
stateDuring: - 
arguments: a939 j1740 
=== Succesors ===
next: v1778 
=== Usages ===
=== Predecessor ===
v1773 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?33 stateDuring: - arguments: a939 j1740 #next: v1778  <|@  <|@
f <@*|@fixed>@ <|@
tid v1778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
v1777 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v114|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B153" 
    xhandlers
    flags 
    probability 4588712906039160172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:520) [bci: 227]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1776 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1776  <|@  <|@
f <@*|@fixed>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
v1774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B146 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" "B151" 
    xhandlers
    flags 
    probability 4558673378034570898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:550) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1792 
=== Usages ===
=== Predecessor ===
v1748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1792  <|@  <|@
f <@~|@floating>@ <|@
tid v1944 <|@
result [v112|QWORD + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
j1792 v1796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1792 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:552) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1944 
=== Succesors ===
next: j1793 
=== Usages ===
j1750 
=== Predecessor ===
v1747 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1944 #next: j1793  <|@  <|@
f <@~|@floating>@ <|@
tid v1945 <|@
result [v112|QWORD + 38] <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
j1793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1793 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_recursions
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1945 
=== Succesors ===
next: j1749 
=== Usages ===
j1751 
=== Predecessor ===
j1792 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1945 #next: j1749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1749 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:555) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v1755 
=== Usages ===
j1750 
=== Predecessor ===
j1793 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v1755  <|@  <|@
f <@~|@floating>@ <|@
tid j1750 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64
=== Inputs ===
x: j1749 
y: j1792 
=== Succesors ===
=== Usages ===
j1751 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j1749 y: j1792  <|@  <|@
f <@~|@floating>@ <|@
tid j1751 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 109]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64
=== Inputs ===
x: j1750 
y: j1793 
=== Succesors ===
=== Usages ===
v1752 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1750 y: j1793  <|@  <|@
f <@~|@floating>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 113]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1751 
y: j552 
=== Succesors ===
=== Usages ===
v1755 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1751 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:556) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1752 
=== Succesors ===
trueSuccessor: v1754 
falseSuccessor: v1753 
=== Usages ===
=== Predecessor ===
j1749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1752 #trueSuccessor: v1754 #falseSuccessor: v1753  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [v112|QWORD + 22] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v112|QWORD + 38] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = XOR (x: r15|QWORD, y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = OR (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v119|QWORD, y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4558618036486940904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:558) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1794 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1794  <|@  <|@
f <@~|@floating>@ <|@
tid v1946 <|@
result [v112|QWORD + 54] <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
j1794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1794 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_cxq
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:559) [bci: 137]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1946 
=== Succesors ===
next: j1795 
=== Usages ===
j1756 
=== Predecessor ===
v1754 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1946 #next: j1795  <|@  <|@
f <@~|@floating>@ <|@
tid v1947 <|@
result [v112|QWORD + 62] <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
j1795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1795 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_EntryList
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:561) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1947 
=== Succesors ===
next: v1763 
=== Usages ===
j1756 
=== Predecessor ===
j1794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1947 #next: v1763  <|@  <|@
f <@~|@floating>@ <|@
tid j1756 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 175]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: i64
=== Inputs ===
x: j1794 
y: j1795 
=== Succesors ===
=== Usages ===
v1757 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1794 y: j1795  <|@  <|@
f <@~|@floating>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 179]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1756 
y: j552 
=== Succesors ===
=== Usages ===
v1763 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1756 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v1763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:562) [bci: 185]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1757 
=== Succesors ===
trueSuccessor: v1761 
falseSuccessor: v1762 
=== Usages ===
=== Predecessor ===
j1795 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1757 #trueSuccessor: v1761 #falseSuccessor: v1762  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOV [v112|QWORD + 54] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = OR (x: v120|QWORD, ~y: [v112|QWORD + 62]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|QWORD, y: v121|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4558070155165403959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 188]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1764 
=== Usages ===
=== Predecessor ===
v1763 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:566) [bci: 190]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1796 
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1796 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 66]
locals: - - - - a939: v10|QWORD[.] - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:567) [bci: 200]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1944 
value: j552 
stateAfter: ?33 
lastLocationAccess: - 
=== Succesors ===
next: v1768 
=== Usages ===
=== Predecessor ===
v1764 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1944 value: j552 stateAfter: ?33 lastLocationAccess: - #next: v1768  <|@  <|@
f <@*|@fixed>@ <|@
tid v1768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
v1796 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B149 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" 
    xhandlers
    flags 
    probability 4543890925906680587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1760 
=== Usages ===
=== Predecessor ===
v1763 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1760  <|@  <|@
f <@*|@fixed>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1759 
=== Predecessor ===
v1762 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    probability 4528697743976617276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1758 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1758  <|@  <|@
f <@*|@fixed>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1759 
=== Predecessor ===
v1753 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4544454207342795481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:573) [bci: 224]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1758 v1760 
=== Succesors ===
next: v1765 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1758 v1760 #next: v1765  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1765 <|@
st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 66]
locals: - - - - a939: v10|QWORD[.] - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:575) [bci: 248]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 181]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: ?33 
stateDuring: - 
arguments: a939 j1740 
=== Succesors ===
next: v1788 
=== Usages ===
=== Predecessor ===
v1759 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?33 stateDuring: - arguments: a939 j1740 #next: v1788  <|@  <|@
f <@*|@fixed>@ <|@
tid v1788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:512) [bci: 184]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1767 
=== Predecessor ===
v1765 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v114|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B142" "B149" "B146" "B145" "B152" 
    successors 
    xhandlers
    flags 
    probability 4591870351344153779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1766 v1768 v1776 v1778 v1788 
=== Succesors ===
next: v1779 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1766 v1768 v1776 v1778 v1788 #next: v1779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at org.graalvm.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:530) [bci: 275]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1819 
=== Usages ===
=== Predecessor ===
v1767 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v1819  <|@  <|@
f <@*|@fixed>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:126) [bci: 65]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1779 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B158" 
    xhandlers
    flags 
    probability 4356371958516555498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1505  <|@  <|@
f <@~|@floating>@ <|@
tid i1506 <|@
result int[-288019|0xfffffffffffb9aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288019
stableDimension: 0
stamp: i32 [-288019] ⇊00000000fffb9aed ⇈00000000fffb9aed
stampKind: i32
value: int[-288019|0xfffffffffffb9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288019|0xfffffffffffb9aed]] destination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1503 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1503  <|@  <|@
f <@~|@floating>@ <|@
tid i1504 <|@
result int[-310547|0xfffffffffffb42ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310547
stableDimension: 0
stamp: i32 [-310547] ⇊00000000fffb42ed ⇈00000000fffb42ed
stampKind: i32
value: int[-310547|0xfffffffffffb42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310547|0xfffffffffffb42ed]] destination: B155 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1501 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1501  <|@  <|@
f <@~|@floating>@ <|@
tid i1502 <|@
result int[-310035|0xfffffffffffb44ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310035
stableDimension: 0
stamp: i32 [-310035] ⇊00000000fffb44ed ⇈00000000fffb44ed
stampKind: i32
value: int[-310035|0xfffffffffffb44ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v1339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310035|0xfffffffffffb44ed]] destination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid i1498 <|@
result int[-249875|0xfffffffffffc2fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249875
stableDimension: 0
stamp: i32 [-249875] ⇊00000000fffc2fed ⇈00000000fffc2fed
stampKind: i32
value: int[-249875|0xfffffffffffc2fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
v1329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249875|0xfffffffffffc2fed]] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" "B156" "B155" "B154" 
    successors 
    xhandlers
    flags 
    probability 4356371958516555498
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1490 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-310803 - -249875] ⇊00000000fff800e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1487 
values: i1498 i1502 i1504 i1506 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1487 values: i1498 i1502 i1504 i1506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1497 v1501 v1503 v1505 
=== Succesors ===
next: v1492 
=== Usages ===
i1490 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1497 v1501 v1503 v1505 #next: v1492  <|@  <|@
f <@*|@fixed>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
actionAndReason: i1490 
speculation: a1467 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?50 actionAndReason: i1490 speculation: a1467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:22, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1304 
=== Usages ===
=== Predecessor ===
v1306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1304  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 969
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -248083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79ceed3c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV [v4|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v4|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v11|DWORD * 8 + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = OR (x: r15|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = XOR (x: v13|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v14|QWORD y: -121 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B31" "B33" "B40" "B16" "B22" "B26" "B25" 
    successors "B42" "B159" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB [v0|QWORD[.] + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v0|QWORD[.] + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v25|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [v31|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*]], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v29|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 12], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 32], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v29|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 44], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B156" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v40|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVZXB [v30|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB [v36|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v40|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV [v36|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v36|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v36|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v30|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = ADD (x: v44|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ADD (x: v46|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SUB (x: v48|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v39|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = ADD (x: v38|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SUB (x: v51|DWORD, ~y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9967920114616574 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607153737222773857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v40|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602714825633646624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = ADD (x: v53|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD, v54|DWORD] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B53" "B54" 
    successors "B60" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOV [v35|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v57|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVSXD v60|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = DEC v61|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B62" 
    successors "B69" "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B71" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD, v49|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628356995967024841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVSX [v64|QWORD[.] + v73|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v75|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628355552802487815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v74|DWORD + v37|DWORD[.] * 8 + 16], y: v75|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v74|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD, v76|DWORD] destination: B81 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B81" 
    successors "B80" "B83" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628637034469872334
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|DWORD, v74|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607136451636396177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors "B85" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B87" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|DWORD, v74|DWORD] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B98" "B115" 
    successors "B95" "B122" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607879352386270549
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|DWORD, y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B94 -> B95 falseDestination: B94 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594743488101053250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVSX [v64|QWORD[.] + v84|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVZX v86|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = INC v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = INC v85|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B95 -> B96 falseDestination: B95 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594433787418621540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594432931891874491
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B94" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594432931891874491
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v85|DWORD + v37|DWORD[.] * 8 + 16], y: v88|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|DWORD, v90|DWORD] destination: B98 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B107" "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B109 -> B110 falseDestination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SUB (x: v48|DWORD, ~y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B114" "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = LEA [v85|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B94" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SHR v88|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = OR v97|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v85|DWORD + v37|DWORD[.] * 8 + 16], y: v98|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = SHR v88|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = AND v99|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = OR v100|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v90|DWORD + v37|DWORD[.] * 8 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = AND v88|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = OR v102|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v96|DWORD + v37|DWORD[.] * 8 + 16], y: v103|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = LEA [v85|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|DWORD, v104|DWORD] destination: B115 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVSXD v52|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = ADD (x: v65|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD v49|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOVSXD v73|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = SUB (x: v51|DWORD, ~y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVSXD v79|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = DEC v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = ADD (x: v78|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602549443096160386
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD, v48|DWORD] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572561224097339808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B154" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569543716300940040
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999999999999943 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569543716300939998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v40|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565123077672160186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = ADD (x: v49|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD, v55|DWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564957155674978818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD, v48|DWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629700246545585
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v84|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v85|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41, 60] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v91|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v92|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41, 60] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999763022484153 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468509507352651903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v92|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4468509507352651903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141, 60] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B104" 
    successors "B49" "B157" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v30|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v35|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v37|DWORD[.] = MOV [v36|DWORD[.] * 8 + 44] size: DWORD state [bci:22, 60] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v30|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v30|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B123" "B124" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SUB (x: v84|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v105|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|DWORD, y: [v30|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v85|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v106|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B135" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: [v36|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B136" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v30|QWORD[.] + 24], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|DWORD[.] * 8 + 24], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOV [v30|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD, v108|DWORD] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B102" "B136" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4607182525848264945
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD, v110|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SUB (x: v109|DWORD, ~y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v111|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4607182525848264945
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = MOV [v4|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = AND v112|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 4606281891561388876
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4591870351344153779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [v114|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v115|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B147" 
    xhandlers
    flags 
    probability 4588807937852981053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v112|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4588721466684809187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v114|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v10|QWORD[.]], cmpValue: rax|QWORD, newValue: v115|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B153" 
    xhandlers
    flags 
    probability 4588712906039160172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B146 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B142" "B149" "B146" "B145" "B152" 
    successors 
    xhandlers
    flags 
    probability 4591870351344153779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B153" 
    xhandlers
    flags 
    probability 4585925565580585513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B142 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B28" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = AND v8|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v15|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v8|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = OR v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v10|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 9] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B27" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v14|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v14|QWORD y: 768 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND v8|QWORD y: 895 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = OR (x: r15|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v10|QWORD[.]], cmpValue: rax|QWORD, newValue: v17|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" "B151" 
    xhandlers
    flags 
    probability 4558673378034570898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [v112|QWORD + 22] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v112|QWORD + 38] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = XOR (x: r15|QWORD, y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = OR (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v119|QWORD, y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4558618036486940904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOV [v112|QWORD + 54] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = OR (x: v120|QWORD, ~y: [v112|QWORD + 62]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|QWORD, y: v121|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4558070155165403959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B149 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B29" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v10|QWORD[.]], cmpValue: rax|QWORD, newValue: v12|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B39" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v8|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v20|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v21|QWORD y: -4089 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B26" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v10|QWORD[.]], cmpValue: rax|QWORD, newValue: v13|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B23 -> B24 falseDestination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B41" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B153" 
    xhandlers
    flags 
    probability 4543890925906680589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v114|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" 
    xhandlers
    flags 
    probability 4543890925906680587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4544454207342795481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v114|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B137" 
    xhandlers
    flags 
    probability 4537629534161443397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOV [v30|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOV [v30|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|DWORD, v94|DWORD] destination: B102 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B34" "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    probability 4528697743976617276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B158" 
    xhandlers
    flags 
    probability 4356371958516555498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288019|0xfffffffffffb9aed]] destination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" "B156" "B155" "B154" 
    successors 
    xhandlers
    flags 
    probability 4356371958516555498
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:22, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246803|0xfffffffffffc3bed]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B11" "B13" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-277011|0xfffffffffffbc5ed]] destination: B125 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B100" "B108" "B121" "B112" "B119" "B117" "B123" "B125" "B127" "B129" "B131" "B133" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] v64|QWORD[.] v84|DWORD v51|DWORD v37|DWORD[.] v85|DWORD v48|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279827|0xfffffffffffbbaed]] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278547|0xfffffffffffbbfed]] destination: B131 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278291|0xfffffffffffbc0ed]] destination: B129 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276755|0xfffffffffffbc6ed]] destination: B123 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278035|0xfffffffffffbc1ed]] destination: B127 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -267539 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v91|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B76" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253723|0xfffffffffffc20e5]] destination: B66 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B66" "B75" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1869499864] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v72|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: v49|DWORD v56|DWORD 
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] v64|QWORD[.] v52|DWORD v51|DWORD v37|DWORD[.] v49|DWORD v48|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269595|0xfffffffffffbe2e5]] destination: B119 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268819|0xfffffffffffbe5ed]] destination: B112 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268563|0xfffffffffffbe6ed]] destination: B121 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268307|0xfffffffffffbe7ed]] destination: B108 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -280339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:54, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246291|0xfffffffffffc3ded]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243731|0xfffffffffffc47ed]] destination: B1 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@795456897] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -261659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] v64|QWORD[.] v73|DWORD v51|DWORD v37|DWORD[.] v74|DWORD v48|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v40|DWORD[.] v30|QWORD[.] v63|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v30|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264219|0xfffffffffffbf7e5]] destination: B100 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310547|0xfffffffffffb42ed]] destination: B155 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245779|0xfffffffffffc3fed]] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246035|0xfffffffffffc3eed]] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310035|0xfffffffffffb44ed]] destination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249875|0xfffffffffffc2fed]] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274715|0xfffffffffffbcee5]] destination: B117 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -243475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
stack: v24|DWORD 
locals: v0|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:4, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246547|0xfffffffffffc3ced]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245523|0xfffffffffffc40ed]] destination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-259099|0xfffffffffffc0be5]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -248083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v10|QWORD[.] - 
locks: monitor[v10|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #12         // java.io.Writer.lock:java.lang.Object
     4: dup           
     5: astore        4
     7: monitorenter  
     8: aload_0       
     9: invokespecial #15         // ensureOpen:()void
    12: iload_2       
    13: iflt          40
    16: iload_2       
    17: aload_1       
    18: arraylength   
    19: if_icmpgt     40
    22: iload_3       
    23: iflt          40
    26: iload_2       
    27: iload_3       
    28: iadd          
    29: aload_1       
    30: arraylength   
    31: if_icmpgt     40
    34: iload_2       
    35: iload_3       
    36: iadd          
    37: ifge          48
    40: new           #22         // java.lang.IndexOutOfBoundsException
    43: dup           
    44: invokespecial #16         // java.lang.IndexOutOfBoundsException.<init>:()void
    47: athrow        
    48: iload_3       
    49: ifne          56
    52: aload         4
    54: monitorexit   
    55: return        
    56: aload_0       
    57: aload_1       
    58: iload_2       
    59: iload_3       
    60: invokevirtual #17         // implWrite:(char[], int, int)void
    63: aload         4
    65: monitorexit   
    66: goto          77
    69: astore        5
    71: aload         4
    73: monitorexit   
    74: aload         5
    76: athrow        
    77: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79ceed3c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   18  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r9|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rcx|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOV [rdx|DWORD * 8 + 168] size: QWORD <|@ <|@
      nr  154  <|@ instruction rbp|QWORD = OR (x: r15|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction rax|QWORD = XOR (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction TEST rax|QWORD y: -121 size: QWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B41" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B16 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B31" "B33" "B40" "B16" "B22" "B26" "B25" 
    successors "B42" "B159" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rdx|DWORD = MOVSXB [rsi|QWORD[.] + 22] size: DWORD <|@ <|@
      nr  456  <|@ instruction rcx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD <|@ <|@
      nr  458  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  488  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD <|@ <|@
      nr  490  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0 <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rbx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction stack:56|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  550  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [rdx|QWORD[*] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV (x: [rdx|QWORD[*] + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  570  <|@ instruction MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  572  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B156" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  600  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  602  <|@ instruction stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:40, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - rbx|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVZXB [rbx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  608  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction rbp|DWORD = MOVZXB [r11|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  624  <|@ instruction r13|DWORD = MOV [r11|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  626  <|@ instruction r14|DWORD = MOV [r11|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  628  <|@ instruction r10|DWORD = MOV [r11|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  630  <|@ instruction rdi|DWORD = MOV [rbx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  632  <|@ instruction rbx|DWORD = ADD (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r14|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction r9|DWORD = SUB (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction CMP rbp|DWORD y: 1 size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 0.9967920114616574 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607153737222773857
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rax|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMP (x: r9|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602714825633646624
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction rbp|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B53" "B54" 
    successors "B60" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  726  <|@ instruction r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  728  <|@ instruction r9|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = SUB (x: rbp|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  734  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr  738  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr  740  <|@ instruction CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction stack:88|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B62" 
    successors "B69" "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B71" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628356995967024841
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  922  <|@ instruction CMP rcx|DWORD y: 128 size: WORD <|@ <|@
      nr  924  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628355552802487815
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  930  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  932  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  934  <|@ instruction JUMP ~[] destination: B81 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B81" 
    successors "B80" "B83" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628637034469872334
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  914  <|@ instruction CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607136451636396177
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors "B85" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B87" 
    successors "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B98" "B115" 
    successors "B95" "B122" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607879352386270549
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr 1024  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1026  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B94 -> B95 falseDestination: B94 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594743488101053250
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr 1036  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1038  <|@ instruction rax|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction CMP rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr 1042  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B95 -> B96 falseDestination: B95 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594433787418621540
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1048  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594432931891874491
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B94" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594432931891874491
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~[] destination: B98 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B107" "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction CMP rcx|DWORD y: 2048 size: DWORD <|@ <|@
      nr 1154  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1176  <|@ instruction CMP rcx|DWORD y: 55296 size: DWORD <|@ <|@
      nr 1178  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B109 -> B110 falseDestination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1182  <|@ instruction rbp|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1184  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr 1186  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B114" "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1208  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr 1216  <|@ instruction CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B94" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r10|DWORD = SHR rcx|DWORD y: 12 size: DWORD <|@ <|@
      nr 1224  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr 1228  <|@ instruction r10|DWORD = SHR rcx|DWORD y: 6 size: DWORD <|@ <|@
      nr 1230  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr 1232  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOVB (x: [rax|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr 1236  <|@ instruction rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOVB (x: [rbp|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1242  <|@ instruction r11|DWORD = LEA [r11|DWORD + 3] size: DWORD <|@ <|@
      nr 1244  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction JUMP ~[] destination: B115 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction stack:88|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B62 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  826  <|@ instruction rax|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  828  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  830  <|@ instruction rdi|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  832  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  840  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rcx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  954  <|@ instruction rdi|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  960  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  962  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B87 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602549443096160386
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572561224097339808
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B154" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569543716300940040
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:88|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction BRANCH trueDestinationProbability: 0.9999999999999943 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569543716300939998
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction MOV [rax|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  698  <|@ instruction CMP (x: r9|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565123077672160186
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction rbp|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction r11|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564957155674978818
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction r11|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629700246545585
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1086  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1098  <|@ instruction stack:96|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: [stack:16, stack:40, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:72|DWORD[.] stack:56|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:40|QWORD[.] - - - stack:56|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41, 60] <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:40, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:72|DWORD[.] stack:56|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:40|QWORD[.] - - - stack:56|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41, 60] <|@ <|@
      nr 1104  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1106  <|@ instruction BRANCH trueDestinationProbability: 0.9999763022484153 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468509507352651903
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1124  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4468509507352651903
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: stack:40|QWORD[.] - - - stack:56|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141, 60] <|@ <|@
      nr 1132  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B104 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B104" 
    successors "B49" "B157" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rdx|DWORD[.] = MOV [rbx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  582  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - rbx|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr  584  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  586  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r11:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - rbx|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 44] size: DWORD state [bci:22, 60] <|@ <|@
      nr  588  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - rbx|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr  590  <|@ instruction rcx|DWORD = MOV [rbx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  592  <|@ instruction r9|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  594  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B123" "B124" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1304  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1308  <|@ instruction rax|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1310  <|@ instruction CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr 1312  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1328  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1330  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1346  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction CMP (x: rax|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1350  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1366  <|@ instruction rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1370  <|@ instruction CMP (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1372  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1388  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B135" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction rsi|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr 1406  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B136" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction MOV (x: [r9|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1432  <|@ instruction rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1438  <|@ instruction rsi|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1440  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B102" "B136" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4607182525848264945
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1446  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1448  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4607182525848264945
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1462  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1464  <|@ instruction r10|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD <|@ <|@
      nr 1466  <|@ instruction rax|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr 1468  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr 1470  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 4606281891561388876
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4591870351344153779
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1478  <|@ instruction r11|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD = MOV [r11|QWORD] size: QWORD <|@ <|@
      nr 1482  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1484  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B147" 
    xhandlers
    flags 
    probability 4588807937852981053
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1492  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr 1494  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" "B146" 
    xhandlers
    flags 
    probability 4588721466684809187
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr 1504  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B144 -> B145 falseDestination: B144 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B153" 
    xhandlers
    flags 
    probability 4588712906039160172
    begin_IR
      LIR
      nr 1518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1520  <|@ instruction JUMP ~[] destination: B146 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B142" "B149" "B146" "B145" "B152" 
    successors 
    xhandlers
    flags 
    probability 4591870351344153779
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1574  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B153" 
    xhandlers
    flags 
    probability 4585925565580585513
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1488  <|@ instruction JUMP ~[] destination: B142 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B28" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr  170  <|@ instruction CMP rsi|QWORD y: 5 size: QWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B29" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction TEST rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rcx|QWORD = OR rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [rbx|QWORD], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD[.]], cmpValue: rax|QWORD, newValue: rbx|QWORD) accessKind: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction stack:76|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  510  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  512  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [r13:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
stack: stack:76|DWORD 
locals: stack:40|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
locals: stack:40|QWORD[.] stack:56|QWORD[.] r14|DWORD stack:48|DWORD r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 9] <|@ <|@
      nr  516  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B27" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TEST rax|QWORD y: 7 size: QWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction TEST rax|QWORD y: 768 size: QWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = AND rcx|QWORD y: 895 size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = OR (x: r15|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B22 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" "B151" 
    xhandlers
    flags 
    probability 4558673378034570898
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1524  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction rax|QWORD = MOV [r10|QWORD + 22] size: QWORD <|@ <|@
      nr 1528  <|@ instruction rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD <|@ <|@
      nr 1530  <|@ instruction rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1532  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1536  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4558618036486940904
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1540  <|@ instruction rax|QWORD = MOV [r10|QWORD + 54] size: QWORD <|@ <|@
      nr 1542  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD <|@ <|@
      nr 1544  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1546  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4558070155165403959
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1552  <|@ instruction JUMP ~[] destination: B149 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B29" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B39" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction CMP [rcx|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  398  <|@ instruction rax|QWORD = CAS (address: [rcx|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction TEST rax|QWORD y: -4089 size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rbx|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  356  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B26" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rbp|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B23 -> B24 falseDestination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B41" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B26 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B153" 
    xhandlers
    flags 
    probability 4543890925906680589
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 1516  <|@ instruction JUMP ~[] destination: B145 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" 
    xhandlers
    flags 
    probability 4543890925906680587
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1556  <|@ instruction JUMP ~[] destination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B150" 
    successors "B153" 
    xhandlers
    flags 
    probability 4544454207342795481
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1564  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 1570  <|@ instruction JUMP ~[] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B137" 
    xhandlers
    flags 
    probability 4537629534161443397
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1110  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction rax|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1118  <|@ instruction JUMP ~[] destination: B102 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B34" "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [r13:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: stack:40|QWORD[.] stack:56|QWORD[.] r14|DWORD stack:48|DWORD r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8] <|@ <|@
      nr  436  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B152" 
    xhandlers
    flags 
    probability 4528697743976617276
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1560  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  248  <|@ st <@st|@reference-map: [r13:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: stack:40|QWORD[.] stack:56|QWORD[.] r14|DWORD stack:48|DWORD r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8] <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B158" 
    xhandlers
    flags 
    probability 4356371958516555498
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-288019|0xfffffffffffb9aed] <|@ <|@
      nr 1580  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1584  <|@ instruction JUMP ~[] destination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" "B156" "B155" "B154" 
    successors 
    xhandlers
    flags 
    probability 4356371958516555498
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1618  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1620  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1622  <|@ st <@st|@reference-map: [r9:0, r13:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: stack:40|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:22, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = MOVE input: int[-246803|0xfffffffffffc3bed] <|@ <|@
      nr  126  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B11" "B13" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:56, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: stack:40|QWORD[.] stack:56|QWORD[.] r14|DWORD stack:48|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = MOVE input: int[-277011|0xfffffffffffbc5ed] <|@ <|@
      nr 1336  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1338  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction JUMP ~[] destination: B125 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B100" "B108" "B121" "B112" "B119" "B117" "B123" "B125" "B127" "B129" "B131" "B133" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr 1418  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1420  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1424  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r13:0, stack:16, stack:40, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:72|DWORD[.] r9|QWORD[.] stack:96|QWORD[.] rdx|QWORD[.] r10|DWORD rdi|DWORD r8|DWORD[.] r11|DWORD rbx|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:72|DWORD[.] r9|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:40|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction rcx|DWORD = MOVE input: int[-279827|0xfffffffffffbbaed] <|@ <|@
      nr 1412  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1414  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction rcx|DWORD = MOVE input: int[-278547|0xfffffffffffbbfed] <|@ <|@
      nr 1394  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~[] destination: B131 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction rcx|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed] <|@ <|@
      nr 1378  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B129 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1316  <|@ instruction rcx|DWORD = MOVE input: int[-276755|0xfffffffffffbc6ed] <|@ <|@
      nr 1318  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction JUMP ~[] destination: B123 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD = MOVE input: int[-278035|0xfffffffffffbc1ed] <|@ <|@
      nr 1356  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1358  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction JUMP ~[] destination: B127 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV [r15|QWORD + 668] y: -267539 size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1148  <|@ st <@st|@reference-map: [rax:0, r9:0, r13:0, stack:16, stack:40, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:72|DWORD[.] r9|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:40|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  784  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B76" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = MOVE input: int[-253723|0xfffffffffffc20e5] <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B66 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B66" "B75" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1869499864] <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r8:0, r9:0, r13:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: stack:100|DWORD r14|DWORD 
locals: rax|DWORD[.] r9|QWORD[.] rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD rdi|DWORD r8|DWORD[.] stack:100|DWORD rbx|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: rax|DWORD[.] r9|QWORD[.] rsi|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: rbp|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1280  <|@ instruction rcx|DWORD = MOVE input: int[-269595|0xfffffffffffbe2e5] <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1190  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1196  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction rcx|DWORD = MOVE input: int[-268819|0xfffffffffffbe5ed] <|@ <|@
      nr 1204  <|@ instruction JUMP ~[] destination: B112 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1286  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1288  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1298  <|@ instruction rcx|DWORD = MOVE input: int[-268563|0xfffffffffffbe6ed] <|@ <|@
      nr 1300  <|@ instruction JUMP ~[] destination: B121 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1158  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction rcx|DWORD = MOVE input: int[-268307|0xfffffffffffbe7ed] <|@ <|@
      nr 1172  <|@ instruction JUMP ~[] destination: B108 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1452  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1454  <|@ instruction MOV [r15|QWORD + 668] y: -280339 size: DWORD <|@ <|@
      nr 1456  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1458  <|@ st <@st|@reference-map: [r9:0, r13:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
locals: stack:40|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:54, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r10|DWORD = MOVE input: int[-246291|0xfffffffffffc3ded] <|@ <|@
      nr   94  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed] <|@ <|@
      nr   26  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@795456897] <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 668] y: -261659 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r13:0, stack:16, stack:40, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:72|DWORD[.] r9|QWORD[.] stack:96|QWORD[.] rdx|QWORD[.] r10|DWORD rdi|DWORD r8|DWORD[.] r11|DWORD rbx|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:72|DWORD[.] r9|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:40|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1080  <|@ instruction rcx|DWORD = MOVE input: int[-264219|0xfffffffffffbf7e5] <|@ <|@
      nr 1082  <|@ instruction JUMP ~[] destination: B100 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1588  <|@ instruction r10|DWORD = MOVE input: int[-310547|0xfffffffffffb42ed] <|@ <|@
      nr 1590  <|@ instruction r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1592  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1594  <|@ instruction JUMP ~[] destination: B155 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-245779|0xfffffffffffc3fed] <|@ <|@
      nr   60  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-246035|0xfffffffffffc3eed] <|@ <|@
      nr   78  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-310035|0xfffffffffffb44ed] <|@ <|@
      nr 1600  <|@ instruction r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1602  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1604  <|@ instruction JUMP ~[] destination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1608  <|@ instruction r10|DWORD = MOVE input: int[-249875|0xfffffffffffc2fed] <|@ <|@
      nr 1610  <|@ instruction r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1612  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1614  <|@ instruction JUMP ~[] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction rcx|DWORD = MOVE input: int[-274715|0xfffffffffffbcee5] <|@ <|@
      nr 1264  <|@ instruction JUMP ~[] destination: B117 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 668] y: -243475 size: DWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  482  <|@ st <@st|@reference-map: [r13:0, stack:56, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
stack: rbx|DWORD 
locals: stack:40|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
locals: stack:40|QWORD[.] stack:56|QWORD[.] r14|DWORD stack:48|DWORD r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:4, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-246547|0xfffffffffffc3ced] <|@ <|@
      nr  110  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r10|DWORD = MOVE input: int[-245523|0xfffffffffffc40ed] <|@ <|@
      nr   44  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOVE input: int[-259099|0xfffffffffffc0be5] <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1626  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1628  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1630  <|@ instruction MOV [r15|QWORD + 668] y: -248083 size: DWORD <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1634  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: stack:40|QWORD[.] r10|QWORD[.] r14|DWORD r8|DWORD r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #12         // java.io.Writer.lock:java.lang.Object
     4: dup           
     5: astore        4
     7: monitorenter  
     8: aload_0       
     9: invokespecial #15         // ensureOpen:()void
    12: iload_2       
    13: iflt          40
    16: iload_2       
    17: aload_1       
    18: arraylength   
    19: if_icmpgt     40
    22: iload_3       
    23: iflt          40
    26: iload_2       
    27: iload_3       
    28: iadd          
    29: aload_1       
    30: arraylength   
    31: if_icmpgt     40
    34: iload_2       
    35: iload_3       
    36: iadd          
    37: ifge          48
    40: new           #22         // java.lang.IndexOutOfBoundsException
    43: dup           
    44: invokespecial #16         // java.lang.IndexOutOfBoundsException.<init>:()void
    47: athrow        
    48: iload_3       
    49: ifne          56
    52: aload         4
    54: monitorexit   
    55: return        
    56: aload_0       
    57: aload_1       
    58: iload_2       
    59: iload_3       
    60: invokevirtual #17         // implWrite:(char[], int, int)void
    63: aload         4
    65: monitorexit   
    66: goto          77
    69: astore        5
    71: aload         4
    73: monitorexit   
    74: aload         5
    76: athrow        
    77: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79ceed3c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   18  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r9|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B41" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rcx|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOV [rdx|DWORD * 8 + 168] size: QWORD <|@ <|@
      nr  154  <|@ instruction rbp|QWORD = OR (x: r15|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction rax|QWORD = XOR (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction TEST rax|QWORD y: -121 size: QWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B41 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B31" "B33" "B40" "B15" "B22" "B26" "B25" 
    successors "B42" "B159" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rdx|DWORD = MOVSXB [rsi|QWORD[.] + 22] size: DWORD <|@ <|@
      nr  456  <|@ instruction rcx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD <|@ <|@
      nr  458  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  488  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD <|@ <|@
      nr  490  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0 <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rbx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction stack:56|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  550  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [rdx|QWORD[*] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV (x: [rdx|QWORD[*] + 32], y: r11|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  570  <|@ instruction MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  572  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B156" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  600  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  602  <|@ instruction stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:40, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - rbx|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr  606  <|@ instruction rbp|DWORD = MOVZXB [rbx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  608  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B155" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction rbp|DWORD = MOVZXB [r11|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  624  <|@ instruction r13|DWORD = MOV [r11|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  626  <|@ instruction r14|DWORD = MOV [r11|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  628  <|@ instruction r10|DWORD = MOV [r11|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  630  <|@ instruction rdi|DWORD = MOV [rbx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  632  <|@ instruction rbx|DWORD = ADD (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r14|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r13|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction r9|DWORD = SUB (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction CMP rbp|DWORD y: 1 size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 0.9967920114616574 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607153737222773857
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction MOV [rax|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  658  <|@ instruction CMP (x: r9|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602714825633646624
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction rbp|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" "B53" "B54" 
    successors "B60" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  726  <|@ instruction r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  728  <|@ instruction r9|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = SUB (x: rbp|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  734  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  736  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr  738  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3 <|@ <|@
      nr  740  <|@ instruction CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction stack:88|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors "B69" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B84" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628356995967024841
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  920  <|@ instruction rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  922  <|@ instruction CMP rcx|DWORD y: 128 size: WORD <|@ <|@
      nr  924  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628355552802487815
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  930  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  932  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  934  <|@ instruction JUMP ~[] destination: B81 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B81" 
    successors "B80" "B84" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628637034469872334
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  914  <|@ instruction CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B79" "B80" 
    successors "B85" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B98" "B115" 
    successors "B95" "B122" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607879352386270549
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr 1024  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1026  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B94 -> B95 falseDestination: B94 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594743488101053250
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr 1036  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1038  <|@ instruction rax|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction CMP rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr 1042  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B95 -> B96 falseDestination: B95 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594433787418621540
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1048  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594432931891874491
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B94" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594432931891874491
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~[] destination: B98 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B107" "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction CMP rcx|DWORD y: 2048 size: DWORD <|@ <|@
      nr 1154  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1176  <|@ instruction CMP rcx|DWORD y: 55296 size: DWORD <|@ <|@
      nr 1178  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B109 -> B110 falseDestination: B109 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1182  <|@ instruction rbp|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1184  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr 1186  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B114" "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1208  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr 1216  <|@ instruction CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B94" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4576108832699960801
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r10|DWORD = SHR rcx|DWORD y: 12 size: DWORD <|@ <|@
      nr 1224  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr 1228  <|@ instruction r10|DWORD = SHR rcx|DWORD y: 6 size: DWORD <|@ <|@
      nr 1230  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr 1232  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOVB (x: [rax|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr 1236  <|@ instruction rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOVB (x: [rbp|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1242  <|@ instruction r11|DWORD = LEA [r11|DWORD + 3] size: DWORD <|@ <|@
      nr 1244  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction JUMP ~[] destination: B115 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  750  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  752  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  826  <|@ instruction rax|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  828  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  830  <|@ instruction rdi|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  832  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B78" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  840  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B78 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rcx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  954  <|@ instruction rdi|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  960  <|@ instruction rcx|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  962  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B94" "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678926223428706
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B94 falseDestination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602549443096160386
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B154" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569543716300940040
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:88|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction BRANCH trueDestinationProbability: 0.9999999999999943 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569543716300939998
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction MOV [rax|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  698  <|@ instruction CMP (x: r9|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565123077672160186
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction rbp|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564957155674978818
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537629700246545585
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1086  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1098  <|@ instruction stack:96|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: [stack:16, stack:40, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:72|DWORD[.] stack:56|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:40|QWORD[.] - - - stack:56|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41, 60] <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:40, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:72|DWORD[.] stack:56|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:40|QWORD[.] - - - stack:56|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41, 60] <|@ <|@
      nr 1104  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1106  <|@ instruction BRANCH trueDestinationProbability: 0.9999763022484153 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4468509507352651903
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1124  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4468509507352651903
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: stack:40|QWORD[.] - - - stack:56|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141, 60] <|@ <|@
      nr 1132  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B104 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B104" 
    successors "B49" "B157" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182525850799202
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rdx|DWORD[.] = MOV [rbx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  582  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - rbx|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr  584  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  586  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r11:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - rbx|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 44] size: DWORD state [bci:22, 60] <|@ <|@
      nr  588  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - rbx|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - stack:64|QWORD[.] - 
locks: monitor[stack:64|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:22, 60] <|@ <|@
      nr  590  <|@ instruction rcx|DWORD = MOV [rbx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  592  <|@ instruction r9|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  594  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B123" "B124" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1304  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1308  <|@ instruction rax|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1310  <|@ instruction CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr 1312  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1328  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1330  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1346  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction CMP (x: rax|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1350  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1366  <|@ instruction rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1370  <|@ instruction CMP (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1372  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1388  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" "B135" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction rsi|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr 1406  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B136" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction MOV (x: [r9|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1432  <|@ instruction rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" 
    xhandlers
    flags 
    probability 4607182418909955821
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1438  <|@ instruction rsi|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1440  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B102" "B136" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4607182525848264945
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1446  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1448  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4607182525848264945
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1462  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1464  <|@ instruction r10|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD <|@ <|@
      nr 1466  <|@ instruction rax|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr 1468  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr 1470  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 4606281891561388876
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B153" "B143" 
    xhandlers
    flags 
    probability 4591870351344153779
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1478  <|@ instruction r11|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD = MOV [r11|QWORD] size: QWORD <|@ <|@
      nr 1482  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1484  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B141 -> B153 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" "B147" 
    xhandlers
    flags 
    probability 4588807937852981053
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1492  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr 1494  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" "B153" 
    xhandlers
    flags 
    probability 4588721466684809187
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr 1504  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B144 -> B145 falseDestination: B144 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B141" "B149" "B144" "B145" "B152" 
    successors 
    xhandlers
    flags 
    probability 4591870351344153779
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1574  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr  170  <|@ instruction CMP rsi|QWORD y: 5 size: QWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B17" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction TEST rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rcx|QWORD = OR rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV (x: [rbx|QWORD], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD[.]], cmpValue: rax|QWORD, newValue: rbx|QWORD) accessKind: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction stack:76|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  510  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  512  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [r13:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
stack: stack:76|DWORD 
locals: stack:40|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
locals: stack:40|QWORD[.] stack:56|QWORD[.] r14|DWORD stack:48|DWORD r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 9] <|@ <|@
      nr  516  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B27" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TEST rax|QWORD y: 7 size: QWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction TEST rax|QWORD y: 768 size: QWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = AND rcx|QWORD y: 895 size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = OR (x: r15|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B20 -> B25 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B41" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B22 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" "B152" 
    xhandlers
    flags 
    probability 4558673378034570898
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1524  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction rax|QWORD = MOV [r10|QWORD + 22] size: QWORD <|@ <|@
      nr 1528  <|@ instruction rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD <|@ <|@
      nr 1530  <|@ instruction rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1532  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1536  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B149" "B152" 
    xhandlers
    flags 
    probability 4558618036486940904
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1540  <|@ instruction rax|QWORD = MOV [r10|QWORD + 54] size: QWORD <|@ <|@
      nr 1542  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD <|@ <|@
      nr 1544  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1546  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4558070155165403959
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1552  <|@ instruction JUMP ~[] destination: B149 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B29" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B40" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction CMP [rcx|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" "B38" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  398  <|@ instruction rax|QWORD = CAS (address: [rcx|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B36 -> B40 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B40" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction TEST rax|QWORD y: -4089 size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rbx|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  362  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rbp|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B23 -> B25 falseDestination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B41" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B26 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B153" 
    xhandlers
    flags 
    probability 4543890925906680589
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 1516  <|@ instruction JUMP ~[] destination: B145 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B147" "B148" 
    successors "B153" 
    xhandlers
    flags 
    probability 4544454207342795481
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1564  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 1570  <|@ instruction JUMP ~[] destination: B152 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B137" 
    xhandlers
    flags 
    probability 4537629534161443397
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1110  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction rax|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1116  <|@ instruction rsi|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1118  <|@ instruction JUMP ~[] destination: B102 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B32" "B35" 
    successors "B41" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [r13:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: stack:40|QWORD[.] stack:56|QWORD[.] r14|DWORD stack:48|DWORD r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8] <|@ <|@
      nr  436  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" 
    successors "B41" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  248  <|@ st <@st|@reference-map: [r13:0, stack:48, stack:56, stack:68, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: stack:40|QWORD[.] stack:56|QWORD[.] r14|DWORD stack:48|DWORD r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8] <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B158" 
    xhandlers
    flags 
    probability 4356371958516555498
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-288019|0xfffffffffffb9aed] <|@ <|@
      nr 1580  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1584  <|@ instruction JUMP ~[] destination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" "B156" "B155" "B154" 
    successors 
    xhandlers
    flags 
    probability 4356371958516555498
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1612  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1618  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1620  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1622  <|@ st <@st|@reference-map: [r9:0, r13:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: stack:40|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:22, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r10|DWORD = MOVE input: int[-246803|0xfffffffffffc3bed] <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B9" "B11" "B13" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   26  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:56, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0]
locals: stack:40|QWORD[.] stack:56|QWORD[.] r14|DWORD stack:48|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction rcx|DWORD = MOVE input: int[-277011|0xfffffffffffbc5ed] <|@ <|@
      nr 1336  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1338  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction JUMP ~[] destination: B125 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B100" "B108" "B121" "B112" "B119" "B117" "B123" "B125" "B127" "B129" "B131" "B133" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr 1418  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1420  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1424  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r13:0, stack:16, stack:40, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:72|DWORD[.] r9|QWORD[.] stack:96|QWORD[.] rdx|QWORD[.] r10|DWORD rdi|DWORD r8|DWORD[.] r11|DWORD rbx|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:72|DWORD[.] r9|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:40|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction rcx|DWORD = MOVE input: int[-279827|0xfffffffffffbbaed] <|@ <|@
      nr 1412  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1414  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction rcx|DWORD = MOVE input: int[-278547|0xfffffffffffbbfed] <|@ <|@
      nr 1394  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~[] destination: B131 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction rcx|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed] <|@ <|@
      nr 1378  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B129 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1316  <|@ instruction rcx|DWORD = MOVE input: int[-276755|0xfffffffffffbc6ed] <|@ <|@
      nr 1318  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction JUMP ~[] destination: B123 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD = MOVE input: int[-278035|0xfffffffffffbc1ed] <|@ <|@
      nr 1356  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1358  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction JUMP ~[] destination: B127 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1144  <|@ instruction MOV [r15|QWORD + 668] y: -267539 size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1148  <|@ st <@st|@reference-map: [rax:0, r9:0, r13:0, stack:16, stack:40, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:72|DWORD[.] r9|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:40|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  784  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B76" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = MOVE input: int[-253723|0xfffffffffffc20e5] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B66 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B66" "B75" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  800  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1869499864] <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  896  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  898  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r8:0, r9:0, r13:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: stack:100|DWORD r14|DWORD 
locals: rax|DWORD[.] r9|QWORD[.] rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD rdi|DWORD r8|DWORD[.] stack:100|DWORD rbx|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: rax|DWORD[.] r9|QWORD[.] rsi|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: rbp|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B119" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1272  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1280  <|@ instruction rcx|DWORD = MOVE input: int[-269595|0xfffffffffffbe2e5] <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B119 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1190  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1196  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction rcx|DWORD = MOVE input: int[-268819|0xfffffffffffbe5ed] <|@ <|@
      nr 1204  <|@ instruction JUMP ~[] destination: B112 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B121" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1286  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1288  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1298  <|@ instruction rcx|DWORD = MOVE input: int[-268563|0xfffffffffffbe6ed] <|@ <|@
      nr 1300  <|@ instruction JUMP ~[] destination: B121 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1158  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction rcx|DWORD = MOVE input: int[-268307|0xfffffffffffbe7ed] <|@ <|@
      nr 1172  <|@ instruction JUMP ~[] destination: B108 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1452  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1454  <|@ instruction MOV [r15|QWORD + 668] y: -280339 size: DWORD <|@ <|@
      nr 1456  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1458  <|@ st <@st|@reference-map: [r9:0, r13:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
locals: stack:40|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:54, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r10|DWORD = MOVE input: int[-246291|0xfffffffffffc3ded] <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" 
    successors "B91" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@795456897] <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 668] y: -261659 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r13:0, stack:16, stack:40, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:72|DWORD[.] r9|QWORD[.] stack:96|QWORD[.] rdx|QWORD[.] r10|DWORD rdi|DWORD r8|DWORD[.] r11|DWORD rbx|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:72|DWORD[.] r9|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:40|QWORD[.] - - - r9|QWORD[.] - 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60]
locals: - - - - r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41, 60] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1080  <|@ instruction rcx|DWORD = MOVE input: int[-264219|0xfffffffffffbf7e5] <|@ <|@
      nr 1082  <|@ instruction JUMP ~[] destination: B100 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1588  <|@ instruction r10|DWORD = MOVE input: int[-310547|0xfffffffffffb42ed] <|@ <|@
      nr 1590  <|@ instruction r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1594  <|@ instruction JUMP ~[] destination: B155 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-245779|0xfffffffffffc3fed] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: int[-246035|0xfffffffffffc3eed] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-310035|0xfffffffffffb44ed] <|@ <|@
      nr 1600  <|@ instruction r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1604  <|@ instruction JUMP ~[] destination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1608  <|@ instruction r10|DWORD = MOVE input: int[-249875|0xfffffffffffc2fed] <|@ <|@
      nr 1610  <|@ instruction r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1614  <|@ instruction JUMP ~[] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B134" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction rcx|DWORD = MOVE input: int[-274715|0xfffffffffffbcee5] <|@ <|@
      nr 1264  <|@ instruction JUMP ~[] destination: B117 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 668] y: -243475 size: DWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  482  <|@ st <@st|@reference-map: [r13:0, stack:56, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4]
stack: rbx|DWORD 
locals: stack:40|QWORD[.] 
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9]
locals: stack:40|QWORD[.] stack:56|QWORD[.] r14|DWORD stack:48|DWORD r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:4, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-246547|0xfffffffffffc3ced] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r10|DWORD = MOVE input: int[-245523|0xfffffffffffc40ed] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B69" "B70" 
    successors "B75" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOVE input: int[-259099|0xfffffffffffc0be5] <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1626  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1628  <|@ instruction r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1630  <|@ instruction MOV [r15|QWORD + 668] y: -248083 size: DWORD <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1634  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8]
locals: stack:40|QWORD[.] r10|QWORD[.] r14|DWORD r8|DWORD r13|QWORD[.] - 
locks: monitor[r13|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #12         // java.io.Writer.lock:java.lang.Object
     4: dup           
     5: astore        4
     7: monitorenter  
     8: aload_0       
     9: invokespecial #15         // ensureOpen:()void
    12: iload_2       
    13: iflt          40
    16: iload_2       
    17: aload_1       
    18: arraylength   
    19: if_icmpgt     40
    22: iload_3       
    23: iflt          40
    26: iload_2       
    27: iload_3       
    28: iadd          
    29: aload_1       
    30: arraylength   
    31: if_icmpgt     40
    34: iload_2       
    35: iload_3       
    36: iadd          
    37: ifge          48
    40: new           #22         // java.lang.IndexOutOfBoundsException
    43: dup           
    44: invokespecial #16         // java.lang.IndexOutOfBoundsException.<init>:()void
    47: athrow        
    48: iload_3       
    49: ifne          56
    52: aload         4
    54: monitorexit   
    55: return        
    56: aload_0       
    57: aload_1       
    58: iload_2       
    59: iload_3       
    60: invokevirtual #17         // implWrite:(char[], int, int)void
    63: aload         4
    65: monitorexit   
    66: goto          77
    69: astore        5
    71: aload         4
    73: monitorexit   
    74: aload         5
    76: athrow        
    77: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048897424484c8bea448bf1448b56104489542444438504d44585f60f8c82090000458b5d0c453bf30f8f5c0a00004585c00f8cd5090000458bce4503c8453bcb0f8fd10900004585c90f8c490900004585c00f84270a0000453bf10f8fa50700004a8b0cd500000000488d5c2450418bfa48c1e70348897c2430428b14d508000000488b14d5a8000000498bef480bea488bc54833c148f7c087ffffff0f85aa0400000fbe56160fb64e1785c90f85ff0900000fb6da85db0f849c090000498b5760488d4a30493b4f700f87bd04000049894f600f1882f0000000488bda48895c243848b9addeaddeaddeadde488b89a800000048890ac74208addeaddeb9ffffffff48894a0c448962144489721844894a1c44895a20448962244488622849c1ed0344896a2ce9030300000f1f40008b461c89442428418504c40fb66b2885ed0f85db080000420fb62cdd2800000085ed0f85a60800008b2cc514000000468b2cdd24000000468b34dd1c000000468b14dd180000008b7b24418bdd4103de4503d5448974242c448bf3452bf244896c2424458be94403ef03cf44894c2440458bcd442bc983fd010f85ee010000c704c51400000001000000453bce0f8fca010000418be94103ea44894c2420897c241c448b34d50c000000458bce8bfd412bfa4863ff48ffcf418bf348c1e60348c1e203413bea44895c24180f8f1e010000413bea0f8f32010000458bda448bd1e9270000006666660f1f840000000000420fbf4c52106681f980000f831000000043884cc31041ffc341ffc2413beb7fdf453bea0f8f1a010000660f1f440000453bea0f8e02020000420fbf4c5210468b0cc50c0000000fb7c9418bfaffc7418bc3ffc081f9800000000f831f000000413bdb0f8e5b010000453bcb0f865007000043884cc310448bd8448bd7ebb181f9000800000f82b406000081f900d800000f838c0600008beb412beb83fd030f8c62060000453bcb0f863d060000418d6b02443bcd0f8663070000448bd141c1ea0c4181cae0000000478854c310448bd141c1ea064183e23f4181ca80000000468854c01083e13f81c98000000042884cc510458d5b03448bd7e931ffffff4c63d94c03df4d3bcb0f8694050000443bf10f87cafeffffe986050000468b1cc50c0000004963c24803c7418bfb483bf80f863f070000453bda0f87abfeffffe9310700004963ca418bfd412bfa4863ff48ffcf4803cf4c3bc90f862f060000453bf20f87c8feffffe9210600008beb4489742420897c241ce935feffff897c241c44895c241885ed0f85340400008b442428c704c51400000001000000453bce0f8f12000000418bf24103f18bee44894c2420e9fafdffff8beb4489742420e9eefdffff488b5c24384c8bee488bf3418bd2498bcd458bc34c896c24106690e800000000908b700c85f60f845703000083fe010f8587040000488b74244890e80000000090488b5c2438488b7424488b532c418504d4448b5e20468b04dd2c000000438504c48b4b18448b4b1c443bc90f8fdafcffffe9d505000048897424108b7c241c418bc22bc73b4424400f8f0a04000085c00f8caf0300004c8b4c2438413b410c0f8c07040000448b74242c8b742424418bcb2bce413bce0f8fcd03000085c90f8cb60300008b7424183b0cf50c0000000f8c9603000041894118890cf5180000008b442440418b71182bc683f8010f84a3040000448b5424444e8b14d500000000498bc24883e0074883f8050f8513000000488b6c24604883c468850500000000c5f877c34c8d5c2450498b334885f60f842000000049f7c2020000000f8520010000488b7c2430498bc3f0480fb1370f8508020000488b6c24604883c468850500000000c5f877c3488bf14883e6074883fe050f848800000048f7c1020000000f852a0100004883c90148890b488bc1f0480fb11f483bc10f855e010000488b742448e916fbffff895c242444894c242c44895c242844894424404c896c243848beaddeaddeaddeaddeba08000000b9010000004c8befe80000000090488bd0498bfd448b4c242c448b5c2428448b5424444c8b6c2438488b742448e9f5faffff44894c242c44895c242844894424404c896c24384c8bef48f7c0070000000f857300000048f7c0000300000f85080100004881e17f030000498bf7480bf1488bc1f0490fb175000f857d010000448b5424444c8b6c2438488b742448e95cfaffff4c8b6c2430498b4216498b72264933c7480bc64885c00f85f3000000498b4236490b423e4885c00f85e20000004d896216e9bdfeffff488bc1f0490fb15500448b5424444c8b6c2438e9c9feffff44894c242c44895c242844894424404c896c24384c8bef48891b48837916000f85c400000048c7c000000000f04c0fb179160f85b1000000448b5424444c8b6c2438488b742448e9c2f9ffff44894c242c44895c242844894424404c896c24384c8bef482bc448f7c007f0ffff0f85760000004c8923448b5424444c8b6c2438488b742448e984f9ffff488bc1f0490fb16d000f8582000000448b5424444c8b6c2438488b742448e961f9ffff4c8bef498bf5498bd3e80000000090e9e4fdffff498bf5498bd3e80000000090e9d3fdffff4c8b4c24384c8b6c2430418b411c418b7118e94ffdffff498bf5488bd3e80000000090498bfd448b4c242c448b5c2428448b542444448b4424404c8b6c2438488b742448e9f3f8ffff498bf5488bd3e80000000090498bfd448b4c242c448b5c2428448b542444448b4424404c8b6c2438488b742448e9c1f8ffff41baed9afbff4c8b4c24384c8b6c24304589979c0200004d89a7a8020000e8000000009041baed3bfcff44894424404c896c24384589979c0200004d89a7a8020000e80000000090b9edc5fbff418bfd4c8b4c24384c8b6c243041898f9c0200004d89a7a8020000e80000000090b9edbafbff418bfd4c8b6c2430ebddb9edbffbff418bfd4c8b6c2430ebceb9edc0fbff418bfd4c8b6c2430ebbfb9edc6fbff418bfd4c8b4c24384c8b6c2430ebabb9edc1fbff418bfd4c8b6c2430eb9c4c8b4c24384c8b6c243041c7879c020000edeafbff4d89a7a8020000e800000000904889742410418bfd4c8b4c24384c8b6c243041bbe520fcff448b742420448954240c8b442428488b6c244849baaddeaddeaddeadde45899f9c0200004d8997a8020000e800000000904889742410418bfd4c8b4c24384c8b6c2430b9e5e2fbffe915ffffff4889742410418bfd4c8b4c24384c8b6c2430b9ede5fbffe9f9feffff4889742410418bfd4c8b4c24384c8b6c2430b9ede6fbffe9ddfeffff4889742410418bfd4c8b4c24384c8b6c2430b9ede7fbffe9c1feffff4c8b6c243041c7879c020000edb8fbff4d89a7a8020000e8000000009041baed3dfcffe969feffff41baed47fcffe95efeffff4889742410418bfd4c8b4c24384c8b6c243048b9addeaddeaddeadde41c7879c020000e501fcff49898fa8020000e800000000904889742410418bfd4c8b4c24384c8b6c2430b9e5f7fbffe93efeffff41baed42fbff4c8bcbe9e1fdffff41baed3ffcffe9f5fdffff41baed3efcffe9eafdffff41baed44fbff4c8bcbe9bdfdffff41baed2ffcff4c8bcbe9affdffff4889742410418bfd4c8b4c24384c8b6c2430b9e5cefbffe9e2fdffff44894424404c896c24384c8bef41c7879c020000ed48fcff4d89a7a8020000e8000000009041baed3cfcffe982fdffff41baed40fcffe977fdffff4889742410418bfd4c8b4c24384c8b6c243041bbe50bfcffe928feffff4d8bd54c8bef41c7879c020000ed36fcff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79ceed3c slotKind: QWORD  <||@
  Comment 48 6 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 59 12 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 63 14 stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 68 16 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 68 [rsi:0, r10:0, r13:0, stack:68, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 72 18 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 75 20 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 81 block B2 null  <||@
  Comment 81 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 34 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rsi:0, r10:0, r13:0, stack:68, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 36 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 88 38 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 94 block B4 null  <||@
  Comment 94 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 52 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 97 54 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 103 block B6 null  <||@
  Comment 103 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 68 r9|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 109 70 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 112 72 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 118 block B8 null  <||@
  Comment 118 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 86 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 121 88 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 127 block B10 null  <||@
  Comment 127 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 127 102 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 130 104 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 136 block B12 null  <||@
  Comment 136 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 118 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 139 120 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15  <||@
  Comment 145 block B15 null  <||@
  Comment 145 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 145 142 rcx|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD  <||@
  Comment 153 144 rbx|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 158 146 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3  <||@
  Comment 165 148 stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 170 150 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 178 152 rdx|QWORD = MOV [rdx|DWORD * 8 + 168] size: QWORD  <||@
  Comment 186 154 rbp|QWORD = OR (x: r15|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 192 156 rax|QWORD = XOR (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 198 158 TEST rax|QWORD y: -121 size: QWORD  <||@
  Comment 205 160 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B41 falseDestination: B15 -> B17  <||@
  Comment 211 block B41 null  <||@
  Comment 211 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 211 454 rdx|DWORD = MOVSXB [rsi|QWORD[.] + 22] size: DWORD  <||@
  Comment 215 456 rcx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD  <||@
  Comment 219 458 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 221 460 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B159  <||@
  Comment 227 block B42 null  <||@
  Comment 227 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 464 rbx|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 230 466 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 232 468 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 238 block B44 null  <||@
  Comment 238 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 486 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 242 488 rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD  <||@
  Comment 246 490 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 250 492 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 256 block B46 null  <||@
  Comment 256 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 256 534 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 260 536 AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0  <||@
  Comment 267 538 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 267 540 JUMP ~[] destination: B46 -> B47  <||@
  Comment 267 block B47 null  <||@
  Comment 267 542 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 267 544 rbx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 270 546 stack:56|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 275 548 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}  <||@
  Comment 275 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}}  <||@
  Comment 285 550 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 292 552 MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 295 554 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 295 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 302 556 rcx|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 307 558 MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD  <||@
  Comment 311 560 MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 315 562 MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD  <||@
  Comment 319 564 MOV (x: [rdx|QWORD[*] + 28], y: r9|DWORD) size: DWORD  <||@
  Comment 323 566 MOV (x: [rdx|QWORD[*] + 32], y: r11|DWORD) size: DWORD  <||@
  Comment 327 568 MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 331 570 MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 335 572 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3  <||@
  Comment 339 574 MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 343 576 JUMP ~[] destination: B47 -> B48  <||@
  Comment 348 block B49 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 348 598 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 600 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 355 602 stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 359 604 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:22, 60]  <||@
  Comment 359 [rax:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:40, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 359 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 363 606 rbp|DWORD = MOVZXB [rbx|QWORD[.] + 40] size: DWORD  <||@
  Comment 367 608 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 369 610 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B156  <||@
  Comment 375 block B50 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 375 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 375 614 rbp|DWORD = MOVZXB [r11|DWORD[.] * 8 + 40] size: DWORD  <||@
  Comment 384 616 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 386 618 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B155  <||@
  Comment 392 block B51 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 392 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 622 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 399 624 r13|DWORD = MOV [r11|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 407 626 r14|DWORD = MOV [r11|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 415 628 r10|DWORD = MOV [r11|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 423 630 rdi|DWORD = MOV [rbx|QWORD[.] + 36] size: DWORD  <||@
  Comment 426 632 rbx|DWORD = ADD (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 432 634 r10|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 435 636 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 440 638 r14|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 446 640 stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 451 642 r13|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 457 644 rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 459 646 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 464 648 r9|DWORD = SUB (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 470 650 CMP rbp|DWORD y: 1 size: DWORD  <||@
  Comment 473 652 BRANCH trueDestinationProbability: 0.9967920114616574 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 479 block B52 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 479 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 656 MOV [rax|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 490 658 CMP (x: r9|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 493 660 BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 499 block B54 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 499 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 499 674 rbp|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 505 676 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 510 678 stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 514 680 JUMP ~[] destination: B54 -> B59  <||@
  Comment 514 block B59 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 514 724 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 514 726 r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 522 728 r9|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 525 730 rdi|DWORD = SUB (x: rbp|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 530 732 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 533 734 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 536 736 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3  <||@
  Comment 543 738 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3  <||@
  Comment 547 740 CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 550 746 stack:88|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 555 742 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68  <||@
  Comment 561 block B68 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 561 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 561 818 CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 564 820 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B78  <||@
  Comment 570 block B78 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 570 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 906 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 573 908 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 576 910 JUMP ~[] destination: B78 -> B79  <||@
  Comment 581 block B80 loop 1 depth 2 outer 0 header:266|LoopBegin  <||@
  Comment 581 918 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 592 920 rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 598 922 CMP rcx|DWORD y: 128 size: WORD  <||@
  Comment 603 924 BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B84  <||@
  Comment 609 block B81 loop 1 depth 2 outer 0 header:266|LoopBegin  <||@
  Comment 609 926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 609 928 MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 614 930 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 617 932 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 620 934 JUMP ~[] destination: B81 -> B79  <||@
  Comment 620 block B79 loop 1 depth 2 outer 0 header:266|LoopBegin  <||@
  Comment 620 912 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 620 914 CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 623 916 BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B84  <||@
  Comment 625 block B84 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 625 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 946 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 628 948 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B94  <||@
  Comment 634 block B94 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 634 1022 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 640 1024 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 643 1026 BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B94 -> B95 falseDestination: B94 -> B122  <||@
  Comment 649 block B95 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 649 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 1030 rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 655 1032 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 663 1034 rcx|DWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 666 1036 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 671 1038 rax|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 676 1040 CMP rcx|DWORD y: 128 size: DWORD  <||@
  Comment 682 1042 BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B95 -> B96 falseDestination: B95 -> B106  <||@
  Comment 688 block B96 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 688 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 1046 CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 691 1048 BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B101  <||@
  Comment 697 block B97 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 697 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 697 1052 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 700 1054 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 706 block B98 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 706 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 1058 MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 711 1060 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 714 1062 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 717 1064 JUMP ~[] destination: B98 -> B94  <||@
  Comment 719 block B106 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 719 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 719 1152 CMP rcx|DWORD y: 2048 size: DWORD  <||@
  Comment 725 1154 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B109  <||@
  Comment 731 block B109 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 731 1174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 731 1176 CMP rcx|DWORD y: 55296 size: DWORD  <||@
  Comment 737 1178 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B109 -> B110 falseDestination: B109 -> B120  <||@
  Comment 743 block B110 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 743 1180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 743 1182 rbp|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 748 1184 CMP rbp|DWORD y: 3 size: DWORD  <||@
  Comment 751 1186 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B113  <||@
  Comment 757 block B113 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 757 1206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 1208 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 760 1210 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B118  <||@
  Comment 766 block B114 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 766 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 766 1214 rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 770 1216 CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 773 1218 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 779 block B115 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 779 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 1222 r10|DWORD = SHR rcx|DWORD y: 12 size: DWORD  <||@
  Comment 786 1224 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 793 1226 MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 798 1228 r10|DWORD = SHR rcx|DWORD y: 6 size: DWORD  <||@
  Comment 805 1230 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 809 1232 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 816 1234 MOVB (x: [rax|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 821 1236 rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD  <||@
  Comment 824 1238 rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD  <||@
  Comment 830 1240 MOVB (x: [rbp|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 835 1242 r11|DWORD = LEA [r11|DWORD + 3] size: DWORD  <||@
  Comment 839 1244 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 842 1246 JUMP ~[] destination: B115 -> B94  <||@
  Comment 847 block B60 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 847 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 748 r11|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 850 750 r11|QWORD = ADD (x: r11|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 853 752 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 856 754 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65  <||@
  Comment 862 block B61 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 862 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 862 758 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 865 760 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65  <||@
  Comment 876 block B69 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 876 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 876 824 r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 884 826 rax|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 887 828 rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 890 830 rdi|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 893 832 CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 896 834 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B74  <||@
  Comment 902 block B70 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 902 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 838 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 905 840 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B78 falseDestination: B70 -> B74  <||@
  Comment 916 block B85 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 916 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 952 rcx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 919 954 rdi|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 925 956 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 928 958 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 931 960 rcx|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 934 962 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 937 964 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B90  <||@
  Comment 943 block B86 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 943 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 968 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 946 970 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B94 falseDestination: B86 -> B90  <||@
  Comment 957 block B53 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 957 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 664 rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 959 666 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 964 668 stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 968 670 JUMP ~[] destination: B53 -> B59  <||@
  Comment 973 block B55 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 973 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 684 stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 977 686 stack:88|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 982 688 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 984 690 BRANCH trueDestinationProbability: 0.9999999999999943 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B154  <||@
  Comment 990 block B56 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 990 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 990 694 rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 994 696 MOV [rax|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 1005 698 CMP (x: r9|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1008 700 BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1014 block B58 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1014 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1014 714 rsi|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1020 716 rbp|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1022 718 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1027 722 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1032 block B57 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1032 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 704 rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1034 706 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1039 710 JUMP ~[] destination: B57 -> B59  <||@
  Comment 1044 block B101 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1044 1084 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1044 1086 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1049 1088 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1052 1090 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1055 1092 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1058 1094 rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1061 1096 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1064 1098 stack:96|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1069 1100 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41, 60]  <||@
  Comment 1069 8  <||@
  Comment 1071 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 1076 [stack:16, stack:40, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|DWORD[.]  |stack:56|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1077 1102 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41, 60]  <||@
  Comment 1077 [rax:0, stack:16, stack:40, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|DWORD[.]  |stack:56|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1077 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1080 1104 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1082 1106 BRANCH trueDestinationProbability: 0.9999763022484153 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 1088 block B103 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1088 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1088 1122 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1091 1124 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 1097 block B104 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1097 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1097 1128 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1102 1130 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141, 60]  <||@
  Comment 1102 9  <||@
  Comment 1103 {HotSpotMethod<StreamEncoder.writeBytes()>}  <||@
  Comment 1108 [stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1109 1132 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1114 1134 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1119 1136 JUMP ~[] destination: B104 -> B48  <||@
  Comment 1119 block B48 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1119 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1119 580 rdx|DWORD[.] = MOV [rbx|QWORD[.] + 44] size: DWORD  <||@
  Comment 1122 582 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22, 60]  <||@
  Comment 1122 [rdx:0, rbx:0, rsi:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1126 584 r11|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 1130 586 r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 44] size: DWORD state [bci:22, 60]  <||@
  Comment 1130 [rdx:0, rbx:0, rsi:0, r11:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1130 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1138 588 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:22, 60]  <||@
  Comment 1138 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1138 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1142 590 rcx|DWORD = MOV [rbx|QWORD[.] + 24] size: DWORD  <||@
  Comment 1145 592 r9|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1149 594 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1152 596 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B157  <||@
  Comment 1163 block B122 null  <||@
  Comment 1163 1302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1163 1304 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1168 1306 rdi|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1172 1308 rax|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1177 1310 CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 1181 1312 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B124  <||@
  Comment 1187 block B124 null  <||@
  Comment 1187 1326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1187 1328 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1189 1330 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B126  <||@
  Comment 1195 block B126 null  <||@
  Comment 1195 1344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 1346 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1200 1348 CMP (x: rax|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1204 1350 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B128  <||@
  Comment 1210 block B128 null  <||@
  Comment 1210 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1210 1364 r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1215 1366 rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1219 1368 rcx|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1224 1370 CMP (x: rcx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1227 1372 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B130  <||@
  Comment 1233 block B130 null  <||@
  Comment 1233 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1233 1386 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1235 1388 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132  <||@
  Comment 1241 block B132 null  <||@
  Comment 1241 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1241 1402 rsi|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD  <||@
  Comment 1245 1404 CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1252 1406 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B135  <||@
  Comment 1258 block B135 null  <||@
  Comment 1258 1426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1258 1428 MOV (x: [r9|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 1262 1430 MOV (x: [rsi|DWORD[.] * 8 + 24], y: rcx|DWORD) size: DWORD  <||@
  Comment 1269 1432 rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1273 1434 JUMP ~[] destination: B135 -> B136  <||@
  Comment 1273 block B136 null  <||@
  Comment 1273 1436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1273 1438 rsi|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD  <||@
  Comment 1277 1440 JUMP ~[] destination: B136 -> B137  <||@
  Comment 1277 block B137 null  <||@
  Comment 1277 1442 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1277 1444 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1279 1446 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1282 1448 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139  <||@
  Comment 1288 block B139 null  <||@
  Comment 1288 1460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1288 1462 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1293 1464 r10|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD  <||@
  Comment 1301 1466 rax|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 1308 1468 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 1312 1470 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 1318 block B140 null  <||@
  Comment 1318 1472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1318 1474 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1327 12  <||@
  Comment 1337 block B141 null  <||@
  Comment 1337 1476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1337 1478 r11|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 1342 1480 rsi|QWORD = MOV [r11|QWORD] size: QWORD  <||@
  Comment 1345 1482 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1348 1484 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B141 -> B153 falseDestination: B141 -> B143  <||@
  Comment 1354 block B143 null  <||@
  Comment 1354 1490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1354 1492 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 1361 1494 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B147  <||@
  Comment 1367 block B144 null  <||@
  Comment 1367 1496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1367 1498 rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 1500 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1375 1502 rax|QWORD = CAS (address: [rdi|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1380 1504 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B144 -> B145 falseDestination: B144 -> B153  <||@
  Comment 1386 block B153 null  <||@
  Comment 1386 1572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1386 1574 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1395 12  <||@
  Comment 1405 block B17 null  <||@
  Comment 1405 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1405 168 rsi|QWORD = AND rcx|QWORD y: 7 size: QWORD  <||@
  Comment 1412 170 CMP rsi|QWORD y: 5 size: QWORD  <||@
  Comment 1416 172 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29  <||@
  Comment 1422 block B29 null  <||@
  Comment 1422 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1422 310 TEST rcx|QWORD y: 2 size: QWORD  <||@
  Comment 1429 312 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35  <||@
  Comment 1435 block B30 null  <||@
  Comment 1435 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1435 316 rcx|QWORD = OR rcx|QWORD y: 1 size: QWORD  <||@
  Comment 1439 318 MOV (x: [rbx|QWORD], y: rcx|QWORD) size: QWORD  <||@
  Comment 1442 320 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1445 322 rax|QWORD = CAS (address: [rdi|QWORD[.]], cmpValue: rax|QWORD, newValue: rbx|QWORD) accessKind: QWORD  <||@
  Comment 1450 324 CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1453 326 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 1459 block B31 null  <||@
  Comment 1459 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1459 330 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1464 332 JUMP ~[] destination: B31 -> B41  <||@
  Comment 1469 block B45 null  <||@
  Comment 1469 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1469 496 stack:76|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1473 498 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1478 500 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1483 502 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1488 504 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1493 506 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1493 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1503 508 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1508 510 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1513 512 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1516 514 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 9]  <||@
  Comment 1516 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1521 [r13:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
     stack:   |stack:76|DWORD    
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9, duringCall: true, rethrow: false]
              |0                                      |1                  |2          |3               |4             |5 
     locals:  |stack:40|QWORD[.]                      |stack:56|QWORD[.]  |r14|DWORD  |stack:48|DWORD  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                   |           |                |              |    <||@
  Comment 1522 516 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1525 518 rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1528 520 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1533 522 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1538 524 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1543 526 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1548 528 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1553 530 JUMP ~[] destination: B45 -> B47  <||@
  Comment 1558 block B18 null  <||@
  Comment 1558 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1558 176 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1563 178 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1568 180 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1573 182 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1578 184 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1581 186 TEST rax|QWORD y: 7 size: QWORD  <||@
  Comment 1588 188 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B27  <||@
  Comment 1594 block B19 null  <||@
  Comment 1594 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1594 192 TEST rax|QWORD y: 768 size: QWORD  <||@
  Comment 1601 194 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 1607 block B20 null  <||@
  Comment 1607 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1607 198 rcx|QWORD = AND rcx|QWORD y: 895 size: QWORD  <||@
  Comment 1614 200 rsi|QWORD = OR (x: r15|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1620 202 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1623 204 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1629 206 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B20 -> B25 falseDestination: B20 -> B22  <||@
  Comment 1635 block B22 null  <||@
  Comment 1635 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1635 220 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1640 224 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1645 226 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1650 228 JUMP ~[] destination: B22 -> B41  <||@
  Comment 1655 block B147 null  <||@
  Comment 1655 1522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1655 1524 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1660 1526 rax|QWORD = MOV [r10|QWORD + 22] size: QWORD  <||@
  Comment 1664 1528 rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD  <||@
  Comment 1668 1530 rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1671 1532 rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1674 1534 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1677 1536 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B152  <||@
  Comment 1683 block B148 null  <||@
  Comment 1683 1538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1683 1540 rax|QWORD = MOV [r10|QWORD + 54] size: QWORD  <||@
  Comment 1687 1542 rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD  <||@
  Comment 1691 1544 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1694 1546 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B152  <||@
  Comment 1700 block B149 null  <||@
  Comment 1700 1548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1700 1550 MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1704 1552 JUMP ~[] destination: B149 -> B153  <||@
  Comment 1709 block B27 null  <||@
  Comment 1709 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1709 286 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1712 288 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD  <||@
  Comment 1718 296 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1723 300 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1728 302 JUMP ~[] destination: B27 -> B29  <||@
  Comment 1733 block B35 null  <||@
  Comment 1733 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1733 378 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1738 380 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1743 382 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1748 384 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1753 386 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1756 388 MOV (x: [rbx|QWORD], y: rbx|QWORD) size: QWORD  <||@
  Comment 1759 390 CMP [rcx|QWORD + 22] y: 0 size: QWORD  <||@
  Comment 1764 392 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B40  <||@
  Comment 1770 block B36 null  <||@
  Comment 1770 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1770 396 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1777 398 rax|QWORD = CAS (address: [rcx|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1783 400 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B36 -> B40 falseDestination: B36 -> B38  <||@
  Comment 1789 block B38 null  <||@
  Comment 1789 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1789 414 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1794 418 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 420 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1804 422 JUMP ~[] destination: B38 -> B41  <||@
  Comment 1809 block B32 null  <||@
  Comment 1809 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1809 336 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1814 338 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1819 340 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1824 342 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1829 344 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1832 346 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 1835 348 TEST rax|QWORD y: -4089 size: QWORD  <||@
  Comment 1842 350 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B40  <||@
  Comment 1848 block B33 null  <||@
  Comment 1848 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1848 354 MOV (x: [rbx|QWORD], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1851 362 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1856 366 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1861 368 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1866 370 JUMP ~[] destination: B33 -> B41  <||@
  Comment 1871 block B23 null  <||@
  Comment 1871 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1871 232 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1874 234 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rbp|QWORD) accessKind: QWORD  <||@
  Comment 1880 236 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B23 -> B25 falseDestination: B23 -> B26  <||@
  Comment 1886 block B26 null  <||@
  Comment 1886 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1886 274 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1891 278 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1896 280 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1901 282 JUMP ~[] destination: B26 -> B41  <||@
  Comment 1906 block B145 null  <||@
  Comment 1906 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1906 1508 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1909 1510 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1912 1512 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1915 1514 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1915 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1921 1516 JUMP ~[] destination: B145 -> B153  <||@
  Comment 1926 block B152 null  <||@
  Comment 1926 1562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1926 1564 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1929 1566 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1932 1568 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1932 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1938 1570 JUMP ~[] destination: B152 -> B153  <||@
  Comment 1943 block B102 null  <||@
  Comment 1943 1108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1943 1110 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1948 1112 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1953 1114 rax|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 1957 1116 rsi|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD  <||@
  Comment 1961 1118 JUMP ~[] destination: B102 -> B137  <||@
  Comment 1966 block B40 null  <||@
  Comment 1966 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1966 430 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1969 432 rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1972 434 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8]  <||@
  Comment 1972 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1977 [r13:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                  |2          |3               |4             |5 
     locals:  |stack:40|QWORD[.]                      |stack:56|QWORD[.]  |r14|DWORD  |stack:48|DWORD  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                   |           |                |              |    <||@
  Comment 1978 436 rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1981 438 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1986 440 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1991 442 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1996 444 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2001 446 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2006 448 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2011 450 JUMP ~[] destination: B40 -> B41  <||@
  Comment 2016 block B25 null  <||@
  Comment 2016 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2016 244 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2019 246 rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 2022 248 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8]  <||@
  Comment 2022 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2027 [r13:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                  |2          |3               |4             |5 
     locals:  |stack:40|QWORD[.]                      |stack:56|QWORD[.]  |r14|DWORD  |stack:48|DWORD  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                   |           |                |              |    <||@
  Comment 2028 250 rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2031 252 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2036 254 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2041 256 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 2046 258 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2051 260 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2056 262 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2061 264 JUMP ~[] destination: B25 -> B41  <||@
  Comment 2066 block B154 null  <||@
  Comment 2066 1576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2066 1578 r10|DWORD = MOVE input: int[-288019|0xfffffffffffb9aed]  <||@
  Comment 2072 1580 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2077 1584 JUMP ~[] destination: B154 -> B158  <||@
  Comment 2077 block B158 null  <||@
  Comment 2077 1616 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2077 1612 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2082 1618 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2089 1620 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2096 1622 DEOPT info [bci:22, 60]  <||@
  Comment 2096 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2101 [r9:0, r13:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4            |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2102 block B13 null  <||@
  Comment 2102 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2102 124 r10|DWORD = MOVE input: int[-246803|0xfffffffffffc3bed]  <||@
  Comment 2108 130 JUMP ~[] destination: B13 -> B14  <||@
  Comment 2108 block B14 null  <||@
  Comment 2108 132 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2108 26 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2113 28 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2118 134 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2125 136 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2132 138 DEOPT info [bci:0]  <||@
  Comment 2132 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2137 [stack:56, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3               |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |r14|DWORD  |stack:48|DWORD  |-  |-   <||@
  Comment 2138 block B125 null  <||@
  Comment 2138 1332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2138 1334 rcx|DWORD = MOVE input: int[-277011|0xfffffffffffbc5ed]  <||@
  Comment 2143 1336 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2146 1338 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2151 1340 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2156 1342 JUMP ~[] destination: B125 -> B134  <||@
  Comment 2156 block B134 null  <||@
  Comment 2156 1418 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2156 1420 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 2163 1422 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2170 1424 DEOPT info [bci:109, 17, 57, 41, 60]  <||@
  Comment 2170 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2175 [rdx:0, r8:0, r9:0, r13:0, stack:16, stack:40, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1            |2                  |3             |4          |5          |6            |7          |8          |9  |10  |11 
     locals:  |stack:72|DWORD[.]  |r9|QWORD[.]  |stack:96|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rdi|DWORD  |r8|DWORD[.]  |r11|DWORD  |rbx|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1            |2                  |3           |4  |5  |6 
     locals:  |stack:72|DWORD[.]  |r9|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4            |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2176 block B133 null  <||@
  Comment 2176 1408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2176 1410 rcx|DWORD = MOVE input: int[-279827|0xfffffffffffbbaed]  <||@
  Comment 2181 1412 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2184 1414 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2189 1416 JUMP ~[] destination: B133 -> B134  <||@
  Comment 2191 block B131 null  <||@
  Comment 2191 1390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2191 1392 rcx|DWORD = MOVE input: int[-278547|0xfffffffffffbbfed]  <||@
  Comment 2196 1394 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2199 1396 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2204 1398 JUMP ~[] destination: B131 -> B134  <||@
  Comment 2206 block B129 null  <||@
  Comment 2206 1374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2206 1376 rcx|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed]  <||@
  Comment 2211 1378 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2214 1380 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2219 1382 JUMP ~[] destination: B129 -> B134  <||@
  Comment 2221 block B123 null  <||@
  Comment 2221 1314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2221 1316 rcx|DWORD = MOVE input: int[-276755|0xfffffffffffbc6ed]  <||@
  Comment 2226 1318 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2229 1320 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2234 1322 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2239 1324 JUMP ~[] destination: B123 -> B134  <||@
  Comment 2241 block B127 null  <||@
  Comment 2241 1352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2241 1354 rcx|DWORD = MOVE input: int[-278035|0xfffffffffffbc1ed]  <||@
  Comment 2246 1356 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2249 1358 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2254 1360 JUMP ~[] destination: B127 -> B134  <||@
  Comment 2256 block B105 null  <||@
  Comment 2256 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2256 1140 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2261 1142 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2266 1144 MOV [r15|QWORD + 668] y: -267539 size: DWORD  <||@
  Comment 2277 1146 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2284 1148 DEOPT info [bci:146, 17, 57, 41, 60]  <||@
  Comment 2284 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2289 [rax:0, r9:0, r13:0, stack:16, stack:40, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1            |2                  |3           |4  |5  |6 
     locals:  |stack:72|DWORD[.]  |r9|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4            |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2290 block B65 null  <||@
  Comment 2290 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2290 780 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2295 782 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2298 784 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2303 786 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2308 792 JUMP ~[] destination: B65 -> B66  <||@
  Comment 2308 block B66 null  <||@
  Comment 2308 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2308 796 r11|DWORD = MOVE input: int[-253723|0xfffffffffffc20e5]  <||@
  Comment 2314 808 JUMP ~[] destination: B66 -> B76  <||@
  Comment 2314 block B76 null  <||@
  Comment 2314 890 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2314 800 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2319 802 stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2324 804 rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 2328 806 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2333 892 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1869499864]  <||@
  Comment 2333 {Object[d.a@1869499864]}  <||@
  Comment 2343 894 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2350 896 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2357 898 DEOPT info [bci:70, 17, 57, 41, 60]  <||@
  Comment 2357 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2362 [rax:0, rdx:0, rbp:0, rsi:0, r8:0, r9:0, r13:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70, duringCall: false, rethrow: false]
              |0                |1            |2             |3             |4          |5          |6            |7                |8          |9  |10  |11 
     locals:  |rax|DWORD[.]     |r9|QWORD[.]  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rdi|DWORD  |r8|DWORD[.]  |stack:100|DWORD  |rbx|DWORD  |-  |-   |-  
     stack:   |stack:100|DWORD  |r14|DWORD    |              |              |           |           |             |                 |           |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0             |1            |2             |3           |4  |5  |6 
     locals:  |rax|DWORD[.]  |r9|QWORD[.]  |rsi|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2363 block B118 null  <||@
  Comment 2363 1266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2363 1268 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2368 1270 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2371 1272 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2376 1274 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2381 1276 JUMP ~[] destination: B118 -> B119  <||@
  Comment 2381 block B119 null  <||@
  Comment 2381 1278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2381 1280 rcx|DWORD = MOVE input: int[-269595|0xfffffffffffbe2e5]  <||@
  Comment 2386 1282 JUMP ~[] destination: B119 -> B134  <||@
  Comment 2391 block B111 null  <||@
  Comment 2391 1188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2391 1190 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2396 1192 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2399 1194 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2404 1196 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2409 1198 JUMP ~[] destination: B111 -> B112  <||@
  Comment 2409 block B112 null  <||@
  Comment 2409 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2409 1202 rcx|DWORD = MOVE input: int[-268819|0xfffffffffffbe5ed]  <||@
  Comment 2414 1204 JUMP ~[] destination: B112 -> B134  <||@
  Comment 2419 block B120 null  <||@
  Comment 2419 1284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2419 1286 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2424 1288 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2427 1290 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2432 1292 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2437 1294 JUMP ~[] destination: B120 -> B121  <||@
  Comment 2437 block B121 null  <||@
  Comment 2437 1296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2437 1298 rcx|DWORD = MOVE input: int[-268563|0xfffffffffffbe6ed]  <||@
  Comment 2442 1300 JUMP ~[] destination: B121 -> B134  <||@
  Comment 2447 block B107 null  <||@
  Comment 2447 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2447 1158 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2452 1160 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2455 1162 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2460 1164 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2465 1166 JUMP ~[] destination: B107 -> B108  <||@
  Comment 2465 block B108 null  <||@
  Comment 2465 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2465 1170 rcx|DWORD = MOVE input: int[-268307|0xfffffffffffbe7ed]  <||@
  Comment 2470 1172 JUMP ~[] destination: B108 -> B134  <||@
  Comment 2475 block B138 null  <||@
  Comment 2475 1450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2475 1452 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2480 1454 MOV [r15|QWORD + 668] y: -280339 size: DWORD  <||@
  Comment 2491 1456 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2498 1458 DEOPT info [bci:54, 60]  <||@
  Comment 2498 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2503 [r9:0, r13:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4            |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2504 block B9 null  <||@
  Comment 2504 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2504 92 r10|DWORD = MOVE input: int[-246291|0xfffffffffffc3ded]  <||@
  Comment 2510 98 JUMP ~[] destination: B9 -> B14  <||@
  Comment 2515 block B1 null  <||@
  Comment 2515 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2515 24 r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed]  <||@
  Comment 2521 30 JUMP ~[] destination: B1 -> B14  <||@
  Comment 2526 block B90 null  <||@
  Comment 2526 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2526 990 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2531 992 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2534 994 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2539 996 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2544 1002 JUMP ~[] destination: B90 -> B91  <||@
  Comment 2544 block B91 null  <||@
  Comment 2544 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2544 1006 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@795456897]  <||@
  Comment 2544 {Object[d.a@795456897]}  <||@
  Comment 2554 1008 MOV [r15|QWORD + 668] y: -261659 size: DWORD  <||@
  Comment 2565 1010 MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 2572 1012 DEOPT info [bci:109, 17, 57, 41, 60]  <||@
  Comment 2572 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2577 [rdx:0, r8:0, r9:0, r13:0, stack:16, stack:40, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1            |2                  |3             |4          |5          |6            |7          |8          |9  |10  |11 
     locals:  |stack:72|DWORD[.]  |r9|QWORD[.]  |stack:96|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rdi|DWORD  |r8|DWORD[.]  |r11|DWORD  |rbx|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1            |2                  |3           |4  |5  |6 
     locals:  |stack:72|DWORD[.]  |r9|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4            |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2578 block B99 null  <||@
  Comment 2578 1066 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2578 1068 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2583 1070 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2586 1072 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2591 1074 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2596 1076 JUMP ~[] destination: B99 -> B100  <||@
  Comment 2596 block B100 null  <||@
  Comment 2596 1078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2596 1080 rcx|DWORD = MOVE input: int[-264219|0xfffffffffffbf7e5]  <||@
  Comment 2601 1082 JUMP ~[] destination: B100 -> B134  <||@
  Comment 2606 block B155 null  <||@
  Comment 2606 1586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2606 1588 r10|DWORD = MOVE input: int[-310547|0xfffffffffffb42ed]  <||@
  Comment 2612 1590 r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2615 1594 JUMP ~[] destination: B155 -> B158  <||@
  Comment 2620 block B5 null  <||@
  Comment 2620 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2620 58 r10|DWORD = MOVE input: int[-245779|0xfffffffffffc3fed]  <||@
  Comment 2626 64 JUMP ~[] destination: B5 -> B14  <||@
  Comment 2631 block B7 null  <||@
  Comment 2631 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2631 76 r10|DWORD = MOVE input: int[-246035|0xfffffffffffc3eed]  <||@
  Comment 2637 82 JUMP ~[] destination: B7 -> B14  <||@
  Comment 2642 block B156 null  <||@
  Comment 2642 1596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2642 1598 r10|DWORD = MOVE input: int[-310035|0xfffffffffffb44ed]  <||@
  Comment 2648 1600 r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2651 1604 JUMP ~[] destination: B156 -> B158  <||@
  Comment 2656 block B157 null  <||@
  Comment 2656 1606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2656 1608 r10|DWORD = MOVE input: int[-249875|0xfffffffffffc2fed]  <||@
  Comment 2662 1610 r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2665 1614 JUMP ~[] destination: B157 -> B158  <||@
  Comment 2670 block B116 null  <||@
  Comment 2670 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2670 1250 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2675 1252 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2678 1254 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2683 1256 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2688 1258 JUMP ~[] destination: B116 -> B117  <||@
  Comment 2688 block B117 null  <||@
  Comment 2688 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2688 1262 rcx|DWORD = MOVE input: int[-274715|0xfffffffffffbcee5]  <||@
  Comment 2693 1264 JUMP ~[] destination: B117 -> B134  <||@
  Comment 2698 block B43 null  <||@
  Comment 2698 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2698 472 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2703 474 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2708 476 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2711 478 MOV [r15|QWORD + 668] y: -243475 size: DWORD  <||@
  Comment 2722 480 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2729 482 DEOPT info [bci:4, 9]  <||@
  Comment 2729 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2734 [r13:0, stack:56, stack:72]at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
     stack:   |rbx|DWORD         
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9, duringCall: true, rethrow: false]
              |0                                      |1                  |2          |3               |4             |5 
     locals:  |stack:40|QWORD[.]                      |stack:56|QWORD[.]  |r14|DWORD  |stack:48|DWORD  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                   |           |                |              |    <||@
  Comment 2735 block B11 null  <||@
  Comment 2735 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2735 108 r10|DWORD = MOVE input: int[-246547|0xfffffffffffc3ced]  <||@
  Comment 2741 114 JUMP ~[] destination: B11 -> B14  <||@
  Comment 2746 block B3 null  <||@
  Comment 2746 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2746 42 r10|DWORD = MOVE input: int[-245523|0xfffffffffffc40ed]  <||@
  Comment 2752 48 JUMP ~[] destination: B3 -> B14  <||@
  Comment 2757 block B74 null  <||@
  Comment 2757 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2757 860 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2762 862 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2765 864 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2770 866 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2775 872 JUMP ~[] destination: B74 -> B75  <||@
  Comment 2775 block B75 null  <||@
  Comment 2775 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2775 876 r11|DWORD = MOVE input: int[-259099|0xfffffffffffc0be5]  <||@
  Comment 2781 888 JUMP ~[] destination: B75 -> B76  <||@
  Comment 2786 block B159 null  <||@
  Comment 2786 1624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2786 1626 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2789 1628 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2792 1630 MOV [r15|QWORD + 668] y: -248083 size: DWORD  <||@
  Comment 2803 1632 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2810 1634 DEOPT info [bci:8]  <||@
  Comment 2810 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2815 [r10:0, r13:0, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1             |2          |3         |4             |5 
     locals:  |stack:40|QWORD[.]                      |r10|QWORD[.]  |r14|DWORD  |r8|DWORD  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |              |           |          |              |    <||@
  Comment 2816 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2816 4  <||@
  Comment 2822 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2822 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3755[sun.nio.cs.StreamEncoder.write(char[], int, int)]"
  method "HotSpotCompilation-3755[sun.nio.cs.StreamEncoder.write(char[], int, int)]"
  date 1527005140300
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1077cf5a0 448b560849c1e203493bc20f85af6803ff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048897424484c8bea448bf1448b56104489542444438504d44585f60f8c82090000458b5d0c453bf30f8f5c0a00004585c00f8cd5090000458bce4503c8453bcb0f8fd10900004585c90f8c490900004585c00f84270a0000453bf10f8fa50700004a8b0cd500000000488d5c2450418bfa48c1e70348897c2430428b14d508000000488b14d5a8000000498bef480bea488bc54833c148f7c087ffffff0f85aa0400000fbe56160fb64e1785c90f85ff0900000fb6da85db0f849c090000498b5760488d4a30493b4f700f87bd04000049894f600f1882f0000000488bda48895c243848b9101e03c007000000488b89a800000048890ac74208c26300f8b9ffffffff48894a0c448962144489721844894a1c44895a20448962244488622849c1ed0344896a2ce9030300000f1f40008b461c89442428418504c40fb66b2885ed0f85db080000420fb62cdd2800000085ed0f85a60800008b2cc514000000468b2cdd24000000468b34dd1c000000468b14dd180000008b7b24418bdd4103de4503d5448974242c448bf3452bf244896c2424458be94403ef03cf44894c2440458bcd442bc983fd010f85ee010000c704c51400000001000000453bce0f8fca010000418be94103ea44894c2420897c241c448b34d50c000000458bce8bfd412bfa4863ff48ffcf418bf348c1e60348c1e203413bea44895c24180f8f1e010000413bea0f8f32010000458bda448bd1e9270000006666660f1f840000000000420fbf4c52106681f980000f831000000043884cc31041ffc341ffc2413beb7fdf453bea0f8f1a010000660f1f440000453bea0f8e02020000420fbf4c5210468b0cc50c0000000fb7c9418bfaffc7418bc3ffc081f9800000000f831f000000413bdb0f8e5b010000453bcb0f865007000043884cc310448bd8448bd7ebb181f9000800000f82b406000081f900d800000f838c0600008beb412beb83fd030f8c62060000453bcb0f863d060000418d6b02443bcd0f8663070000448bd141c1ea0c4181cae0000000478854c310448bd141c1ea064183e23f4181ca80000000468854c01083e13f81c98000000042884cc510458d5b03448bd7e931ffffff4c63d94c03df4d3bcb0f8694050000443bf10f87cafeffffe986050000468b1cc50c0000004963c24803c7418bfb483bf80f863f070000453bda0f87abfeffffe9310700004963ca418bfd412bfa4863ff48ffcf4803cf4c3bc90f862f060000453bf20f87c8feffffe9210600008beb4489742420897c241ce935feffff897c241c44895c241885ed0f85340400008b442428c704c51400000001000000453bce0f8f12000000418bf24103f18bee44894c2420e9fafdffff8beb4489742420e9eefdffff488b5c24384c8bee488bf3418bd2498bcd458bc34c896c24106690e84c6b03ff908b700c85f60f845703000083fe010f8587040000488b74244890e8ac6603ff90488b5c2438488b7424488b532c418504d4448b5e20468b04dd2c000000438504c48b4b18448b4b1c443bc90f8fdafcffffe9d505000048897424108b7c241c418bc22bc73b4424400f8f0a04000085c00f8caf0300004c8b4c2438413b410c0f8c07040000448b74242c8b742424418bcb2bce413bce0f8fcd03000085c90f8cb60300008b7424183b0cf50c0000000f8c9603000041894118890cf5180000008b442440418b71182bc683f8010f84a3040000448b5424444e8b14d500000000498bc24883e0074883f8050f8513000000488b6c24604883c468850531f50bfdc5f877c34c8d5c2450498b334885f60f842000000049f7c2020000000f8520010000488b7c2430498bc3f0480fb1370f8508020000488b6c24604883c4688505edf40bfdc5f877c3488bf14883e6074883fe050f848800000048f7c1020000000f852a0100004883c90148890b488bc1f0480fb11f483bc10f855e010000488b742448e916fbffff895c242444894c242c44895c242844894424404c896c243848be680b00c007000000ba08000000b9010000004c8befe84f727cff90488bd0498bfd448b4c242c448b5c2428448b5424444c8b6c2438488b742448e9f5faffff44894c242c44895c242844894424404c896c24384c8bef48f7c0070000000f857300000048f7c0000300000f85080100004881e17f030000498bf7480bf1488bc1f0490fb175000f857d010000448b5424444c8b6c2438488b742448e95cfaffff4c8b6c2430498b4216498b72264933c7480bc64885c00f85f3000000498b4236490b423e4885c00f85e20000004d896216e9bdfeffff488bc1f0490fb15500448b5424444c8b6c2438e9c9feffff44894c242c44895c242844894424404c896c24384c8bef48891b48837916000f85c400000048c7c000000000f04c0fb179160f85b1000000448b5424444c8b6c2438488b742448e9c2f9ffff44894c242c44895c242844894424404c896c24384c8bef482bc448f7c007f0ffff0f85760000004c8923448b5424444c8b6c2438488b742448e984f9ffff488bc1f0490fb16d000f8582000000448b5424444c8b6c2438488b742448e961f9ffff4c8bef498bf5498bd3e840e796ff90e9e4fdffff498bf5498bd3e82fe796ff90e9d3fdffff4c8b4c24384c8b6c2430418b411c418b7118e94ffdffff498bf5488bd3e8076c7cff90498bfd448b4c242c448b5c2428448b542444448b4424404c8b6c2438488b742448e9f3f8ffff498bf5488bd3e8d56b7cff90498bfd448b4c242c448b5c2428448b542444448b4424404c8b6c2438488b742448e9c1f8ffff41baed9afbff4c8b4c24384c8b6c24304589979c0200004d89a7a8020000e8297803ff9041baed3bfcff44894424404c896c24384589979c0200004d89a7a8020000e8057803ff90b9edc5fbff418bfd4c8b4c24384c8b6c243041898f9c0200004d89a7a8020000e8df7703ff90b9edbafbff418bfd4c8b6c2430ebddb9edbffbff418bfd4c8b6c2430ebceb9edc0fbff418bfd4c8b6c2430ebbfb9edc6fbff418bfd4c8b4c24384c8b6c2430ebabb9edc1fbff418bfd4c8b6c2430eb9c4c8b4c24384c8b6c243041c7879c020000edeafbff4d89a7a8020000e86d7703ff904889742410418bfd4c8b4c24384c8b6c243041bbe520fcff448b742420448954240c8b442428488b6c244849ba883f5dbe0700000045899f9c0200004d8997a8020000e8247703ff904889742410418bfd4c8b4c24384c8b6c2430b9e5e2fbffe915ffffff4889742410418bfd4c8b4c24384c8b6c2430b9ede5fbffe9f9feffff4889742410418bfd4c8b4c24384c8b6c2430b9ede6fbffe9ddfeffff4889742410418bfd4c8b4c24384c8b6c2430b9ede7fbffe9c1feffff4c8b6c243041c7879c020000edb8fbff4d89a7a8020000e8977603ff9041baed3dfcffe969feffff41baed47fcffe95efeffff4889742410418bfd4c8b4c24384c8b6c243048b970bd5cbe0700000041c7879c020000e501fcff49898fa8020000e84d7603ff904889742410418bfd4c8b4c24384c8b6c2430b9e5f7fbffe93efeffff41baed42fbff4c8bcbe9e1fdffff41baed3ffcffe9f5fdffff41baed3efcffe9eafdffff41baed44fbff4c8bcbe9bdfdffff41baed2ffcff4c8bcbe9affdffff4889742410418bfd4c8b4c24384c8b6c2430b9e5cefbffe9e2fdffff44894424404c896c24384c8bef41c7879c020000ed48fcff4d89a7a8020000e8b07503ff9041baed3cfcffe982fdffff41baed40fcffe977fdffff4889742410418bfd4c8b4c24384c8b6c243041bbe50bfcffe928feffff4d8bd54c8bef41c7879c020000ed36fcff4d89a7a8020000e85f7503ff90e87ba547ff90e8557403ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79ceed3c slotKind: QWORD  <||@
  Comment 48 6 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 59 12 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 63 14 stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 68 16 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 68 [rsi:0, r10:0, r13:0, stack:68, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 72 18 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 75 20 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 81 block B2 null  <||@
  Comment 81 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 34 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rsi:0, r10:0, r13:0, stack:68, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 36 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 88 38 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 94 block B4 null  <||@
  Comment 94 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 52 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 97 54 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 103 block B6 null  <||@
  Comment 103 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 68 r9|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 109 70 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 112 72 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 118 block B8 null  <||@
  Comment 118 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 86 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 121 88 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 127 block B10 null  <||@
  Comment 127 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 127 102 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 130 104 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 136 block B12 null  <||@
  Comment 136 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 118 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 139 120 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15  <||@
  Comment 145 block B15 null  <||@
  Comment 145 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 145 142 rcx|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD  <||@
  Comment 153 144 rbx|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 158 146 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3  <||@
  Comment 165 148 stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 170 150 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 178 152 rdx|QWORD = MOV [rdx|DWORD * 8 + 168] size: QWORD  <||@
  Comment 186 154 rbp|QWORD = OR (x: r15|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 192 156 rax|QWORD = XOR (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 198 158 TEST rax|QWORD y: -121 size: QWORD  <||@
  Comment 205 160 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B15 -> B41 falseDestination: B15 -> B17  <||@
  Comment 211 block B41 null  <||@
  Comment 211 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 211 454 rdx|DWORD = MOVSXB [rsi|QWORD[.] + 22] size: DWORD  <||@
  Comment 215 456 rcx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD  <||@
  Comment 219 458 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 221 460 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B159  <||@
  Comment 227 block B42 null  <||@
  Comment 227 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 464 rbx|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 230 466 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 232 468 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 238 block B44 null  <||@
  Comment 238 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 486 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 242 488 rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD  <||@
  Comment 246 490 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 250 492 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 256 block B46 null  <||@
  Comment 256 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 256 534 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 260 536 AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0  <||@
  Comment 267 538 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 267 540 JUMP ~[] destination: B46 -> B47  <||@
  Comment 267 block B47 null  <||@
  Comment 267 542 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 267 544 rbx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 270 546 stack:56|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 275 548 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}  <||@
  Comment 275 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}}  <||@
  Comment 285 550 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 292 552 MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 295 554 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 295 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 302 556 rcx|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 307 558 MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD  <||@
  Comment 311 560 MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 315 562 MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD  <||@
  Comment 319 564 MOV (x: [rdx|QWORD[*] + 28], y: r9|DWORD) size: DWORD  <||@
  Comment 323 566 MOV (x: [rdx|QWORD[*] + 32], y: r11|DWORD) size: DWORD  <||@
  Comment 327 568 MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 331 570 MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 335 572 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3  <||@
  Comment 339 574 MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 343 576 JUMP ~[] destination: B47 -> B48  <||@
  Comment 348 block B49 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 348 598 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 600 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 355 602 stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 359 604 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:22, 60]  <||@
  Comment 359 [rax:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:40, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 359 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 363 606 rbp|DWORD = MOVZXB [rbx|QWORD[.] + 40] size: DWORD  <||@
  Comment 367 608 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 369 610 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B156  <||@
  Comment 375 block B50 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 375 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 375 614 rbp|DWORD = MOVZXB [r11|DWORD[.] * 8 + 40] size: DWORD  <||@
  Comment 384 616 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 386 618 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B155  <||@
  Comment 392 block B51 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 392 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 622 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 399 624 r13|DWORD = MOV [r11|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 407 626 r14|DWORD = MOV [r11|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 415 628 r10|DWORD = MOV [r11|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 423 630 rdi|DWORD = MOV [rbx|QWORD[.] + 36] size: DWORD  <||@
  Comment 426 632 rbx|DWORD = ADD (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 432 634 r10|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 435 636 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 440 638 r14|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 446 640 stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 451 642 r13|DWORD = ADD (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 457 644 rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 459 646 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 464 648 r9|DWORD = SUB (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 470 650 CMP rbp|DWORD y: 1 size: DWORD  <||@
  Comment 473 652 BRANCH trueDestinationProbability: 0.9967920114616574 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 479 block B52 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 479 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 656 MOV [rax|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 490 658 CMP (x: r9|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 493 660 BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 499 block B54 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 499 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 499 674 rbp|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 505 676 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 510 678 stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 514 680 JUMP ~[] destination: B54 -> B59  <||@
  Comment 514 block B59 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 514 724 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 514 726 r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 522 728 r9|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 525 730 rdi|DWORD = SUB (x: rbp|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 530 732 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 533 734 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 536 736 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3  <||@
  Comment 543 738 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1be99a39 encoding: base: 0 shift: 3  <||@
  Comment 547 740 CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 550 746 stack:88|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 555 742 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68  <||@
  Comment 561 block B68 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 561 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 561 818 CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 564 820 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B78  <||@
  Comment 570 block B78 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 570 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 906 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 573 908 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 576 910 JUMP ~[] destination: B78 -> B79  <||@
  Comment 581 block B80 loop 1 depth 2 outer 0 header:266|LoopBegin  <||@
  Comment 581 918 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 592 920 rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 598 922 CMP rcx|DWORD y: 128 size: WORD  <||@
  Comment 603 924 BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B84  <||@
  Comment 609 block B81 loop 1 depth 2 outer 0 header:266|LoopBegin  <||@
  Comment 609 926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 609 928 MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 614 930 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 617 932 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 620 934 JUMP ~[] destination: B81 -> B79  <||@
  Comment 620 block B79 loop 1 depth 2 outer 0 header:266|LoopBegin  <||@
  Comment 620 912 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 620 914 CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 623 916 BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B84  <||@
  Comment 625 block B84 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 625 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 625 946 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 628 948 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B94  <||@
  Comment 634 block B94 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 634 1022 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 640 1024 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 643 1026 BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B94 -> B95 falseDestination: B94 -> B122  <||@
  Comment 649 block B95 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 649 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 1030 rcx|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 655 1032 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 663 1034 rcx|DWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 666 1036 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 671 1038 rax|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 676 1040 CMP rcx|DWORD y: 128 size: DWORD  <||@
  Comment 682 1042 BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B95 -> B96 falseDestination: B95 -> B106  <||@
  Comment 688 block B96 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 688 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 1046 CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 691 1048 BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B101  <||@
  Comment 697 block B97 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 697 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 697 1052 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 700 1054 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 706 block B98 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 706 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 1058 MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 711 1060 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 714 1062 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 717 1064 JUMP ~[] destination: B98 -> B94  <||@
  Comment 719 block B106 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 719 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 719 1152 CMP rcx|DWORD y: 2048 size: DWORD  <||@
  Comment 725 1154 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B106 -> B107 falseDestination: B106 -> B109  <||@
  Comment 731 block B109 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 731 1174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 731 1176 CMP rcx|DWORD y: 55296 size: DWORD  <||@
  Comment 737 1178 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B109 -> B110 falseDestination: B109 -> B120  <||@
  Comment 743 block B110 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 743 1180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 743 1182 rbp|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 748 1184 CMP rbp|DWORD y: 3 size: DWORD  <||@
  Comment 751 1186 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B113  <||@
  Comment 757 block B113 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 757 1206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 1208 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 760 1210 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B118  <||@
  Comment 766 block B114 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 766 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 766 1214 rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 770 1216 CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 773 1218 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 779 block B115 loop 2 depth 2 outer 0 header:301|LoopBegin  <||@
  Comment 779 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 1222 r10|DWORD = SHR rcx|DWORD y: 12 size: DWORD  <||@
  Comment 786 1224 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 793 1226 MOVB (x: [r11|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 798 1228 r10|DWORD = SHR rcx|DWORD y: 6 size: DWORD  <||@
  Comment 805 1230 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 809 1232 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 816 1234 MOVB (x: [rax|DWORD + r8|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 821 1236 rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD  <||@
  Comment 824 1238 rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD  <||@
  Comment 830 1240 MOVB (x: [rbp|DWORD + r8|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 835 1242 r11|DWORD = LEA [r11|DWORD + 3] size: DWORD  <||@
  Comment 839 1244 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 842 1246 JUMP ~[] destination: B115 -> B94  <||@
  Comment 847 block B60 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 847 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 748 r11|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 850 750 r11|QWORD = ADD (x: r11|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 853 752 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 856 754 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65  <||@
  Comment 862 block B61 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 862 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 862 758 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 865 760 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65  <||@
  Comment 876 block B69 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 876 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 876 824 r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 884 826 rax|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 887 828 rax|QWORD = ADD (x: rax|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 890 830 rdi|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 893 832 CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 896 834 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B74  <||@
  Comment 902 block B70 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 902 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 838 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 905 840 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B70 -> B78 falseDestination: B70 -> B74  <||@
  Comment 916 block B85 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 916 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 952 rcx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 919 954 rdi|DWORD = SUB (x: r13|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 925 956 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 928 958 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 931 960 rcx|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 934 962 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 937 964 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B90  <||@
  Comment 943 block B86 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 943 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 968 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 946 970 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B94 falseDestination: B86 -> B90  <||@
  Comment 957 block B53 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 957 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 664 rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 959 666 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 964 668 stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 968 670 JUMP ~[] destination: B53 -> B59  <||@
  Comment 973 block B55 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 973 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 684 stack:84|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 977 686 stack:88|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 982 688 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 984 690 BRANCH trueDestinationProbability: 0.9999999999999943 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B154  <||@
  Comment 990 block B56 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 990 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 990 694 rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 994 696 MOV [rax|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 1005 698 CMP (x: r9|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1008 700 BRANCH trueDestinationProbability: 0.49439247641649453 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1014 block B58 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1014 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1014 714 rsi|DWORD = ADD (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1020 716 rbp|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1022 718 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1027 722 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1032 block B57 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1032 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 704 rbp|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1034 706 stack:80|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1039 710 JUMP ~[] destination: B57 -> B59  <||@
  Comment 1044 block B101 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1044 1084 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1044 1086 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1049 1088 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1052 1090 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1055 1092 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1058 1094 rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1061 1096 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1064 1098 stack:96|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1069 1100 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57, 41, 60]  <||@
  Comment 1069 8  <||@
  Comment 1071 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 1076 [stack:16, stack:40, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|DWORD[.]  |stack:56|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1077 1102 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41, 60]  <||@
  Comment 1077 [rax:0, stack:16, stack:40, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|DWORD[.]  |stack:56|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1077 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1080 1104 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1082 1106 BRANCH trueDestinationProbability: 0.9999763022484153 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 1088 block B103 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1088 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1088 1122 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1091 1124 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 1097 block B104 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1097 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1097 1128 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1102 1130 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:141, 60]  <||@
  Comment 1102 9  <||@
  Comment 1103 {HotSpotMethod<StreamEncoder.writeBytes()>}  <||@
  Comment 1108 [stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1109 1132 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1114 1134 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1119 1136 JUMP ~[] destination: B104 -> B48  <||@
  Comment 1119 block B48 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 1119 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1119 580 rdx|DWORD[.] = MOV [rbx|QWORD[.] + 44] size: DWORD  <||@
  Comment 1122 582 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22, 60]  <||@
  Comment 1122 [rdx:0, rbx:0, rsi:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1126 584 r11|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 1130 586 r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 44] size: DWORD state [bci:22, 60]  <||@
  Comment 1130 [rdx:0, rbx:0, rsi:0, r11:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1130 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1138 588 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:22, 60]  <||@
  Comment 1138 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                           |1  |2  |3  |4                  |5 
     locals:  |-                                           |-  |-  |-  |stack:64|QWORD[.]  |- 
     locks:   |monitor[stack:64|QWORD[.], stack:32|QWORD]  |   |   |   |                   |    <||@
  Comment 1138 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1142 590 rcx|DWORD = MOV [rbx|QWORD[.] + 24] size: DWORD  <||@
  Comment 1145 592 r9|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1149 594 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1152 596 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B157  <||@
  Comment 1163 block B122 null  <||@
  Comment 1163 1302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1163 1304 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1168 1306 rdi|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1172 1308 rax|DWORD = SUB (x: r10|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1177 1310 CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 1181 1312 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B124  <||@
  Comment 1187 block B124 null  <||@
  Comment 1187 1326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1187 1328 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1189 1330 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B124 -> B125 falseDestination: B124 -> B126  <||@
  Comment 1195 block B126 null  <||@
  Comment 1195 1344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 1346 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1200 1348 CMP (x: rax|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1204 1350 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B128  <||@
  Comment 1210 block B128 null  <||@
  Comment 1210 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1210 1364 r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1215 1366 rsi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1219 1368 rcx|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1224 1370 CMP (x: rcx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1227 1372 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B130  <||@
  Comment 1233 block B130 null  <||@
  Comment 1233 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1233 1386 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1235 1388 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B130 -> B131 falseDestination: B130 -> B132  <||@
  Comment 1241 block B132 null  <||@
  Comment 1241 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1241 1402 rsi|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD  <||@
  Comment 1245 1404 CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1252 1406 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B135  <||@
  Comment 1258 block B135 null  <||@
  Comment 1258 1426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1258 1428 MOV (x: [r9|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 1262 1430 MOV (x: [rsi|DWORD[.] * 8 + 24], y: rcx|DWORD) size: DWORD  <||@
  Comment 1269 1432 rax|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1273 1434 JUMP ~[] destination: B135 -> B136  <||@
  Comment 1273 block B136 null  <||@
  Comment 1273 1436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1273 1438 rsi|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD  <||@
  Comment 1277 1440 JUMP ~[] destination: B136 -> B137  <||@
  Comment 1277 block B137 null  <||@
  Comment 1277 1442 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1277 1444 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1279 1446 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1282 1448 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139  <||@
  Comment 1288 block B139 null  <||@
  Comment 1288 1460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1288 1462 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1293 1464 r10|QWORD = MOV [r10|DWORD[.] * 8] size: QWORD  <||@
  Comment 1301 1466 rax|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 1308 1468 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 1312 1470 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 1318 block B140 null  <||@
  Comment 1318 1472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1318 1474 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1327 12  <||@
  Comment 1337 block B141 null  <||@
  Comment 1337 1476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1337 1478 r11|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 1342 1480 rsi|QWORD = MOV [r11|QWORD] size: QWORD  <||@
  Comment 1345 1482 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1348 1484 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B141 -> B153 falseDestination: B141 -> B143  <||@
  Comment 1354 block B143 null  <||@
  Comment 1354 1490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1354 1492 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 1361 1494 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B147  <||@
  Comment 1367 block B144 null  <||@
  Comment 1367 1496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1367 1498 rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 1500 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1375 1502 rax|QWORD = CAS (address: [rdi|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1380 1504 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B144 -> B145 falseDestination: B144 -> B153  <||@
  Comment 1386 block B153 null  <||@
  Comment 1386 1572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1386 1574 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1395 12  <||@
  Comment 1405 block B17 null  <||@
  Comment 1405 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1405 168 rsi|QWORD = AND rcx|QWORD y: 7 size: QWORD  <||@
  Comment 1412 170 CMP rsi|QWORD y: 5 size: QWORD  <||@
  Comment 1416 172 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29  <||@
  Comment 1422 block B29 null  <||@
  Comment 1422 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1422 310 TEST rcx|QWORD y: 2 size: QWORD  <||@
  Comment 1429 312 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35  <||@
  Comment 1435 block B30 null  <||@
  Comment 1435 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1435 316 rcx|QWORD = OR rcx|QWORD y: 1 size: QWORD  <||@
  Comment 1439 318 MOV (x: [rbx|QWORD], y: rcx|QWORD) size: QWORD  <||@
  Comment 1442 320 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1445 322 rax|QWORD = CAS (address: [rdi|QWORD[.]], cmpValue: rax|QWORD, newValue: rbx|QWORD) accessKind: QWORD  <||@
  Comment 1450 324 CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1453 326 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 1459 block B31 null  <||@
  Comment 1459 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1459 330 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1464 332 JUMP ~[] destination: B31 -> B41  <||@
  Comment 1469 block B45 null  <||@
  Comment 1469 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1469 496 stack:76|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1473 498 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1478 500 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1483 502 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1488 504 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1493 506 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1493 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1503 508 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1508 510 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1513 512 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1516 514 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 9]  <||@
  Comment 1516 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1521 [r13:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
     stack:   |stack:76|DWORD    
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9, duringCall: true, rethrow: false]
              |0                                      |1                  |2          |3               |4             |5 
     locals:  |stack:40|QWORD[.]                      |stack:56|QWORD[.]  |r14|DWORD  |stack:48|DWORD  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                   |           |                |              |    <||@
  Comment 1522 516 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1525 518 rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1528 520 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1533 522 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1538 524 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1543 526 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1548 528 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1553 530 JUMP ~[] destination: B45 -> B47  <||@
  Comment 1558 block B18 null  <||@
  Comment 1558 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1558 176 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1563 178 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1568 180 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1573 182 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1578 184 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1581 186 TEST rax|QWORD y: 7 size: QWORD  <||@
  Comment 1588 188 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B27  <||@
  Comment 1594 block B19 null  <||@
  Comment 1594 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1594 192 TEST rax|QWORD y: 768 size: QWORD  <||@
  Comment 1601 194 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 1607 block B20 null  <||@
  Comment 1607 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1607 198 rcx|QWORD = AND rcx|QWORD y: 895 size: QWORD  <||@
  Comment 1614 200 rsi|QWORD = OR (x: r15|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1620 202 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1623 204 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1629 206 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B20 -> B25 falseDestination: B20 -> B22  <||@
  Comment 1635 block B22 null  <||@
  Comment 1635 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1635 220 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1640 224 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1645 226 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1650 228 JUMP ~[] destination: B22 -> B41  <||@
  Comment 1655 block B147 null  <||@
  Comment 1655 1522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1655 1524 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1660 1526 rax|QWORD = MOV [r10|QWORD + 22] size: QWORD  <||@
  Comment 1664 1528 rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD  <||@
  Comment 1668 1530 rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1671 1532 rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1674 1534 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1677 1536 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B152  <||@
  Comment 1683 block B148 null  <||@
  Comment 1683 1538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1683 1540 rax|QWORD = MOV [r10|QWORD + 54] size: QWORD  <||@
  Comment 1687 1542 rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD  <||@
  Comment 1691 1544 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1694 1546 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B152  <||@
  Comment 1700 block B149 null  <||@
  Comment 1700 1548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1700 1550 MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1704 1552 JUMP ~[] destination: B149 -> B153  <||@
  Comment 1709 block B27 null  <||@
  Comment 1709 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1709 286 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1712 288 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD  <||@
  Comment 1718 296 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1723 300 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1728 302 JUMP ~[] destination: B27 -> B29  <||@
  Comment 1733 block B35 null  <||@
  Comment 1733 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1733 378 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1738 380 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1743 382 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1748 384 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1753 386 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1756 388 MOV (x: [rbx|QWORD], y: rbx|QWORD) size: QWORD  <||@
  Comment 1759 390 CMP [rcx|QWORD + 22] y: 0 size: QWORD  <||@
  Comment 1764 392 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B40  <||@
  Comment 1770 block B36 null  <||@
  Comment 1770 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1770 396 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1777 398 rax|QWORD = CAS (address: [rcx|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1783 400 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B36 -> B40 falseDestination: B36 -> B38  <||@
  Comment 1789 block B38 null  <||@
  Comment 1789 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1789 414 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1794 418 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 420 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1804 422 JUMP ~[] destination: B38 -> B41  <||@
  Comment 1809 block B32 null  <||@
  Comment 1809 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1809 336 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1814 338 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1819 340 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1824 342 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1829 344 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1832 346 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 1835 348 TEST rax|QWORD y: -4089 size: QWORD  <||@
  Comment 1842 350 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B40  <||@
  Comment 1848 block B33 null  <||@
  Comment 1848 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1848 354 MOV (x: [rbx|QWORD], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1851 362 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1856 366 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1861 368 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1866 370 JUMP ~[] destination: B33 -> B41  <||@
  Comment 1871 block B23 null  <||@
  Comment 1871 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1871 232 rax|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1874 234 rax|QWORD = CAS (address: [r13|QWORD[.]], cmpValue: rax|QWORD, newValue: rbp|QWORD) accessKind: QWORD  <||@
  Comment 1880 236 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B23 -> B25 falseDestination: B23 -> B26  <||@
  Comment 1886 block B26 null  <||@
  Comment 1886 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1886 274 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1891 278 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1896 280 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1901 282 JUMP ~[] destination: B26 -> B41  <||@
  Comment 1906 block B145 null  <||@
  Comment 1906 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1906 1508 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1909 1510 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1912 1512 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1915 1514 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1915 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1921 1516 JUMP ~[] destination: B145 -> B153  <||@
  Comment 1926 block B152 null  <||@
  Comment 1926 1562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1926 1564 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1929 1566 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1932 1568 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1932 {Stub<monitorexit(Object,Word)void>@0x10713e460:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1938 1570 JUMP ~[] destination: B152 -> B153  <||@
  Comment 1943 block B102 null  <||@
  Comment 1943 1108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1943 1110 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1948 1112 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1953 1114 rax|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 1957 1116 rsi|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD  <||@
  Comment 1961 1118 JUMP ~[] destination: B102 -> B137  <||@
  Comment 1966 block B40 null  <||@
  Comment 1966 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1966 430 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1969 432 rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1972 434 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8]  <||@
  Comment 1972 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1977 [r13:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                  |2          |3               |4             |5 
     locals:  |stack:40|QWORD[.]                      |stack:56|QWORD[.]  |r14|DWORD  |stack:48|DWORD  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                   |           |                |              |    <||@
  Comment 1978 436 rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1981 438 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1986 440 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1991 442 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1996 444 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2001 446 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2006 448 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2011 450 JUMP ~[] destination: B40 -> B41  <||@
  Comment 2016 block B25 null  <||@
  Comment 2016 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2016 244 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2019 246 rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 2022 248 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:8]  <||@
  Comment 2022 {Stub<monitorenter(Object,Word)void>@0x106f96960:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2027 [r13:0, stack:48, stack:56, stack:68, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1                  |2          |3               |4             |5 
     locals:  |stack:40|QWORD[.]                      |stack:56|QWORD[.]  |r14|DWORD  |stack:48|DWORD  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                   |           |                |              |    <||@
  Comment 2028 250 rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2031 252 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2036 254 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2041 256 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 2046 258 r8|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2051 260 r13|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2056 262 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2061 264 JUMP ~[] destination: B25 -> B41  <||@
  Comment 2066 block B154 null  <||@
  Comment 2066 1576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2066 1578 r10|DWORD = MOVE input: int[-288019|0xfffffffffffb9aed]  <||@
  Comment 2072 1580 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2077 1584 JUMP ~[] destination: B154 -> B158  <||@
  Comment 2077 block B158 null  <||@
  Comment 2077 1616 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2077 1612 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2082 1618 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2089 1620 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2096 1622 DEOPT info [bci:22, 60]  <||@
  Comment 2096 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2101 [r9:0, r13:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4            |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2102 block B13 null  <||@
  Comment 2102 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2102 124 r10|DWORD = MOVE input: int[-246803|0xfffffffffffc3bed]  <||@
  Comment 2108 130 JUMP ~[] destination: B13 -> B14  <||@
  Comment 2108 block B14 null  <||@
  Comment 2108 132 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2108 26 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2113 28 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2118 134 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2125 136 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2132 138 DEOPT info [bci:0]  <||@
  Comment 2132 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2137 [stack:56, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:117) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3               |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.]  |r14|DWORD  |stack:48|DWORD  |-  |-   <||@
  Comment 2138 block B125 null  <||@
  Comment 2138 1332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2138 1334 rcx|DWORD = MOVE input: int[-277011|0xfffffffffffbc5ed]  <||@
  Comment 2143 1336 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2146 1338 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2151 1340 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2156 1342 JUMP ~[] destination: B125 -> B134  <||@
  Comment 2156 block B134 null  <||@
  Comment 2156 1418 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2156 1420 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 2163 1422 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2170 1424 DEOPT info [bci:109, 17, 57, 41, 60]  <||@
  Comment 2170 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2175 [rdx:0, r8:0, r9:0, r13:0, stack:16, stack:40, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1            |2                  |3             |4          |5          |6            |7          |8          |9  |10  |11 
     locals:  |stack:72|DWORD[.]  |r9|QWORD[.]  |stack:96|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rdi|DWORD  |r8|DWORD[.]  |r11|DWORD  |rbx|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1            |2                  |3           |4  |5  |6 
     locals:  |stack:72|DWORD[.]  |r9|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4            |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2176 block B133 null  <||@
  Comment 2176 1408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2176 1410 rcx|DWORD = MOVE input: int[-279827|0xfffffffffffbbaed]  <||@
  Comment 2181 1412 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2184 1414 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2189 1416 JUMP ~[] destination: B133 -> B134  <||@
  Comment 2191 block B131 null  <||@
  Comment 2191 1390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2191 1392 rcx|DWORD = MOVE input: int[-278547|0xfffffffffffbbfed]  <||@
  Comment 2196 1394 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2199 1396 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2204 1398 JUMP ~[] destination: B131 -> B134  <||@
  Comment 2206 block B129 null  <||@
  Comment 2206 1374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2206 1376 rcx|DWORD = MOVE input: int[-278291|0xfffffffffffbc0ed]  <||@
  Comment 2211 1378 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2214 1380 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2219 1382 JUMP ~[] destination: B129 -> B134  <||@
  Comment 2221 block B123 null  <||@
  Comment 2221 1314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2221 1316 rcx|DWORD = MOVE input: int[-276755|0xfffffffffffbc6ed]  <||@
  Comment 2226 1318 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2229 1320 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2234 1322 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2239 1324 JUMP ~[] destination: B123 -> B134  <||@
  Comment 2241 block B127 null  <||@
  Comment 2241 1352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2241 1354 rcx|DWORD = MOVE input: int[-278035|0xfffffffffffbc1ed]  <||@
  Comment 2246 1356 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2249 1358 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2254 1360 JUMP ~[] destination: B127 -> B134  <||@
  Comment 2256 block B105 null  <||@
  Comment 2256 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2256 1140 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2261 1142 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2266 1144 MOV [r15|QWORD + 668] y: -267539 size: DWORD  <||@
  Comment 2277 1146 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2284 1148 DEOPT info [bci:146, 17, 57, 41, 60]  <||@
  Comment 2284 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2289 [rax:0, r9:0, r13:0, stack:16, stack:40, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1            |2                  |3           |4  |5  |6 
     locals:  |stack:72|DWORD[.]  |r9|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4            |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2290 block B65 null  <||@
  Comment 2290 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2290 780 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2295 782 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2298 784 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2303 786 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2308 792 JUMP ~[] destination: B65 -> B66  <||@
  Comment 2308 block B66 null  <||@
  Comment 2308 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2308 796 r11|DWORD = MOVE input: int[-253723|0xfffffffffffc20e5]  <||@
  Comment 2314 808 JUMP ~[] destination: B66 -> B76  <||@
  Comment 2314 block B76 null  <||@
  Comment 2314 890 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2314 800 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2319 802 stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2324 804 rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 2328 806 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2333 892 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1869499864]  <||@
  Comment 2333 {Object[d.a@1869499864]}  <||@
  Comment 2343 894 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2350 896 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2357 898 DEOPT info [bci:70, 17, 57, 41, 60]  <||@
  Comment 2357 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2362 [rax:0, rdx:0, rbp:0, rsi:0, r8:0, r9:0, r13:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70, duringCall: false, rethrow: false]
              |0                |1            |2             |3             |4          |5          |6            |7                |8          |9  |10  |11 
     locals:  |rax|DWORD[.]     |r9|QWORD[.]  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rdi|DWORD  |r8|DWORD[.]  |stack:100|DWORD  |rbx|DWORD  |-  |-   |-  
     stack:   |stack:100|DWORD  |r14|DWORD    |              |              |           |           |             |                 |           |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0             |1            |2             |3           |4  |5  |6 
     locals:  |rax|DWORD[.]  |r9|QWORD[.]  |rsi|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2363 block B118 null  <||@
  Comment 2363 1266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2363 1268 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2368 1270 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2371 1272 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2376 1274 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2381 1276 JUMP ~[] destination: B118 -> B119  <||@
  Comment 2381 block B119 null  <||@
  Comment 2381 1278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2381 1280 rcx|DWORD = MOVE input: int[-269595|0xfffffffffffbe2e5]  <||@
  Comment 2386 1282 JUMP ~[] destination: B119 -> B134  <||@
  Comment 2391 block B111 null  <||@
  Comment 2391 1188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2391 1190 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2396 1192 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2399 1194 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2404 1196 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2409 1198 JUMP ~[] destination: B111 -> B112  <||@
  Comment 2409 block B112 null  <||@
  Comment 2409 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2409 1202 rcx|DWORD = MOVE input: int[-268819|0xfffffffffffbe5ed]  <||@
  Comment 2414 1204 JUMP ~[] destination: B112 -> B134  <||@
  Comment 2419 block B120 null  <||@
  Comment 2419 1284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2419 1286 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2424 1288 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2427 1290 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2432 1292 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2437 1294 JUMP ~[] destination: B120 -> B121  <||@
  Comment 2437 block B121 null  <||@
  Comment 2437 1296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2437 1298 rcx|DWORD = MOVE input: int[-268563|0xfffffffffffbe6ed]  <||@
  Comment 2442 1300 JUMP ~[] destination: B121 -> B134  <||@
  Comment 2447 block B107 null  <||@
  Comment 2447 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2447 1158 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2452 1160 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2455 1162 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2460 1164 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2465 1166 JUMP ~[] destination: B107 -> B108  <||@
  Comment 2465 block B108 null  <||@
  Comment 2465 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2465 1170 rcx|DWORD = MOVE input: int[-268307|0xfffffffffffbe7ed]  <||@
  Comment 2470 1172 JUMP ~[] destination: B108 -> B134  <||@
  Comment 2475 block B138 null  <||@
  Comment 2475 1450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2475 1452 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2480 1454 MOV [r15|QWORD + 668] y: -280339 size: DWORD  <||@
  Comment 2491 1456 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2498 1458 DEOPT info [bci:54, 60]  <||@
  Comment 2498 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2503 [r9:0, r13:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4            |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2504 block B9 null  <||@
  Comment 2504 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2504 92 r10|DWORD = MOVE input: int[-246291|0xfffffffffffc3ded]  <||@
  Comment 2510 98 JUMP ~[] destination: B9 -> B14  <||@
  Comment 2515 block B1 null  <||@
  Comment 2515 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2515 24 r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed]  <||@
  Comment 2521 30 JUMP ~[] destination: B1 -> B14  <||@
  Comment 2526 block B90 null  <||@
  Comment 2526 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2526 990 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2531 992 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2534 994 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2539 996 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2544 1002 JUMP ~[] destination: B90 -> B91  <||@
  Comment 2544 block B91 null  <||@
  Comment 2544 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2544 1006 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@795456897]  <||@
  Comment 2544 {Object[d.a@795456897]}  <||@
  Comment 2554 1008 MOV [r15|QWORD + 668] y: -261659 size: DWORD  <||@
  Comment 2565 1010 MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 2572 1012 DEOPT info [bci:109, 17, 57, 41, 60]  <||@
  Comment 2572 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2577 [rdx:0, r8:0, r9:0, r13:0, stack:16, stack:40, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1            |2                  |3             |4          |5          |6            |7          |8          |9  |10  |11 
     locals:  |stack:72|DWORD[.]  |r9|QWORD[.]  |stack:96|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rdi|DWORD  |r8|DWORD[.]  |r11|DWORD  |rbx|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1            |2                  |3           |4  |5  |6 
     locals:  |stack:72|DWORD[.]  |r9|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4            |5 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) [bci: 60, duringCall: true, rethrow: false]
              |0                                      |1  |2  |3  |4             |5 
     locals:  |-                                      |-  |-  |-  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |   |   |   |              |    <||@
  Comment 2578 block B99 null  <||@
  Comment 2578 1066 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2578 1068 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2583 1070 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2586 1072 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2591 1074 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2596 1076 JUMP ~[] destination: B99 -> B100  <||@
  Comment 2596 block B100 null  <||@
  Comment 2596 1078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2596 1080 rcx|DWORD = MOVE input: int[-264219|0xfffffffffffbf7e5]  <||@
  Comment 2601 1082 JUMP ~[] destination: B100 -> B134  <||@
  Comment 2606 block B155 null  <||@
  Comment 2606 1586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2606 1588 r10|DWORD = MOVE input: int[-310547|0xfffffffffffb42ed]  <||@
  Comment 2612 1590 r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2615 1594 JUMP ~[] destination: B155 -> B158  <||@
  Comment 2620 block B5 null  <||@
  Comment 2620 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2620 58 r10|DWORD = MOVE input: int[-245779|0xfffffffffffc3fed]  <||@
  Comment 2626 64 JUMP ~[] destination: B5 -> B14  <||@
  Comment 2631 block B7 null  <||@
  Comment 2631 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2631 76 r10|DWORD = MOVE input: int[-246035|0xfffffffffffc3eed]  <||@
  Comment 2637 82 JUMP ~[] destination: B7 -> B14  <||@
  Comment 2642 block B156 null  <||@
  Comment 2642 1596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2642 1598 r10|DWORD = MOVE input: int[-310035|0xfffffffffffb44ed]  <||@
  Comment 2648 1600 r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2651 1604 JUMP ~[] destination: B156 -> B158  <||@
  Comment 2656 block B157 null  <||@
  Comment 2656 1606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2656 1608 r10|DWORD = MOVE input: int[-249875|0xfffffffffffc2fed]  <||@
  Comment 2662 1610 r9|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2665 1614 JUMP ~[] destination: B157 -> B158  <||@
  Comment 2670 block B116 null  <||@
  Comment 2670 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2670 1250 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2675 1252 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2678 1254 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2683 1256 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2688 1258 JUMP ~[] destination: B116 -> B117  <||@
  Comment 2688 block B117 null  <||@
  Comment 2688 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2688 1262 rcx|DWORD = MOVE input: int[-274715|0xfffffffffffbcee5]  <||@
  Comment 2693 1264 JUMP ~[] destination: B117 -> B134  <||@
  Comment 2698 block B43 null  <||@
  Comment 2698 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2698 472 stack:48|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2703 474 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2708 476 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2711 478 MOV [r15|QWORD + 668] y: -243475 size: DWORD  <||@
  Comment 2722 480 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2729 482 DEOPT info [bci:4, 9]  <||@
  Comment 2729 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2734 [r13:0, stack:56, stack:72]at sun.nio.cs.StreamEncoder.ensureOpen(StreamEncoder.java:44) [bci: 4, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
     stack:   |rbx|DWORD         
  at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 9, duringCall: true, rethrow: false]
              |0                                      |1                  |2          |3               |4             |5 
     locals:  |stack:40|QWORD[.]                      |stack:56|QWORD[.]  |r14|DWORD  |stack:48|DWORD  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |                   |           |                |              |    <||@
  Comment 2735 block B11 null  <||@
  Comment 2735 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2735 108 r10|DWORD = MOVE input: int[-246547|0xfffffffffffc3ced]  <||@
  Comment 2741 114 JUMP ~[] destination: B11 -> B14  <||@
  Comment 2746 block B3 null  <||@
  Comment 2746 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2746 42 r10|DWORD = MOVE input: int[-245523|0xfffffffffffc40ed]  <||@
  Comment 2752 48 JUMP ~[] destination: B3 -> B14  <||@
  Comment 2757 block B74 null  <||@
  Comment 2757 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2757 860 stack:96|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2762 862 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2765 864 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2770 866 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2775 872 JUMP ~[] destination: B74 -> B75  <||@
  Comment 2775 block B75 null  <||@
  Comment 2775 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2775 876 r11|DWORD = MOVE input: int[-259099|0xfffffffffffc0be5]  <||@
  Comment 2781 888 JUMP ~[] destination: B75 -> B76  <||@
  Comment 2786 block B159 null  <||@
  Comment 2786 1624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2786 1626 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2789 1628 r13|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2792 1630 MOV [r15|QWORD + 668] y: -248083 size: DWORD  <||@
  Comment 2803 1632 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2810 1634 DEOPT info [bci:8]  <||@
  Comment 2810 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2815 [r10:0, r13:0, stack:72]at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:118) [bci: 8, duringCall: false, rethrow: false]
              |0                                      |1             |2          |3         |4             |5 
     locals:  |stack:40|QWORD[.]                      |r10|QWORD[.]  |r14|DWORD  |r8|DWORD  |r13|QWORD[.]  |- 
     locks:   |monitor[r13|QWORD[.], stack:32|QWORD]  |              |           |          |              |    <||@
  Comment 2816 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2816 4  <||@
  Comment 2822 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2822 5  <||@
  HexCodeFile>>> <|@
end_nmethod
