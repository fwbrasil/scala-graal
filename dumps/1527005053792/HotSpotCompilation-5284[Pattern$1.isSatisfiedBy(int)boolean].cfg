begin_compilation
  name " HotSpotCompilation-5284[java.util.regex.Pattern$1.isSatisfiedBy(int)]"
  method "HotSpotCompilation-5284[java.util.regex.Pattern$1.isSatisfiedBy(int)]"
  date 1527005170913
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i40 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i40  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v42 v43 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v42 
=== Succesors ===
next: v14 
=== Usages ===
v11 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v42 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v15 v11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i40 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
i40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582633263705335501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i18 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i18 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606964417478238922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i41 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v43 
=== Succesors ===
next: v39 
=== Usages ===
v15 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v43 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i41 
y: i2 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i41 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
i41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v38 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$1.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4113
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 33
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4606964417478238922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 10]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i17 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i17 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i40 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i40  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$1;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v42 v43 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i40 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v42 
=== Succesors ===
next: v14 
=== Usages ===
v11 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v42 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v15 v11 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i40 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
i40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34696205 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582633263705335501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i18 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i18 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606964417478238922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i41 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v43 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i41 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v43 
=== Succesors ===
next: v39 
=== Usages ===
v15 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v43 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i41 
y: i2 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i41 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
i41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v38 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$1.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4113
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 33
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -8467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4606964417478238922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 10]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i17 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i17 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34696205 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606964417478238922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4606964417478238922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582633263705335501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -8467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // val$lower:int
     4: iload_1       
     5: aload_0       
     6: getfield      #1          // val$upper:int
     9: invokestatic  #3          // java.util.regex.Pattern.access$200:(int, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34696205 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606964417478238922
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4606964417478238922
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   24  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582633263705335501
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction MOV [r15|QWORD + 668] y: -8467 size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // val$lower:int
     4: iload_1       
     5: aload_0       
     6: getfield      #1          // val$upper:int
     9: invokestatic  #3          // java.util.regex.Pattern.access$200:(int, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34696205 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606964417478238922
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4606964417478238922
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   24  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4582633263705335501
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction MOV [r15|QWORD + 668] y: -8467 size: DWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // val$lower:int
     4: iload_1       
     5: aload_0       
     6: getfield      #1          // val$upper:int
     9: invokestatic  #3          // java.util.regex.Pattern.access$200:(int, int, int)boolean
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24103b56100f8c210000003b56140f8f30000000b801000000488b6c24104883c418850500000000c5f877c3b800000000488b6c24104883c418850500000000c5f877c341c7879c020000eddeffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34696205 slotKind: QWORD  <||@
  Comment 48 10 CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 51 12 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 16 CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 60 18 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 66 block B4 null  <||@
  Comment 66 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 22 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 71 24 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 80 12  <||@
  Comment 90 block B1 null  <||@
  Comment 90 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 28 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 95 30 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 104 12  <||@
  Comment 114 block B3 null  <||@
  Comment 114 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 34 MOV [r15|QWORD + 668] y: -8467 size: DWORD  <||@
  Comment 125 36 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 132 38 DEOPT info [bci:0]  <||@
  Comment 132 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 137 [rsi:0]at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 138 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 138 4  <||@
  Comment 144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 144 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5284[java.util.regex.Pattern$1.isSatisfiedBy(int)]"
  method "HotSpotCompilation-5284[java.util.regex.Pattern$1.isSatisfiedBy(int)]"
  date 1527005170937
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106933f20 448b560849c1e203493bc20f852f1fedff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24103b56100f8c210000003b56140f8f30000000b801000000488b6c24104883c418850590b0f5fdc5f877c3b800000000488b6c24104883c418850578b0f5fdc5f877c341c7879c020000eddeffff4d89a7a8020000e85536edff90e87166310090e84b35edff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34696205 slotKind: QWORD  <||@
  Comment 48 10 CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 51 12 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 16 CMP (x: rdx|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 60 18 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 66 block B4 null  <||@
  Comment 66 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 22 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 71 24 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 80 12  <||@
  Comment 90 block B1 null  <||@
  Comment 90 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 28 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 95 30 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 104 12  <||@
  Comment 114 block B3 null  <||@
  Comment 114 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 34 MOV [r15|QWORD + 668] y: -8467 size: DWORD  <||@
  Comment 125 36 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 132 38 DEOPT info [bci:0]  <||@
  Comment 132 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 137 [rsi:0]at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 138 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 138 4  <||@
  Comment 144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 144 5  <||@
  HexCodeFile>>> <|@
end_nmethod
